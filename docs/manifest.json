{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/manifest/v12.json", "dbt_version": "1.9.4", "generated_at": "2025-09-09T20:16:06.566390Z", "invocation_id": "f001b441-e53c-4b94-9953-3f025b1725e8", "env": {}, "project_name": "base", "project_id": "593616de15330c0fb2d55e55410bf994", "user_id": "844d376c-52d9-4e6f-bc83-c679cef75a24", "send_anonymous_usage_stats": true, "adapter_type": "duckdb"}, "nodes": {"seed.base.phecode_seed": {"database": "dbt", "schema": "main", "name": "phecode_seed", "resource_type": "seed", "package_name": "base", "path": "phecode_seed.csv", "original_file_path": "seeds/phecode_seed.csv", "unique_id": "seed.base.phecode_seed", "fqn": ["base", "phecode_seed"], "alias": "phecode_seed", "checksum": {"name": "sha256", "checksum": "2121e5edc7c79d5c406f608abd2f908de1687b028607b6d7a220a74728bd25bf"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "seed", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "delimiter": ",", "quote_columns": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448967.3397498, "relation_name": "\"dbt\".\"main\".\"phecode_seed\"", "raw_code": "", "root_path": "/home/yelena/anvil_dbt_project", "depends_on": {"macros": []}}, "seed.base.consent_codes": {"database": "dbt", "schema": "main", "name": "consent_codes", "resource_type": "seed", "package_name": "base", "path": "metadata/consent_codes.csv", "original_file_path": "seeds/metadata/consent_codes.csv", "unique_id": "seed.base.consent_codes", "fqn": ["base", "metadata", "consent_codes"], "alias": "consent_codes", "checksum": {"name": "sha256", "checksum": "0ccf581c273e54cc6f56c0c51af62c2fb03f4c728ae111ea324b765d46ae5ea9"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "seed", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "delimiter": ",", "quote_columns": null}, "tags": [], "description": "Consents and their definition. Original sources: https://www.ncbi.nlm.nih.gov/projects/gap/cgi-bin/study.cgi?study_id=phs000744.v5.p2", "columns": {"study": {"name": "study", "description": "The studies that use these rows", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "consent_code": {"name": "consent_code", "description": "Numerical representation of the consent", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "consent_group": {"name": "consent_group", "description": "Consent display", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "consent_abbreviation": {"name": "consent_abbreviation", "description": "Abbreviated consent code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "is_irb_required": {"name": "is_irb_required", "description": "Flags irb required consents", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "data_access_committee": {"name": "data_access_committee", "description": "Defineds the data access committee", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "link": {"name": "link", "description": "Link to data access committee", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "base://seeds/schema.yml", "build_path": null, "unrendered_config": {}, "created_at": 1757448969.0317361, "relation_name": "\"dbt\".\"main\".\"consent_codes\"", "raw_code": "", "root_path": "/home/yelena/anvil_dbt_project", "depends_on": {"macros": []}}, "seed.base.fm_family_role": {"database": "dbt", "schema": "main", "name": "fm_family_role", "resource_type": "seed", "package_name": "base", "path": "value_sets/fm_family_role.csv", "original_file_path": "seeds/value_sets/fm_family_role.csv", "unique_id": "seed.base.fm_family_role", "fqn": ["base", "value_sets", "fm_family_role"], "alias": "fm_family_role", "checksum": {"name": "sha256", "checksum": "9bdf26b87d80c83df8d9d5931c3e3ffbc8380f66df421bd5ef4af981ccec0ef6"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "seed", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "delimiter": ",", "quote_columns": null}, "tags": [], "description": "Conversion table for tgt column familyrole. Original source https://terminology.hl7.org/6.2.0/ValueSet-v3-FamilyMember.html", "columns": {"study_id": {"name": "study_id", "description": "Flags a row as a required addition to the lookup table, and for which study(ies), it was added.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "relationship_to_proband": {"name": "relationship_to_proband", "description": "UNIQUE VALUES - join column. Should always be lower case, join on the entire string, and represents only the relationship of the family member to the proband. NOT probands to family members.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "code": {"name": "code", "description": "Expected tgt enumerations", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "system": {"name": "system", "description": "System of the code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "display": {"name": "display", "description": "Code display", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "inactive": {"name": "inactive", "description": "Flags inactive codes. The join column should have a prefix added to the join code to reduce usage.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "description": {"name": "description", "description": "Code description", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "base://seeds/schema.yml", "build_path": null, "unrendered_config": {}, "created_at": 1757448969.02985, "relation_name": "\"dbt\".\"main\".\"fm_family_role\"", "raw_code": "", "root_path": "/home/yelena/anvil_dbt_project", "depends_on": {"macros": []}}, "seed.base.fr_relationship_code": {"database": "dbt", "schema": "main", "name": "fr_relationship_code", "resource_type": "seed", "package_name": "base", "path": "value_sets/fr_relationship_code.csv", "original_file_path": "seeds/value_sets/fr_relationship_code.csv", "unique_id": "seed.base.fr_relationship_code", "fqn": ["base", "value_sets", "fr_relationship_code"], "alias": "fr_relationship_code", "checksum": {"name": "sha256", "checksum": "782b2fc304691de167080a333f0aac89a23b149ad63724ab2744ecb8a7b37f5f"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "seed", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "delimiter": ",", "quote_columns": null}, "tags": [], "description": "Conversion table for tgt column familymember. Original source https://github.com/ga4gh/pedigree_family_history_terminology/blob/main/mappings/kin-to-fhir-FamilyMember.sssom.csv version: 4a291ac", "columns": {"study_id": {"name": "study_id", "description": "Flags a row as a required addition to the lookup table, and for which study(ies), it was added. Ex: cmg_yale", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "relationship_to_proband": {"name": "relationship_to_proband", "description": "UNIQUE VALUES - join column. Should always be lower case, join on the entire string, and represents only the relationship of the family member to the proband. NOT probands to family members.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "code": {"name": "code", "description": "Expected tgt enumeration. Dup of subject_id. Ex: KIN:032", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "subject_id": {"name": "subject_id", "description": "Expected tgt enumeration. Ex: KIN:032", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "subject_label": {"name": "subject_label", "description": "Describes in more detail the relationship. Ex: isBiologicalChildOf", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "predicate_id": {"name": "predicate_id", "description": "Describes the level of the match. Ex: skos:closeMatch", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "object_id": {"name": "object_id", "description": "A human readable short code for the subject_id. Ex: STPSIB", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "object_label": {"name": "object_label", "description": "A human readable label for the subject_id. Ex: step sibling", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "base://seeds/schema.yml", "build_path": null, "unrendered_config": {}, "created_at": 1757448969.0284371, "relation_name": "\"dbt\".\"main\".\"fr_relationship_code\"", "raw_code": "", "root_path": "/home/yelena/anvil_dbt_project", "depends_on": {"macros": []}}, "seed.base.cmg_bh_annotations_code": {"database": "dbt", "schema": "main", "name": "cmg_bh_annotations_code", "resource_type": "seed", "package_name": "base", "path": "cmg_bh/cmg_bh_annotations_code.csv", "original_file_path": "seeds/cmg_bh/cmg_bh_annotations_code.csv", "unique_id": "seed.base.cmg_bh_annotations_code", "fqn": ["base", "cmg_bh", "cmg_bh_annotations_code"], "alias": "cmg_bh_annotations_code", "checksum": {"name": "sha256", "checksum": "f0d2b36e9755d374a203688e2646b17bdd0e5f392ec41626548ccea7466a12f2"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "seed", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "delimiter": ",", "quote_columns": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448967.3577986, "relation_name": "\"dbt\".\"main\".\"cmg_bh_annotations_code\"", "raw_code": "", "root_path": "/home/yelena/anvil_dbt_project", "depends_on": {"macros": []}}, "seed.base.subject_mappings": {"database": "dbt", "schema": "main", "name": "subject_mappings", "resource_type": "seed", "package_name": "base", "path": "cmg_bh/subject_mappings.csv", "original_file_path": "seeds/cmg_bh/subject_mappings.csv", "unique_id": "seed.base.subject_mappings", "fqn": ["base", "cmg_bh", "subject_mappings"], "alias": "subject_mappings", "checksum": {"name": "sha256", "checksum": "47b0ede957585611b594d0528213a73aaa01ef1ed068086a1d4f31bc44a28835"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "seed", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "delimiter": ",", "quote_columns": null}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448967.3590722, "relation_name": "\"dbt\".\"main\".\"subject_mappings\"", "raw_code": "", "root_path": "/home/yelena/anvil_dbt_project", "depends_on": {"macros": []}}, "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_experiment": {"database": "dbt", "schema": "main_main", "name": "GREGoR_R03_HMB_20250612_stg_experiment", "resource_type": "model", "package_name": "GREGoR_R03_HMB_20250612", "path": "experiment/GREGoR_R03_HMB_20250612_stg_experiment.sql", "original_file_path": "models/experiment/GREGoR_R03_HMB_20250612_stg_experiment.sql", "unique_id": "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_experiment", "fqn": ["GREGoR_R03_HMB_20250612", "experiment", "GREGoR_R03_HMB_20250612_stg_experiment"], "alias": "GREGoR_R03_HMB_20250612_stg_experiment", "checksum": {"name": "sha256", "checksum": "65c880ff236cbb63690a3249930b9c207ff6e7971e4802a66c4919cc53982f07"}, "config": {"enabled": true, "alias": null, "schema": "main", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_HMB_20250612_stg_experiment.", "columns": {"experiment_id": {"name": "experiment_id", "description": "table_name.experiment_id_in_table", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id_in_table": {"name": "id_in_table", "description": "nan", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "participant_id": {"name": "participant_id", "description": "participant.participant_id", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "table_name": {"name": "table_name", "description": "nan", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "ingest_provenance": {"name": "ingest_provenance", "description": "nan", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "GREGoR_R03_HMB_20250612://models/experiment/__models.yml", "build_path": null, "unrendered_config": {"schema": "main", "materialized": "table"}, "created_at": 1757448969.139662, "relation_name": "\"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_experiment\"", "raw_code": "{{ config(materialized='table') }}\n\n    with source as (\n        select \n        \"experiment_id\"::text as \"experiment_id\",\n       \"table_name\"::text as \"table_name\",\n       \"id_in_table\"::text as \"id_in_table\",\n       \"participant_id\"::text as \"participant_id\"\n        from {{ source('GREGoR_R03_HMB_20250612','GREGoR_R03_HMB_20250612_experiment') }}\n    )\n\n    select \n        ROW_NUMBER() OVER () AS ftd_index\n        ,source.*\n        from source", "language": "sql", "refs": [], "sources": [["GREGoR_R03_HMB_20250612", "GREGoR_R03_HMB_20250612_experiment"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_experiment"]}, "compiled_path": "target/compiled/GREGoR_R03_HMB_20250612/models/experiment/GREGoR_R03_HMB_20250612_stg_experiment.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        \"experiment_id\"::text as \"experiment_id\",\n       \"table_name\"::text as \"table_name\",\n       \"id_in_table\"::text as \"id_in_table\",\n       \"participant_id\"::text as \"participant_id\"\n        from \"dbt\".\"main\".\"GREGoR_R03_HMB_20250612_experiment\"\n    )\n\n    select \n        ROW_NUMBER() OVER () AS ftd_index\n        ,source.*\n        from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant": {"database": "dbt", "schema": "main_main", "name": "GREGoR_R03_HMB_20250612_stg_participant", "resource_type": "model", "package_name": "GREGoR_R03_HMB_20250612", "path": "participant/GREGoR_R03_HMB_20250612_stg_participant.sql", "original_file_path": "models/participant/GREGoR_R03_HMB_20250612_stg_participant.sql", "unique_id": "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "fqn": ["GREGoR_R03_HMB_20250612", "participant", "GREGoR_R03_HMB_20250612_stg_participant"], "alias": "GREGoR_R03_HMB_20250612_stg_participant", "checksum": {"name": "sha256", "checksum": "da50431c4f52d7f6db361dd293206a104a0ae748775baafeabf885cad4e2c528"}, "config": {"enabled": true, "alias": null, "schema": "main", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_HMB_20250612_stg_participant.", "columns": {"participant_id": {"name": "participant_id", "description": "Unique participant identifier", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "affected_status": {"name": "affected_status", "description": "Affected status of the participant", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "age_at_enrollment": {"name": "age_at_enrollment", "description": "Age at enrollment in years", "meta": {}, "data_type": "integer or float", "constraints": [], "quote": null, "tags": [], "granularity": null}, "age_at_last_observation": {"name": "age_at_last_observation", "description": "Age at the last known observation", "meta": {}, "data_type": "integer or float", "constraints": [], "quote": null, "tags": [], "granularity": null}, "ancestry_detail": {"name": "ancestry_detail", "description": "Detailed ancestry description", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "consent_code": {"name": "consent_code", "description": "Consent group or code for data use", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "family_id": {"name": "family_id", "description": "Family identifier", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "gregor_center": {"name": "gregor_center", "description": "GREGOR project center identifier", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "internal_project_id": {"name": "internal_project_id", "description": "Internal project identifier", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "maternal_id": {"name": "maternal_id", "description": "Maternal ID (0 if unknown)", "meta": {}, "data_type": "integer", "constraints": [], "quote": null, "tags": [], "granularity": null}, "missing_variant_case": {"name": "missing_variant_case", "description": "Indicates if the participant is a missing variant case", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "paternal_id": {"name": "paternal_id", "description": "Paternal ID (0 if unknown)", "meta": {}, "data_type": "integer", "constraints": [], "quote": null, "tags": [], "granularity": null}, "phenotype_description": {"name": "phenotype_description", "description": "Description of phenotype", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "pmid_id": {"name": "pmid_id", "description": "PMID of a related publication or report", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "prior_testing": {"name": "prior_testing", "description": "Indicates whether prior genetic testing was conducted", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "proband_relationship": {"name": "proband_relationship", "description": "Relationship to self (usually 'Self')", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "proband_relationship_detail": {"name": "proband_relationship_detail", "description": "Further detail on relationship to self", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "reported_ethnicity": {"name": "reported_ethnicity", "description": "Ethnicity reported by participant or caregiver", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "reported_race": {"name": "reported_race", "description": "Race reported by participant or caregiver", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "sex": {"name": "sex", "description": "Reported biological sex", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "sex_detail": {"name": "sex_detail", "description": "Additional detail about sex or gender", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "solve_status": {"name": "solve_status", "description": "Status of diagnostic resolution", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "twin_id": {"name": "twin_id", "description": "Identifier for twin if applicable", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "GREGoR_R03_HMB_20250612://models/participant/__models.yml", "build_path": null, "unrendered_config": {"schema": "main", "materialized": "table"}, "created_at": 1757448969.1413658, "relation_name": "\"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_participant\"", "raw_code": "{{ config(materialized='table') }}\n\n    with source as (\n        select \n        \"participant_id\"::text as \"participant_id\",\n       \"affected_status\"::text as \"affected_status\",\n       \"age_at_enrollment\"::text as \"age_at_enrollment\",\n       \"age_at_last_observation\"::text as \"age_at_last_observation\",\n       \"ancestry_detail\"::text as \"ancestry_detail\",\n       \"consent_code\"::text as \"consent_code\",\n       \"family_id\"::text as \"family_id\",\n       \"gregor_center\"::text as \"gregor_center\",\n       \"internal_project_id\"::text as \"internal_project_id\",\n       \"maternal_id\"::text as \"maternal_id\",\n       \"missing_variant_case\"::text as \"missing_variant_case\",\n       \"paternal_id\"::text as \"paternal_id\",\n       \"phenotype_description\"::text as \"phenotype_description\",\n       \"pmid_id\"::text as \"pmid_id\",\n       \"prior_testing\"::text as \"prior_testing\",\n       \"proband_relationship\"::text as \"proband_relationship\",\n       \"proband_relationship_detail\"::text as \"proband_relationship_detail\",\n       \"reported_ethnicity\"::text as \"reported_ethnicity\",\n       \"reported_race\"::text as \"reported_race\",\n       \"sex\"::text as \"sex\",\n       \"sex_detail\"::text as \"sex_detail\",\n       \"solve_status\"::text as \"solve_status\",\n       \"twin_id\"::text as \"twin_id\",\n       \"ingest_provenance\"::text as \"ingest_provenance\"\n        from {{ source('GREGoR_R03_HMB_20250612','GREGoR_R03_HMB_20250612_participant') }}\n    )\n\n    select \n        ROW_NUMBER() OVER () AS ftd_index\n        ,source.*\n        from source", "language": "sql", "refs": [], "sources": [["GREGoR_R03_HMB_20250612", "GREGoR_R03_HMB_20250612_participant"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_participant"]}, "compiled_path": "target/compiled/GREGoR_R03_HMB_20250612/models/participant/GREGoR_R03_HMB_20250612_stg_participant.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        \"participant_id\"::text as \"participant_id\",\n       \"affected_status\"::text as \"affected_status\",\n       \"age_at_enrollment\"::text as \"age_at_enrollment\",\n       \"age_at_last_observation\"::text as \"age_at_last_observation\",\n       \"ancestry_detail\"::text as \"ancestry_detail\",\n       \"consent_code\"::text as \"consent_code\",\n       \"family_id\"::text as \"family_id\",\n       \"gregor_center\"::text as \"gregor_center\",\n       \"internal_project_id\"::text as \"internal_project_id\",\n       \"maternal_id\"::text as \"maternal_id\",\n       \"missing_variant_case\"::text as \"missing_variant_case\",\n       \"paternal_id\"::text as \"paternal_id\",\n       \"phenotype_description\"::text as \"phenotype_description\",\n       \"pmid_id\"::text as \"pmid_id\",\n       \"prior_testing\"::text as \"prior_testing\",\n       \"proband_relationship\"::text as \"proband_relationship\",\n       \"proband_relationship_detail\"::text as \"proband_relationship_detail\",\n       \"reported_ethnicity\"::text as \"reported_ethnicity\",\n       \"reported_race\"::text as \"reported_race\",\n       \"sex\"::text as \"sex\",\n       \"sex_detail\"::text as \"sex_detail\",\n       \"solve_status\"::text as \"solve_status\",\n       \"twin_id\"::text as \"twin_id\",\n       \"ingest_provenance\"::text as \"ingest_provenance\"\n        from \"dbt\".\"main\".\"GREGoR_R03_HMB_20250612_participant\"\n    )\n\n    select \n        ROW_NUMBER() OVER () AS ftd_index\n        ,source.*\n        from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype": {"database": "dbt", "schema": "main_main", "name": "GREGoR_R03_HMB_20250612_stg_phenotype", "resource_type": "model", "package_name": "GREGoR_R03_HMB_20250612", "path": "phenotype/GREGoR_R03_HMB_20250612_stg_phenotype.sql", "original_file_path": "models/phenotype/GREGoR_R03_HMB_20250612_stg_phenotype.sql", "unique_id": "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype", "fqn": ["GREGoR_R03_HMB_20250612", "phenotype", "GREGoR_R03_HMB_20250612_stg_phenotype"], "alias": "GREGoR_R03_HMB_20250612_stg_phenotype", "checksum": {"name": "sha256", "checksum": "a407a83c52ff105e4f213adc676aa0368983dc82a9982d15629e65ce74c57f8d"}, "config": {"enabled": true, "alias": null, "schema": "main", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_HMB_20250612_stg_phenotype.", "columns": {"phenotype_id": {"name": "phenotype_id", "description": "Unique identifier for the phenotype record", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "additional_details": {"name": "additional_details", "description": "Free text field for extra phenotype information", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "additional_modifiers": {"name": "additional_modifiers", "description": "Modifiers that qualify the phenotype term", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "onset_age_range": {"name": "onset_age_range", "description": "Age range when the phenotype was observed", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "ontology": {"name": "ontology", "description": "Ontology used for the phenotype term", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "participant_id": {"name": "participant_id", "description": "Participant ID associated with the phenotype record", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "presence": {"name": "presence", "description": "Indicates if the phenotype is present or absent", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "term_id": {"name": "term_id", "description": "Ontology identifier for the phenotype term", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "GREGoR_R03_HMB_20250612://models/phenotype/__models.yml", "build_path": null, "unrendered_config": {"schema": "main", "materialized": "table"}, "created_at": 1757448969.1421075, "relation_name": "\"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_phenotype\"", "raw_code": "{{ config(materialized='table') }}\n\n    with source as (\n        select \n        \"phenotype_id\"::text as \"phenotype_id\",\n       \"additional_details\"::text as \"additional_details\",\n       \"additional_modifiers\"::text as \"additional_modifiers\",\n       \"onset_age_range\"::text as \"onset_age_range\",\n       \"ontology\"::text as \"ontology\",\n       \"participant_id\"::text as \"participant_id\",\n       \"presence\"::text as \"presence\",\n       \"syndromic\"::text as \"syndromic\",\n       \"term_id\"::text as \"term_id\"\n        from {{ source('GREGoR_R03_HMB_20250612','GREGoR_R03_HMB_20250612_phenotype') }}\n    )\n\n    select \n        ROW_NUMBER() OVER () AS ftd_index\n        ,source.*\n        from source", "language": "sql", "refs": [], "sources": [["GREGoR_R03_HMB_20250612", "GREGoR_R03_HMB_20250612_phenotype"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_phenotype"]}, "compiled_path": "target/compiled/GREGoR_R03_HMB_20250612/models/phenotype/GREGoR_R03_HMB_20250612_stg_phenotype.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        \"phenotype_id\"::text as \"phenotype_id\",\n       \"additional_details\"::text as \"additional_details\",\n       \"additional_modifiers\"::text as \"additional_modifiers\",\n       \"onset_age_range\"::text as \"onset_age_range\",\n       \"ontology\"::text as \"ontology\",\n       \"participant_id\"::text as \"participant_id\",\n       \"presence\"::text as \"presence\",\n       \"syndromic\"::text as \"syndromic\",\n       \"term_id\"::text as \"term_id\"\n        from \"dbt\".\"main\".\"GREGoR_R03_HMB_20250612_phenotype\"\n    )\n\n    select \n        ROW_NUMBER() OVER () AS ftd_index\n        ,source.*\n        from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_anvil_project": {"database": "dbt", "schema": "main_main", "name": "GREGoR_R03_HMB_20250612_stg_anvil_project", "resource_type": "model", "package_name": "GREGoR_R03_HMB_20250612", "path": "anvil_project/GREGoR_R03_HMB_20250612_stg_anvil_project.sql", "original_file_path": "models/anvil_project/GREGoR_R03_HMB_20250612_stg_anvil_project.sql", "unique_id": "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_anvil_project", "fqn": ["GREGoR_R03_HMB_20250612", "anvil_project", "GREGoR_R03_HMB_20250612_stg_anvil_project"], "alias": "GREGoR_R03_HMB_20250612_stg_anvil_project", "checksum": {"name": "sha256", "checksum": "59ca39dd51bd440b930e87b79b086de4e6a08a23d9386dcec2f04fb0baefadf7"}, "config": {"enabled": true, "alias": null, "schema": "main", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"schema": "main", "materialized": "table"}, "created_at": 1757448967.5192056, "relation_name": "\"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_anvil_project\"", "raw_code": "{{ config(materialized='table') }}\n\n    with source as (\n        select \n        \"project_id\"::text as \"project_id\",\n       \"funded_by\"::text as \"funded_by\",\n       \"generated_dataset_id\"::text as \"generated_dataset_id\",\n       \"principal_investigator\"::text as \"principal_investigator\",\n       \"title\"::text as \"title\",\n       \"registered_identifier\"::text as \"registered_identifier\",\n       \"source_datarepo_row_ids\"::text as \"source_datarepo_row_ids\"\n        from {{ source('GREGoR_R03_HMB_20250612','GREGoR_R03_HMB_20250612_anvil_project') }}\n    )\n\n    select \n        ROW_NUMBER() OVER () AS ftd_index\n        ,source.*\n        from source", "language": "sql", "refs": [], "sources": [["GREGoR_R03_HMB_20250612", "GREGoR_R03_HMB_20250612_anvil_project"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_anvil_project"]}, "compiled_path": "target/compiled/GREGoR_R03_HMB_20250612/models/anvil_project/GREGoR_R03_HMB_20250612_stg_anvil_project.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        \"project_id\"::text as \"project_id\",\n       \"funded_by\"::text as \"funded_by\",\n       \"generated_dataset_id\"::text as \"generated_dataset_id\",\n       \"principal_investigator\"::text as \"principal_investigator\",\n       \"title\"::text as \"title\",\n       \"registered_identifier\"::text as \"registered_identifier\",\n       \"source_datarepo_row_ids\"::text as \"source_datarepo_row_ids\"\n        from \"dbt\".\"main\".\"GREGoR_R03_HMB_20250612_anvil_project\"\n    )\n\n    select \n        ROW_NUMBER() OVER () AS ftd_index\n        ,source.*\n        from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_experiment": {"database": "dbt", "schema": "main_main", "name": "GREGoR_R03_GRU_20250612_stg_experiment", "resource_type": "model", "package_name": "GREGoR_R03_GRU_20250612", "path": "experiment/GREGoR_R03_GRU_20250612_stg_experiment.sql", "original_file_path": "models/experiment/GREGoR_R03_GRU_20250612_stg_experiment.sql", "unique_id": "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_experiment", "fqn": ["GREGoR_R03_GRU_20250612", "experiment", "GREGoR_R03_GRU_20250612_stg_experiment"], "alias": "GREGoR_R03_GRU_20250612_stg_experiment", "checksum": {"name": "sha256", "checksum": "ce72e9dd8be0c6db6fc6732cc8de2ed9de6343ad88233d59e95722dc846f91aa"}, "config": {"enabled": true, "alias": null, "schema": "main", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_GRU_20250612_stg_experiment.", "columns": {"experiment_id": {"name": "experiment_id", "description": "table_name.experiment_id_in_table", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id_in_table": {"name": "id_in_table", "description": "nan", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "participant_id": {"name": "participant_id", "description": "participant.participant_id", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "table_name": {"name": "table_name", "description": "nan", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "ingest_provenance": {"name": "ingest_provenance", "description": "nan", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "GREGoR_R03_GRU_20250612://models/experiment/__models.yml", "build_path": null, "unrendered_config": {"schema": "main", "materialized": "table"}, "created_at": 1757448969.1998034, "relation_name": "\"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_experiment\"", "raw_code": "{{ config(materialized='table') }}\n\n    with source as (\n        select \n        \"experiment_id\"::text as \"experiment_id\",\n       \"table_name\"::text as \"table_name\",\n       \"id_in_table\"::text as \"id_in_table\",\n       \"participant_id\"::text as \"participant_id\"\n        from {{ source('GREGoR_R03_GRU_20250612','GREGoR_R03_GRU_20250612_experiment') }}\n    )\n\n    select \n        ROW_NUMBER() OVER () AS ftd_index\n        ,source.*\n        from source", "language": "sql", "refs": [], "sources": [["GREGoR_R03_GRU_20250612", "GREGoR_R03_GRU_20250612_experiment"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_experiment"]}, "compiled_path": "target/compiled/GREGoR_R03_GRU_20250612/models/experiment/GREGoR_R03_GRU_20250612_stg_experiment.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        \"experiment_id\"::text as \"experiment_id\",\n       \"table_name\"::text as \"table_name\",\n       \"id_in_table\"::text as \"id_in_table\",\n       \"participant_id\"::text as \"participant_id\"\n        from \"dbt\".\"main\".\"GREGoR_R03_GRU_20250612_experiment\"\n    )\n\n    select \n        ROW_NUMBER() OVER () AS ftd_index\n        ,source.*\n        from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant": {"database": "dbt", "schema": "main_main", "name": "GREGoR_R03_GRU_20250612_stg_participant", "resource_type": "model", "package_name": "GREGoR_R03_GRU_20250612", "path": "participant/GREGoR_R03_GRU_20250612_stg_participant.sql", "original_file_path": "models/participant/GREGoR_R03_GRU_20250612_stg_participant.sql", "unique_id": "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "fqn": ["GREGoR_R03_GRU_20250612", "participant", "GREGoR_R03_GRU_20250612_stg_participant"], "alias": "GREGoR_R03_GRU_20250612_stg_participant", "checksum": {"name": "sha256", "checksum": "9bb01e7cf0d44762cdd9e79a6ff2f7ad39f101f3e45baddc8187e656a53c5d07"}, "config": {"enabled": true, "alias": null, "schema": "main", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_GRU_20250612_stg_participant.", "columns": {"participant_id": {"name": "participant_id", "description": "Unique participant identifier", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "affected_status": {"name": "affected_status", "description": "Affected status of the participant", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "age_at_enrollment": {"name": "age_at_enrollment", "description": "Age at enrollment in years", "meta": {}, "data_type": "integer or float", "constraints": [], "quote": null, "tags": [], "granularity": null}, "age_at_last_observation": {"name": "age_at_last_observation", "description": "Age at the last known observation", "meta": {}, "data_type": "integer or float", "constraints": [], "quote": null, "tags": [], "granularity": null}, "ancestry_detail": {"name": "ancestry_detail", "description": "Detailed ancestry description", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "consent_code": {"name": "consent_code", "description": "Consent group or code for data use", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "family_id": {"name": "family_id", "description": "Family identifier", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "gregor_center": {"name": "gregor_center", "description": "GREGOR project center identifier", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "internal_project_id": {"name": "internal_project_id", "description": "Internal project identifier", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "maternal_id": {"name": "maternal_id", "description": "Maternal ID (0 if unknown)", "meta": {}, "data_type": "integer", "constraints": [], "quote": null, "tags": [], "granularity": null}, "missing_variant_case": {"name": "missing_variant_case", "description": "Indicates if the participant is a missing variant case", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "paternal_id": {"name": "paternal_id", "description": "Paternal ID (0 if unknown)", "meta": {}, "data_type": "integer", "constraints": [], "quote": null, "tags": [], "granularity": null}, "phenotype_description": {"name": "phenotype_description", "description": "Description of phenotype", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "pmid_id": {"name": "pmid_id", "description": "PMID of a related publication or report", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "prior_testing": {"name": "prior_testing", "description": "Indicates whether prior genetic testing was conducted", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "proband_relationship": {"name": "proband_relationship", "description": "Relationship to self (usually 'Self')", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "proband_relationship_detail": {"name": "proband_relationship_detail", "description": "Further detail on relationship to self", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "reported_ethnicity": {"name": "reported_ethnicity", "description": "Ethnicity reported by participant or caregiver", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "reported_race": {"name": "reported_race", "description": "Race reported by participant or caregiver", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "sex": {"name": "sex", "description": "Reported biological sex", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "sex_detail": {"name": "sex_detail", "description": "Additional detail about sex or gender", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "solve_status": {"name": "solve_status", "description": "Status of diagnostic resolution", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "twin_id": {"name": "twin_id", "description": "Identifier for twin if applicable", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "GREGoR_R03_GRU_20250612://models/participant/__models.yml", "build_path": null, "unrendered_config": {"schema": "main", "materialized": "table"}, "created_at": 1757448969.2010303, "relation_name": "\"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_participant\"", "raw_code": "{{ config(materialized='table') }}\n\n    with source as (\n        select \n        \"participant_id\"::text as \"participant_id\",\n       \"affected_status\"::text as \"affected_status\",\n       \"age_at_enrollment\"::text as \"age_at_enrollment\",\n       \"age_at_last_observation\"::text as \"age_at_last_observation\",\n       \"ancestry_detail\"::text as \"ancestry_detail\",\n       \"consent_code\"::text as \"consent_code\",\n       \"family_id\"::text as \"family_id\",\n       \"gregor_center\"::text as \"gregor_center\",\n       \"internal_project_id\"::text as \"internal_project_id\",\n       \"maternal_id\"::text as \"maternal_id\",\n       \"missing_variant_case\"::text as \"missing_variant_case\",\n       \"paternal_id\"::text as \"paternal_id\",\n       \"phenotype_description\"::text as \"phenotype_description\",\n       \"pmid_id\"::text as \"pmid_id\",\n       \"prior_testing\"::text as \"prior_testing\",\n       \"proband_relationship\"::text as \"proband_relationship\",\n       \"proband_relationship_detail\"::text as \"proband_relationship_detail\",\n       \"reported_ethnicity\"::text as \"reported_ethnicity\",\n       \"reported_race\"::text as \"reported_race\",\n       \"sex\"::text as \"sex\",\n       \"sex_detail\"::text as \"sex_detail\",\n       \"solve_status\"::text as \"solve_status\",\n       \"twin_id\"::text as \"twin_id\",\n       \"ingest_provenance\"::text as \"ingest_provenance\"\n        from {{ source('GREGoR_R03_GRU_20250612','GREGoR_R03_GRU_20250612_participant') }}\n    )\n\n    select \n        ROW_NUMBER() OVER () AS ftd_index\n        ,source.*\n        from source", "language": "sql", "refs": [], "sources": [["GREGoR_R03_GRU_20250612", "GREGoR_R03_GRU_20250612_participant"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_participant"]}, "compiled_path": "target/compiled/GREGoR_R03_GRU_20250612/models/participant/GREGoR_R03_GRU_20250612_stg_participant.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        \"participant_id\"::text as \"participant_id\",\n       \"affected_status\"::text as \"affected_status\",\n       \"age_at_enrollment\"::text as \"age_at_enrollment\",\n       \"age_at_last_observation\"::text as \"age_at_last_observation\",\n       \"ancestry_detail\"::text as \"ancestry_detail\",\n       \"consent_code\"::text as \"consent_code\",\n       \"family_id\"::text as \"family_id\",\n       \"gregor_center\"::text as \"gregor_center\",\n       \"internal_project_id\"::text as \"internal_project_id\",\n       \"maternal_id\"::text as \"maternal_id\",\n       \"missing_variant_case\"::text as \"missing_variant_case\",\n       \"paternal_id\"::text as \"paternal_id\",\n       \"phenotype_description\"::text as \"phenotype_description\",\n       \"pmid_id\"::text as \"pmid_id\",\n       \"prior_testing\"::text as \"prior_testing\",\n       \"proband_relationship\"::text as \"proband_relationship\",\n       \"proband_relationship_detail\"::text as \"proband_relationship_detail\",\n       \"reported_ethnicity\"::text as \"reported_ethnicity\",\n       \"reported_race\"::text as \"reported_race\",\n       \"sex\"::text as \"sex\",\n       \"sex_detail\"::text as \"sex_detail\",\n       \"solve_status\"::text as \"solve_status\",\n       \"twin_id\"::text as \"twin_id\",\n       \"ingest_provenance\"::text as \"ingest_provenance\"\n        from \"dbt\".\"main\".\"GREGoR_R03_GRU_20250612_participant\"\n    )\n\n    select \n        ROW_NUMBER() OVER () AS ftd_index\n        ,source.*\n        from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype": {"database": "dbt", "schema": "main_main", "name": "GREGoR_R03_GRU_20250612_stg_phenotype", "resource_type": "model", "package_name": "GREGoR_R03_GRU_20250612", "path": "phenotype/GREGoR_R03_GRU_20250612_stg_phenotype.sql", "original_file_path": "models/phenotype/GREGoR_R03_GRU_20250612_stg_phenotype.sql", "unique_id": "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype", "fqn": ["GREGoR_R03_GRU_20250612", "phenotype", "GREGoR_R03_GRU_20250612_stg_phenotype"], "alias": "GREGoR_R03_GRU_20250612_stg_phenotype", "checksum": {"name": "sha256", "checksum": "f3a037d34a87fa57b212267a3d44b7f02a426350542954584be0bc2a612eeb41"}, "config": {"enabled": true, "alias": null, "schema": "main", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_GRU_20250612_stg_phenotype.", "columns": {"phenotype_id": {"name": "phenotype_id", "description": "Unique identifier for the phenotype record", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "additional_details": {"name": "additional_details", "description": "Free text field for extra phenotype information", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "additional_modifiers": {"name": "additional_modifiers", "description": "Modifiers that qualify the phenotype term", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "onset_age_range": {"name": "onset_age_range", "description": "Age range when the phenotype was observed", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "ontology": {"name": "ontology", "description": "Ontology used for the phenotype term", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "participant_id": {"name": "participant_id", "description": "Participant ID associated with the phenotype record", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "presence": {"name": "presence", "description": "Indicates if the phenotype is present or absent", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "term_id": {"name": "term_id", "description": "Ontology identifier for the phenotype term", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "GREGoR_R03_GRU_20250612://models/phenotype/__models.yml", "build_path": null, "unrendered_config": {"schema": "main", "materialized": "table"}, "created_at": 1757448969.201746, "relation_name": "\"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_phenotype\"", "raw_code": "{{ config(materialized='table') }}\n\n    with source as (\n        select \n        \"phenotype_id\"::text as \"phenotype_id\",\n       \"additional_details\"::text as \"additional_details\",\n       \"additional_modifiers\"::text as \"additional_modifiers\",\n       \"onset_age_range\"::text as \"onset_age_range\",\n       \"ontology\"::text as \"ontology\",\n       \"participant_id\"::text as \"participant_id\",\n       \"presence\"::text as \"presence\",\n       \"syndromic\"::text as \"syndromic\",\n       \"term_id\"::text as \"term_id\"\n        from {{ source('GREGoR_R03_GRU_20250612','GREGoR_R03_GRU_20250612_phenotype') }}\n    )\n\n    select \n        ROW_NUMBER() OVER () AS ftd_index\n        ,source.*\n        from source", "language": "sql", "refs": [], "sources": [["GREGoR_R03_GRU_20250612", "GREGoR_R03_GRU_20250612_phenotype"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_phenotype"]}, "compiled_path": "target/compiled/GREGoR_R03_GRU_20250612/models/phenotype/GREGoR_R03_GRU_20250612_stg_phenotype.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        \"phenotype_id\"::text as \"phenotype_id\",\n       \"additional_details\"::text as \"additional_details\",\n       \"additional_modifiers\"::text as \"additional_modifiers\",\n       \"onset_age_range\"::text as \"onset_age_range\",\n       \"ontology\"::text as \"ontology\",\n       \"participant_id\"::text as \"participant_id\",\n       \"presence\"::text as \"presence\",\n       \"syndromic\"::text as \"syndromic\",\n       \"term_id\"::text as \"term_id\"\n        from \"dbt\".\"main\".\"GREGoR_R03_GRU_20250612_phenotype\"\n    )\n\n    select \n        ROW_NUMBER() OVER () AS ftd_index\n        ,source.*\n        from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_anvil_project": {"database": "dbt", "schema": "main_main", "name": "GREGoR_R03_GRU_20250612_stg_anvil_project", "resource_type": "model", "package_name": "GREGoR_R03_GRU_20250612", "path": "anvil_project/GREGoR_R03_GRU_20250612_stg_anvil_project.sql", "original_file_path": "models/anvil_project/GREGoR_R03_GRU_20250612_stg_anvil_project.sql", "unique_id": "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_anvil_project", "fqn": ["GREGoR_R03_GRU_20250612", "anvil_project", "GREGoR_R03_GRU_20250612_stg_anvil_project"], "alias": "GREGoR_R03_GRU_20250612_stg_anvil_project", "checksum": {"name": "sha256", "checksum": "91069a751aa64283353fbafd7f844665761e607a4d61f1d54c95c5784dd6e2a7"}, "config": {"enabled": true, "alias": null, "schema": "main", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"schema": "main", "materialized": "table"}, "created_at": 1757448967.536995, "relation_name": "\"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_anvil_project\"", "raw_code": "{{ config(materialized='table') }}\n\n    with source as (\n        select \n        \"project_id\"::text as \"project_id\",\n       \"funded_by\"::text as \"funded_by\",\n       \"generated_dataset_id\"::text as \"generated_dataset_id\",\n       \"principal_investigator\"::text as \"principal_investigator\",\n       \"title\"::text as \"title\",\n       \"registered_identifier\"::text as \"registered_identifier\",\n       \"source_datarepo_row_ids\"::text as \"source_datarepo_row_ids\"\n        from {{ source('GREGoR_R03_GRU_20250612','GREGoR_R03_GRU_20250612_anvil_project') }}\n    )\n\n    select \n        ROW_NUMBER() OVER () AS ftd_index\n        ,source.*\n        from source", "language": "sql", "refs": [], "sources": [["GREGoR_R03_GRU_20250612", "GREGoR_R03_GRU_20250612_anvil_project"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_anvil_project"]}, "compiled_path": "target/compiled/GREGoR_R03_GRU_20250612/models/anvil_project/GREGoR_R03_GRU_20250612_stg_anvil_project.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        \"project_id\"::text as \"project_id\",\n       \"funded_by\"::text as \"funded_by\",\n       \"generated_dataset_id\"::text as \"generated_dataset_id\",\n       \"principal_investigator\"::text as \"principal_investigator\",\n       \"title\"::text as \"title\",\n       \"registered_identifier\"::text as \"registered_identifier\",\n       \"source_datarepo_row_ids\"::text as \"source_datarepo_row_ids\"\n        from \"dbt\".\"main\".\"GREGoR_R03_GRU_20250612_anvil_project\"\n    )\n\n    select \n        ROW_NUMBER() OVER () AS ftd_index\n        ,source.*\n        from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.cmg_bh.cmg_bh_stg_subject": {"database": "dbt", "schema": "main_main", "name": "cmg_bh_stg_subject", "resource_type": "model", "package_name": "cmg_bh", "path": "subject/cmg_bh_stg_subject.sql", "original_file_path": "models/subject/cmg_bh_stg_subject.sql", "unique_id": "model.cmg_bh.cmg_bh_stg_subject", "fqn": ["cmg_bh", "subject", "cmg_bh_stg_subject"], "alias": "cmg_bh_stg_subject", "checksum": {"name": "sha256", "checksum": "b491ac54a18a7c8ea5e988467eba60344b4516bf33189dc4bc5bd0ecc6ae9261"}, "config": {"enabled": true, "alias": null, "schema": "main", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for cmg_bh_stg_subject.", "columns": {"subject_id": {"name": "subject_id", "description": "None", "meta": {}, "data_type": "identifier", "constraints": [], "quote": null, "tags": [], "granularity": null}, "submission_batch": {"name": "submission_batch", "description": "None", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "affected_status": {"name": "affected_status", "description": "None", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "ancestry": {"name": "ancestry", "description": "None", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "dbgap_study_id": {"name": "dbgap_study_id", "description": "None", "meta": {}, "data_type": "identifier", "constraints": [], "quote": null, "tags": [], "granularity": null}, "dbgap_submission": {"name": "dbgap_submission", "description": "None", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "family_id": {"name": "family_id", "description": "None", "meta": {}, "data_type": "identifier", "constraints": [], "quote": null, "tags": [], "granularity": null}, "family_relationship": {"name": "family_relationship", "description": "None", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "hpo_present": {"name": "hpo_present", "description": "None", "meta": {}, "data_type": "identifier", "constraints": [], "quote": null, "tags": [], "granularity": null}, "maternal_id": {"name": "maternal_id", "description": "None", "meta": {}, "data_type": "identifier", "constraints": [], "quote": null, "tags": [], "granularity": null}, "multiple_datasets": {"name": "multiple_datasets", "description": "None", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "paternal_id": {"name": "paternal_id", "description": "None", "meta": {}, "data_type": "identifier", "constraints": [], "quote": null, "tags": [], "granularity": null}, "phenotype_description": {"name": "phenotype_description", "description": "None", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "phenotype_group": {"name": "phenotype_group", "description": "None", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "project_investigator": {"name": "project_investigator", "description": "None", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "sex": {"name": "sex", "description": "None", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "solve_state": {"name": "solve_state", "description": "None", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "disease_id": {"name": "disease_id", "description": "None", "meta": {}, "data_type": "identifier", "constraints": [], "quote": null, "tags": [], "granularity": null}, "ancestry_detail": {"name": "ancestry_detail", "description": "None", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "hpo_absent": {"name": "hpo_absent", "description": "None", "meta": {}, "data_type": "identifier", "constraints": [], "quote": null, "tags": [], "granularity": null}, "twin_id": {"name": "twin_id", "description": "None", "meta": {}, "data_type": "identifier", "constraints": [], "quote": null, "tags": [], "granularity": null}, "ingest_provenance": {"name": "ingest_provenance", "description": "None", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "cmg_bh://models/subject/__models.yml", "build_path": null, "unrendered_config": {"schema": "main", "materialized": "table"}, "created_at": 1757448969.2153115, "relation_name": "\"dbt\".\"main_main\".\"cmg_bh_stg_subject\"", "raw_code": "{{ config(materialized='table') }}\n{%- set relation = source('cmg_bh', 'subject') -%}\n{%- set constant_columns = get_columns(relation=relation, exclude=[]) -%}\nwith source as (\n    select \n       ftd_index,\n       \"subject_id\"::text as \"subject_id\",\n       \"submission_batch\"::text as \"submission_batch\",\n       \"affected_status\"::text as \"affected_status\",\n       \"ancestry\"::text as \"ancestry\",\n       \"dbgap_study_id\"::text as \"dbgap_study_id\",\n       \"dbgap_submission\"::text as \"dbgap_submission\",\n       \"family_id\"::text as \"family_id\",\n       \"family_relationship\"::text as \"family_relationship\",\n       \"hpo_present\"::text as \"hpo_present\",\n       \"maternal_id\"::text as \"maternal_id\",\n       \"multiple_datasets\"::text as \"multiple_datasets\",\n       \"paternal_id\"::text as \"paternal_id\",\n       \"phenotype_description\"::text as \"phenotype_description\",\n       \"phenotype_group\"::text as \"phenotype_group\",\n       \"project_investigator\"::text as \"project_investigator\",\n       \"sex\"::text as \"sex\",\n       \"solve_state\"::text as \"solve_state\",\n       \"disease_id\"::text as \"disease_id\",\n       \"ancestry_detail\"::text as \"ancestry_detail\",\n       \"hpo_absent\"::text as \"hpo_absent\",\n       \"twin_id\"::text as \"twin_id\",\n       \"ingest_provenance\"::text as \"ingest_provenance\"\n    from (select *, ROW_NUMBER() OVER () AS ftd_index from {{ source('cmg_bh','subject') }}) as s\n)\n,clean_codes as (\n    select\n      {{ constant_columns | join(', ') }}, ftd_index,\n      {{ clean_codes('hpo_absent', ['HP:','HPO:'], ['\u00ca', '\"', \"''\"]) }} as \"clean_hpo_absent\",\n      {{ clean_codes('hpo_present',['HP:','HPO:'], ['\u00ca', '\"', \"''\"]) }} as \"clean_hpo_present\"\n    from source as s\n)\n,unpivot_df as (\n    select distinct *\n    from (\n        select\n          {{ constant_columns | join(', ') }},\n          ftd_index,\n          'Affected' as presence,\n           unnest(str_split(cc.clean_hpo_present, '|')) as code\n        from clean_codes as cc\n\n        union all\n\n        select\n          {{ constant_columns | join(', ') }},\n          ftd_index,\n          'Unaffected' as presence,\n          unnest(str_split(cc.clean_hpo_absent, '|')) as code\n        from  clean_codes as cc\n         \n        union all\n\n        select\n          {{ constant_columns | join(', ') }},\n          ftd_index,\n          cc.affected_status as presence,\n          cc.disease_id as code\n        from  clean_codes as cc\n        \n        union all\n\n        select\n          {{ constant_columns | join(', ') }},\n          ftd_index,\n          cc.affected_status as presence,\n          cc.phenotype_description as code\n        from  clean_codes as cc\n          )\n    where code is not null\n)\n\nselect \n   ftd_index,\n   subject_id,\n   submission_batch,\n   affected_status,\n   ancestry,\n   dbgap_study_id,\n   dbgap_submission,\n   family_id,\n   family_relationship,\n   hpo_present,\n   maternal_id,\n   multiple_datasets,\n   paternal_id,\n   phenotype_description,\n   phenotype_group,\n   project_investigator,\n   sex,\n   solve_state,\n   disease_id,\n   ancestry_detail,\n   hpo_absent,\n   twin_id,\n   ingest_provenance,\n   presence,\n   code as \"condition_or_disease_code\"\nfrom unpivot_df", "language": "sql", "refs": [], "sources": [["cmg_bh", "subject"], ["cmg_bh", "subject"]], "metrics": [], "depends_on": {"macros": ["macro.base.get_columns", "macro.base.clean_codes"], "nodes": ["source.cmg_bh.cmg_bh.subject"]}, "compiled_path": "target/compiled/cmg_bh/models/subject/cmg_bh_stg_subject.sql", "compiled": true, "compiled_code": "with source as (\n    select \n       ftd_index,\n       \"subject_id\"::text as \"subject_id\",\n       \"submission_batch\"::text as \"submission_batch\",\n       \"affected_status\"::text as \"affected_status\",\n       \"ancestry\"::text as \"ancestry\",\n       \"dbgap_study_id\"::text as \"dbgap_study_id\",\n       \"dbgap_submission\"::text as \"dbgap_submission\",\n       \"family_id\"::text as \"family_id\",\n       \"family_relationship\"::text as \"family_relationship\",\n       \"hpo_present\"::text as \"hpo_present\",\n       \"maternal_id\"::text as \"maternal_id\",\n       \"multiple_datasets\"::text as \"multiple_datasets\",\n       \"paternal_id\"::text as \"paternal_id\",\n       \"phenotype_description\"::text as \"phenotype_description\",\n       \"phenotype_group\"::text as \"phenotype_group\",\n       \"project_investigator\"::text as \"project_investigator\",\n       \"sex\"::text as \"sex\",\n       \"solve_state\"::text as \"solve_state\",\n       \"disease_id\"::text as \"disease_id\",\n       \"ancestry_detail\"::text as \"ancestry_detail\",\n       \"hpo_absent\"::text as \"hpo_absent\",\n       \"twin_id\"::text as \"twin_id\",\n       \"ingest_provenance\"::text as \"ingest_provenance\"\n    from (select *, ROW_NUMBER() OVER () AS ftd_index from \"dbt\".\"main\".\"subject\") as s\n)\n,clean_codes as (\n    select\n      , ftd_index,\n      (\n    select string_agg(distinct trim(code), '|' order by trim(code))\n    from (\n        select unnest(string_to_array(trim(both '|' \n        from translate(replace(replace(hpo_absent, 'HP:', '|HP:'), 'HPO:', '|HPO:'), '\u00ca\"''', '')),'|')) as code\n        ) as split_codes\n    where code is not null and length(trim(code)) > 0\n) as \"clean_hpo_absent\",\n      (\n    select string_agg(distinct trim(code), '|' order by trim(code))\n    from (\n        select unnest(string_to_array(trim(both '|' \n        from translate(replace(replace(hpo_present, 'HP:', '|HP:'), 'HPO:', '|HPO:'), '\u00ca\"''', '')),'|')) as code\n        ) as split_codes\n    where code is not null and length(trim(code)) > 0\n) as \"clean_hpo_present\"\n    from source as s\n)\n,unpivot_df as (\n    select distinct *\n    from (\n        select\n          ,\n          ftd_index,\n          'Affected' as presence,\n           unnest(str_split(cc.clean_hpo_present, '|')) as code\n        from clean_codes as cc\n\n        union all\n\n        select\n          ,\n          ftd_index,\n          'Unaffected' as presence,\n          unnest(str_split(cc.clean_hpo_absent, '|')) as code\n        from  clean_codes as cc\n         \n        union all\n\n        select\n          ,\n          ftd_index,\n          cc.affected_status as presence,\n          cc.disease_id as code\n        from  clean_codes as cc\n        \n        union all\n\n        select\n          ,\n          ftd_index,\n          cc.affected_status as presence,\n          cc.phenotype_description as code\n        from  clean_codes as cc\n          )\n    where code is not null\n)\n\nselect \n   ftd_index,\n   subject_id,\n   submission_batch,\n   affected_status,\n   ancestry,\n   dbgap_study_id,\n   dbgap_submission,\n   family_id,\n   family_relationship,\n   hpo_present,\n   maternal_id,\n   multiple_datasets,\n   paternal_id,\n   phenotype_description,\n   phenotype_group,\n   project_investigator,\n   sex,\n   solve_state,\n   disease_id,\n   ancestry_detail,\n   hpo_absent,\n   twin_id,\n   ingest_provenance,\n   presence,\n   code as \"condition_or_disease_code\"\nfrom unpivot_df", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.cmg_bh.cmg_bh_stg_sample": {"database": "dbt", "schema": "main_main", "name": "cmg_bh_stg_sample", "resource_type": "model", "package_name": "cmg_bh", "path": "sample/cmg_bh_stg_sample.sql", "original_file_path": "models/sample/cmg_bh_stg_sample.sql", "unique_id": "model.cmg_bh.cmg_bh_stg_sample", "fqn": ["cmg_bh", "sample", "cmg_bh_stg_sample"], "alias": "cmg_bh_stg_sample", "checksum": {"name": "sha256", "checksum": "767daa1af123cf620303a6763f491ededd883dda0b19f87f6327fbbee715f540"}, "config": {"enabled": true, "alias": null, "schema": "main", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for cmg_bh_stg_sample.", "columns": {"sample_id": {"name": "sample_id", "description": "None", "meta": {}, "data_type": "identifier", "constraints": [], "quote": null, "tags": [], "granularity": null}, "bai": {"name": "bai", "description": "None", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "bai_md5": {"name": "bai_md5", "description": "None", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "bam": {"name": "bam", "description": "None", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "bam_md5": {"name": "bam_md5", "description": "None", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "subject_id": {"name": "subject_id", "description": "None", "meta": {}, "data_type": "identifier", "constraints": [], "quote": null, "tags": [], "granularity": null}, "crai": {"name": "crai", "description": "None", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "cram_md5": {"name": "cram_md5", "description": "None", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "ingest_provenance": {"name": "ingest_provenance", "description": "None", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "submission_batch": {"name": "submission_batch", "description": "None", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "dbgap_sample_id": {"name": "dbgap_sample_id", "description": "None", "meta": {}, "data_type": "identifier", "constraints": [], "quote": null, "tags": [], "granularity": null}, "sample_provider": {"name": "sample_provider", "description": "None", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "sample_source": {"name": "sample_source", "description": "None", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "tissue_affected_status": {"name": "tissue_affected_status", "description": "None", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "cmg_bh://models/sample/__models.yml", "build_path": null, "unrendered_config": {"schema": "main", "materialized": "table"}, "created_at": 1757448969.2162342, "relation_name": "\"dbt\".\"main_main\".\"cmg_bh_stg_sample\"", "raw_code": "{{ config(materialized='table') }}\n\n    with source as (\n        select \n        \"sample_id\"::text as \"sample_id\",\n       \"bai\"::text as \"bai\",\n       \"bai_md5\"::text as \"bai_md5\",\n       \"bam\"::text as \"bam\",\n       \"bam_md5\"::text as \"bam_md5\",\n       \"subject_id\"::text as \"subject_id\",\n       \"crai\"::text as \"crai\",\n       \"cram_md5\"::text as \"cram_md5\",\n       \"ingest_provenance\"::text as \"ingest_provenance\",\n       \"Submission_Batch\"::text as \"submission_batch\",\n       \"dbgap_sample_id\"::text as \"dbgap_sample_id\",\n       \"sample_provider\"::text as \"sample_provider\",\n       \"sample_source\"::text as \"sample_source\",\n       \"tissue_affected_status\"::text as \"tissue_affected_status\"\n        from {{ source('cmg_bh','sample') }}\n    )\n\n    select \n        ROW_NUMBER() OVER () AS ftd_index\n        ,source.*\n        from source", "language": "sql", "refs": [], "sources": [["cmg_bh", "sample"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.cmg_bh.cmg_bh.sample"]}, "compiled_path": "target/compiled/cmg_bh/models/sample/cmg_bh_stg_sample.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        \"sample_id\"::text as \"sample_id\",\n       \"bai\"::text as \"bai\",\n       \"bai_md5\"::text as \"bai_md5\",\n       \"bam\"::text as \"bam\",\n       \"bam_md5\"::text as \"bam_md5\",\n       \"subject_id\"::text as \"subject_id\",\n       \"crai\"::text as \"crai\",\n       \"cram_md5\"::text as \"cram_md5\",\n       \"ingest_provenance\"::text as \"ingest_provenance\",\n       \"Submission_Batch\"::text as \"submission_batch\",\n       \"dbgap_sample_id\"::text as \"dbgap_sample_id\",\n       \"sample_provider\"::text as \"sample_provider\",\n       \"sample_source\"::text as \"sample_source\",\n       \"tissue_affected_status\"::text as \"tissue_affected_status\"\n        from \"dbt\".\"main\".\"sample\"\n    )\n\n    select \n        ROW_NUMBER() OVER () AS ftd_index\n        ,source.*\n        from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.GWAS.GWAS_stg_demographics": {"database": "dbt", "schema": "main_main", "name": "GWAS_stg_demographics", "resource_type": "model", "package_name": "GWAS", "path": "demographics/GWAS_stg_demographics.sql", "original_file_path": "models/demographics/GWAS_stg_demographics.sql", "unique_id": "model.GWAS.GWAS_stg_demographics", "fqn": ["GWAS", "demographics", "GWAS_stg_demographics"], "alias": "GWAS_stg_demographics", "checksum": {"name": "sha256", "checksum": "4bcfffe1bfdb2754b1f96e109cc7bd46c332cd4364ff485ac09e835bc01e0f3e"}, "config": {"enabled": true, "alias": null, "schema": "main", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GWAS_stg_demographics.", "columns": {"subject_id": {"name": "subject_id", "description": "None", "meta": {}, "data_type": "Integer", "constraints": [], "quote": null, "tags": [], "granularity": null}, "decade_birth": {"name": "decade_birth", "description": "None", "meta": {}, "data_type": "Integer, encoded value", "constraints": [], "quote": null, "tags": [], "granularity": null}, "year_birth": {"name": "year_birth", "description": "None", "meta": {}, "data_type": "Integer", "constraints": [], "quote": null, "tags": [], "granularity": null}, "sex": {"name": "sex", "description": "None", "meta": {}, "data_type": "String, Encoded value", "constraints": [], "quote": null, "tags": [], "granularity": null}, "race": {"name": "race", "description": "None", "meta": {}, "data_type": "String, Encoded value", "constraints": [], "quote": null, "tags": [], "granularity": null}, "ethnicity": {"name": "ethnicity", "description": "None", "meta": {}, "data_type": "String, Encoded value", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "GWAS://models/demographics/__models.yml", "build_path": null, "unrendered_config": {"schema": "main", "materialized": "table"}, "created_at": 1757448969.229796, "relation_name": "\"dbt\".\"main_main\".\"GWAS_stg_demographics\"", "raw_code": "{{ config(materialized='table') }}\n\nwith source as (\n    select \n      \"subject_id\"::text as \"subject_id\",\n       \"decade_birth\"::text as \"decade_birth\",\n       \"year_birth\"::text as \"year_birth\",\n       \"sex\"::text as \"sex\",\n       \"race\"::text as \"race\",\n       \"ethnicity\"::text as \"ethnicity\"\n    from {{ source('GWAS','GWAS_Demographics_DS_20201109') }}\n)\n\nselect \n  ROW_NUMBER() OVER () AS ftd_index,\n  source.*\nfrom source", "language": "sql", "refs": [], "sources": [["GWAS", "GWAS_Demographics_DS_20201109"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.GWAS.GWAS.GWAS_Demographics_DS_20201109"]}, "compiled_path": "target/compiled/GWAS/models/demographics/GWAS_stg_demographics.sql", "compiled": true, "compiled_code": "\n\nwith source as (\n    select \n      \"subject_id\"::text as \"subject_id\",\n       \"decade_birth\"::text as \"decade_birth\",\n       \"year_birth\"::text as \"year_birth\",\n       \"sex\"::text as \"sex\",\n       \"race\"::text as \"race\",\n       \"ethnicity\"::text as \"ethnicity\"\n    from \"dbt\".\"main\".\"GWAS_Demographics_DS_20201109\"\n)\n\nselect \n  ROW_NUMBER() OVER () AS ftd_index,\n  source.*\nfrom source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.GWAS.GWAS_stg_sampleattributes": {"database": "dbt", "schema": "main_main", "name": "GWAS_stg_sampleattributes", "resource_type": "model", "package_name": "GWAS", "path": "sampleattributes/GWAS_stg_sampleattributes.sql", "original_file_path": "models/sampleattributes/GWAS_stg_sampleattributes.sql", "unique_id": "model.GWAS.GWAS_stg_sampleattributes", "fqn": ["GWAS", "sampleattributes", "GWAS_stg_sampleattributes"], "alias": "GWAS_stg_sampleattributes", "checksum": {"name": "sha256", "checksum": "9e833206cd2d29af6e90b1230458699b8a65b112f8c9153883dc94b2ce22c1be"}, "config": {"enabled": true, "alias": null, "schema": "main", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GWAS_stg_sampleattributes.", "columns": {"sample_id": {"name": "sample_id", "description": "None", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "analyte_type": {"name": "analyte_type", "description": "None", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "GWAS://models/sampleattributes/__models.yml", "build_path": null, "unrendered_config": {"schema": "main", "materialized": "table"}, "created_at": 1757448969.230301, "relation_name": "\"dbt\".\"main_main\".\"GWAS_stg_sampleattributes\"", "raw_code": "{{ config(materialized='table') }}\n\nwith source as (\n    select \n      \"sample_id\"::text as \"sample_id\",\n       \"analyte_type\"::text as \"analyte_type\"\n    from {{ source('GWAS','GWAS_SampleAttributes_DS_20201027') }}\n)\n\nselect \n  ROW_NUMBER() OVER () AS ftd_index,\n  source.*\nfrom source", "language": "sql", "refs": [], "sources": [["GWAS", "GWAS_SampleAttributes_DS_20201027"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.GWAS.GWAS.GWAS_SampleAttributes_DS_20201027"]}, "compiled_path": "target/compiled/GWAS/models/sampleattributes/GWAS_stg_sampleattributes.sql", "compiled": true, "compiled_code": "\n\nwith source as (\n    select \n      \"sample_id\"::text as \"sample_id\",\n       \"analyte_type\"::text as \"analyte_type\"\n    from \"dbt\".\"main\".\"GWAS_SampleAttributes_DS_20201027\"\n)\n\nselect \n  ROW_NUMBER() OVER () AS ftd_index,\n  source.*\nfrom source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.GWAS.GWAS_stg_subjectconsent": {"database": "dbt", "schema": "main_main", "name": "GWAS_stg_subjectconsent", "resource_type": "model", "package_name": "GWAS", "path": "subjectconsent/GWAS_stg_subjectconsent.sql", "original_file_path": "models/subjectconsent/GWAS_stg_subjectconsent.sql", "unique_id": "model.GWAS.GWAS_stg_subjectconsent", "fqn": ["GWAS", "subjectconsent", "GWAS_stg_subjectconsent"], "alias": "GWAS_stg_subjectconsent", "checksum": {"name": "sha256", "checksum": "0d03270022d3de6e3b3fe01d6d30bd68811fe603d4b8be53a29668b4c2ac23a3"}, "config": {"enabled": true, "alias": null, "schema": "main", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GWAS_stg_subjectconsent.", "columns": {"subject_id": {"name": "subject_id", "description": "None", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "consent": {"name": "consent", "description": "None", "meta": {}, "data_type": "encoded value", "constraints": [], "quote": null, "tags": [], "granularity": null}, "subject_source": {"name": "subject_source", "description": "None", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "source_subject_id": {"name": "source_subject_id", "description": "None", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "GWAS://models/subjectconsent/__models.yml", "build_path": null, "unrendered_config": {"schema": "main", "materialized": "table"}, "created_at": 1757448969.2310317, "relation_name": "\"dbt\".\"main_main\".\"GWAS_stg_subjectconsent\"", "raw_code": "{{ config(materialized='table') }}\n\nwith source as (\n    select \n      \"subject_id\"::text as \"subject_id\",\n       \"consent\"::text as \"consent\",\n       \"subject_source\"::text as \"subject_source\",\n       \"source_subject_id\"::text as \"source_subject_id\"\n    from {{ source('GWAS','GWAS_SubjectConsent_DS_20190813') }}\n)\n\nselect \n  ROW_NUMBER() OVER () AS ftd_index,\n  source.*\nfrom source", "language": "sql", "refs": [], "sources": [["GWAS", "GWAS_SubjectConsent_DS_20190813"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.GWAS.GWAS.GWAS_SubjectConsent_DS_20190813"]}, "compiled_path": "target/compiled/GWAS/models/subjectconsent/GWAS_stg_subjectconsent.sql", "compiled": true, "compiled_code": "\n\nwith source as (\n    select \n      \"subject_id\"::text as \"subject_id\",\n       \"consent\"::text as \"consent\",\n       \"subject_source\"::text as \"subject_source\",\n       \"source_subject_id\"::text as \"source_subject_id\"\n    from \"dbt\".\"main\".\"GWAS_SubjectConsent_DS_20190813\"\n)\n\nselect \n  ROW_NUMBER() OVER () AS ftd_index,\n  source.*\nfrom source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.GWAS.GWAS_stg_phecode": {"database": "dbt", "schema": "main_main", "name": "GWAS_stg_phecode", "resource_type": "model", "package_name": "GWAS", "path": "phecode/GWAS_stg_phecode.sql", "original_file_path": "models/phecode/GWAS_stg_phecode.sql", "unique_id": "model.GWAS.GWAS_stg_phecode", "fqn": ["GWAS", "phecode", "GWAS_stg_phecode"], "alias": "GWAS_stg_phecode", "checksum": {"name": "sha256", "checksum": "ddc177adfd3665cbe017c9dc521d2cefa02c6d85c236b56ab07a0e0338d47adf"}, "config": {"enabled": true, "alias": null, "schema": "main", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GWAS_stg_phecode.", "columns": {"subject_id": {"name": "subject_id", "description": "None", "meta": {}, "data_type": "String", "constraints": [], "quote": null, "tags": [], "granularity": null}, "age_at_observation": {"name": "age_at_observation", "description": "None", "meta": {}, "data_type": "Decimal", "constraints": [], "quote": null, "tags": [], "granularity": null}, "icd_code": {"name": "icd_code", "description": "None", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "icd_flag": {"name": "icd_flag", "description": "None", "meta": {}, "data_type": "Integer, encoded value", "constraints": [], "quote": null, "tags": [], "granularity": null}, "phecode": {"name": "phecode", "description": "None", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "GWAS://models/phecode/__models.yml", "build_path": null, "unrendered_config": {"schema": "main", "materialized": "table"}, "created_at": 1757448969.2320945, "relation_name": "\"dbt\".\"main_main\".\"GWAS_stg_phecode\"", "raw_code": "{{ config(materialized='table') }}\n\nwith source as (\n    select \n      \"subject_id\"::text as \"subject_id\",\n        REPLACE(CAST(\"age_at_observation\" AS VARCHAR(50)), 'NA', NULL)::text as \"age_at_observation\",\n       \"icd_code\"::text as \"icd_code\",\n       \"icd_flag\"::text as \"icd_flag\",\n       \"phecode\"::text as \"phecode\"\n    from {{ source('GWAS','GWAS_Phecode_DS_20201027') }}\n)\n\nselect \n  ROW_NUMBER() OVER () AS ftd_index,\n  source.*\nfrom source", "language": "sql", "refs": [], "sources": [["GWAS", "GWAS_Phecode_DS_20201027"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.GWAS.GWAS.GWAS_Phecode_DS_20201027"]}, "compiled_path": "target/compiled/GWAS/models/phecode/GWAS_stg_phecode.sql", "compiled": true, "compiled_code": "\n\nwith source as (\n    select \n      \"subject_id\"::text as \"subject_id\",\n        REPLACE(CAST(\"age_at_observation\" AS VARCHAR(50)), 'NA', NULL)::text as \"age_at_observation\",\n       \"icd_code\"::text as \"icd_code\",\n       \"icd_flag\"::text as \"icd_flag\",\n       \"phecode\"::text as \"phecode\"\n    from \"dbt\".\"main\".\"GWAS_Phecode_DS_20201027\"\n)\n\nselect \n  ROW_NUMBER() OVER () AS ftd_index,\n  source.*\nfrom source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.GWAS.GWAS_stg_bmi": {"database": "dbt", "schema": "main_main", "name": "GWAS_stg_bmi", "resource_type": "model", "package_name": "GWAS", "path": "bmi/GWAS_stg_bmi.sql", "original_file_path": "models/bmi/GWAS_stg_bmi.sql", "unique_id": "model.GWAS.GWAS_stg_bmi", "fqn": ["GWAS", "bmi", "GWAS_stg_bmi"], "alias": "GWAS_stg_bmi", "checksum": {"name": "sha256", "checksum": "d0c09ddd2f6e2c0e4456a66b2d690d1cdf447261b75a446a6b7b86eefa82a852"}, "config": {"enabled": true, "alias": null, "schema": "main", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GWAS_stg_bmi.", "columns": {"subject_id": {"name": "subject_id", "description": "None", "meta": {}, "data_type": "Integer", "constraints": [], "quote": null, "tags": [], "granularity": null}, "bmi_observation_age": {"name": "bmi_observation_age", "description": "None", "meta": {}, "data_type": "Decimal", "constraints": [], "quote": null, "tags": [], "granularity": null}, "weight": {"name": "weight", "description": "None", "meta": {}, "data_type": "Decimal", "constraints": [], "quote": null, "tags": [], "granularity": null}, "height": {"name": "height", "description": "None", "meta": {}, "data_type": "Decimal", "constraints": [], "quote": null, "tags": [], "granularity": null}, "body_mass_index": {"name": "body_mass_index", "description": "None", "meta": {}, "data_type": "Decimal", "constraints": [], "quote": null, "tags": [], "granularity": null}, "visit_number": {"name": "visit_number", "description": "None", "meta": {}, "data_type": "Integer", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "GWAS://models/bmi/__models.yml", "build_path": null, "unrendered_config": {"schema": "main", "materialized": "table"}, "created_at": 1757448969.2326925, "relation_name": "\"dbt\".\"main_main\".\"GWAS_stg_bmi\"", "raw_code": "{{ config(materialized='table') }}\n\nwith source as (\n    select \n      \"subject_id\"::text as \"subject_id\",\n       \"bmi_observation_age\"::text as \"bmi_observation_age\",\n       \"weight\"::text as \"weight\",\n       \"height\"::text as \"height\",\n       \"body_mass_index\"::text as \"body_mass_index\",\n       \"visit_number\"::text as \"visit_number\"\n    from {{ source('GWAS','GWAS_BMI_DS_20201028') }}\n)\n\nselect \n  ROW_NUMBER() OVER () AS ftd_index,\n  source.*\nfrom source", "language": "sql", "refs": [], "sources": [["GWAS", "GWAS_BMI_DS_20201028"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.GWAS.GWAS.GWAS_BMI_DS_20201028"]}, "compiled_path": "target/compiled/GWAS/models/bmi/GWAS_stg_bmi.sql", "compiled": true, "compiled_code": "\n\nwith source as (\n    select \n      \"subject_id\"::text as \"subject_id\",\n       \"bmi_observation_age\"::text as \"bmi_observation_age\",\n       \"weight\"::text as \"weight\",\n       \"height\"::text as \"height\",\n       \"body_mass_index\"::text as \"body_mass_index\",\n       \"visit_number\"::text as \"visit_number\"\n    from \"dbt\".\"main\".\"GWAS_BMI_DS_20201028\"\n)\n\nselect \n  ROW_NUMBER() OVER () AS ftd_index,\n  source.*\nfrom source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.GWAS.GWAS_stg_pedigree": {"database": "dbt", "schema": "main_main", "name": "GWAS_stg_pedigree", "resource_type": "model", "package_name": "GWAS", "path": "pedigree/GWAS_stg_pedigree.sql", "original_file_path": "models/pedigree/GWAS_stg_pedigree.sql", "unique_id": "model.GWAS.GWAS_stg_pedigree", "fqn": ["GWAS", "pedigree", "GWAS_stg_pedigree"], "alias": "GWAS_stg_pedigree", "checksum": {"name": "sha256", "checksum": "ff2768bf15a2ec9cbd31843094c439dcb3b661e37ea0da292226fcc6cf6eb957"}, "config": {"enabled": true, "alias": null, "schema": "main", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GWAS_stg_pedigree.", "columns": {"family_id": {"name": "family_id", "description": "None", "meta": {}, "data_type": "integer", "constraints": [], "quote": null, "tags": [], "granularity": null}, "subject_id": {"name": "subject_id", "description": "None", "meta": {}, "data_type": "integer", "constraints": [], "quote": null, "tags": [], "granularity": null}, "mother": {"name": "mother", "description": "None", "meta": {}, "data_type": "integer", "constraints": [], "quote": null, "tags": [], "granularity": null}, "father": {"name": "father", "description": "None", "meta": {}, "data_type": "integer", "constraints": [], "quote": null, "tags": [], "granularity": null}, "sex": {"name": "sex", "description": "None", "meta": {}, "data_type": "encoded value", "constraints": [], "quote": null, "tags": [], "granularity": null}, "mz_twin_id": {"name": "mz_twin_id", "description": "None", "meta": {}, "data_type": "integer", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "GWAS://models/pedigree/__models.yml", "build_path": null, "unrendered_config": {"schema": "main", "materialized": "table"}, "created_at": 1757448969.2332644, "relation_name": "\"dbt\".\"main_main\".\"GWAS_stg_pedigree\"", "raw_code": "{{ config(materialized='table') }}\n\nwith source as (\n    select \n      \"family_id\"::text as \"family_id\",\n       \"subject_id\"::text as \"subject_id\",\n      CASE WHEN mother = 'NA' THEN NULL\n            ELSE mother\n        END as \"mother\",\n        CASE WHEN father = 'NA' THEN NULL\n            ELSE father\n        END as \"father\",\n        \"sex\"::text as \"sex\",\n        CASE WHEN mz_twin_id = 'NA' THEN NULL\n            ELSE mz_twin_id\n        END as \"mz_twin_id\"\n    from {{ source('GWAS','GWAS_Pedigree_DS_20200512') }}\n)\n\nselect \n  ROW_NUMBER() OVER () AS ftd_index,\n  source.*\nfrom source", "language": "sql", "refs": [], "sources": [["GWAS", "GWAS_Pedigree_DS_20200512"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.GWAS.GWAS.GWAS_Pedigree_DS_20200512"]}, "compiled_path": "target/compiled/GWAS/models/pedigree/GWAS_stg_pedigree.sql", "compiled": true, "compiled_code": "\n\nwith source as (\n    select \n      \"family_id\"::text as \"family_id\",\n       \"subject_id\"::text as \"subject_id\",\n      CASE WHEN mother = 'NA' THEN NULL\n            ELSE mother\n        END as \"mother\",\n        CASE WHEN father = 'NA' THEN NULL\n            ELSE father\n        END as \"father\",\n        \"sex\"::text as \"sex\",\n        CASE WHEN mz_twin_id = 'NA' THEN NULL\n            ELSE mz_twin_id\n        END as \"mz_twin_id\"\n    from \"dbt\".\"main\".\"GWAS_Pedigree_DS_20200512\"\n)\n\nselect \n  ROW_NUMBER() OVER () AS ftd_index,\n  source.*\nfrom source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.GWAS.GWAS_stg_samplesubjectmapping": {"database": "dbt", "schema": "main_main", "name": "GWAS_stg_samplesubjectmapping", "resource_type": "model", "package_name": "GWAS", "path": "samplesubjectmapping/GWAS_stg_samplesubjectmapping.sql", "original_file_path": "models/samplesubjectmapping/GWAS_stg_samplesubjectmapping.sql", "unique_id": "model.GWAS.GWAS_stg_samplesubjectmapping", "fqn": ["GWAS", "samplesubjectmapping", "GWAS_stg_samplesubjectmapping"], "alias": "GWAS_stg_samplesubjectmapping", "checksum": {"name": "sha256", "checksum": "ef6408bfeb7cdceaf87c4d5457c04be21299602e1bca49d62b8a5c2bd26f33b5"}, "config": {"enabled": true, "alias": null, "schema": "main", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GWAS_stg_samplesubjectmapping.", "columns": {"subject_id": {"name": "subject_id", "description": "None", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "sample_id": {"name": "sample_id", "description": "None", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "samp_source": {"name": "samp_source", "description": "None", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "source_sampid": {"name": "source_sampid", "description": "None", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "GWAS://models/samplesubjectmapping/__models.yml", "build_path": null, "unrendered_config": {"schema": "main", "materialized": "table"}, "created_at": 1757448969.2338023, "relation_name": "\"dbt\".\"main_main\".\"GWAS_stg_samplesubjectmapping\"", "raw_code": "{{ config(materialized='table') }}\n\nwith source as (\n    select \n      \"subject_id\"::text as \"subject_id\",\n       \"sample_id\"::text as \"sample_id\",\n       \"samp_source\"::text as \"samp_source\",\n       \"source_sampid\"::text as \"source_sampid\"\n    from {{ source('GWAS','GWAS_SampleSubjectMapping_DS_20201027') }}\n)\n\nselect \n  ROW_NUMBER() OVER () AS ftd_index,\n  source.*\nfrom source", "language": "sql", "refs": [], "sources": [["GWAS", "GWAS_SampleSubjectMapping_DS_20201027"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.GWAS.GWAS.GWAS_SampleSubjectMapping_DS_20201027"]}, "compiled_path": "target/compiled/GWAS/models/samplesubjectmapping/GWAS_stg_samplesubjectmapping.sql", "compiled": true, "compiled_code": "\n\nwith source as (\n    select \n      \"subject_id\"::text as \"subject_id\",\n       \"sample_id\"::text as \"sample_id\",\n       \"samp_source\"::text as \"samp_source\",\n       \"source_sampid\"::text as \"source_sampid\"\n    from \"dbt\".\"main\".\"GWAS_SampleSubjectMapping_DS_20201027\"\n)\n\nselect \n  ROW_NUMBER() OVER () AS ftd_index,\n  source.*\nfrom source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_HMB_20250612_ftd_sourcedata": {"database": "dbt", "schema": "main_GREGoR_R03_HMB_20250612_data", "name": "GREGoR_R03_HMB_20250612_ftd_sourcedata", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_sourcedata.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_sourcedata.sql", "unique_id": "model.ftd.GREGoR_R03_HMB_20250612_ftd_sourcedata", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "GREGoR_R03_HMB_20250612_ftd_sourcedata"], "alias": "GREGoR_R03_HMB_20250612_ftd_sourcedata", "checksum": {"name": "sha256", "checksum": "22059d8ef28c73dea49970d18f1d70de3c54cb97bb6fe8673cf16ea86828ed2e"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_HMB_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_HMB_20250612_ftd_sourcedata.", "columns": {"code": {"name": "code", "description": "The structured term defining the meaning of the assertion.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "display": {"name": "display", "description": "The friendly display string of the coded term", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "value_code": {"name": "value_code", "description": "The structured term defining the value of the assertion.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "value_display": {"name": "value_display", "description": "The friendly display string of the coded term for the value of the assertion.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "value_number": {"name": "value_number", "description": "The numeric value of the assertion.", "meta": {}, "data_type": "number", "constraints": [], "quote": null, "tags": [], "granularity": null}, "value_units": {"name": "value_units", "description": "The structured term defining the units of the value.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "value_units_display": {"name": "value_units_display", "description": "The friendly display string of units of the value.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_HMB_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_HMB_20250612_data"}, "created_at": 1757448969.2554424, "relation_name": "\"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_sourcedata\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_HMB_20250612_data') }}\n\n    with source as (\n        select \n        GEN_UNKNOWN.code::text as \"code\",\n       GEN_UNKNOWN.display::text as \"display\",\n       GEN_UNKNOWN.value_code::text as \"value_code\",\n       GEN_UNKNOWN.value_display::text as \"value_display\",\n       GEN_UNKNOWN.value_number::text as \"value_number\",\n       GEN_UNKNOWN.value_units::text as \"value_units\",\n       GEN_UNKNOWN.value_units_display::text as \"value_units_display\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_HMB_20250612') }}::text as \"has_access_policy\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_HMB_20250612') }}::text as \"id\"\n        from {{ ref('GREGoR_R03_HMB_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_HMB_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_HMB_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_sourcedata.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        GEN_UNKNOWN.code::text as \"code\",\n       GEN_UNKNOWN.display::text as \"display\",\n       GEN_UNKNOWN.value_code::text as \"value_code\",\n       GEN_UNKNOWN.value_display::text as \"value_display\",\n       GEN_UNKNOWN.value_number::text as \"value_number\",\n       GEN_UNKNOWN.value_units::text as \"value_units\",\n       GEN_UNKNOWN.value_units_display::text as \"value_units_display\",\n       '' || '_' || md5('GREGoR_R03_HMB_20250612' || '|' || cast(coalesce(, '') as text))::text as \"has_access_policy\",\n       '' || '_' || md5('GREGoR_R03_HMB_20250612' || '|' || cast(coalesce(, '') as text))::text as \"id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_HMB_20250612_ftd_familyrelationship": {"database": "dbt", "schema": "main_GREGoR_R03_HMB_20250612_data", "name": "GREGoR_R03_HMB_20250612_ftd_familyrelationship", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_familyrelationship.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_familyrelationship.sql", "unique_id": "model.ftd.GREGoR_R03_HMB_20250612_ftd_familyrelationship", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "GREGoR_R03_HMB_20250612_ftd_familyrelationship"], "alias": "GREGoR_R03_HMB_20250612_ftd_familyrelationship", "checksum": {"name": "sha256", "checksum": "3f51457dac35f30c204ffb2e9c808c94a44ad7ddc86e5b48878c95b873452ff1"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_HMB_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_HMB_20250612_ftd_familyrelationship.", "columns": {"family_member": {"name": "family_member", "description": "The family member Subject who is the relationship \"subject\".", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "other_family_member": {"name": "other_family_member", "description": "The family member Subject for the relationship \"object\".", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "relationship_code": {"name": "relationship_code", "description": "Code definting the relationship predicate. Relationship of the \"Family Member\" to the \"Other Family Member\" (i.e. mother, father, etc). Code must be from the HL7 [FamilyMember ValueSet](https://terminology.hl7.org/6.2.0/ValueSet-v3-FamilyMember.html)", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_HMB_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_HMB_20250612_data"}, "created_at": 1757448969.2512524, "relation_name": "\"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_familyrelationship\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_HMB_20250612_data') }}\n\n    with source as (\n        select DISTINCT\n        participant_id AS other_family_member,\n        twin_id AS participant_id,\n        'KIN:009' AS relationship_code,\n        {{ generate_global_id(prefix='ap',descriptor=['participant.consent_code'], study_id='phs003047') }}::text AS \"has_access_policy\",\n        participant.family_id::text AS \"family_id\",\n        from {{ ref('GREGoR_R03_HMB_20250612_stg_participant') }} as participant WHERE twin_id != '0'\n\n        UNION \n\n        select DISTINCT\n        participant_id AS other_family_member, \n        paternal_id AS participant_id,\n        'KIN:028' AS relationship_code,\n        {{ generate_global_id(prefix='ap',descriptor=['participant.consent_code'], study_id='phs003047') }}::text AS \"has_access_policy\",\n        participant.family_id::text AS \"family_id\"\n        from {{ ref('GREGoR_R03_HMB_20250612_stg_participant') }} as participant WHERE paternal_id != '0'\n\n        UNION \n\n        select DISTINCT\n        participant_id AS other_family_member, \n        maternal_id AS participant_id,\n        'KIN:027' AS relationship_code,\n        {{ generate_global_id(prefix='ap',descriptor=['participant.consent_code'], study_id='phs003047') }}::text AS \"has_access_policy\",\n         participant.family_id::text AS \"family_id\"\n        from {{ ref('GREGoR_R03_HMB_20250612_stg_participant') }} as participant WHERE maternal_id != '0'\n\n        UNION \n        -- Normal Direction of family relationship\n        SELECT DISTINCT\n        proband.participant_id as other_family_member, -- is proband's participant ID. -- Josh changed this as other_family_member, -- is proband's participant ID\n        participant.participant_id AS participant_id, -- is not proband's participant ID\n       CASE \n           WHEN participant.proband_relationship =  'Mother' THEN 'KIN:027' -- system: http://purl.org/ga4gh/kin.owl\n           WHEN participant.proband_relationship =  'Father' THEN 'KIN:028'\n           WHEN participant.proband_relationship =  'Sibling' THEN 'KIN:007'\n           WHEN participant.proband_relationship =  'Child' THEN 'KIN:032'\n           WHEN participant.proband_relationship =  'Maternal Half Sibling' THEN 'KIN:054'\n           WHEN participant.proband_relationship =  'Paternal Half Sibling' THEN 'KIN:055'\n           WHEN participant.proband_relationship =  'Maternal Grandmother' THEN 'KIN:052'\n           WHEN participant.proband_relationship =  'Maternal Grandfather' THEN 'KIN:052'\n           WHEN participant.proband_relationship =  'Paternal Grandmother' THEN 'KIN:053'\n           WHEN participant.proband_relationship =  'Paternal Grandfather' THEN 'KIN:053'\n           WHEN participant.proband_relationship =  'Maternal Aunt' THEN 'KIN:060'\n           WHEN participant.proband_relationship =  'Paternal Aunt' THEN 'KIN:061'\n           WHEN participant.proband_relationship =  'Maternal Uncle' THEN 'KIN:058'\n           WHEN participant.proband_relationship =  'Paternal Uncle' THEN 'KIN:059'           \n           WHEN participant.proband_relationship =  'Maternal 1st Cousin' THEN 'KIN:015'\n           WHEN participant.proband_relationship =  'Paternal 1st Cousin' THEN 'KIN:016'\n           WHEN participant.proband_relationship =  'Nephew' THEN 'KIN:046'\n           WHEN participant.proband_relationship =  'Niece' THEN 'KIN:046'\n           WHEN participant.proband_relationship =  'Other' OR participant.proband_relationship =  'Unknown' THEN 'KIN:001'\n        END::text as \"relationship_code\", \n        {{ generate_global_id(prefix='ap',descriptor=['participant.consent_code'], study_id='phs003047') }}::text as \"has_access_policy\",\n        participant.family_id::text AS \"family_id\",\n        from {{ ref('GREGoR_R03_HMB_20250612_stg_participant') }} as participant\n        LEFT JOIN {{ ref('GREGoR_R03_HMB_20250612_stg_participant') }} as proband \n        ON proband.family_id = participant.family_id  -- If multiple probands per family, assuming siblings\n        AND proband.proband_relationship = 'Self'\n        where participant.proband_relationship != 'Self'\n    )\n\n    select DISTINCT\n        {{ generate_global_id(prefix='fr',descriptor=['source.family_id','participant_id','source.other_family_member', 'relationship_code'],study_id='phs003047') }}::text as \"id\",\n        relationship_code, \n        {{ generate_global_id(prefix='sb',descriptor=['source.participant_id'], study_id='phs003047') }}::text AS \"family_member\",\n        {{ generate_global_id(prefix='sb',descriptor=['source.other_family_member'], study_id='phs003047') }}::text as \"other_family_member\"\n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_HMB_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_HMB_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_HMB_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_HMB_20250612_stg_participant", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_familyrelationship.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select DISTINCT\n        participant_id AS other_family_member,\n        twin_id AS participant_id,\n        'KIN:009' AS relationship_code,\n        'ap' || '_' || md5('phs003047' || '|' || cast(coalesce(participant.consent_code, '') as text))::text AS \"has_access_policy\",\n        participant.family_id::text AS \"family_id\",\n        from \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_participant\" as participant WHERE twin_id != '0'\n\n        UNION \n\n        select DISTINCT\n        participant_id AS other_family_member, \n        paternal_id AS participant_id,\n        'KIN:028' AS relationship_code,\n        'ap' || '_' || md5('phs003047' || '|' || cast(coalesce(participant.consent_code, '') as text))::text AS \"has_access_policy\",\n        participant.family_id::text AS \"family_id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_participant\" as participant WHERE paternal_id != '0'\n\n        UNION \n\n        select DISTINCT\n        participant_id AS other_family_member, \n        maternal_id AS participant_id,\n        'KIN:027' AS relationship_code,\n        'ap' || '_' || md5('phs003047' || '|' || cast(coalesce(participant.consent_code, '') as text))::text AS \"has_access_policy\",\n         participant.family_id::text AS \"family_id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_participant\" as participant WHERE maternal_id != '0'\n\n        UNION \n        -- Normal Direction of family relationship\n        SELECT DISTINCT\n        proband.participant_id as other_family_member, -- is proband's participant ID. -- Josh changed this as other_family_member, -- is proband's participant ID\n        participant.participant_id AS participant_id, -- is not proband's participant ID\n       CASE \n           WHEN participant.proband_relationship =  'Mother' THEN 'KIN:027' -- system: http://purl.org/ga4gh/kin.owl\n           WHEN participant.proband_relationship =  'Father' THEN 'KIN:028'\n           WHEN participant.proband_relationship =  'Sibling' THEN 'KIN:007'\n           WHEN participant.proband_relationship =  'Child' THEN 'KIN:032'\n           WHEN participant.proband_relationship =  'Maternal Half Sibling' THEN 'KIN:054'\n           WHEN participant.proband_relationship =  'Paternal Half Sibling' THEN 'KIN:055'\n           WHEN participant.proband_relationship =  'Maternal Grandmother' THEN 'KIN:052'\n           WHEN participant.proband_relationship =  'Maternal Grandfather' THEN 'KIN:052'\n           WHEN participant.proband_relationship =  'Paternal Grandmother' THEN 'KIN:053'\n           WHEN participant.proband_relationship =  'Paternal Grandfather' THEN 'KIN:053'\n           WHEN participant.proband_relationship =  'Maternal Aunt' THEN 'KIN:060'\n           WHEN participant.proband_relationship =  'Paternal Aunt' THEN 'KIN:061'\n           WHEN participant.proband_relationship =  'Maternal Uncle' THEN 'KIN:058'\n           WHEN participant.proband_relationship =  'Paternal Uncle' THEN 'KIN:059'           \n           WHEN participant.proband_relationship =  'Maternal 1st Cousin' THEN 'KIN:015'\n           WHEN participant.proband_relationship =  'Paternal 1st Cousin' THEN 'KIN:016'\n           WHEN participant.proband_relationship =  'Nephew' THEN 'KIN:046'\n           WHEN participant.proband_relationship =  'Niece' THEN 'KIN:046'\n           WHEN participant.proband_relationship =  'Other' OR participant.proband_relationship =  'Unknown' THEN 'KIN:001'\n        END::text as \"relationship_code\", \n        'ap' || '_' || md5('phs003047' || '|' || cast(coalesce(participant.consent_code, '') as text))::text as \"has_access_policy\",\n        participant.family_id::text AS \"family_id\",\n        from \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_participant\" as participant\n        LEFT JOIN \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_participant\" as proband \n        ON proband.family_id = participant.family_id  -- If multiple probands per family, assuming siblings\n        AND proband.proband_relationship = 'Self'\n        where participant.proband_relationship != 'Self'\n    )\n\n    select DISTINCT\n        'fr' || '_' || md5('phs003047' || '|' || cast(coalesce(source.family_id, '') as text) || '|' || 'phs003047' || '|' || cast(coalesce(participant_id, '') as text) || '|' || 'phs003047' || '|' || cast(coalesce(source.other_family_member, '') as text) || '|' || 'phs003047' || '|' || cast(coalesce(relationship_code, '') as text))::text as \"id\",\n        relationship_code, \n        'sb' || '_' || md5('phs003047' || '|' || cast(coalesce(source.participant_id, '') as text))::text AS \"family_member\",\n        'sb' || '_' || md5('phs003047' || '|' || cast(coalesce(source.other_family_member, '') as text))::text as \"other_family_member\"\n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_HMB_20250612_ftd_subjectassertion": {"database": "dbt", "schema": "main_GREGoR_R03_HMB_20250612_data", "name": "GREGoR_R03_HMB_20250612_ftd_subjectassertion", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_subjectassertion.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_subjectassertion.sql", "unique_id": "model.ftd.GREGoR_R03_HMB_20250612_ftd_subjectassertion", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "GREGoR_R03_HMB_20250612_ftd_subjectassertion"], "alias": "GREGoR_R03_HMB_20250612_ftd_subjectassertion", "checksum": {"name": "sha256", "checksum": "fb7bfdb15a6771657ed75cee74a745a6a03fc1bedb74f91f8733726ff09805dd"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_HMB_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_HMB_20250612_ftd_subjectassertion.", "columns": {"assertion_type": {"name": "assertion_type", "description": "The semantic type of the resource, eg, Condition.", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "age_at_assertion": {"name": "age_at_assertion", "description": "The age in decimal years of the Subject when the assertion was made.", "meta": {}, "data_type": "number", "constraints": [], "quote": null, "tags": [], "granularity": null}, "age_at_event": {"name": "age_at_event", "description": "The age in decimal years of the Subject at the time point which the assertion describes, | eg, age of onset or when a measurement was performed.", "meta": {}, "data_type": "number", "constraints": [], "quote": null, "tags": [], "granularity": null}, "age_at_resolution": {"name": "age_at_resolution", "description": "The age in decimal years of the Subject when the asserted state was resolved.", "meta": {}, "data_type": "number", "constraints": [], "quote": null, "tags": [], "granularity": null}, "code": {"name": "code", "description": "The structured term defining the meaning of the assertion.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "display": {"name": "display", "description": "The friendly display string of the coded term", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "value_code": {"name": "value_code", "description": "The structured term defining the value of the assertion.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "value_display": {"name": "value_display", "description": "The friendly display string of the coded term for the value of the assertion.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "value_number": {"name": "value_number", "description": "The numeric value of the assertion.", "meta": {}, "data_type": "number", "constraints": [], "quote": null, "tags": [], "granularity": null}, "value_units": {"name": "value_units", "description": "The structured term defining the units of the value.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "value_units_display": {"name": "value_units_display", "description": "The friendly display string of units of the value.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "subject_id": {"name": "subject_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_HMB_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_HMB_20250612_data"}, "created_at": 1757448969.2427711, "relation_name": "\"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_subjectassertion\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_HMB_20250612_data') }}\n\n    with code_cte as (\n        select DISTINCT\n        phenotype.participant_id,\n         CASE \n            WHEN UPPER(phenotype.ontology) = 'HPO' THEN 'HP'\n            WHEN UPPER(phenotype.ontology) = 'MONDO' THEN 'MONDO'\n            WHEN UPPER(phenotype.ontology) = 'MAXO' THEN 'MAXO'\n            WHEN UPPER(phenotype.ontology) = 'NCIT' THEN 'NCIT'\n            WHEN UPPER(phenotype.ontology) = 'SNOMED CT' THEN 'SNOMED'\n            WHEN UPPER(phenotype.ontology) = 'SYMP' THEN 'SYMP'\n            WHEN UPPER(phenotype.ontology) = 'LOINC' THEN 'LOINC'\n            WHEN UPPER(phenotype.ontology) = 'MEDDRA' THEN 'MEDDRA'\n            WHEN UPPER(phenotype.ontology) = 'MESH' THEN 'MESH'\n            WHEN UPPER(phenotype.ontology) = 'UCUM' THEN 'UCUM'\n            WHEN UPPER(phenotype.ontology) = 'OMIT' THEN 'OMIT'\n            WHEN UPPER(phenotype.ontology) = 'OMIM' THEN 'MIM'\n            WHEN UPPER(phenotype.ontology) = 'CDCREC' THEN 'CDCREC'\n            ELSE phenotype.ontology\n        END || ':' || SPLIT_PART(phenotype.term_id, ':', 2)::text as \"code\",\n        ),\n        source as (\n        select DISTINCT\n        NULL as \"assertion_type\",\n        NULL as \"age_at_assertion\",\n        phenotype.onset_age_range::text as \"age_at_event\",\n        NULL as \"age_at_resolution\",\n        code_cte.code,\n        NULL as \"display\",\n        CASE \n            WHEN LOWER(participant.affected_status) = 'affected' THEN 'LA9633-4'\n            WHEN LOWER(participant.affected_status) = 'unaffected' THEN 'LA9634-2'\n            WHEN LOWER(participant.affected_status) = 'unknown' THEN 'LA4489-6'\n            WHEN LOWER(participant.affected_status) = 'possibly affected' THEN 'LA15097-1'\n            WHEN participant.affected_status is null THEN 'LA4489-6'\n            ELSE CONCAT('FTD_FLAG: unhandled value_code: ', affected_status)\n        END::text as \"value_code\",\n        CASE \n            WHEN LOWER(participant.affected_status) = 'unaffected' THEN 'Absent'\n            WHEN LOWER(participant.affected_status) = 'affected' THEN 'Present'\n            WHEN LOWER(participant.affected_status) = 'unknown' THEN 'Unknown'\n            WHEN LOWER(participant.affected_status) = 'possibly affected' THEN 'Possible'\n            WHEN participant.affected_status IS NULL THEN 'Unknown'\n            ELSE CONCAT('FTD_FLAG: unhandled value_display: ', presence)\n        END::text as \"value_display\",\n        participant.age_at_enrollment::text as \"value_number\",\n        NULL as \"value_units\",\n        NULL as \"value_units_display\",\n        {{ generate_global_id(prefix='ap',descriptor=['participant.consent_code'], study_id='phs003047') }}::text as \"has_access_policy\",\n       {{ generate_global_id(prefix='sa',descriptor=['participant.participant_id', 'code_cte.code'], study_id='phs003047') }}::text as \"id\",\n       {{ generate_global_id(prefix='sb',descriptor=['phenotype.participant_id'], study_id='phs003047') }}::text as \"Subject_id\"\n        from {{ ref('GREGoR_R03_HMB_20250612_stg_participant') }} as participant\n        left join {{ ref('GREGoR_R03_HMB_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n        left join code_cte\n         on phenotype.participant_id = code_cte.participant_id\n    )\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_HMB_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_subjectassertion.sql", "compiled": true, "compiled_code": "\n\n    with code_cte as (\n        select DISTINCT\n        phenotype.participant_id,\n         CASE \n            WHEN UPPER(phenotype.ontology) = 'HPO' THEN 'HP'\n            WHEN UPPER(phenotype.ontology) = 'MONDO' THEN 'MONDO'\n            WHEN UPPER(phenotype.ontology) = 'MAXO' THEN 'MAXO'\n            WHEN UPPER(phenotype.ontology) = 'NCIT' THEN 'NCIT'\n            WHEN UPPER(phenotype.ontology) = 'SNOMED CT' THEN 'SNOMED'\n            WHEN UPPER(phenotype.ontology) = 'SYMP' THEN 'SYMP'\n            WHEN UPPER(phenotype.ontology) = 'LOINC' THEN 'LOINC'\n            WHEN UPPER(phenotype.ontology) = 'MEDDRA' THEN 'MEDDRA'\n            WHEN UPPER(phenotype.ontology) = 'MESH' THEN 'MESH'\n            WHEN UPPER(phenotype.ontology) = 'UCUM' THEN 'UCUM'\n            WHEN UPPER(phenotype.ontology) = 'OMIT' THEN 'OMIT'\n            WHEN UPPER(phenotype.ontology) = 'OMIM' THEN 'MIM'\n            WHEN UPPER(phenotype.ontology) = 'CDCREC' THEN 'CDCREC'\n            ELSE phenotype.ontology\n        END || ':' || SPLIT_PART(phenotype.term_id, ':', 2)::text as \"code\",\n        ),\n        source as (\n        select DISTINCT\n        NULL as \"assertion_type\",\n        NULL as \"age_at_assertion\",\n        phenotype.onset_age_range::text as \"age_at_event\",\n        NULL as \"age_at_resolution\",\n        code_cte.code,\n        NULL as \"display\",\n        CASE \n            WHEN LOWER(participant.affected_status) = 'affected' THEN 'LA9633-4'\n            WHEN LOWER(participant.affected_status) = 'unaffected' THEN 'LA9634-2'\n            WHEN LOWER(participant.affected_status) = 'unknown' THEN 'LA4489-6'\n            WHEN LOWER(participant.affected_status) = 'possibly affected' THEN 'LA15097-1'\n            WHEN participant.affected_status is null THEN 'LA4489-6'\n            ELSE CONCAT('FTD_FLAG: unhandled value_code: ', affected_status)\n        END::text as \"value_code\",\n        CASE \n            WHEN LOWER(participant.affected_status) = 'unaffected' THEN 'Absent'\n            WHEN LOWER(participant.affected_status) = 'affected' THEN 'Present'\n            WHEN LOWER(participant.affected_status) = 'unknown' THEN 'Unknown'\n            WHEN LOWER(participant.affected_status) = 'possibly affected' THEN 'Possible'\n            WHEN participant.affected_status IS NULL THEN 'Unknown'\n            ELSE CONCAT('FTD_FLAG: unhandled value_display: ', presence)\n        END::text as \"value_display\",\n        participant.age_at_enrollment::text as \"value_number\",\n        NULL as \"value_units\",\n        NULL as \"value_units_display\",\n        'ap' || '_' || md5('phs003047' || '|' || cast(coalesce(participant.consent_code, '') as text))::text as \"has_access_policy\",\n       'sa' || '_' || md5('phs003047' || '|' || cast(coalesce(participant.participant_id, '') as text) || '|' || 'phs003047' || '|' || cast(coalesce(code_cte.code, '') as text))::text as \"id\",\n       'sb' || '_' || md5('phs003047' || '|' || cast(coalesce(phenotype.participant_id, '') as text))::text as \"Subject_id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_participant\" as participant\n        left join \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n        left join code_cte\n         on phenotype.participant_id = code_cte.participant_id\n    )\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_HMB_20250612_ftd_subjectassertion_source_data": {"database": "dbt", "schema": "main_GREGoR_R03_HMB_20250612_data", "name": "GREGoR_R03_HMB_20250612_ftd_subjectassertion_source_data", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_subjectassertion_source_data.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_subjectassertion_source_data.sql", "unique_id": "model.ftd.GREGoR_R03_HMB_20250612_ftd_subjectassertion_source_data", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "GREGoR_R03_HMB_20250612_ftd_subjectassertion_source_data"], "alias": "GREGoR_R03_HMB_20250612_ftd_subjectassertion_source_data", "checksum": {"name": "sha256", "checksum": "2d278f06c4530d19d16f75e9a3025e0821bd38de63adf964d60615a26dee5b41"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_HMB_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_HMB_20250612_ftd_subjectassertion_source_data.", "columns": {"subjectassertion_id": {"name": "subjectassertion_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "source_data_id": {"name": "source_data_id", "description": "The sources from which this assertion was derived", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_HMB_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_HMB_20250612_data"}, "created_at": 1757448969.247308, "relation_name": "\"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_subjectassertion_source_data\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_HMB_20250612_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_HMB_20250612') }}::text as \"subjectassertion_id\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_HMB_20250612') }}::text as \"source_data_id\"\n        from {{ ref('GREGoR_R03_HMB_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_HMB_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_HMB_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_subjectassertion_source_data.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('GREGoR_R03_HMB_20250612' || '|' || cast(coalesce(, '') as text))::text as \"subjectassertion_id\",\n       '' || '_' || md5('GREGoR_R03_HMB_20250612' || '|' || cast(coalesce(, '') as text))::text as \"source_data_id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_HMB_20250612_ftd_sample": {"database": "dbt", "schema": "main_GREGoR_R03_HMB_20250612_data", "name": "GREGoR_R03_HMB_20250612_ftd_sample", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_sample.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_sample.sql", "unique_id": "model.ftd.GREGoR_R03_HMB_20250612_ftd_sample", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "GREGoR_R03_HMB_20250612_ftd_sample"], "alias": "GREGoR_R03_HMB_20250612_ftd_sample", "checksum": {"name": "sha256", "checksum": "773fdc807acbf9e5d3a0875b1465559f92194a5a9f87d45aacf230ab8be28acb"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_HMB_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_HMB_20250612_ftd_sample.", "columns": {"parent_sample": {"name": "parent_sample", "description": "Sample from which this sample is derived", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "sample_type": {"name": "sample_type", "description": "Type of material of which this Sample is comprised", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "availablity_status": {"name": "availablity_status", "description": "Can this Sample be requested for further analysis?", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "quantity_number": {"name": "quantity_number", "description": "The total quantity of the specimen", "meta": {}, "data_type": "number", "constraints": [], "quote": null, "tags": [], "granularity": null}, "quantity_units": {"name": "quantity_units", "description": "The structured term defining the units of the quantity.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "subject_id": {"name": "subject_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "biospecimen_collection_id": {"name": "biospecimen_collection_id", "description": "Biospecimen Collection that generated this sample.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_HMB_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_HMB_20250612_data"}, "created_at": 1757448969.2680507, "relation_name": "\"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_sample\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_HMB_20250612_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_HMB_20250612') }}::text as \"parent_sample\",\n       GEN_UNKNOWN.sample_type::text as \"sample_type\",\n       GEN_UNKNOWN.availablity_status::text as \"availablity_status\",\n       GEN_UNKNOWN.quantity_number::text as \"quantity_number\",\n       GEN_UNKNOWN.quantity_units::text as \"quantity_units\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_HMB_20250612') }}::text as \"has_access_policy\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_HMB_20250612') }}::text as \"id\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_HMB_20250612') }}::text as \"subject_id\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_HMB_20250612') }}::text as \"biospecimen_collection_id\"\n        from {{ ref('GREGoR_R03_HMB_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_HMB_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_HMB_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_sample.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('GREGoR_R03_HMB_20250612' || '|' || cast(coalesce(, '') as text))::text as \"parent_sample\",\n       GEN_UNKNOWN.sample_type::text as \"sample_type\",\n       GEN_UNKNOWN.availablity_status::text as \"availablity_status\",\n       GEN_UNKNOWN.quantity_number::text as \"quantity_number\",\n       GEN_UNKNOWN.quantity_units::text as \"quantity_units\",\n       '' || '_' || md5('GREGoR_R03_HMB_20250612' || '|' || cast(coalesce(, '') as text))::text as \"has_access_policy\",\n       '' || '_' || md5('GREGoR_R03_HMB_20250612' || '|' || cast(coalesce(, '') as text))::text as \"id\",\n       '' || '_' || md5('GREGoR_R03_HMB_20250612' || '|' || cast(coalesce(, '') as text))::text as \"subject_id\",\n       '' || '_' || md5('GREGoR_R03_HMB_20250612' || '|' || cast(coalesce(, '') as text))::text as \"biospecimen_collection_id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_HMB_20250612_ftd_thing_external_id": {"database": "dbt", "schema": "main_GREGoR_R03_HMB_20250612_data", "name": "GREGoR_R03_HMB_20250612_ftd_thing_external_id", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_thing_external_id.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_thing_external_id.sql", "unique_id": "model.ftd.GREGoR_R03_HMB_20250612_ftd_thing_external_id", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "GREGoR_R03_HMB_20250612_ftd_thing_external_id"], "alias": "GREGoR_R03_HMB_20250612_ftd_thing_external_id", "checksum": {"name": "sha256", "checksum": "e4b4e362709d678dad41c8fffe43a994b85c217783560030558e191e152bb0b9"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_HMB_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_HMB_20250612_ftd_thing_external_id.", "columns": {"thing_id": {"name": "thing_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_HMB_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_HMB_20250612_data"}, "created_at": 1757448969.2532613, "relation_name": "\"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_thing_external_id\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_HMB_20250612_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_HMB_20250612') }}::text as \"thing_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from {{ ref('GREGoR_R03_HMB_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_HMB_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_HMB_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_thing_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('GREGoR_R03_HMB_20250612' || '|' || cast(coalesce(, '') as text))::text as \"thing_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_HMB_20250612_ftd_accesscontrolledrecord_external_id": {"database": "dbt", "schema": "main_GREGoR_R03_HMB_20250612_data", "name": "GREGoR_R03_HMB_20250612_ftd_accesscontrolledrecord_external_id", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_accesscontrolledrecord_external_id.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_accesscontrolledrecord_external_id.sql", "unique_id": "model.ftd.GREGoR_R03_HMB_20250612_ftd_accesscontrolledrecord_external_id", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "GREGoR_R03_HMB_20250612_ftd_accesscontrolledrecord_external_id"], "alias": "GREGoR_R03_HMB_20250612_ftd_accesscontrolledrecord_external_id", "checksum": {"name": "sha256", "checksum": "9b1a1ef474d61bc0aabb1234d64e746104d4920d024d537be8c6b7ab3ce7bc74"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_HMB_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_HMB_20250612_ftd_accesscontrolledrecord_external_id.", "columns": {"accesscontrolledrecord_id": {"name": "accesscontrolledrecord_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_HMB_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_HMB_20250612_data"}, "created_at": 1757448969.2518802, "relation_name": "\"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_accesscontrolledrecord_external_id\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_HMB_20250612_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_HMB_20250612') }}::text as \"accesscontrolledrecord_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from {{ ref('GREGoR_R03_HMB_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_HMB_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_HMB_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_accesscontrolledrecord_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('GREGoR_R03_HMB_20250612' || '|' || cast(coalesce(, '') as text))::text as \"accesscontrolledrecord_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_HMB_20250612_ftd_aliquot": {"database": "dbt", "schema": "main_GREGoR_R03_HMB_20250612_data", "name": "GREGoR_R03_HMB_20250612_ftd_aliquot", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_aliquot.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_aliquot.sql", "unique_id": "model.ftd.GREGoR_R03_HMB_20250612_ftd_aliquot", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "GREGoR_R03_HMB_20250612_ftd_aliquot"], "alias": "GREGoR_R03_HMB_20250612_ftd_aliquot", "checksum": {"name": "sha256", "checksum": "f5e0c9e62252299dfdbea2937d0520a8481380638823a8c8888b57b3effdc63e"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_HMB_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_HMB_20250612_ftd_aliquot.", "columns": {"availablity_status": {"name": "availablity_status", "description": "Can this Sample be requested for further analysis?", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "quantity_number": {"name": "quantity_number", "description": "The total quantity of the specimen", "meta": {}, "data_type": "number", "constraints": [], "quote": null, "tags": [], "granularity": null}, "quantity_units": {"name": "quantity_units", "description": "The structured term defining the units of the quantity.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "concentration_number": {"name": "concentration_number", "description": "What is the concentration of the analyte in the Aliquot?", "meta": {}, "data_type": "number", "constraints": [], "quote": null, "tags": [], "granularity": null}, "concentration_unit": {"name": "concentration_unit", "description": "Units associated with the concentration of the analyte in the Aliquot? UCUM coding preferred (with curie, UCUM)", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "sample_id": {"name": "sample_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_HMB_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_HMB_20250612_data"}, "created_at": 1757448969.2548308, "relation_name": "\"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_aliquot\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_HMB_20250612_data') }}\n\n    with source as (\n        select \n        GEN_UNKNOWN.availablity_status::text as \"availablity_status\",\n       GEN_UNKNOWN.quantity_number::text as \"quantity_number\",\n       GEN_UNKNOWN.quantity_units::text as \"quantity_units\",\n       GEN_UNKNOWN.concentration_number::text as \"concentration_number\",\n       GEN_UNKNOWN.concentration_unit::text as \"concentration_unit\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_HMB_20250612') }}::text as \"has_access_policy\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_HMB_20250612') }}::text as \"id\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_HMB_20250612') }}::text as \"sample_id\"\n        from {{ ref('GREGoR_R03_HMB_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_HMB_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_HMB_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_aliquot.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        GEN_UNKNOWN.availablity_status::text as \"availablity_status\",\n       GEN_UNKNOWN.quantity_number::text as \"quantity_number\",\n       GEN_UNKNOWN.quantity_units::text as \"quantity_units\",\n       GEN_UNKNOWN.concentration_number::text as \"concentration_number\",\n       GEN_UNKNOWN.concentration_unit::text as \"concentration_unit\",\n       '' || '_' || md5('GREGoR_R03_HMB_20250612' || '|' || cast(coalesce(, '') as text))::text as \"has_access_policy\",\n       '' || '_' || md5('GREGoR_R03_HMB_20250612' || '|' || cast(coalesce(, '') as text))::text as \"id\",\n       '' || '_' || md5('GREGoR_R03_HMB_20250612' || '|' || cast(coalesce(, '') as text))::text as \"sample_id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_HMB_20250612_ftd_aliquot_external_id": {"database": "dbt", "schema": "main_GREGoR_R03_HMB_20250612_data", "name": "GREGoR_R03_HMB_20250612_ftd_aliquot_external_id", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_aliquot_external_id.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_aliquot_external_id.sql", "unique_id": "model.ftd.GREGoR_R03_HMB_20250612_ftd_aliquot_external_id", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "GREGoR_R03_HMB_20250612_ftd_aliquot_external_id"], "alias": "GREGoR_R03_HMB_20250612_ftd_aliquot_external_id", "checksum": {"name": "sha256", "checksum": "005a5f9d6f86b205a8c7075754039612a4d466135cc54a4f273146a5368fd6e2"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_HMB_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_HMB_20250612_ftd_aliquot_external_id.", "columns": {"aliquot_id": {"name": "aliquot_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_HMB_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_HMB_20250612_data"}, "created_at": 1757448969.2772245, "relation_name": "\"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_aliquot_external_id\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_HMB_20250612_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_HMB_20250612') }}::text as \"aliquot_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from {{ ref('GREGoR_R03_HMB_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_HMB_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_HMB_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_aliquot_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('GREGoR_R03_HMB_20250612' || '|' || cast(coalesce(, '') as text))::text as \"aliquot_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_HMB_20250612_ftd_file_subject": {"database": "dbt", "schema": "main_GREGoR_R03_HMB_20250612_data", "name": "GREGoR_R03_HMB_20250612_ftd_file_subject", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_file_subject.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_file_subject.sql", "unique_id": "model.ftd.GREGoR_R03_HMB_20250612_ftd_file_subject", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "GREGoR_R03_HMB_20250612_ftd_file_subject"], "alias": "GREGoR_R03_HMB_20250612_ftd_file_subject", "checksum": {"name": "sha256", "checksum": "f07ffe66ff8556d44b2dcbdb1b6bde6d961def4d0e11b3eb282b77c0db820963"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_HMB_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_HMB_20250612_ftd_file_subject.", "columns": {"file_id": {"name": "file_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "subject_id": {"name": "subject_id", "description": "The Subject(s) which this file describes.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_HMB_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_HMB_20250612_data"}, "created_at": 1757448969.2698183, "relation_name": "\"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_file_subject\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_HMB_20250612_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_HMB_20250612') }}::text as \"file_id\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_HMB_20250612') }}::text as \"subject_id\"\n        from {{ ref('GREGoR_R03_HMB_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_HMB_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_HMB_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_file_subject.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('GREGoR_R03_HMB_20250612' || '|' || cast(coalesce(, '') as text))::text as \"file_id\",\n       '' || '_' || md5('GREGoR_R03_HMB_20250612' || '|' || cast(coalesce(, '') as text))::text as \"subject_id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_HMB_20250612_ftd_family_family_relationships": {"database": "dbt", "schema": "main_GREGoR_R03_HMB_20250612_data", "name": "GREGoR_R03_HMB_20250612_ftd_family_family_relationships", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_family_family_relationships.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_family_family_relationships.sql", "unique_id": "model.ftd.GREGoR_R03_HMB_20250612_ftd_family_family_relationships", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "GREGoR_R03_HMB_20250612_ftd_family_family_relationships"], "alias": "GREGoR_R03_HMB_20250612_ftd_family_family_relationships", "checksum": {"name": "sha256", "checksum": "b584d618bb317c42d7f63483844c2177aafd765ad8dcf7c25f4d04f10e4265af"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_HMB_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_HMB_20250612_ftd_family_family_relationships.", "columns": {"family_id": {"name": "family_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "family_relationships_id": {"name": "family_relationships_id", "description": "Family relationships associated with this family.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_HMB_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_HMB_20250612_data"}, "created_at": 1757448969.2715056, "relation_name": "\"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_family_family_relationships\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_HMB_20250612_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_HMB_20250612') }}::text as \"family_id\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_HMB_20250612') }}::text as \"family_relationships_id\"\n        from {{ ref('GREGoR_R03_HMB_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_HMB_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_HMB_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_family_family_relationships.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('GREGoR_R03_HMB_20250612' || '|' || cast(coalesce(, '') as text))::text as \"family_id\",\n       '' || '_' || md5('GREGoR_R03_HMB_20250612' || '|' || cast(coalesce(, '') as text))::text as \"family_relationships_id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_HMB_20250612_ftd_familymember_external_id": {"database": "dbt", "schema": "main_GREGoR_R03_HMB_20250612_data", "name": "GREGoR_R03_HMB_20250612_ftd_familymember_external_id", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_familymember_external_id.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_familymember_external_id.sql", "unique_id": "model.ftd.GREGoR_R03_HMB_20250612_ftd_familymember_external_id", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "GREGoR_R03_HMB_20250612_ftd_familymember_external_id"], "alias": "GREGoR_R03_HMB_20250612_ftd_familymember_external_id", "checksum": {"name": "sha256", "checksum": "3c1fae436e2e091b216daaf29f8d92e1d6ba4195132f14b8eb5a82fce9d539eb"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_HMB_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_HMB_20250612_ftd_familymember_external_id.", "columns": {"familymember_id": {"name": "familymember_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_HMB_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_HMB_20250612_data"}, "created_at": 1757448969.2443247, "relation_name": "\"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_familymember_external_id\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_HMB_20250612_data') }}\n\n    with source as (\n        select DISTINCT\n        {{ generate_global_id(prefix='fm',descriptor=['participant.participant_id, participant.family_id'], study_id='phs003047') }}::text as \"familyMember_id\",\n        participant.participant_id::text as \"external_id\"\n        from {{ ref('GREGoR_R03_HMB_20250612_stg_participant') }} as participant\n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_stg_participant", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_familymember_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select DISTINCT\n        'fm' || '_' || md5('phs003047' || '|' || cast(coalesce(participant.participant_id, participant.family_id, '') as text))::text as \"familyMember_id\",\n        participant.participant_id::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_participant\" as participant\n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_HMB_20250612_ftd_filemetadata": {"database": "dbt", "schema": "main_GREGoR_R03_HMB_20250612_data", "name": "GREGoR_R03_HMB_20250612_ftd_filemetadata", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_filemetadata.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_filemetadata.sql", "unique_id": "model.ftd.GREGoR_R03_HMB_20250612_ftd_filemetadata", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "GREGoR_R03_HMB_20250612_ftd_filemetadata"], "alias": "GREGoR_R03_HMB_20250612_ftd_filemetadata", "checksum": {"name": "sha256", "checksum": "4b48f22ed1dd92e3b994ef7e35cf3e6095ea6c05c58e7fbd570778c3f2aa4b7a"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_HMB_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_HMB_20250612_ftd_filemetadata.", "columns": {"code": {"name": "code", "description": "The structured term defining the meaning of the assertion.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "display": {"name": "display", "description": "The friendly display string of the coded term", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "value_code": {"name": "value_code", "description": "The structured term defining the value of the assertion.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "value_display": {"name": "value_display", "description": "The friendly display string of the coded term for the value of the assertion.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_HMB_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_HMB_20250612_data"}, "created_at": 1757448969.2447913, "relation_name": "\"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_filemetadata\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_HMB_20250612_data') }}\n\n    with source as (\n        select \n        GEN_UNKNOWN.code::text as \"code\",\n       GEN_UNKNOWN.display::text as \"display\",\n       GEN_UNKNOWN.value_code::text as \"value_code\",\n       GEN_UNKNOWN.value_display::text as \"value_display\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_HMB_20250612') }}::text as \"id\"\n        from {{ ref('GREGoR_R03_HMB_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_HMB_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_HMB_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_filemetadata.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        GEN_UNKNOWN.code::text as \"code\",\n       GEN_UNKNOWN.display::text as \"display\",\n       GEN_UNKNOWN.value_code::text as \"value_code\",\n       GEN_UNKNOWN.value_display::text as \"value_display\",\n       '' || '_' || md5('GREGoR_R03_HMB_20250612' || '|' || cast(coalesce(, '') as text))::text as \"id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_source_data": {"database": "dbt", "schema": "main_GREGoR_R03_HMB_20250612_data", "name": "GREGoR_R03_HMB_20250612_ftd_demographics_source_data", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_demographics_source_data.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_demographics_source_data.sql", "unique_id": "model.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_source_data", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "GREGoR_R03_HMB_20250612_ftd_demographics_source_data"], "alias": "GREGoR_R03_HMB_20250612_ftd_demographics_source_data", "checksum": {"name": "sha256", "checksum": "61bd0186213eb9346529a5dcb68f369d0e1c3f856ca37fa7047c966144b10e6f"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_HMB_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_HMB_20250612_ftd_demographics_source_data.", "columns": {"demographics_id": {"name": "demographics_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "source_data_id": {"name": "source_data_id", "description": "The sources from which this assertion was derived", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_HMB_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_HMB_20250612_data"}, "created_at": 1757448969.2667108, "relation_name": "\"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_demographics_source_data\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_HMB_20250612_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_HMB_20250612') }}::text as \"demographics_id\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_HMB_20250612') }}::text as \"source_data_id\"\n        from {{ ref('GREGoR_R03_HMB_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_HMB_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_HMB_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_demographics_source_data.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('GREGoR_R03_HMB_20250612' || '|' || cast(coalesce(, '') as text))::text as \"demographics_id\",\n       '' || '_' || md5('GREGoR_R03_HMB_20250612' || '|' || cast(coalesce(, '') as text))::text as \"source_data_id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_race": {"database": "dbt", "schema": "main_GREGoR_R03_HMB_20250612_data", "name": "GREGoR_R03_HMB_20250612_ftd_demographics_race", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_demographics_race.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_demographics_race.sql", "unique_id": "model.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_race", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "GREGoR_R03_HMB_20250612_ftd_demographics_race"], "alias": "GREGoR_R03_HMB_20250612_ftd_demographics_race", "checksum": {"name": "sha256", "checksum": "b4f5562ec5de028901e0c61e5f96779b7f7b3f696a527b5b4dc042a9a522ccbc"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_HMB_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_HMB_20250612_ftd_demographics_race.", "columns": {"demographics_id": {"name": "demographics_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "race": {"name": "race", "description": "Reported race as defined by the 1997 OMB directives.", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_HMB_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_HMB_20250612_data"}, "created_at": 1757448969.2728722, "relation_name": "\"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_demographics_race\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_HMB_20250612_data') }}\n\n    with source as (\n        select DISTINCT\n        {{ generate_global_id(prefix='dm',descriptor=['participant.participant_id'], study_id='phs003047') }}::text as \"Demographics_id\",\n        CASE \n            WHEN UNNEST(SPLIT(participant.reported_race, '|')) = 'American Indian or Alaska Native' THEN 'american_indian_or_alaskan_native'\n            WHEN UNNEST(SPLIT(participant.reported_race, '|')) = 'Asian' THEN 'asian'\n            WHEN UNNEST(SPLIT(participant.reported_race, '|')) = 'Black or African American' THEN 'black_or_african_american'\n            WHEN UNNEST(SPLIT(participant.reported_race, '|')) = 'Native Hawaiian or Other Pacific Islander' THEN 'native_hawaiian_or_pacific_islander'\n            WHEN UNNEST(SPLIT(participant.reported_race, '|')) = 'White' THEN 'white'\n            WHEN UNNEST(SPLIT(participant.reported_race, '|')) = 'Middle Eastern or North African' THEN 'other_race'\n            WHEN UNNEST(SPLIT(participant.reported_race, '|')) = 'Other Race' THEN 'other_race'\n            WHEN UNNEST(SPLIT(participant.reported_race, '|')) = 'Unknown' THEN 'unknown'\n            WHEN UNNEST(SPLIT(participant.reported_race, '|')) = 'asked but unknown' THEN 'asked_but_unknown'\n            WHEN STRING_SPLIT(participant.reported_race, '|') IS NULL THEN 'unknown'\n        END::text as \"race\"\n        from {{ ref('GREGoR_R03_HMB_20250612_stg_participant') }} as participant\n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_stg_participant", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_demographics_race.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select DISTINCT\n        'dm' || '_' || md5('phs003047' || '|' || cast(coalesce(participant.participant_id, '') as text))::text as \"Demographics_id\",\n        CASE \n            WHEN UNNEST(SPLIT(participant.reported_race, '|')) = 'American Indian or Alaska Native' THEN 'american_indian_or_alaskan_native'\n            WHEN UNNEST(SPLIT(participant.reported_race, '|')) = 'Asian' THEN 'asian'\n            WHEN UNNEST(SPLIT(participant.reported_race, '|')) = 'Black or African American' THEN 'black_or_african_american'\n            WHEN UNNEST(SPLIT(participant.reported_race, '|')) = 'Native Hawaiian or Other Pacific Islander' THEN 'native_hawaiian_or_pacific_islander'\n            WHEN UNNEST(SPLIT(participant.reported_race, '|')) = 'White' THEN 'white'\n            WHEN UNNEST(SPLIT(participant.reported_race, '|')) = 'Middle Eastern or North African' THEN 'other_race'\n            WHEN UNNEST(SPLIT(participant.reported_race, '|')) = 'Other Race' THEN 'other_race'\n            WHEN UNNEST(SPLIT(participant.reported_race, '|')) = 'Unknown' THEN 'unknown'\n            WHEN UNNEST(SPLIT(participant.reported_race, '|')) = 'asked but unknown' THEN 'asked_but_unknown'\n            WHEN STRING_SPLIT(participant.reported_race, '|') IS NULL THEN 'unknown'\n        END::text as \"race\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_participant\" as participant\n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_HMB_20250612_ftd_sample_storage_method": {"database": "dbt", "schema": "main_GREGoR_R03_HMB_20250612_data", "name": "GREGoR_R03_HMB_20250612_ftd_sample_storage_method", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_sample_storage_method.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_sample_storage_method.sql", "unique_id": "model.ftd.GREGoR_R03_HMB_20250612_ftd_sample_storage_method", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "GREGoR_R03_HMB_20250612_ftd_sample_storage_method"], "alias": "GREGoR_R03_HMB_20250612_ftd_sample_storage_method", "checksum": {"name": "sha256", "checksum": "2438baa55357f14acba7674d50589e7c1861c5bb07650644cc5e0a413ef31f06"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_HMB_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_HMB_20250612_ftd_sample_storage_method.", "columns": {"sample_id": {"name": "sample_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "storage_method": {"name": "storage_method", "description": "Sample storage method, eg, Frozen or with additives", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_HMB_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_HMB_20250612_data"}, "created_at": 1757448969.263483, "relation_name": "\"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_sample_storage_method\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_HMB_20250612_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_HMB_20250612') }}::text as \"sample_id\",\n       GEN_UNKNOWN.storage_method::text as \"storage_method\"\n        from {{ ref('GREGoR_R03_HMB_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_HMB_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_HMB_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_sample_storage_method.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('GREGoR_R03_HMB_20250612' || '|' || cast(coalesce(, '') as text))::text as \"sample_id\",\n       GEN_UNKNOWN.storage_method::text as \"storage_method\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_HMB_20250612_ftd_study_funding_source": {"database": "dbt", "schema": "main_GREGoR_R03_HMB_20250612_data", "name": "GREGoR_R03_HMB_20250612_ftd_study_funding_source", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_study_funding_source.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_study_funding_source.sql", "unique_id": "model.ftd.GREGoR_R03_HMB_20250612_ftd_study_funding_source", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "GREGoR_R03_HMB_20250612_ftd_study_funding_source"], "alias": "GREGoR_R03_HMB_20250612_ftd_study_funding_source", "checksum": {"name": "sha256", "checksum": "308a2942a223fc85e671199c8208ef8c1e41e233f98e90ea77bf3e41e75f99aa"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_HMB_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_HMB_20250612_ftd_study_funding_source.", "columns": {"study_id": {"name": "study_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "funding_source": {"name": "funding_source", "description": "Funding Source", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_HMB_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_HMB_20250612_data"}, "created_at": 1757448969.2526126, "relation_name": "\"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_study_funding_source\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_HMB_20250612_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_HMB_20250612') }}::text as \"study_id\",\n       GEN_UNKNOWN.funding_source::text as \"funding_source\"\n        from {{ ref('GREGoR_R03_HMB_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_HMB_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_HMB_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_study_funding_source.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('GREGoR_R03_HMB_20250612' || '|' || cast(coalesce(, '') as text))::text as \"study_id\",\n       GEN_UNKNOWN.funding_source::text as \"funding_source\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_HMB_20250612_ftd_sample_external_id": {"database": "dbt", "schema": "main_GREGoR_R03_HMB_20250612_data", "name": "GREGoR_R03_HMB_20250612_ftd_sample_external_id", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_sample_external_id.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_sample_external_id.sql", "unique_id": "model.ftd.GREGoR_R03_HMB_20250612_ftd_sample_external_id", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "GREGoR_R03_HMB_20250612_ftd_sample_external_id"], "alias": "GREGoR_R03_HMB_20250612_ftd_sample_external_id", "checksum": {"name": "sha256", "checksum": "c76cf16c1a95dd4975dd5e45b55d411f2baa3acd580be4c83a432968a0e247b4"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_HMB_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_HMB_20250612_ftd_sample_external_id.", "columns": {"sample_id": {"name": "sample_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_HMB_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_HMB_20250612_data"}, "created_at": 1757448969.2733955, "relation_name": "\"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_sample_external_id\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_HMB_20250612_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_HMB_20250612') }}::text as \"sample_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from {{ ref('GREGoR_R03_HMB_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_HMB_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_HMB_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_sample_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('GREGoR_R03_HMB_20250612' || '|' || cast(coalesce(, '') as text))::text as \"sample_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_HMB_20250612_ftd_biospecimencollection": {"database": "dbt", "schema": "main_GREGoR_R03_HMB_20250612_data", "name": "GREGoR_R03_HMB_20250612_ftd_biospecimencollection", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_biospecimencollection.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_biospecimencollection.sql", "unique_id": "model.ftd.GREGoR_R03_HMB_20250612_ftd_biospecimencollection", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "GREGoR_R03_HMB_20250612_ftd_biospecimencollection"], "alias": "GREGoR_R03_HMB_20250612_ftd_biospecimencollection", "checksum": {"name": "sha256", "checksum": "07c63db4edc123d3b277d6dce72f0d6783ea651222160e23b8c4c6959954a246"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_HMB_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_HMB_20250612_ftd_biospecimencollection.", "columns": {"age_at_collection": {"name": "age_at_collection", "description": "The age at which this biospecimen was collected.", "meta": {}, "data_type": "integer", "constraints": [], "quote": null, "tags": [], "granularity": null}, "method": {"name": "method", "description": "The approach used to collect the biospecimen.", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "site": {"name": "site", "description": "The location of the specimen collection.", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "spatial_qualifier": {"name": "spatial_qualifier", "description": "Any spatial/location qualifiers", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "laterality": {"name": "laterality", "description": "Laterality information for the site", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_HMB_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_HMB_20250612_data"}, "created_at": 1757448969.266099, "relation_name": "\"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_biospecimencollection\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_HMB_20250612_data') }}\n\n    with source as (\n        select \n        GEN_UNKNOWN.age_at_collection::integer as \"age_at_collection\",\n       GEN_UNKNOWN.method::text as \"method\",\n       GEN_UNKNOWN.site::text as \"site\",\n       GEN_UNKNOWN.spatial_qualifier::text as \"spatial_qualifier\",\n       GEN_UNKNOWN.laterality::text as \"laterality\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_HMB_20250612') }}::text as \"has_access_policy\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_HMB_20250612') }}::text as \"id\"\n        from {{ ref('GREGoR_R03_HMB_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_HMB_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_HMB_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_biospecimencollection.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        GEN_UNKNOWN.age_at_collection::integer as \"age_at_collection\",\n       GEN_UNKNOWN.method::text as \"method\",\n       GEN_UNKNOWN.site::text as \"site\",\n       GEN_UNKNOWN.spatial_qualifier::text as \"spatial_qualifier\",\n       GEN_UNKNOWN.laterality::text as \"laterality\",\n       '' || '_' || md5('GREGoR_R03_HMB_20250612' || '|' || cast(coalesce(, '') as text))::text as \"has_access_policy\",\n       '' || '_' || md5('GREGoR_R03_HMB_20250612' || '|' || cast(coalesce(, '') as text))::text as \"id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_HMB_20250612_ftd_biospecimencollection_external_id": {"database": "dbt", "schema": "main_GREGoR_R03_HMB_20250612_data", "name": "GREGoR_R03_HMB_20250612_ftd_biospecimencollection_external_id", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_biospecimencollection_external_id.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_biospecimencollection_external_id.sql", "unique_id": "model.ftd.GREGoR_R03_HMB_20250612_ftd_biospecimencollection_external_id", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "GREGoR_R03_HMB_20250612_ftd_biospecimencollection_external_id"], "alias": "GREGoR_R03_HMB_20250612_ftd_biospecimencollection_external_id", "checksum": {"name": "sha256", "checksum": "6462977330a6a552171b9cb2b9f7ecfb5821bb67215272e7d226378f3428ada4"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_HMB_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_HMB_20250612_ftd_biospecimencollection_external_id.", "columns": {"biospecimencollection_id": {"name": "biospecimencollection_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_HMB_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_HMB_20250612_data"}, "created_at": 1757448969.2759824, "relation_name": "\"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_biospecimencollection_external_id\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_HMB_20250612_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_HMB_20250612') }}::text as \"biospecimencollection_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from {{ ref('GREGoR_R03_HMB_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_HMB_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_HMB_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_biospecimencollection_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('GREGoR_R03_HMB_20250612' || '|' || cast(coalesce(, '') as text))::text as \"biospecimencollection_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_HMB_20250612_ftd_accesspolicy_data_access_type": {"database": "dbt", "schema": "main_GREGoR_R03_HMB_20250612_data", "name": "GREGoR_R03_HMB_20250612_ftd_accesspolicy_data_access_type", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_accesspolicy_data_access_type.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_accesspolicy_data_access_type.sql", "unique_id": "model.ftd.GREGoR_R03_HMB_20250612_ftd_accesspolicy_data_access_type", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "GREGoR_R03_HMB_20250612_ftd_accesspolicy_data_access_type"], "alias": "GREGoR_R03_HMB_20250612_ftd_accesspolicy_data_access_type", "checksum": {"name": "sha256", "checksum": "75eb6262b710171c9a0142af8e9e474e8f0969903d49513ed59dabdc5dd79ae9"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_HMB_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_HMB_20250612_ftd_accesspolicy_data_access_type.", "columns": {"accesspolicy_id": {"name": "accesspolicy_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "data_access_type": {"name": "data_access_type", "description": "Data Access Type", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_HMB_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_HMB_20250612_data"}, "created_at": 1757448969.259976, "relation_name": "\"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_accesspolicy_data_access_type\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_HMB_20250612_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_HMB_20250612') }}::text as \"accesspolicy_id\",\n       GEN_UNKNOWN.data_access_type::text as \"data_access_type\"\n        from {{ ref('GREGoR_R03_HMB_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_HMB_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_HMB_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_accesspolicy_data_access_type.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('GREGoR_R03_HMB_20250612' || '|' || cast(coalesce(, '') as text))::text as \"accesspolicy_id\",\n       GEN_UNKNOWN.data_access_type::text as \"data_access_type\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_external_id": {"database": "dbt", "schema": "main_GREGoR_R03_HMB_20250612_data", "name": "GREGoR_R03_HMB_20250612_ftd_demographics_external_id", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_demographics_external_id.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_demographics_external_id.sql", "unique_id": "model.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_external_id", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "GREGoR_R03_HMB_20250612_ftd_demographics_external_id"], "alias": "GREGoR_R03_HMB_20250612_ftd_demographics_external_id", "checksum": {"name": "sha256", "checksum": "4ecbcdb3c860bb35ebe9861cfe65551d9105763b818dbaa8e970da64b8069a5b"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_HMB_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_HMB_20250612_ftd_demographics_external_id.", "columns": {"demographics_id": {"name": "demographics_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_HMB_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_HMB_20250612_data"}, "created_at": 1757448969.2751927, "relation_name": "\"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_demographics_external_id\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_HMB_20250612_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='dm',descriptor=['participant.participant_id'], study_id='phs003047') }}::text as \"Demographics_id\",\n      participant.participant_id::text as \"external_id\"\n       from {{ ref('GREGoR_R03_HMB_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_HMB_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_HMB_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_demographics_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        'dm' || '_' || md5('phs003047' || '|' || cast(coalesce(participant.participant_id, '') as text))::text as \"Demographics_id\",\n      participant.participant_id::text as \"external_id\"\n       from \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_HMB_20250612_ftd_subject_external_id": {"database": "dbt", "schema": "main_GREGoR_R03_HMB_20250612_data", "name": "GREGoR_R03_HMB_20250612_ftd_subject_external_id", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_subject_external_id.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_subject_external_id.sql", "unique_id": "model.ftd.GREGoR_R03_HMB_20250612_ftd_subject_external_id", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "GREGoR_R03_HMB_20250612_ftd_subject_external_id"], "alias": "GREGoR_R03_HMB_20250612_ftd_subject_external_id", "checksum": {"name": "sha256", "checksum": "2b50ffa7bddb654ed202596b7a511995b902913fb4abc4537580f87e2de8bd8f"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_HMB_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_HMB_20250612_ftd_subject_external_id.", "columns": {"subject_id": {"name": "subject_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_HMB_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_HMB_20250612_data"}, "created_at": 1757448969.2558649, "relation_name": "\"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_subject_external_id\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_HMB_20250612_data') }}\n\n    with source as (\n        select DISTINCT\n       {{ generate_global_id(prefix='sb',descriptor=['participant.participant_id'], study_id='phs003047') }}::text as \"Subject_id\",\n       participant.participant_id::text as \"external_id\"\n        from {{ ref('GREGoR_R03_HMB_20250612_stg_participant') }} as participant\n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_stg_participant", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_subject_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select DISTINCT\n       'sb' || '_' || md5('phs003047' || '|' || cast(coalesce(participant.participant_id, '') as text))::text as \"Subject_id\",\n       participant.participant_id::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_participant\" as participant\n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_HMB_20250612_ftd_file": {"database": "dbt", "schema": "main_GREGoR_R03_HMB_20250612_data", "name": "GREGoR_R03_HMB_20250612_ftd_file", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_file.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_file.sql", "unique_id": "model.ftd.GREGoR_R03_HMB_20250612_ftd_file", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "GREGoR_R03_HMB_20250612_ftd_file"], "alias": "GREGoR_R03_HMB_20250612_ftd_file", "checksum": {"name": "sha256", "checksum": "3671fedaa16359e633631b129fb51a14ab4b27bd5bb1c3d6f107555297a366ca"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_HMB_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_HMB_20250612_ftd_file.", "columns": {"filename": {"name": "filename", "description": "The name of the file.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "format": {"name": "format", "description": "The format of the file.", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "data_type": {"name": "data_type", "description": "The type of data within this file.", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "size": {"name": "size", "description": "Size of the file, in Bytes.", "meta": {}, "data_type": "integer", "constraints": [], "quote": null, "tags": [], "granularity": null}, "drs_uri": {"name": "drs_uri", "description": "DRS location to access the data.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "file_metadata": {"name": "file_metadata", "description": "Additional metadata about the contents of the file, eg, genome reference build.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_HMB_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_HMB_20250612_data"}, "created_at": 1757448969.2628574, "relation_name": "\"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_file\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_HMB_20250612_data') }}\n\n    with source as (\n        select \n        GEN_UNKNOWN.filename::text as \"filename\",\n       GEN_UNKNOWN.format::text as \"format\",\n       GEN_UNKNOWN.data_type::text as \"data_type\",\n       GEN_UNKNOWN.size::integer as \"size\",\n       GEN_UNKNOWN.drs_uri::text as \"drs_uri\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_HMB_20250612') }}::text as \"file_metadata\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_HMB_20250612') }}::text as \"has_access_policy\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_HMB_20250612') }}::text as \"id\"\n        from {{ ref('GREGoR_R03_HMB_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_HMB_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_HMB_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_file.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        GEN_UNKNOWN.filename::text as \"filename\",\n       GEN_UNKNOWN.format::text as \"format\",\n       GEN_UNKNOWN.data_type::text as \"data_type\",\n       GEN_UNKNOWN.size::integer as \"size\",\n       GEN_UNKNOWN.drs_uri::text as \"drs_uri\",\n       '' || '_' || md5('GREGoR_R03_HMB_20250612' || '|' || cast(coalesce(, '') as text))::text as \"file_metadata\",\n       '' || '_' || md5('GREGoR_R03_HMB_20250612' || '|' || cast(coalesce(, '') as text))::text as \"has_access_policy\",\n       '' || '_' || md5('GREGoR_R03_HMB_20250612' || '|' || cast(coalesce(, '') as text))::text as \"id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_HMB_20250612_ftd_family_external_id": {"database": "dbt", "schema": "main_GREGoR_R03_HMB_20250612_data", "name": "GREGoR_R03_HMB_20250612_ftd_family_external_id", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_family_external_id.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_family_external_id.sql", "unique_id": "model.ftd.GREGoR_R03_HMB_20250612_ftd_family_external_id", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "GREGoR_R03_HMB_20250612_ftd_family_external_id"], "alias": "GREGoR_R03_HMB_20250612_ftd_family_external_id", "checksum": {"name": "sha256", "checksum": "56e3f9041b632450c850139924537f6f19d61549410e2cdf72e175fda086bb09"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_HMB_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_HMB_20250612_ftd_family_external_id.", "columns": {"family_id": {"name": "family_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_HMB_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_HMB_20250612_data"}, "created_at": 1757448969.2500608, "relation_name": "\"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_family_external_id\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_HMB_20250612_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_HMB_20250612') }}::text as \"family_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from {{ ref('GREGoR_R03_HMB_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_HMB_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_HMB_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_family_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('GREGoR_R03_HMB_20250612' || '|' || cast(coalesce(, '') as text))::text as \"family_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_HMB_20250612_ftd_accesspolicy": {"database": "dbt", "schema": "main_GREGoR_R03_HMB_20250612_data", "name": "GREGoR_R03_HMB_20250612_ftd_accesspolicy", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_accesspolicy.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_accesspolicy.sql", "unique_id": "model.ftd.GREGoR_R03_HMB_20250612_ftd_accesspolicy", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "GREGoR_R03_HMB_20250612_ftd_accesspolicy"], "alias": "GREGoR_R03_HMB_20250612_ftd_accesspolicy", "checksum": {"name": "sha256", "checksum": "cbf4b0d4593d9186e74287f10dd30f5c722c083756a00dbeb20257cfa74b4cb5"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_HMB_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_HMB_20250612_ftd_accesspolicy.", "columns": {"disease_limitation": {"name": "disease_limitation", "description": "Disease Use Limitations", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "description": {"name": "description", "description": "Model for GREGoR_R03_HMB_20250612_ftd_accesspolicy.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "website": {"name": "website", "description": "Website", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_HMB_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_HMB_20250612_data"}, "created_at": 1757448969.2693377, "relation_name": "\"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_accesspolicy\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_HMB_20250612_data') }}\n\n    with source as (\n        select DISTINCT\n        NULL as \"disease_limitation\",\n        CASE UPPER(participant.consent_code)\n            WHEN 'GRU' THEN 'General Research Use'\n            WHEN 'HMB' THEN 'Health/Medical/Biomedical'\n            WHEN 'DS' THEN 'Disease-Specific (Disease/Trait/Exposure)'\n            WHEN 'IRB' THEN 'IRB Approval Required'\n            WHEN 'PUB' THEN 'Publication Required'\n            WHEN 'COL' THEN 'Collaboration Required'\n            WHEN 'NPU' THEN 'Not-for-profit use only'\n            WHEN 'MDS' THEN 'Methods'\n            WHEN 'GSO' THEN 'Genetic Studies only'\n            WHEN 'GSR' THEN 'Genomic Summary Results'\n        END::text as \"description\",    \n        NULL as \"website\",\n      {{ generate_global_id(prefix='ap',descriptor=['participant.consent_code'], study_id='phs003047') }}::text as \"id\"\n        from {{ ref('GREGoR_R03_HMB_20250612_stg_participant') }} as participant\n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_stg_participant", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_accesspolicy.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select DISTINCT\n        NULL as \"disease_limitation\",\n        CASE UPPER(participant.consent_code)\n            WHEN 'GRU' THEN 'General Research Use'\n            WHEN 'HMB' THEN 'Health/Medical/Biomedical'\n            WHEN 'DS' THEN 'Disease-Specific (Disease/Trait/Exposure)'\n            WHEN 'IRB' THEN 'IRB Approval Required'\n            WHEN 'PUB' THEN 'Publication Required'\n            WHEN 'COL' THEN 'Collaboration Required'\n            WHEN 'NPU' THEN 'Not-for-profit use only'\n            WHEN 'MDS' THEN 'Methods'\n            WHEN 'GSO' THEN 'Genetic Studies only'\n            WHEN 'GSR' THEN 'Genomic Summary Results'\n        END::text as \"description\",    \n        NULL as \"website\",\n      'ap' || '_' || md5('phs003047' || '|' || cast(coalesce(participant.consent_code, '') as text))::text as \"id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_participant\" as participant\n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_HMB_20250612_ftd_familymember": {"database": "dbt", "schema": "main_GREGoR_R03_HMB_20250612_data", "name": "GREGoR_R03_HMB_20250612_ftd_familymember", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_familymember.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_familymember.sql", "unique_id": "model.ftd.GREGoR_R03_HMB_20250612_ftd_familymember", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "GREGoR_R03_HMB_20250612_ftd_familymember"], "alias": "GREGoR_R03_HMB_20250612_ftd_familymember", "checksum": {"name": "sha256", "checksum": "12ec3ee748bd663bbb099dd4b2d9cc2bc481e62ac70a857853ee62c5d4d62e54"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_HMB_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_HMB_20250612_ftd_familymember.", "columns": {"family_member": {"name": "family_member", "description": "The family member Subject who is the relationship \"subject\".", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "family_role": {"name": "family_role", "description": "The \"role\" of this indiviudal in this family.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "family_id": {"name": "family_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_HMB_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_HMB_20250612_data"}, "created_at": 1757448969.2723637, "relation_name": "\"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_familymember\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_HMB_20250612_data') }}\n\n    with source as (\n        select DISTINCT\n        {{ generate_global_id(prefix='fm',descriptor=['participant.participant_id'], study_id='phs003047') }}::text as \"family_member\",\n        CASE participant.proband_relationship\n            WHEN 'Mother' THEN 'MTH'\n            WHEN 'Father' THEN 'FTH'\n            WHEN 'Sibling' THEN 'SIB'\n            WHEN 'Child' THEN 'CHILD'\n            WHEN 'Maternal Half Sibling' THEN 'HSIB'\n            WHEN 'Paternal Half Sibling' THEN 'HSIB'\n            WHEN 'Maternal Grandmother' THEN 'MGRMTH'\n            WHEN 'Maternal Grandfather' THEN 'MGRFTH'\n            WHEN 'Paternal Grandmother' THEN 'PGRMTH'\n            WHEN 'Paternal Grandfather' THEN 'PGRFTH'\n            WHEN 'Maternal Aunt' THEN 'MAUNT'\n            WHEN 'Paternal Aunt' THEN 'PAUNT'\n            WHEN 'Maternal Uncle' THEN 'MUNCLE'\n            WHEN 'Paternal Uncle' THEN 'PUNCLE'\n            WHEN 'Niece' THEN 'NIECE'\n            WHEN 'Nephew' THEN 'NEPHEW'\n            WHEN 'Maternal 1st Cousin' THEN 'MCOUSN'\n            WHEN 'Paternal 1st Cousin' THEN 'PCOUSN'\n            WHEN 'Self' THEN 'SNOMED:85900004'\n        END::text as \"family_role\",       \n        {{ generate_global_id(prefix='ap',descriptor=['participant.consent_code'], study_id='phs003047') }}::text as \"has_access_policy\",\n        {{ generate_global_id(prefix='fm',descriptor=['participant.participant_id', 'participant.family_id'], study_id='phs003047') }}::text as \"id\",\n       {{ generate_global_id(prefix='fy',descriptor=['participant.family_id'], study_id='phs003047') }}::text as \"family_id\"\n        from {{ ref('GREGoR_R03_HMB_20250612_stg_participant') }} as participant\n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_stg_participant", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_familymember.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select DISTINCT\n        'fm' || '_' || md5('phs003047' || '|' || cast(coalesce(participant.participant_id, '') as text))::text as \"family_member\",\n        CASE participant.proband_relationship\n            WHEN 'Mother' THEN 'MTH'\n            WHEN 'Father' THEN 'FTH'\n            WHEN 'Sibling' THEN 'SIB'\n            WHEN 'Child' THEN 'CHILD'\n            WHEN 'Maternal Half Sibling' THEN 'HSIB'\n            WHEN 'Paternal Half Sibling' THEN 'HSIB'\n            WHEN 'Maternal Grandmother' THEN 'MGRMTH'\n            WHEN 'Maternal Grandfather' THEN 'MGRFTH'\n            WHEN 'Paternal Grandmother' THEN 'PGRMTH'\n            WHEN 'Paternal Grandfather' THEN 'PGRFTH'\n            WHEN 'Maternal Aunt' THEN 'MAUNT'\n            WHEN 'Paternal Aunt' THEN 'PAUNT'\n            WHEN 'Maternal Uncle' THEN 'MUNCLE'\n            WHEN 'Paternal Uncle' THEN 'PUNCLE'\n            WHEN 'Niece' THEN 'NIECE'\n            WHEN 'Nephew' THEN 'NEPHEW'\n            WHEN 'Maternal 1st Cousin' THEN 'MCOUSN'\n            WHEN 'Paternal 1st Cousin' THEN 'PCOUSN'\n            WHEN 'Self' THEN 'SNOMED:85900004'\n        END::text as \"family_role\",       \n        'ap' || '_' || md5('phs003047' || '|' || cast(coalesce(participant.consent_code, '') as text))::text as \"has_access_policy\",\n        'fm' || '_' || md5('phs003047' || '|' || cast(coalesce(participant.participant_id, '') as text) || '|' || 'phs003047' || '|' || cast(coalesce(participant.family_id, '') as text))::text as \"id\",\n       'fy' || '_' || md5('phs003047' || '|' || cast(coalesce(participant.family_id, '') as text))::text as \"family_id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_participant\" as participant\n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_HMB_20250612_ftd_file_external_id": {"database": "dbt", "schema": "main_GREGoR_R03_HMB_20250612_data", "name": "GREGoR_R03_HMB_20250612_ftd_file_external_id", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_file_external_id.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_file_external_id.sql", "unique_id": "model.ftd.GREGoR_R03_HMB_20250612_ftd_file_external_id", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "GREGoR_R03_HMB_20250612_ftd_file_external_id"], "alias": "GREGoR_R03_HMB_20250612_ftd_file_external_id", "checksum": {"name": "sha256", "checksum": "e8c854ef1b6347fad1a98b91b6917dad8c2211584d85f567f26c25701678f31f"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_HMB_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_HMB_20250612_ftd_file_external_id.", "columns": {"file_id": {"name": "file_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_HMB_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_HMB_20250612_data"}, "created_at": 1757448969.2436507, "relation_name": "\"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_file_external_id\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_HMB_20250612_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_HMB_20250612') }}::text as \"file_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from {{ ref('GREGoR_R03_HMB_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_HMB_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_HMB_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_file_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('GREGoR_R03_HMB_20250612' || '|' || cast(coalesce(, '') as text))::text as \"file_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_HMB_20250612_ftd_subjectassertion_external_id": {"database": "dbt", "schema": "main_GREGoR_R03_HMB_20250612_data", "name": "GREGoR_R03_HMB_20250612_ftd_subjectassertion_external_id", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_subjectassertion_external_id.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_subjectassertion_external_id.sql", "unique_id": "model.ftd.GREGoR_R03_HMB_20250612_ftd_subjectassertion_external_id", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "GREGoR_R03_HMB_20250612_ftd_subjectassertion_external_id"], "alias": "GREGoR_R03_HMB_20250612_ftd_subjectassertion_external_id", "checksum": {"name": "sha256", "checksum": "8e633ede66adeb84b73865d18f783a2f389d0656e46d93691834d4619a27f70d"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_HMB_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_HMB_20250612_ftd_subjectassertion_external_id.", "columns": {"subjectassertion_id": {"name": "subjectassertion_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_HMB_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_HMB_20250612_data"}, "created_at": 1757448969.2490265, "relation_name": "\"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_subjectassertion_external_id\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_HMB_20250612_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='sa',descriptor=['participant.participant_id'], study_id='phs003047') }}::text as \"SubjectAssertion_id\",\n       participant.participant_id::text as \"external_id\"\n        from {{ ref('GREGoR_R03_HMB_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_HMB_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_HMB_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_subjectassertion_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        'sa' || '_' || md5('phs003047' || '|' || cast(coalesce(participant.participant_id, '') as text))::text as \"SubjectAssertion_id\",\n       participant.participant_id::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_HMB_20250612_ftd_sourcedata_external_id": {"database": "dbt", "schema": "main_GREGoR_R03_HMB_20250612_data", "name": "GREGoR_R03_HMB_20250612_ftd_sourcedata_external_id", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_sourcedata_external_id.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_sourcedata_external_id.sql", "unique_id": "model.ftd.GREGoR_R03_HMB_20250612_ftd_sourcedata_external_id", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "GREGoR_R03_HMB_20250612_ftd_sourcedata_external_id"], "alias": "GREGoR_R03_HMB_20250612_ftd_sourcedata_external_id", "checksum": {"name": "sha256", "checksum": "6c954641846302dc2d3cb58e22a4ff4450cba5c5eb5dc04d5aaa0009cdca7d36"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_HMB_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_HMB_20250612_ftd_sourcedata_external_id.", "columns": {"sourcedata_id": {"name": "sourcedata_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_HMB_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_HMB_20250612_data"}, "created_at": 1757448969.2566006, "relation_name": "\"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_sourcedata_external_id\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_HMB_20250612_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_HMB_20250612') }}::text as \"sourcedata_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from {{ ref('GREGoR_R03_HMB_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_HMB_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_HMB_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_sourcedata_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('GREGoR_R03_HMB_20250612' || '|' || cast(coalesce(, '') as text))::text as \"sourcedata_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_HMB_20250612_ftd_study": {"database": "dbt", "schema": "main_GREGoR_R03_HMB_20250612_data", "name": "GREGoR_R03_HMB_20250612_ftd_study", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_study.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_study.sql", "unique_id": "model.ftd.GREGoR_R03_HMB_20250612_ftd_study", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "GREGoR_R03_HMB_20250612_ftd_study"], "alias": "GREGoR_R03_HMB_20250612_ftd_study", "checksum": {"name": "sha256", "checksum": "551726449fd128a0b4c3149b41b05dd6470f3581e69b8e332e560ec11d498d01"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_HMB_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_HMB_20250612_ftd_study.", "columns": {"parent_study_id": {"name": "parent_study_id", "description": "Parent Study ID", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "study_title": {"name": "study_title", "description": "Study Title", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_HMB_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_HMB_20250612_data"}, "created_at": 1757448969.2708516, "relation_name": "\"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_study\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_HMB_20250612_data') }}\n\n    with source as (\n        select DISTINCT\n        NULL as \"parent_study_id\",\n       anvil_project.title::text as \"study_title\",\n       {{ generate_global_id(prefix='st',descriptor=['anvil_project.registered_identifier'], study_id='phs003047') }}::text as \"id\"\n        from {{ ref('GREGoR_R03_HMB_20250612_stg_anvil_project') }} as anvil_project\n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_stg_anvil_project", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_anvil_project"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_study.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select DISTINCT\n        NULL as \"parent_study_id\",\n       anvil_project.title::text as \"study_title\",\n       'st' || '_' || md5('phs003047' || '|' || cast(coalesce(anvil_project.registered_identifier, '') as text))::text as \"id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_anvil_project\" as anvil_project\n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_HMB_20250612_ftd_filemetadata_external_id": {"database": "dbt", "schema": "main_GREGoR_R03_HMB_20250612_data", "name": "GREGoR_R03_HMB_20250612_ftd_filemetadata_external_id", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_filemetadata_external_id.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_filemetadata_external_id.sql", "unique_id": "model.ftd.GREGoR_R03_HMB_20250612_ftd_filemetadata_external_id", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "GREGoR_R03_HMB_20250612_ftd_filemetadata_external_id"], "alias": "GREGoR_R03_HMB_20250612_ftd_filemetadata_external_id", "checksum": {"name": "sha256", "checksum": "e38cc0f68ae762bef21647b3b050f238b84cf523e5523e87e5decf71da468477"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_HMB_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_HMB_20250612_ftd_filemetadata_external_id.", "columns": {"filemetadata_id": {"name": "filemetadata_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_HMB_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_HMB_20250612_data"}, "created_at": 1757448969.2766082, "relation_name": "\"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_filemetadata_external_id\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_HMB_20250612_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_HMB_20250612') }}::text as \"filemetadata_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from {{ ref('GREGoR_R03_HMB_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_HMB_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_HMB_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_filemetadata_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('GREGoR_R03_HMB_20250612' || '|' || cast(coalesce(, '') as text))::text as \"filemetadata_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_HMB_20250612_ftd_study_principal_investigator": {"database": "dbt", "schema": "main_GREGoR_R03_HMB_20250612_data", "name": "GREGoR_R03_HMB_20250612_ftd_study_principal_investigator", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_study_principal_investigator.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_study_principal_investigator.sql", "unique_id": "model.ftd.GREGoR_R03_HMB_20250612_ftd_study_principal_investigator", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "GREGoR_R03_HMB_20250612_ftd_study_principal_investigator"], "alias": "GREGoR_R03_HMB_20250612_ftd_study_principal_investigator", "checksum": {"name": "sha256", "checksum": "f8a4bb0f963b0582b1d9cd93b2d46382ce337f1e1a9d2d6628613f622a6c4195"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_HMB_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_HMB_20250612_ftd_study_principal_investigator.", "columns": {"study_id": {"name": "study_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "principal_investigator": {"name": "principal_investigator", "description": "Principal Investigator", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_HMB_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_HMB_20250612_data"}, "created_at": 1757448969.2610085, "relation_name": "\"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_study_principal_investigator\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_HMB_20250612_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_HMB_20250612') }}::text as \"study_id\",\n       GEN_UNKNOWN.principal_investigator::text as \"principal_investigator\"\n        from {{ ref('GREGoR_R03_HMB_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_HMB_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_HMB_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_study_principal_investigator.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('GREGoR_R03_HMB_20250612' || '|' || cast(coalesce(, '') as text))::text as \"study_id\",\n       GEN_UNKNOWN.principal_investigator::text as \"principal_investigator\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_HMB_20250612_ftd_file_sample": {"database": "dbt", "schema": "main_GREGoR_R03_HMB_20250612_data", "name": "GREGoR_R03_HMB_20250612_ftd_file_sample", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_file_sample.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_file_sample.sql", "unique_id": "model.ftd.GREGoR_R03_HMB_20250612_ftd_file_sample", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "GREGoR_R03_HMB_20250612_ftd_file_sample"], "alias": "GREGoR_R03_HMB_20250612_ftd_file_sample", "checksum": {"name": "sha256", "checksum": "cea344801c005bf774b5c6f437dabbd00b4be1e1b72a2f447eb6f19616c8bf59"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_HMB_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_HMB_20250612_ftd_file_sample.", "columns": {"file_id": {"name": "file_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "sample_id": {"name": "sample_id", "description": "The Samples(s) used to generate data in this file.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_HMB_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_HMB_20250612_data"}, "created_at": 1757448969.2569845, "relation_name": "\"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_file_sample\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_HMB_20250612_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_HMB_20250612') }}::text as \"file_id\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_HMB_20250612') }}::text as \"sample_id\"\n        from {{ ref('GREGoR_R03_HMB_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_HMB_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_HMB_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_file_sample.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('GREGoR_R03_HMB_20250612' || '|' || cast(coalesce(, '') as text))::text as \"file_id\",\n       '' || '_' || md5('GREGoR_R03_HMB_20250612' || '|' || cast(coalesce(, '') as text))::text as \"sample_id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_HMB_20250612_ftd_accesscontrolledrecord": {"database": "dbt", "schema": "main_GREGoR_R03_HMB_20250612_data", "name": "GREGoR_R03_HMB_20250612_ftd_accesscontrolledrecord", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_accesscontrolledrecord.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_accesscontrolledrecord.sql", "unique_id": "model.ftd.GREGoR_R03_HMB_20250612_ftd_accesscontrolledrecord", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "GREGoR_R03_HMB_20250612_ftd_accesscontrolledrecord"], "alias": "GREGoR_R03_HMB_20250612_ftd_accesscontrolledrecord", "checksum": {"name": "sha256", "checksum": "97c3d38e62ab16712c062355db53c2c24f70104c7058c07a141d43aaa1b3d89d"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_HMB_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_HMB_20250612_ftd_accesscontrolledrecord.", "columns": {"has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_HMB_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_HMB_20250612_data"}, "created_at": 1757448969.2645292, "relation_name": "\"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_accesscontrolledrecord\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_HMB_20250612_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_HMB_20250612') }}::text as \"has_access_policy\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_HMB_20250612') }}::text as \"id\"\n        from {{ ref('GREGoR_R03_HMB_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_HMB_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_HMB_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_accesscontrolledrecord.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('GREGoR_R03_HMB_20250612' || '|' || cast(coalesce(, '') as text))::text as \"has_access_policy\",\n       '' || '_' || md5('GREGoR_R03_HMB_20250612' || '|' || cast(coalesce(, '') as text))::text as \"id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_HMB_20250612_ftd_familyrelationship_external_id": {"database": "dbt", "schema": "main_GREGoR_R03_HMB_20250612_data", "name": "GREGoR_R03_HMB_20250612_ftd_familyrelationship_external_id", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_familyrelationship_external_id.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_familyrelationship_external_id.sql", "unique_id": "model.ftd.GREGoR_R03_HMB_20250612_ftd_familyrelationship_external_id", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "GREGoR_R03_HMB_20250612_ftd_familyrelationship_external_id"], "alias": "GREGoR_R03_HMB_20250612_ftd_familyrelationship_external_id", "checksum": {"name": "sha256", "checksum": "2afab2212e9d2ef027b15e4c87e2d6d082593effbab9f95fd06eac9243de3107"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_HMB_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_HMB_20250612_ftd_familyrelationship_external_id.", "columns": {"familyrelationship_id": {"name": "familyrelationship_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_HMB_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_HMB_20250612_data"}, "created_at": 1757448969.2741003, "relation_name": "\"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_familyrelationship_external_id\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_HMB_20250612_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='fr',descriptor=['participant.participant_id'], study_id='GREGoR_R03_HMB_20250612') }}::text as \"FamilyRelationship_id\",\n       participant.participant_id::text as \"external_id\"\n        from {{ ref('GREGoR_R03_HMB_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_HMB_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_HMB_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_familyrelationship_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        'fr' || '_' || md5('GREGoR_R03_HMB_20250612' || '|' || cast(coalesce(participant.participant_id, '') as text))::text as \"FamilyRelationship_id\",\n       participant.participant_id::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_HMB_20250612_ftd_accesspolicy_external_id": {"database": "dbt", "schema": "main_GREGoR_R03_HMB_20250612_data", "name": "GREGoR_R03_HMB_20250612_ftd_accesspolicy_external_id", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_accesspolicy_external_id.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_accesspolicy_external_id.sql", "unique_id": "model.ftd.GREGoR_R03_HMB_20250612_ftd_accesspolicy_external_id", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "GREGoR_R03_HMB_20250612_ftd_accesspolicy_external_id"], "alias": "GREGoR_R03_HMB_20250612_ftd_accesspolicy_external_id", "checksum": {"name": "sha256", "checksum": "535e70f01e59e1aa7d341bc0a167c8d7f5317c19444e2e6da8954095bfeef3bc"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_HMB_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_HMB_20250612_ftd_accesspolicy_external_id.", "columns": {"accesspolicy_id": {"name": "accesspolicy_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_HMB_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_HMB_20250612_data"}, "created_at": 1757448969.249674, "relation_name": "\"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_accesspolicy_external_id\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_HMB_20250612_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_HMB_20250612') }}::text as \"accesspolicy_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from {{ ref('GREGoR_R03_HMB_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_HMB_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_HMB_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_accesspolicy_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('GREGoR_R03_HMB_20250612' || '|' || cast(coalesce(, '') as text))::text as \"accesspolicy_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_HMB_20250612_ftd_study_external_id": {"database": "dbt", "schema": "main_GREGoR_R03_HMB_20250612_data", "name": "GREGoR_R03_HMB_20250612_ftd_study_external_id", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_study_external_id.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_study_external_id.sql", "unique_id": "model.ftd.GREGoR_R03_HMB_20250612_ftd_study_external_id", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "GREGoR_R03_HMB_20250612_ftd_study_external_id"], "alias": "GREGoR_R03_HMB_20250612_ftd_study_external_id", "checksum": {"name": "sha256", "checksum": "d13b0a53c232c4c95094f882d1d22abec53dea4a8b63c2292001f041d56b6897"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_HMB_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_HMB_20250612_ftd_study_external_id.", "columns": {"study_id": {"name": "study_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_HMB_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_HMB_20250612_data"}, "created_at": 1757448969.246391, "relation_name": "\"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_study_external_id\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_HMB_20250612_data') }}\n\n    with source as (\n        select DISTINCT\n        {{ generate_global_id(prefix='st',descriptor=['anvil_project.registered_identifier'], study_id='phs003047') }}::text as \"study_id\",\n       anvil_project.registered_identifier::text as \"external_id\"\n        from {{ ref('GREGoR_R03_HMB_20250612_stg_anvil_project') }} as anvil_project\n       )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_stg_anvil_project", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_anvil_project"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_study_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select DISTINCT\n        'st' || '_' || md5('phs003047' || '|' || cast(coalesce(anvil_project.registered_identifier, '') as text))::text as \"study_id\",\n       anvil_project.registered_identifier::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_anvil_project\" as anvil_project\n       )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_HMB_20250612_ftd_subject": {"database": "dbt", "schema": "main_GREGoR_R03_HMB_20250612_data", "name": "GREGoR_R03_HMB_20250612_ftd_subject", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_subject.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_subject.sql", "unique_id": "model.ftd.GREGoR_R03_HMB_20250612_ftd_subject", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "GREGoR_R03_HMB_20250612_ftd_subject"], "alias": "GREGoR_R03_HMB_20250612_ftd_subject", "checksum": {"name": "sha256", "checksum": "28e052135cad2569e0d1106783ce9420db16a5bc942249f8d41938816216d108"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_HMB_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_HMB_20250612_ftd_subject.", "columns": {"subject_type": {"name": "subject_type", "description": "Type of entity this record represents", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "organism_type": {"name": "organism_type", "description": "Organism Type Label", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_demographics_id": {"name": "has_demographics_id", "description": "A demographic summary of the participant.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_HMB_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_HMB_20250612_data"}, "created_at": 1757448969.2459757, "relation_name": "\"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_subject\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_HMB_20250612_data') }}\n    with source as (\n        select DISTINCT\n       CASE \n            WHEN experiment.participant_id IS NOT NULL then 'participant'\n            ELSE 'non_participant'\n        END::text as subject_type,\n       NULL as \"organism_type\",\n       {{ generate_global_id(prefix='ap',descriptor=['participant.consent_code'], study_id='phs003047') }}::text as \"has_access_policy\",\n       {{ generate_global_id(prefix='sb',descriptor=['participant.participant_id'], study_id='phs003047') }}::text as \"id\",\n       {{ generate_global_id(prefix='dm',descriptor=['participant.participant_id'], study_id='phs003047') }}::text as \"has_demographics_id\"\n        from {{ ref('GREGoR_R03_HMB_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_HMB_20250612_stg_experiment') }} as experiment\n        on participant.participant_id = experiment.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_HMB_20250612_stg_experiment", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_experiment"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_subject.sql", "compiled": true, "compiled_code": "\n    with source as (\n        select DISTINCT\n       CASE \n            WHEN experiment.participant_id IS NOT NULL then 'participant'\n            ELSE 'non_participant'\n        END::text as subject_type,\n       NULL as \"organism_type\",\n       'ap' || '_' || md5('phs003047' || '|' || cast(coalesce(participant.consent_code, '') as text))::text as \"has_access_policy\",\n       'sb' || '_' || md5('phs003047' || '|' || cast(coalesce(participant.participant_id, '') as text))::text as \"id\",\n       'dm' || '_' || md5('phs003047' || '|' || cast(coalesce(participant.participant_id, '') as text))::text as \"has_demographics_id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_experiment\" as experiment\n        on participant.participant_id = experiment.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_HMB_20250612_ftd_family": {"database": "dbt", "schema": "main_GREGoR_R03_HMB_20250612_data", "name": "GREGoR_R03_HMB_20250612_ftd_family", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_family.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_family.sql", "unique_id": "model.ftd.GREGoR_R03_HMB_20250612_ftd_family", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "GREGoR_R03_HMB_20250612_ftd_family"], "alias": "GREGoR_R03_HMB_20250612_ftd_family", "checksum": {"name": "sha256", "checksum": "613b7f86eb818d29387bc0846e023133202c980d1dd774bb4e26d251168549eb"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_HMB_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_HMB_20250612_ftd_family.", "columns": {"family_type": {"name": "family_type", "description": "Describes the 'type' of study family, eg, trio.", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "family_description": {"name": "family_description", "description": "Free title describing the study family, such as potential inheritance or details about consanguinity", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "consanguinity": {"name": "consanguinity", "description": "Is there known or suspected consanguinity in this study family?", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "family_study_focus": {"name": "family_study_focus", "description": "What is this study family investigating? EG, a specific condition. The code should be prefixed with a recognizable curie.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_HMB_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_HMB_20250612_data"}, "created_at": 1757448969.2486207, "relation_name": "\"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_family\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_HMB_20250612_data') }}\n\n    with source as (\n        select \n        GEN_UNKNOWN.family_type::text as \"family_type\",\n       GEN_UNKNOWN.family_description::text as \"family_description\",\n       GEN_UNKNOWN.consanguinity::text as \"consanguinity\",\n       GEN_UNKNOWN.family_study_focus::text as \"family_study_focus\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_HMB_20250612') }}::text as \"has_access_policy\",\n        -- participant.family_id::text as \"id\"\n       -- Check if using the auto-generated id is correct. \n       {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_HMB_20250612') }}::text as \"id\"\n        from {{ ref('GREGoR_R03_HMB_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_HMB_20250612_stg_phenotype') }} as phenotype\n        on participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_HMB_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_family.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        GEN_UNKNOWN.family_type::text as \"family_type\",\n       GEN_UNKNOWN.family_description::text as \"family_description\",\n       GEN_UNKNOWN.consanguinity::text as \"consanguinity\",\n       GEN_UNKNOWN.family_study_focus::text as \"family_study_focus\",\n       '' || '_' || md5('GREGoR_R03_HMB_20250612' || '|' || cast(coalesce(, '') as text))::text as \"has_access_policy\",\n        -- participant.family_id::text as \"id\"\n       -- Check if using the auto-generated id is correct. \n       '' || '_' || md5('GREGoR_R03_HMB_20250612' || '|' || cast(coalesce(, '') as text))::text as \"id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_phenotype\" as phenotype\n        on participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_HMB_20250612_ftd_study_external_study_id": {"database": "dbt", "schema": "main_GREGoR_R03_HMB_20250612_data", "name": "GREGoR_R03_HMB_20250612_ftd_study_external_study_id", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_study_external_study_id.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_study_external_study_id.sql", "unique_id": "model.ftd.GREGoR_R03_HMB_20250612_ftd_study_external_study_id", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "GREGoR_R03_HMB_20250612_ftd_study_external_study_id"], "alias": "GREGoR_R03_HMB_20250612_ftd_study_external_study_id", "checksum": {"name": "sha256", "checksum": "a7fcf1bcf4a68a447aecbe816626ed78d0650c1c3531048970c06b73edf26df2"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_HMB_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_HMB_20250612_ftd_study_external_study_id.", "columns": {"study_id": {"name": "study_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_study_id": {"name": "external_study_id", "description": "External Study ID", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_HMB_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_HMB_20250612_data"}, "created_at": 1757448969.2641404, "relation_name": "\"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_study_external_study_id\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_HMB_20250612_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_HMB_20250612') }}::text as \"study_id\",\n       GEN_UNKNOWN.external_study_id::text as \"external_study_id\"\n        from {{ ref('GREGoR_R03_HMB_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_HMB_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_HMB_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_study_external_study_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('GREGoR_R03_HMB_20250612' || '|' || cast(coalesce(, '') as text))::text as \"study_id\",\n       GEN_UNKNOWN.external_study_id::text as \"external_study_id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_HMB_20250612_ftd_demographics": {"database": "dbt", "schema": "main_GREGoR_R03_HMB_20250612_data", "name": "GREGoR_R03_HMB_20250612_ftd_demographics", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_demographics.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_demographics.sql", "unique_id": "model.ftd.GREGoR_R03_HMB_20250612_ftd_demographics", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "GREGoR_R03_HMB_20250612_ftd_demographics"], "alias": "GREGoR_R03_HMB_20250612_ftd_demographics", "checksum": {"name": "sha256", "checksum": "ae6f0e4b2a076068d5ded11debf4748ee15e6c27bf1d0c471fae5093eca868a8"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_HMB_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_HMB_20250612_ftd_demographics.", "columns": {"date_of_birth": {"name": "date_of_birth", "description": "Date at which the individual was born. May be impacted by privacy rules described in date_of_birth_type.", "meta": {}, "data_type": "integer", "constraints": [], "quote": null, "tags": [], "granularity": null}, "date_of_birth_type": {"name": "date_of_birth_type", "description": "Privacy rule modification applied to date_of_birth.", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "sex": {"name": "sex", "description": "Sex of the individual", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "sex_display": {"name": "sex_display", "description": "The friendly display string of the coded term for Sex", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "race_display": {"name": "race_display", "description": "The friendly display string of the coded term(s) for Race", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "ethnicity": {"name": "ethnicity", "description": "Reported ethnicity as defined by the 1997 OMB directives.", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "ethnicity_display": {"name": "ethnicity_display", "description": "The friendly display string of the coded term for Ethnicity", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "age_at_last_vital_status": {"name": "age_at_last_vital_status", "description": "Age at last vital status in decimal years.", "meta": {}, "data_type": "integer", "constraints": [], "quote": null, "tags": [], "granularity": null}, "vital_status": {"name": "vital_status", "description": "Vital Status", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_HMB_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_HMB_20250612_data"}, "created_at": 1757448969.2593296, "relation_name": "\"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_demographics\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_HMB_20250612_data') }}\n\n    with source as (\n        select DISTINCT\n        NULL as \"date_of_birth\",\n        NULL as \"date_of_birth_type\",\n        CASE \n            WHEN participant.sex = 'Female' THEN 'female'\n            WHEN participant.sex = 'Male' THEN 'male'\n            WHEN participant.sex = 'Unknown' THEN 'unknown'\n            WHEN participant.sex = 'Intersex' THEN 'intersex'\n            WHEN participant.sex IS NULL THEN 'unknown'\n            ELSE CONCAT('FTD_FLAG: unhandled sex: ',sex)\n        END::text as \"sex\",\n        participant.sex::text as \"sex_display\",\n        CASE\n            WHEN participant.reported_race IS NULL THEN 'unknown'\n            ELSE participant.reported_race\n        END::text as \"race_display\",\n        CASE\n            WHEN  participant.reported_ethnicity = 'Hispanic or Latino' THEN 'hispanic_or_latino'\n            WHEN  participant.reported_ethnicity = 'Not Hispanic or Latino' THEN 'not_hispanic_or_latino'\n            WHEN  participant.reported_ethnicity IS NULL THEN 'unknown'\n        END::text as \"ethnicity\",\n        CASE\n            WHEN participant.reported_ethnicity IS NULL THEN 'unknown'\n            ELSE participant.reported_ethnicity\n        END::text as \"ethnicity_display\",\n        participant.age_at_last_observation::integer as \"age_at_last_vital_status\",\n        NULL as \"vital_status\",\n       {{ generate_global_id(prefix='ap',descriptor=['participant.consent_code'], study_id='phs003047') }}::text as \"has_access_policy\",\n       {{ generate_global_id(prefix='dm',descriptor=['participant.participant_id'], study_id='phs003047') }}::text as \"id\"\n        from {{ ref('GREGoR_R03_HMB_20250612_stg_participant') }} as participant\n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_stg_participant", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_demographics.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select DISTINCT\n        NULL as \"date_of_birth\",\n        NULL as \"date_of_birth_type\",\n        CASE \n            WHEN participant.sex = 'Female' THEN 'female'\n            WHEN participant.sex = 'Male' THEN 'male'\n            WHEN participant.sex = 'Unknown' THEN 'unknown'\n            WHEN participant.sex = 'Intersex' THEN 'intersex'\n            WHEN participant.sex IS NULL THEN 'unknown'\n            ELSE CONCAT('FTD_FLAG: unhandled sex: ',sex)\n        END::text as \"sex\",\n        participant.sex::text as \"sex_display\",\n        CASE\n            WHEN participant.reported_race IS NULL THEN 'unknown'\n            ELSE participant.reported_race\n        END::text as \"race_display\",\n        CASE\n            WHEN  participant.reported_ethnicity = 'Hispanic or Latino' THEN 'hispanic_or_latino'\n            WHEN  participant.reported_ethnicity = 'Not Hispanic or Latino' THEN 'not_hispanic_or_latino'\n            WHEN  participant.reported_ethnicity IS NULL THEN 'unknown'\n        END::text as \"ethnicity\",\n        CASE\n            WHEN participant.reported_ethnicity IS NULL THEN 'unknown'\n            ELSE participant.reported_ethnicity\n        END::text as \"ethnicity_display\",\n        participant.age_at_last_observation::integer as \"age_at_last_vital_status\",\n        NULL as \"vital_status\",\n       'ap' || '_' || md5('phs003047' || '|' || cast(coalesce(participant.consent_code, '') as text))::text as \"has_access_policy\",\n       'dm' || '_' || md5('phs003047' || '|' || cast(coalesce(participant.participant_id, '') as text))::text as \"id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_participant\" as participant\n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code": {"database": "dbt", "schema": "main_GREGoR_R03_HMB_20250612_data", "name": "GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code.sql", "unique_id": "model.ftd.GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code"], "alias": "GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code", "checksum": {"name": "sha256", "checksum": "684c2526fb5819c06968284cbb8c96dbe91273dcd7fdc01191e53d05a2eaeea5"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_HMB_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code.", "columns": {"accesspolicy_id": {"name": "accesspolicy_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "access_policy_code": {"name": "access_policy_code", "description": "Access Policy Code", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_HMB_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_HMB_20250612_data"}, "created_at": 1757448969.274784, "relation_name": "\"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_HMB_20250612_data') }}\n\n    with source as (\n        select DISTINCT\n        {{ generate_global_id(prefix='ap',descriptor=['participant.consent_code'], study_id='phs003047') }}::text as \"accesspolicy_id\",\n        LOWER(participant.consent_code)::text as \"access_policy_code\"\n        from {{ ref('GREGoR_R03_HMB_20250612_stg_participant') }} as participant\n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_stg_participant", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select DISTINCT\n        'ap' || '_' || md5('phs003047' || '|' || cast(coalesce(participant.consent_code, '') as text))::text as \"accesspolicy_id\",\n        LOWER(participant.consent_code)::text as \"access_policy_code\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_participant\" as participant\n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_HMB_20250612_ftd_sample_processing": {"database": "dbt", "schema": "main_GREGoR_R03_HMB_20250612_data", "name": "GREGoR_R03_HMB_20250612_ftd_sample_processing", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_sample_processing.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_sample_processing.sql", "unique_id": "model.ftd.GREGoR_R03_HMB_20250612_ftd_sample_processing", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "GREGoR_R03_HMB_20250612_ftd_sample_processing"], "alias": "GREGoR_R03_HMB_20250612_ftd_sample_processing", "checksum": {"name": "sha256", "checksum": "2960f7b32ea90b664b280f27152d871344a62359b33ceda2f11b4a099a12c38c"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_HMB_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_HMB_20250612_ftd_sample_processing.", "columns": {"sample_id": {"name": "sample_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "processing": {"name": "processing", "description": "Processing that was applied to the Parent Sample or from the Biospecimen Collection that yielded this distinct sample", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_HMB_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_HMB_20250612_data"}, "created_at": 1757448969.260625, "relation_name": "\"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_sample_processing\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_HMB_20250612_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_HMB_20250612') }}::text as \"sample_id\",\n       GEN_UNKNOWN.processing::text as \"processing\"\n        from {{ ref('GREGoR_R03_HMB_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_HMB_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_HMB_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/GREGoR_R03_HMB_20250612_ftd_sample_processing.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('GREGoR_R03_HMB_20250612' || '|' || cast(coalesce(, '') as text))::text as \"sample_id\",\n       GEN_UNKNOWN.processing::text as \"processing\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_HMB_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_GRU_20250612_ftd_accesspolicy_external_id": {"database": "dbt", "schema": "main_GREGoR_R03_GRU_20250612_data", "name": "GREGoR_R03_GRU_20250612_ftd_accesspolicy_external_id", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_accesspolicy_external_id.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_accesspolicy_external_id.sql", "unique_id": "model.ftd.GREGoR_R03_GRU_20250612_ftd_accesspolicy_external_id", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "GREGoR_R03_GRU_20250612_ftd_accesspolicy_external_id"], "alias": "GREGoR_R03_GRU_20250612_ftd_accesspolicy_external_id", "checksum": {"name": "sha256", "checksum": "d235933a16aca954e7581e8af61f851c1c8cac4be3aa2d7d435c9b4ba41cc772"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_GRU_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_GRU_20250612_ftd_accesspolicy_external_id.", "columns": {"accesspolicy_id": {"name": "accesspolicy_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_GRU_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_GRU_20250612_data"}, "created_at": 1757448969.4072225, "relation_name": "\"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_accesspolicy_external_id\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_GRU_20250612_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_GRU_20250612') }}::text as \"accesspolicy_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from {{ ref('GREGoR_R03_GRU_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_GRU_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_GRU_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_accesspolicy_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('GREGoR_R03_GRU_20250612' || '|' || cast(coalesce(, '') as text))::text as \"accesspolicy_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_GRU_20250612_ftd_file_external_id": {"database": "dbt", "schema": "main_GREGoR_R03_GRU_20250612_data", "name": "GREGoR_R03_GRU_20250612_ftd_file_external_id", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_file_external_id.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_file_external_id.sql", "unique_id": "model.ftd.GREGoR_R03_GRU_20250612_ftd_file_external_id", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "GREGoR_R03_GRU_20250612_ftd_file_external_id"], "alias": "GREGoR_R03_GRU_20250612_ftd_file_external_id", "checksum": {"name": "sha256", "checksum": "7d1aed7545165f277fe39279fb27e39e48ddbc2ae38ec28c1cd6a8ba3cc71857"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_GRU_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_GRU_20250612_ftd_file_external_id.", "columns": {"file_id": {"name": "file_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_GRU_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_GRU_20250612_data"}, "created_at": 1757448969.4019148, "relation_name": "\"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_file_external_id\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_GRU_20250612_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_GRU_20250612') }}::text as \"file_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from {{ ref('GREGoR_R03_GRU_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_GRU_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_GRU_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_file_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('GREGoR_R03_GRU_20250612' || '|' || cast(coalesce(, '') as text))::text as \"file_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_GRU_20250612_ftd_family_family_relationships": {"database": "dbt", "schema": "main_GREGoR_R03_GRU_20250612_data", "name": "GREGoR_R03_GRU_20250612_ftd_family_family_relationships", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_family_family_relationships.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_family_family_relationships.sql", "unique_id": "model.ftd.GREGoR_R03_GRU_20250612_ftd_family_family_relationships", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "GREGoR_R03_GRU_20250612_ftd_family_family_relationships"], "alias": "GREGoR_R03_GRU_20250612_ftd_family_family_relationships", "checksum": {"name": "sha256", "checksum": "bce002a7be99661125c73965d9ffb443764766678e1cde2a14567e6283b26602"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_GRU_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_GRU_20250612_ftd_family_family_relationships.", "columns": {"family_id": {"name": "family_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "family_relationships_id": {"name": "family_relationships_id", "description": "Family relationships associated with this family.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_GRU_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_GRU_20250612_data"}, "created_at": 1757448969.4200842, "relation_name": "\"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_family_family_relationships\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_GRU_20250612_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_GRU_20250612') }}::text as \"family_id\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_GRU_20250612') }}::text as \"family_relationships_id\"\n        from {{ ref('GREGoR_R03_GRU_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_GRU_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_GRU_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_family_family_relationships.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('GREGoR_R03_GRU_20250612' || '|' || cast(coalesce(, '') as text))::text as \"family_id\",\n       '' || '_' || md5('GREGoR_R03_GRU_20250612' || '|' || cast(coalesce(, '') as text))::text as \"family_relationships_id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_GRU_20250612_ftd_sample_storage_method": {"database": "dbt", "schema": "main_GREGoR_R03_GRU_20250612_data", "name": "GREGoR_R03_GRU_20250612_ftd_sample_storage_method", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_sample_storage_method.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_sample_storage_method.sql", "unique_id": "model.ftd.GREGoR_R03_GRU_20250612_ftd_sample_storage_method", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "GREGoR_R03_GRU_20250612_ftd_sample_storage_method"], "alias": "GREGoR_R03_GRU_20250612_ftd_sample_storage_method", "checksum": {"name": "sha256", "checksum": "c7b75ab37882ccfc19bb54d4c2023ecc6fa165a7e47706d7e007c6097639c4b8"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_GRU_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_GRU_20250612_ftd_sample_storage_method.", "columns": {"sample_id": {"name": "sample_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "storage_method": {"name": "storage_method", "description": "Sample storage method, eg, Frozen or with additives", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_GRU_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_GRU_20250612_data"}, "created_at": 1757448969.414943, "relation_name": "\"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_sample_storage_method\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_GRU_20250612_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_GRU_20250612') }}::text as \"sample_id\",\n       GEN_UNKNOWN.storage_method::text as \"storage_method\"\n        from {{ ref('GREGoR_R03_GRU_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_GRU_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_GRU_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_sample_storage_method.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('GREGoR_R03_GRU_20250612' || '|' || cast(coalesce(, '') as text))::text as \"sample_id\",\n       GEN_UNKNOWN.storage_method::text as \"storage_method\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_GRU_20250612_ftd_sourcedata_external_id": {"database": "dbt", "schema": "main_GREGoR_R03_GRU_20250612_data", "name": "GREGoR_R03_GRU_20250612_ftd_sourcedata_external_id", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_sourcedata_external_id.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_sourcedata_external_id.sql", "unique_id": "model.ftd.GREGoR_R03_GRU_20250612_ftd_sourcedata_external_id", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "GREGoR_R03_GRU_20250612_ftd_sourcedata_external_id"], "alias": "GREGoR_R03_GRU_20250612_ftd_sourcedata_external_id", "checksum": {"name": "sha256", "checksum": "4bec6fb336fb1cf456ec654ed29abe31c013050bce1b7ddc5cf3b304fb0b11d5"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_GRU_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_GRU_20250612_ftd_sourcedata_external_id.", "columns": {"sourcedata_id": {"name": "sourcedata_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_GRU_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_GRU_20250612_data"}, "created_at": 1757448969.4114568, "relation_name": "\"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_sourcedata_external_id\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_GRU_20250612_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_GRU_20250612') }}::text as \"sourcedata_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from {{ ref('GREGoR_R03_GRU_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_GRU_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_GRU_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_sourcedata_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('GREGoR_R03_GRU_20250612' || '|' || cast(coalesce(, '') as text))::text as \"sourcedata_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_GRU_20250612_ftd_sample_processing": {"database": "dbt", "schema": "main_GREGoR_R03_GRU_20250612_data", "name": "GREGoR_R03_GRU_20250612_ftd_sample_processing", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_sample_processing.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_sample_processing.sql", "unique_id": "model.ftd.GREGoR_R03_GRU_20250612_ftd_sample_processing", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "GREGoR_R03_GRU_20250612_ftd_sample_processing"], "alias": "GREGoR_R03_GRU_20250612_ftd_sample_processing", "checksum": {"name": "sha256", "checksum": "8c8949f5ff9ccfca6b395c75990481b69efae3cd6c845a77784b205c97de7070"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_GRU_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_GRU_20250612_ftd_sample_processing.", "columns": {"sample_id": {"name": "sample_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "processing": {"name": "processing", "description": "Processing that was applied to the Parent Sample or from the Biospecimen Collection that yielded this distinct sample", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_GRU_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_GRU_20250612_data"}, "created_at": 1757448969.4135725, "relation_name": "\"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_sample_processing\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_GRU_20250612_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_GRU_20250612') }}::text as \"sample_id\",\n       GEN_UNKNOWN.processing::text as \"processing\"\n        from {{ ref('GREGoR_R03_GRU_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_GRU_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_GRU_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_sample_processing.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('GREGoR_R03_GRU_20250612' || '|' || cast(coalesce(, '') as text))::text as \"sample_id\",\n       GEN_UNKNOWN.processing::text as \"processing\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_GRU_20250612_ftd_family_external_id": {"database": "dbt", "schema": "main_GREGoR_R03_GRU_20250612_data", "name": "GREGoR_R03_GRU_20250612_ftd_family_external_id", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_family_external_id.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_family_external_id.sql", "unique_id": "model.ftd.GREGoR_R03_GRU_20250612_ftd_family_external_id", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "GREGoR_R03_GRU_20250612_ftd_family_external_id"], "alias": "GREGoR_R03_GRU_20250612_ftd_family_external_id", "checksum": {"name": "sha256", "checksum": "eea9a4bceb5fac42fea955083f6ecfb1f77a83e2e7275cdfbba6a79f3a842ed7"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_GRU_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_GRU_20250612_ftd_family_external_id.", "columns": {"family_id": {"name": "family_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_GRU_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_GRU_20250612_data"}, "created_at": 1757448969.4075994, "relation_name": "\"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_family_external_id\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_GRU_20250612_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_GRU_20250612') }}::text as \"family_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from {{ ref('GREGoR_R03_GRU_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_GRU_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_GRU_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_family_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('GREGoR_R03_GRU_20250612' || '|' || cast(coalesce(, '') as text))::text as \"family_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_GRU_20250612_ftd_accesscontrolledrecord": {"database": "dbt", "schema": "main_GREGoR_R03_GRU_20250612_data", "name": "GREGoR_R03_GRU_20250612_ftd_accesscontrolledrecord", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_accesscontrolledrecord.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_accesscontrolledrecord.sql", "unique_id": "model.ftd.GREGoR_R03_GRU_20250612_ftd_accesscontrolledrecord", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "GREGoR_R03_GRU_20250612_ftd_accesscontrolledrecord"], "alias": "GREGoR_R03_GRU_20250612_ftd_accesscontrolledrecord", "checksum": {"name": "sha256", "checksum": "e33d5c73bf52fe5740fabae5023297c39f2437e607c4a34ba874110d7d86de49"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_GRU_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_GRU_20250612_ftd_accesscontrolledrecord.", "columns": {"has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_GRU_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_GRU_20250612_data"}, "created_at": 1757448969.4153218, "relation_name": "\"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_accesscontrolledrecord\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_GRU_20250612_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_GRU_20250612') }}::text as \"has_access_policy\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_GRU_20250612') }}::text as \"id\"\n        from {{ ref('GREGoR_R03_GRU_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_GRU_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_GRU_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_accesscontrolledrecord.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('GREGoR_R03_GRU_20250612' || '|' || cast(coalesce(, '') as text))::text as \"has_access_policy\",\n       '' || '_' || md5('GREGoR_R03_GRU_20250612' || '|' || cast(coalesce(, '') as text))::text as \"id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_GRU_20250612_ftd_familymember": {"database": "dbt", "schema": "main_GREGoR_R03_GRU_20250612_data", "name": "GREGoR_R03_GRU_20250612_ftd_familymember", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_familymember.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_familymember.sql", "unique_id": "model.ftd.GREGoR_R03_GRU_20250612_ftd_familymember", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "GREGoR_R03_GRU_20250612_ftd_familymember"], "alias": "GREGoR_R03_GRU_20250612_ftd_familymember", "checksum": {"name": "sha256", "checksum": "4087bf3ad719ddd764e9285db697186eb42bc354c47c6adf721aba890ca7f60e"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_GRU_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_GRU_20250612_ftd_familymember.", "columns": {"family_member": {"name": "family_member", "description": "The family member Subject who is the relationship \"subject\".", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "family_role": {"name": "family_role", "description": "The \"role\" of this indiviudal in this family.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "family_id": {"name": "family_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_GRU_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_GRU_20250612_data"}, "created_at": 1757448969.421363, "relation_name": "\"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_familymember\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_GRU_20250612_data') }}\n\n    with source as (\n        select DISTINCT\n        {{ generate_global_id(prefix='fm',descriptor=['participant.participant_id'], study_id='phs003047') }}::text as \"family_member\",\n        CASE participant.proband_relationship\n            WHEN 'Mother' THEN 'MTH'\n            WHEN 'Father' THEN 'FTH'\n            WHEN 'Sibling' THEN 'SIB'\n            WHEN 'Child' THEN 'CHILD'\n            WHEN 'Maternal Half Sibling' THEN 'HSIB'\n            WHEN 'Paternal Half Sibling' THEN 'HSIB'\n            WHEN 'Maternal Grandmother' THEN 'MGRMTH'\n            WHEN 'Maternal Grandfather' THEN 'MGRFTH'\n            WHEN 'Paternal Grandmother' THEN 'PGRMTH'\n            WHEN 'Paternal Grandfather' THEN 'PGRFTH'\n            WHEN 'Maternal Aunt' THEN 'MAUNT'\n            WHEN 'Paternal Aunt' THEN 'PAUNT'\n            WHEN 'Maternal Uncle' THEN 'MUNCLE'\n            WHEN 'Paternal Uncle' THEN 'PUNCLE'\n            WHEN 'Niece' THEN 'NIECE'\n            WHEN 'Nephew' THEN 'NEPHEW'\n            WHEN 'Maternal 1st Cousin' THEN 'MCOUSN'\n            WHEN 'Paternal 1st Cousin' THEN 'PCOUSN'\n            WHEN 'Self' THEN 'SNOMED:85900004'\n        END::text as \"family_role\",       \n        {{ generate_global_id(prefix='ap',descriptor=['participant.consent_code'], study_id='phs003047') }}::text as \"has_access_policy\",\n        {{ generate_global_id(prefix='fm',descriptor=['participant.participant_id', 'participant.family_id'], study_id='phs003047') }}::text as \"id\",\n       {{ generate_global_id(prefix='fy',descriptor=['participant.family_id'], study_id='phs003047') }}::text as \"family_id\"\n        from {{ ref('GREGoR_R03_GRU_20250612_stg_participant') }} as participant\n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_stg_participant", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_familymember.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select DISTINCT\n        'fm' || '_' || md5('phs003047' || '|' || cast(coalesce(participant.participant_id, '') as text))::text as \"family_member\",\n        CASE participant.proband_relationship\n            WHEN 'Mother' THEN 'MTH'\n            WHEN 'Father' THEN 'FTH'\n            WHEN 'Sibling' THEN 'SIB'\n            WHEN 'Child' THEN 'CHILD'\n            WHEN 'Maternal Half Sibling' THEN 'HSIB'\n            WHEN 'Paternal Half Sibling' THEN 'HSIB'\n            WHEN 'Maternal Grandmother' THEN 'MGRMTH'\n            WHEN 'Maternal Grandfather' THEN 'MGRFTH'\n            WHEN 'Paternal Grandmother' THEN 'PGRMTH'\n            WHEN 'Paternal Grandfather' THEN 'PGRFTH'\n            WHEN 'Maternal Aunt' THEN 'MAUNT'\n            WHEN 'Paternal Aunt' THEN 'PAUNT'\n            WHEN 'Maternal Uncle' THEN 'MUNCLE'\n            WHEN 'Paternal Uncle' THEN 'PUNCLE'\n            WHEN 'Niece' THEN 'NIECE'\n            WHEN 'Nephew' THEN 'NEPHEW'\n            WHEN 'Maternal 1st Cousin' THEN 'MCOUSN'\n            WHEN 'Paternal 1st Cousin' THEN 'PCOUSN'\n            WHEN 'Self' THEN 'SNOMED:85900004'\n        END::text as \"family_role\",       \n        'ap' || '_' || md5('phs003047' || '|' || cast(coalesce(participant.consent_code, '') as text))::text as \"has_access_policy\",\n        'fm' || '_' || md5('phs003047' || '|' || cast(coalesce(participant.participant_id, '') as text) || '|' || 'phs003047' || '|' || cast(coalesce(participant.family_id, '') as text))::text as \"id\",\n       'fy' || '_' || md5('phs003047' || '|' || cast(coalesce(participant.family_id, '') as text))::text as \"family_id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_participant\" as participant\n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_GRU_20250612_ftd_sourcedata_query_parameter": {"database": "dbt", "schema": "main_GREGoR_R03_GRU_20250612_data", "name": "GREGoR_R03_GRU_20250612_ftd_sourcedata_query_parameter", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_sourcedata_query_parameter.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_sourcedata_query_parameter.sql", "unique_id": "model.ftd.GREGoR_R03_GRU_20250612_ftd_sourcedata_query_parameter", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "GREGoR_R03_GRU_20250612_ftd_sourcedata_query_parameter"], "alias": "GREGoR_R03_GRU_20250612_ftd_sourcedata_query_parameter", "checksum": {"name": "sha256", "checksum": "54a8b731d8cab1afd48344f7f86b321c3338887666249d41995d1e244afbb08b"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_GRU_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_GRU_20250612_ftd_sourcedata_query_parameter.", "columns": {"sourcedata_id": {"name": "sourcedata_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "query_parameter": {"name": "query_parameter", "description": "One or more query parameters used to select the specific row. It will leverage the parameterized_query defined by a data_source. This should be formatted according to (https://cloud.google.com/bigquery/docs/parameterized-queries)[BigQuery instructions], specifically the bq CLI version with named parameters, ie, \"<parameter name>:<data type>:<value>\".", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_GRU_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_GRU_20250612_data"}, "created_at": 1757448969.4029977, "relation_name": "\"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_sourcedata_query_parameter\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_GRU_20250612_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_GRU_20250612') }}::text as \"sourcedata_id\",\n       GEN_UNKNOWN.query_parameter::text as \"query_parameter\"\n        from {{ ref('GREGoR_R03_GRU_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_GRU_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id  join {{ ref('GREGoR_R03_GRU_20250612_stg_experiment') }} as experiment\non   join {{ ref('GREGoR_R03_GRU_20250612_stg_anvil_project') }} as anvil_project\non  \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_GRU_20250612_stg_phenotype", "package": null, "version": null}, {"name": "GREGoR_R03_GRU_20250612_stg_experiment", "package": null, "version": null}, {"name": "GREGoR_R03_GRU_20250612_stg_anvil_project", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_experiment", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_anvil_project"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_sourcedata_query_parameter.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('GREGoR_R03_GRU_20250612' || '|' || cast(coalesce(, '') as text))::text as \"sourcedata_id\",\n       GEN_UNKNOWN.query_parameter::text as \"query_parameter\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id  join \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_experiment\" as experiment\non   join \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_anvil_project\" as anvil_project\non  \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_GRU_20250612_ftd_subject": {"database": "dbt", "schema": "main_GREGoR_R03_GRU_20250612_data", "name": "GREGoR_R03_GRU_20250612_ftd_subject", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_subject.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_subject.sql", "unique_id": "model.ftd.GREGoR_R03_GRU_20250612_ftd_subject", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "GREGoR_R03_GRU_20250612_ftd_subject"], "alias": "GREGoR_R03_GRU_20250612_ftd_subject", "checksum": {"name": "sha256", "checksum": "4b06b116fbbcc082a5f5dc57fab87b7f02cebe9fb61ff2d0cf6177c0e7d00001"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_GRU_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_GRU_20250612_ftd_subject.", "columns": {"subject_type": {"name": "subject_type", "description": "Type of entity this record represents", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "organism_type": {"name": "organism_type", "description": "Organism Type Label", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_demographics_id": {"name": "has_demographics_id", "description": "A demographic summary of the participant.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_GRU_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_GRU_20250612_data"}, "created_at": 1757448969.404038, "relation_name": "\"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_subject\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_GRU_20250612_data') }}\n    with source as (\n        select DISTINCT\n       CASE \n            WHEN experiment.participant_id IS NOT NULL then 'participant'\n            ELSE 'non_participant'\n        END::text as subject_type,\n       NULL as \"organism_type\",\n       {{ generate_global_id(prefix='ap',descriptor=['participant.consent_code'], study_id='phs003047') }}::text as \"has_access_policy\",\n       {{ generate_global_id(prefix='sb',descriptor=['participant.participant_id'], study_id='phs003047') }}::text as \"id\",\n       {{ generate_global_id(prefix='dm',descriptor=['participant.participant_id'], study_id='phs003047') }}::text as \"has_demographics_id\"\n        from {{ ref('GREGoR_R03_GRU_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_GRU_20250612_stg_experiment') }} as experiment\n        on participant.participant_id = experiment.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_GRU_20250612_stg_experiment", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_experiment"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_subject.sql", "compiled": true, "compiled_code": "\n    with source as (\n        select DISTINCT\n       CASE \n            WHEN experiment.participant_id IS NOT NULL then 'participant'\n            ELSE 'non_participant'\n        END::text as subject_type,\n       NULL as \"organism_type\",\n       'ap' || '_' || md5('phs003047' || '|' || cast(coalesce(participant.consent_code, '') as text))::text as \"has_access_policy\",\n       'sb' || '_' || md5('phs003047' || '|' || cast(coalesce(participant.participant_id, '') as text))::text as \"id\",\n       'dm' || '_' || md5('phs003047' || '|' || cast(coalesce(participant.participant_id, '') as text))::text as \"has_demographics_id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_experiment\" as experiment\n        on participant.participant_id = experiment.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_GRU_20250612_ftd_study_external_id": {"database": "dbt", "schema": "main_GREGoR_R03_GRU_20250612_data", "name": "GREGoR_R03_GRU_20250612_ftd_study_external_id", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_study_external_id.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_study_external_id.sql", "unique_id": "model.ftd.GREGoR_R03_GRU_20250612_ftd_study_external_id", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "GREGoR_R03_GRU_20250612_ftd_study_external_id"], "alias": "GREGoR_R03_GRU_20250612_ftd_study_external_id", "checksum": {"name": "sha256", "checksum": "c86c08044c142a385f4cb9ef474e4896b641004837bb967bbbf618bba2e67a3c"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_GRU_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_GRU_20250612_ftd_study_external_id.", "columns": {"study_id": {"name": "study_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_GRU_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_GRU_20250612_data"}, "created_at": 1757448969.4044638, "relation_name": "\"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_study_external_id\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_GRU_20250612_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='st',descriptor=['anvil_project.registered_identifier'], study_id='phs003047') }}::text as \"study_id\",\n       anvil_project.registered_identifier::text as \"external_id\"\n        from {{ ref('GREGoR_R03_GRU_20250612_stg_anvil_project') }} as anvil_project\n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_stg_anvil_project", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_anvil_project"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_study_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        'st' || '_' || md5('phs003047' || '|' || cast(coalesce(anvil_project.registered_identifier, '') as text))::text as \"study_id\",\n       anvil_project.registered_identifier::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_anvil_project\" as anvil_project\n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_GRU_20250612_ftd_subject_external_id": {"database": "dbt", "schema": "main_GREGoR_R03_GRU_20250612_data", "name": "GREGoR_R03_GRU_20250612_ftd_subject_external_id", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_subject_external_id.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_subject_external_id.sql", "unique_id": "model.ftd.GREGoR_R03_GRU_20250612_ftd_subject_external_id", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "GREGoR_R03_GRU_20250612_ftd_subject_external_id"], "alias": "GREGoR_R03_GRU_20250612_ftd_subject_external_id", "checksum": {"name": "sha256", "checksum": "c29dddab1073bf9eca15f60154f5e9303fa98abe09841dfec448acf0acbccde7"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_GRU_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_GRU_20250612_ftd_subject_external_id.", "columns": {"subject_id": {"name": "subject_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_GRU_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_GRU_20250612_data"}, "created_at": 1757448969.4110513, "relation_name": "\"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_subject_external_id\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_GRU_20250612_data') }}\n\n    with source as (\n        select DISTINCT\n       {{ generate_global_id(prefix='sb',descriptor=['participant.participant_id'], study_id='phs003047') }}::text as \"Subject_id\",\n       participant.participant_id::text as \"external_id\"\n        from {{ ref('GREGoR_R03_GRU_20250612_stg_participant') }} as participant\n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_stg_participant", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_subject_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select DISTINCT\n       'sb' || '_' || md5('phs003047' || '|' || cast(coalesce(participant.participant_id, '') as text))::text as \"Subject_id\",\n       participant.participant_id::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_participant\" as participant\n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_GRU_20250612_ftd_subjectassertion_external_id": {"database": "dbt", "schema": "main_GREGoR_R03_GRU_20250612_data", "name": "GREGoR_R03_GRU_20250612_ftd_subjectassertion_external_id", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_subjectassertion_external_id.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_subjectassertion_external_id.sql", "unique_id": "model.ftd.GREGoR_R03_GRU_20250612_ftd_subjectassertion_external_id", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "GREGoR_R03_GRU_20250612_ftd_subjectassertion_external_id"], "alias": "GREGoR_R03_GRU_20250612_ftd_subjectassertion_external_id", "checksum": {"name": "sha256", "checksum": "1b4c14aa5eafbb9b7bed91d3e46908d77640068af9b7837519934945de62bb08"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_GRU_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_GRU_20250612_ftd_subjectassertion_external_id.", "columns": {"subjectassertion_id": {"name": "subjectassertion_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_GRU_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_GRU_20250612_data"}, "created_at": 1757448969.4068332, "relation_name": "\"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_subjectassertion_external_id\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_GRU_20250612_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='sa',descriptor=['participant.participant_id'], study_id='GREGoR_R03_GRU_20250612') }}::text as \"SubjectAssertion_id\",\n       participant.participant_id::text as \"external_id\"\n        from {{ ref('GREGoR_R03_GRU_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_GRU_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_GRU_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_subjectassertion_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        'sa' || '_' || md5('GREGoR_R03_GRU_20250612' || '|' || cast(coalesce(participant.participant_id, '') as text))::text as \"SubjectAssertion_id\",\n       participant.participant_id::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_GRU_20250612_ftd_accesspolicy": {"database": "dbt", "schema": "main_GREGoR_R03_GRU_20250612_data", "name": "GREGoR_R03_GRU_20250612_ftd_accesspolicy", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_accesspolicy.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_accesspolicy.sql", "unique_id": "model.ftd.GREGoR_R03_GRU_20250612_ftd_accesspolicy", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "GREGoR_R03_GRU_20250612_ftd_accesspolicy"], "alias": "GREGoR_R03_GRU_20250612_ftd_accesspolicy", "checksum": {"name": "sha256", "checksum": "616c27634aa4213c2d42593dd46d38a82f6854561e31201c98ee32eb87ff0b93"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_GRU_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_GRU_20250612_ftd_accesspolicy.", "columns": {"disease_limitation": {"name": "disease_limitation", "description": "Disease Use Limitations", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "description": {"name": "description", "description": "Model for GREGoR_R03_GRU_20250612_ftd_accesspolicy.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "website": {"name": "website", "description": "Website", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_GRU_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_GRU_20250612_data"}, "created_at": 1757448969.418804, "relation_name": "\"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_accesspolicy\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_GRU_20250612_data') }}\n\n    with source as (\n        select DISTINCT\n        NULL as \"disease_limitation\",\n        CASE UPPER(participant.consent_code)\n            WHEN 'GRU' THEN 'General Research Use'\n            WHEN 'HMB' THEN 'Health/Medical/Biomedical'\n            WHEN 'DS' THEN 'Disease-Specific (Disease/Trait/Exposure)'\n            WHEN 'IRB' THEN 'IRB Approval Required'\n            WHEN 'PUB' THEN 'Publication Required'\n            WHEN 'COL' THEN 'Collaboration Required'\n            WHEN 'NPU' THEN 'Not-for-profit use only'\n            WHEN 'MDS' THEN 'Methods'\n            WHEN 'GSO' THEN 'Genetic Studies only'\n            WHEN 'GSR' THEN 'Genomic Summary Results'\n        END::text as \"description\",    \n        NULL as \"website\",\n      {{ generate_global_id(prefix='ap',descriptor=['participant.consent_code'], study_id='phs003047') }}::text as \"id\"\n        from {{ ref('GREGoR_R03_GRU_20250612_stg_participant') }} as participant\n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_stg_participant", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_accesspolicy.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select DISTINCT\n        NULL as \"disease_limitation\",\n        CASE UPPER(participant.consent_code)\n            WHEN 'GRU' THEN 'General Research Use'\n            WHEN 'HMB' THEN 'Health/Medical/Biomedical'\n            WHEN 'DS' THEN 'Disease-Specific (Disease/Trait/Exposure)'\n            WHEN 'IRB' THEN 'IRB Approval Required'\n            WHEN 'PUB' THEN 'Publication Required'\n            WHEN 'COL' THEN 'Collaboration Required'\n            WHEN 'NPU' THEN 'Not-for-profit use only'\n            WHEN 'MDS' THEN 'Methods'\n            WHEN 'GSO' THEN 'Genetic Studies only'\n            WHEN 'GSR' THEN 'Genomic Summary Results'\n        END::text as \"description\",    \n        NULL as \"website\",\n      'ap' || '_' || md5('phs003047' || '|' || cast(coalesce(participant.consent_code, '') as text))::text as \"id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_participant\" as participant\n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_GRU_20250612_ftd_accesscontrolledrecord_external_id": {"database": "dbt", "schema": "main_GREGoR_R03_GRU_20250612_data", "name": "GREGoR_R03_GRU_20250612_ftd_accesscontrolledrecord_external_id", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_accesscontrolledrecord_external_id.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_accesscontrolledrecord_external_id.sql", "unique_id": "model.ftd.GREGoR_R03_GRU_20250612_ftd_accesscontrolledrecord_external_id", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "GREGoR_R03_GRU_20250612_ftd_accesscontrolledrecord_external_id"], "alias": "GREGoR_R03_GRU_20250612_ftd_accesscontrolledrecord_external_id", "checksum": {"name": "sha256", "checksum": "7db1921c2bb58669833ce0467998892ffdbc5785ab0bcc16378f922dd2ba14f9"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_GRU_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_GRU_20250612_ftd_accesscontrolledrecord_external_id.", "columns": {"accesscontrolledrecord_id": {"name": "accesscontrolledrecord_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_GRU_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_GRU_20250612_data"}, "created_at": 1757448969.4086478, "relation_name": "\"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_accesscontrolledrecord_external_id\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_GRU_20250612_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_GRU_20250612') }}::text as \"accesscontrolledrecord_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from {{ ref('GREGoR_R03_GRU_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_GRU_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_GRU_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_accesscontrolledrecord_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('GREGoR_R03_GRU_20250612' || '|' || cast(coalesce(, '') as text))::text as \"accesscontrolledrecord_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_GRU_20250612_ftd_familymember_external_id": {"database": "dbt", "schema": "main_GREGoR_R03_GRU_20250612_data", "name": "GREGoR_R03_GRU_20250612_ftd_familymember_external_id", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_familymember_external_id.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_familymember_external_id.sql", "unique_id": "model.ftd.GREGoR_R03_GRU_20250612_ftd_familymember_external_id", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "GREGoR_R03_GRU_20250612_ftd_familymember_external_id"], "alias": "GREGoR_R03_GRU_20250612_ftd_familymember_external_id", "checksum": {"name": "sha256", "checksum": "648a7f14c9fe5fac0692626a278b8b3738ca8e7d19f3cda6a5663cc96e2a5c63"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_GRU_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_GRU_20250612_ftd_familymember_external_id.", "columns": {"familymember_id": {"name": "familymember_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_GRU_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_GRU_20250612_data"}, "created_at": 1757448969.402387, "relation_name": "\"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_familymember_external_id\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_GRU_20250612_data') }}\n\n    with source as (\n        select distinct\n        {{ generate_global_id(prefix='fm',descriptor=['participant.participant_id'], study_id='GREGoR_R03_GRU_20250612') }}::text as \"familyMember_id\",\n        participant.participant_id::text as \"external_id\"\n        from {{ ref('GREGoR_R03_GRU_20250612_stg_participant') }} as participant\n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_stg_participant", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_familymember_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select distinct\n        'fm' || '_' || md5('GREGoR_R03_GRU_20250612' || '|' || cast(coalesce(participant.participant_id, '') as text))::text as \"familyMember_id\",\n        participant.participant_id::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_participant\" as participant\n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_GRU_20250612_ftd_filemetadata": {"database": "dbt", "schema": "main_GREGoR_R03_GRU_20250612_data", "name": "GREGoR_R03_GRU_20250612_ftd_filemetadata", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_filemetadata.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_filemetadata.sql", "unique_id": "model.ftd.GREGoR_R03_GRU_20250612_ftd_filemetadata", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "GREGoR_R03_GRU_20250612_ftd_filemetadata"], "alias": "GREGoR_R03_GRU_20250612_ftd_filemetadata", "checksum": {"name": "sha256", "checksum": "50a4ffea254ba692ba821af806d3b7ab92566932beb31faa5f9bee26d95d456a"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_GRU_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_GRU_20250612_ftd_filemetadata.", "columns": {"code": {"name": "code", "description": "The structured term defining the meaning of the assertion.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "display": {"name": "display", "description": "The friendly display string of the coded term", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "value_code": {"name": "value_code", "description": "The structured term defining the value of the assertion.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "value_display": {"name": "value_display", "description": "The friendly display string of the coded term for the value of the assertion.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_GRU_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_GRU_20250612_data"}, "created_at": 1757448969.403455, "relation_name": "\"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_filemetadata\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_GRU_20250612_data') }}\n\n    with source as (\n        select \n        GEN_UNKNOWN.code::text as \"code\",\n       GEN_UNKNOWN.display::text as \"display\",\n       GEN_UNKNOWN.value_code::text as \"value_code\",\n       GEN_UNKNOWN.value_display::text as \"value_display\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_GRU_20250612') }}::text as \"id\"\n        from {{ ref('GREGoR_R03_GRU_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_GRU_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_GRU_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_filemetadata.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        GEN_UNKNOWN.code::text as \"code\",\n       GEN_UNKNOWN.display::text as \"display\",\n       GEN_UNKNOWN.value_code::text as \"value_code\",\n       GEN_UNKNOWN.value_display::text as \"value_display\",\n       '' || '_' || md5('GREGoR_R03_GRU_20250612' || '|' || cast(coalesce(, '') as text))::text as \"id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code": {"database": "dbt", "schema": "main_GREGoR_R03_GRU_20250612_data", "name": "GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code.sql", "unique_id": "model.ftd.GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code"], "alias": "GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code", "checksum": {"name": "sha256", "checksum": "724978fa56917ea6e4a52208c6158db67d3fbc61fc3d4b241eed98436adcc6ba"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_GRU_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code.", "columns": {"accesspolicy_id": {"name": "accesspolicy_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "access_policy_code": {"name": "access_policy_code", "description": "Access Policy Code", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_GRU_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_GRU_20250612_data"}, "created_at": 1757448969.4230776, "relation_name": "\"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_GRU_20250612_data') }}\n\n    with source as (\n        select DISTINCT\n        {{ generate_global_id(prefix='ap',descriptor=['participant.consent_code'], study_id='phs003047') }}::text as \"accesspolicy_id\",\n        LOWER(participant.consent_code)::text as \"access_policy_code\"\n        from {{ ref('GREGoR_R03_GRU_20250612_stg_participant') }} as participant\n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_stg_participant", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select DISTINCT\n        'ap' || '_' || md5('phs003047' || '|' || cast(coalesce(participant.consent_code, '') as text))::text as \"accesspolicy_id\",\n        LOWER(participant.consent_code)::text as \"access_policy_code\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_participant\" as participant\n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_GRU_20250612_ftd_family": {"database": "dbt", "schema": "main_GREGoR_R03_GRU_20250612_data", "name": "GREGoR_R03_GRU_20250612_ftd_family", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_family.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_family.sql", "unique_id": "model.ftd.GREGoR_R03_GRU_20250612_ftd_family", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "GREGoR_R03_GRU_20250612_ftd_family"], "alias": "GREGoR_R03_GRU_20250612_ftd_family", "checksum": {"name": "sha256", "checksum": "ece6a0bff85c4fe4540b5624df997113747b488ad113af08aa78b1fcd44301d6"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_GRU_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_GRU_20250612_ftd_family.", "columns": {"family_type": {"name": "family_type", "description": "Describes the 'type' of study family, eg, trio.", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "family_description": {"name": "family_description", "description": "Free title describing the study family, such as potential inheritance or details about consanguinity", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "consanguinity": {"name": "consanguinity", "description": "Is there known or suspected consanguinity in this study family?", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "family_study_focus": {"name": "family_study_focus", "description": "What is this study family investigating? EG, a specific condition. The code should be prefixed with a recognizable curie.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_GRU_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_GRU_20250612_data"}, "created_at": 1757448969.4064016, "relation_name": "\"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_family\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_GRU_20250612_data') }}\n\n    with source as (\n        select \n        GEN_UNKNOWN.family_type::text as \"family_type\",\n       GEN_UNKNOWN.family_description::text as \"family_description\",\n       GEN_UNKNOWN.consanguinity::text as \"consanguinity\",\n       GEN_UNKNOWN.family_study_focus::text as \"family_study_focus\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_GRU_20250612') }}::text as \"has_access_policy\",\n        -- participant.family_id::text as \"id\"\n       -- Check if using the auto-generated id is correct. \n       {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_GRU_20250612') }}::text as \"id\"\n        from {{ ref('GREGoR_R03_GRU_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_GRU_20250612_stg_phenotype') }} as phenotype\n        on participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_GRU_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_family.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        GEN_UNKNOWN.family_type::text as \"family_type\",\n       GEN_UNKNOWN.family_description::text as \"family_description\",\n       GEN_UNKNOWN.consanguinity::text as \"consanguinity\",\n       GEN_UNKNOWN.family_study_focus::text as \"family_study_focus\",\n       '' || '_' || md5('GREGoR_R03_GRU_20250612' || '|' || cast(coalesce(, '') as text))::text as \"has_access_policy\",\n        -- participant.family_id::text as \"id\"\n       -- Check if using the auto-generated id is correct. \n       '' || '_' || md5('GREGoR_R03_GRU_20250612' || '|' || cast(coalesce(, '') as text))::text as \"id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_phenotype\" as phenotype\n        on participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_GRU_20250612_ftd_aliquot": {"database": "dbt", "schema": "main_GREGoR_R03_GRU_20250612_data", "name": "GREGoR_R03_GRU_20250612_ftd_aliquot", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_aliquot.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_aliquot.sql", "unique_id": "model.ftd.GREGoR_R03_GRU_20250612_ftd_aliquot", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "GREGoR_R03_GRU_20250612_ftd_aliquot"], "alias": "GREGoR_R03_GRU_20250612_ftd_aliquot", "checksum": {"name": "sha256", "checksum": "ec4594999ab021d184a194e49078afe3be7fd1e496a2fce51c56116957150316"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_GRU_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_GRU_20250612_ftd_aliquot.", "columns": {"availablity_status": {"name": "availablity_status", "description": "Can this Sample be requested for further analysis?", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "quantity_number": {"name": "quantity_number", "description": "The total quantity of the specimen", "meta": {}, "data_type": "number", "constraints": [], "quote": null, "tags": [], "granularity": null}, "quantity_units": {"name": "quantity_units", "description": "The structured term defining the units of the quantity.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "concentration_number": {"name": "concentration_number", "description": "What is the concentration of the analyte in the Aliquot?", "meta": {}, "data_type": "number", "constraints": [], "quote": null, "tags": [], "granularity": null}, "concentration_unit": {"name": "concentration_unit", "description": "Units associated with the concentration of the analyte in the Aliquot? UCUM coding preferred (with curie, UCUM)", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "sample_id": {"name": "sample_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_GRU_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_GRU_20250612_data"}, "created_at": 1757448969.4099672, "relation_name": "\"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_aliquot\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_GRU_20250612_data') }}\n\n    with source as (\n        select \n        GEN_UNKNOWN.availablity_status::text as \"availablity_status\",\n       GEN_UNKNOWN.quantity_number::text as \"quantity_number\",\n       GEN_UNKNOWN.quantity_units::text as \"quantity_units\",\n       GEN_UNKNOWN.concentration_number::text as \"concentration_number\",\n       GEN_UNKNOWN.concentration_unit::text as \"concentration_unit\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_GRU_20250612') }}::text as \"has_access_policy\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_GRU_20250612') }}::text as \"id\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_GRU_20250612') }}::text as \"sample_id\"\n        from {{ ref('GREGoR_R03_GRU_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_GRU_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_GRU_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_aliquot.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        GEN_UNKNOWN.availablity_status::text as \"availablity_status\",\n       GEN_UNKNOWN.quantity_number::text as \"quantity_number\",\n       GEN_UNKNOWN.quantity_units::text as \"quantity_units\",\n       GEN_UNKNOWN.concentration_number::text as \"concentration_number\",\n       GEN_UNKNOWN.concentration_unit::text as \"concentration_unit\",\n       '' || '_' || md5('GREGoR_R03_GRU_20250612' || '|' || cast(coalesce(, '') as text))::text as \"has_access_policy\",\n       '' || '_' || md5('GREGoR_R03_GRU_20250612' || '|' || cast(coalesce(, '') as text))::text as \"id\",\n       '' || '_' || md5('GREGoR_R03_GRU_20250612' || '|' || cast(coalesce(, '') as text))::text as \"sample_id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_GRU_20250612_ftd_biospecimencollection_external_id": {"database": "dbt", "schema": "main_GREGoR_R03_GRU_20250612_data", "name": "GREGoR_R03_GRU_20250612_ftd_biospecimencollection_external_id", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_biospecimencollection_external_id.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_biospecimencollection_external_id.sql", "unique_id": "model.ftd.GREGoR_R03_GRU_20250612_ftd_biospecimencollection_external_id", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "GREGoR_R03_GRU_20250612_ftd_biospecimencollection_external_id"], "alias": "GREGoR_R03_GRU_20250612_ftd_biospecimencollection_external_id", "checksum": {"name": "sha256", "checksum": "705d4cf2a0812910c8532a45f9a4703ed605103f4d17393bb9b25f1c561f6d11"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_GRU_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_GRU_20250612_ftd_biospecimencollection_external_id.", "columns": {"biospecimencollection_id": {"name": "biospecimencollection_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_GRU_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_GRU_20250612_data"}, "created_at": 1757448969.4239442, "relation_name": "\"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_biospecimencollection_external_id\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_GRU_20250612_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_GRU_20250612') }}::text as \"biospecimencollection_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from {{ ref('GREGoR_R03_GRU_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_GRU_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_GRU_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_biospecimencollection_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('GREGoR_R03_GRU_20250612' || '|' || cast(coalesce(, '') as text))::text as \"biospecimencollection_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_GRU_20250612_ftd_study_funding_source": {"database": "dbt", "schema": "main_GREGoR_R03_GRU_20250612_data", "name": "GREGoR_R03_GRU_20250612_ftd_study_funding_source", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_study_funding_source.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_study_funding_source.sql", "unique_id": "model.ftd.GREGoR_R03_GRU_20250612_ftd_study_funding_source", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "GREGoR_R03_GRU_20250612_ftd_study_funding_source"], "alias": "GREGoR_R03_GRU_20250612_ftd_study_funding_source", "checksum": {"name": "sha256", "checksum": "975bbd06ee4f6e3b9471ccf9c27393930ddeab35fce6008da84a107a7e187e31"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_GRU_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_GRU_20250612_ftd_study_funding_source.", "columns": {"study_id": {"name": "study_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "funding_source": {"name": "funding_source", "description": "Funding Source", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_GRU_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_GRU_20250612_data"}, "created_at": 1757448969.409035, "relation_name": "\"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_study_funding_source\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_GRU_20250612_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_GRU_20250612') }}::text as \"study_id\",\n       GEN_UNKNOWN.funding_source::text as \"funding_source\"\n        from {{ ref('GREGoR_R03_GRU_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_GRU_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_GRU_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_study_funding_source.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('GREGoR_R03_GRU_20250612' || '|' || cast(coalesce(, '') as text))::text as \"study_id\",\n       GEN_UNKNOWN.funding_source::text as \"funding_source\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_GRU_20250612_ftd_sourcedata": {"database": "dbt", "schema": "main_GREGoR_R03_GRU_20250612_data", "name": "GREGoR_R03_GRU_20250612_ftd_sourcedata", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_sourcedata.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_sourcedata.sql", "unique_id": "model.ftd.GREGoR_R03_GRU_20250612_ftd_sourcedata", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "GREGoR_R03_GRU_20250612_ftd_sourcedata"], "alias": "GREGoR_R03_GRU_20250612_ftd_sourcedata", "checksum": {"name": "sha256", "checksum": "bed91c79065a6faa8b88e51e49454291aaf1736d9db5373ad1e64633c577917a"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_GRU_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_GRU_20250612_ftd_sourcedata.", "columns": {"code": {"name": "code", "description": "The structured term defining the meaning of the assertion.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "display": {"name": "display", "description": "The friendly display string of the coded term", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "value_code": {"name": "value_code", "description": "The structured term defining the value of the assertion.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "value_display": {"name": "value_display", "description": "The friendly display string of the coded term for the value of the assertion.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "value_number": {"name": "value_number", "description": "The numeric value of the assertion.", "meta": {}, "data_type": "number", "constraints": [], "quote": null, "tags": [], "granularity": null}, "value_units": {"name": "value_units", "description": "The structured term defining the units of the value.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "value_units_display": {"name": "value_units_display", "description": "The friendly display string of units of the value.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_GRU_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_GRU_20250612_data"}, "created_at": 1757448969.4106512, "relation_name": "\"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_sourcedata\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_GRU_20250612_data') }}\n\n    with source as (\n        select \n        GEN_UNKNOWN.code::text as \"code\",\n       GEN_UNKNOWN.display::text as \"display\",\n       GEN_UNKNOWN.value_code::text as \"value_code\",\n       GEN_UNKNOWN.value_display::text as \"value_display\",\n       GEN_UNKNOWN.value_number::text as \"value_number\",\n       GEN_UNKNOWN.value_units::text as \"value_units\",\n       GEN_UNKNOWN.value_units_display::text as \"value_units_display\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_GRU_20250612') }}::text as \"has_access_policy\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_GRU_20250612') }}::text as \"id\"\n        from {{ ref('GREGoR_R03_GRU_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_GRU_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_GRU_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_sourcedata.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        GEN_UNKNOWN.code::text as \"code\",\n       GEN_UNKNOWN.display::text as \"display\",\n       GEN_UNKNOWN.value_code::text as \"value_code\",\n       GEN_UNKNOWN.value_display::text as \"value_display\",\n       GEN_UNKNOWN.value_number::text as \"value_number\",\n       GEN_UNKNOWN.value_units::text as \"value_units\",\n       GEN_UNKNOWN.value_units_display::text as \"value_units_display\",\n       '' || '_' || md5('GREGoR_R03_GRU_20250612' || '|' || cast(coalesce(, '') as text))::text as \"has_access_policy\",\n       '' || '_' || md5('GREGoR_R03_GRU_20250612' || '|' || cast(coalesce(, '') as text))::text as \"id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_race": {"database": "dbt", "schema": "main_GREGoR_R03_GRU_20250612_data", "name": "GREGoR_R03_GRU_20250612_ftd_demographics_race", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_demographics_race.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_demographics_race.sql", "unique_id": "model.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_race", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "GREGoR_R03_GRU_20250612_ftd_demographics_race"], "alias": "GREGoR_R03_GRU_20250612_ftd_demographics_race", "checksum": {"name": "sha256", "checksum": "66277b466972a41d5881f3d995701e4bfcc035259a747fc864d0309384237fcb"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_GRU_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_GRU_20250612_ftd_demographics_race.", "columns": {"demographics_id": {"name": "demographics_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "race": {"name": "race", "description": "Reported race as defined by the 1997 OMB directives.", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_GRU_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_GRU_20250612_data"}, "created_at": 1757448969.4218118, "relation_name": "\"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_demographics_race\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_GRU_20250612_data') }}\n\n    with source as (\n        select DISTINCT\n        {{ generate_global_id(prefix='dm',descriptor=['participant.participant_id'], study_id='phs003047') }}::text as \"Demographics_id\",\n        CASE \n            WHEN UNNEST(SPLIT(participant.reported_race, '|')) = 'American Indian or Alaska Native' THEN 'american_indian_or_alaskan_native'\n            WHEN UNNEST(SPLIT(participant.reported_race, '|')) = 'Asian' THEN 'asian'\n            WHEN UNNEST(SPLIT(participant.reported_race, '|')) = 'Black or African American' THEN 'black_or_african_american'\n            WHEN UNNEST(SPLIT(participant.reported_race, '|')) = 'Native Hawaiian or Other Pacific Islander' THEN 'native_hawaiian_or_pacific_islander'\n            WHEN UNNEST(SPLIT(participant.reported_race, '|')) = 'White' THEN 'white'\n            WHEN UNNEST(SPLIT(participant.reported_race, '|')) = 'Middle Eastern or North African' THEN 'other_race'\n            WHEN UNNEST(SPLIT(participant.reported_race, '|')) = 'Other Race' THEN 'other_race'\n            WHEN UNNEST(SPLIT(participant.reported_race, '|')) = 'Unknown' THEN 'unknown'\n            WHEN UNNEST(SPLIT(participant.reported_race, '|')) = 'asked but unknown' THEN 'asked_but_unknown'\n            WHEN STRING_SPLIT(participant.reported_race, '|') IS NULL THEN 'unknown'\n        END::text as \"race\"\n        from {{ ref('GREGoR_R03_GRU_20250612_stg_participant') }} as participant\n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_stg_participant", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_demographics_race.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select DISTINCT\n        'dm' || '_' || md5('phs003047' || '|' || cast(coalesce(participant.participant_id, '') as text))::text as \"Demographics_id\",\n        CASE \n            WHEN UNNEST(SPLIT(participant.reported_race, '|')) = 'American Indian or Alaska Native' THEN 'american_indian_or_alaskan_native'\n            WHEN UNNEST(SPLIT(participant.reported_race, '|')) = 'Asian' THEN 'asian'\n            WHEN UNNEST(SPLIT(participant.reported_race, '|')) = 'Black or African American' THEN 'black_or_african_american'\n            WHEN UNNEST(SPLIT(participant.reported_race, '|')) = 'Native Hawaiian or Other Pacific Islander' THEN 'native_hawaiian_or_pacific_islander'\n            WHEN UNNEST(SPLIT(participant.reported_race, '|')) = 'White' THEN 'white'\n            WHEN UNNEST(SPLIT(participant.reported_race, '|')) = 'Middle Eastern or North African' THEN 'other_race'\n            WHEN UNNEST(SPLIT(participant.reported_race, '|')) = 'Other Race' THEN 'other_race'\n            WHEN UNNEST(SPLIT(participant.reported_race, '|')) = 'Unknown' THEN 'unknown'\n            WHEN UNNEST(SPLIT(participant.reported_race, '|')) = 'asked but unknown' THEN 'asked_but_unknown'\n            WHEN STRING_SPLIT(participant.reported_race, '|') IS NULL THEN 'unknown'\n        END::text as \"race\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_participant\" as participant\n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_GRU_20250612_ftd_study": {"database": "dbt", "schema": "main_GREGoR_R03_GRU_20250612_data", "name": "GREGoR_R03_GRU_20250612_ftd_study", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_study.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_study.sql", "unique_id": "model.ftd.GREGoR_R03_GRU_20250612_ftd_study", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "GREGoR_R03_GRU_20250612_ftd_study"], "alias": "GREGoR_R03_GRU_20250612_ftd_study", "checksum": {"name": "sha256", "checksum": "4de987868c2c7cefd106d133ee4ff7b022b93e6a2e7c1d7cd955c271cbf670e4"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_GRU_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_GRU_20250612_ftd_study.", "columns": {"parent_study_id": {"name": "parent_study_id", "description": "Parent Study ID", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "study_title": {"name": "study_title", "description": "Study Title", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_GRU_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_GRU_20250612_data"}, "created_at": 1757448969.4196868, "relation_name": "\"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_study\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_GRU_20250612_data') }}\n\n    with source as (\n        select \n        NULL as \"parent_study_id\",\n       anvil_project.title::text as \"study_title\",\n       {{ generate_global_id(prefix='st',descriptor=['anvil_project.registered_identifier'], study_id='phs003047') }}::text as \"id\"\n        from {{ ref('GREGoR_R03_GRU_20250612_stg_anvil_project') }} as anvil_project\n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_stg_anvil_project", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_anvil_project"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_study.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        NULL as \"parent_study_id\",\n       anvil_project.title::text as \"study_title\",\n       'st' || '_' || md5('phs003047' || '|' || cast(coalesce(anvil_project.registered_identifier, '') as text))::text as \"id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_anvil_project\" as anvil_project\n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_GRU_20250612_ftd_filemetadata_external_id": {"database": "dbt", "schema": "main_GREGoR_R03_GRU_20250612_data", "name": "GREGoR_R03_GRU_20250612_ftd_filemetadata_external_id", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_filemetadata_external_id.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_filemetadata_external_id.sql", "unique_id": "model.ftd.GREGoR_R03_GRU_20250612_ftd_filemetadata_external_id", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "GREGoR_R03_GRU_20250612_ftd_filemetadata_external_id"], "alias": "GREGoR_R03_GRU_20250612_ftd_filemetadata_external_id", "checksum": {"name": "sha256", "checksum": "ecdba8a8c3531cda98c1ebed00bfd62cb5d74da121a921395332bce85d1b4a31"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_GRU_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_GRU_20250612_ftd_filemetadata_external_id.", "columns": {"filemetadata_id": {"name": "filemetadata_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_GRU_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_GRU_20250612_data"}, "created_at": 1757448969.424324, "relation_name": "\"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_filemetadata_external_id\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_GRU_20250612_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_GRU_20250612') }}::text as \"filemetadata_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from {{ ref('GREGoR_R03_GRU_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_GRU_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_GRU_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_filemetadata_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('GREGoR_R03_GRU_20250612' || '|' || cast(coalesce(, '') as text))::text as \"filemetadata_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_GRU_20250612_ftd_file": {"database": "dbt", "schema": "main_GREGoR_R03_GRU_20250612_data", "name": "GREGoR_R03_GRU_20250612_ftd_file", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_file.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_file.sql", "unique_id": "model.ftd.GREGoR_R03_GRU_20250612_ftd_file", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "GREGoR_R03_GRU_20250612_ftd_file"], "alias": "GREGoR_R03_GRU_20250612_ftd_file", "checksum": {"name": "sha256", "checksum": "5e3e2d4d6cf8794a8223db9f9bcebb484b46b5afbb33ff414a1a9acc5867fc63"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_GRU_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_GRU_20250612_ftd_file.", "columns": {"filename": {"name": "filename", "description": "The name of the file.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "format": {"name": "format", "description": "The format of the file.", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "data_type": {"name": "data_type", "description": "The type of data within this file.", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "size": {"name": "size", "description": "Size of the file, in Bytes.", "meta": {}, "data_type": "integer", "constraints": [], "quote": null, "tags": [], "granularity": null}, "drs_uri": {"name": "drs_uri", "description": "DRS location to access the data.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "file_metadata": {"name": "file_metadata", "description": "Additional metadata about the contents of the file, eg, genome reference build.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_GRU_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_GRU_20250612_data"}, "created_at": 1757448969.4145322, "relation_name": "\"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_file\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_GRU_20250612_data') }}\n\n    with source as (\n        select \n        GEN_UNKNOWN.filename::text as \"filename\",\n       GEN_UNKNOWN.format::text as \"format\",\n       GEN_UNKNOWN.data_type::text as \"data_type\",\n       GEN_UNKNOWN.size::integer as \"size\",\n       GEN_UNKNOWN.drs_uri::text as \"drs_uri\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_GRU_20250612') }}::text as \"file_metadata\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_GRU_20250612') }}::text as \"has_access_policy\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_GRU_20250612') }}::text as \"id\"\n        from {{ ref('GREGoR_R03_GRU_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_GRU_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_GRU_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_file.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        GEN_UNKNOWN.filename::text as \"filename\",\n       GEN_UNKNOWN.format::text as \"format\",\n       GEN_UNKNOWN.data_type::text as \"data_type\",\n       GEN_UNKNOWN.size::integer as \"size\",\n       GEN_UNKNOWN.drs_uri::text as \"drs_uri\",\n       '' || '_' || md5('GREGoR_R03_GRU_20250612' || '|' || cast(coalesce(, '') as text))::text as \"file_metadata\",\n       '' || '_' || md5('GREGoR_R03_GRU_20250612' || '|' || cast(coalesce(, '') as text))::text as \"has_access_policy\",\n       '' || '_' || md5('GREGoR_R03_GRU_20250612' || '|' || cast(coalesce(, '') as text))::text as \"id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_source_data": {"database": "dbt", "schema": "main_GREGoR_R03_GRU_20250612_data", "name": "GREGoR_R03_GRU_20250612_ftd_demographics_source_data", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_demographics_source_data.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_demographics_source_data.sql", "unique_id": "model.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_source_data", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "GREGoR_R03_GRU_20250612_ftd_demographics_source_data"], "alias": "GREGoR_R03_GRU_20250612_ftd_demographics_source_data", "checksum": {"name": "sha256", "checksum": "a838f7d062d5f1e43a4af25f45cfa8ac07e6fa3cdbc4a7d9564f11bf6ea60027"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_GRU_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_GRU_20250612_ftd_demographics_source_data.", "columns": {"demographics_id": {"name": "demographics_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "source_data_id": {"name": "source_data_id", "description": "The sources from which this assertion was derived", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_GRU_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_GRU_20250612_data"}, "created_at": 1757448969.4163904, "relation_name": "\"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_demographics_source_data\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_GRU_20250612_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_GRU_20250612') }}::text as \"demographics_id\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_GRU_20250612') }}::text as \"source_data_id\"\n        from {{ ref('GREGoR_R03_GRU_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_GRU_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_GRU_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_demographics_source_data.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('GREGoR_R03_GRU_20250612' || '|' || cast(coalesce(, '') as text))::text as \"demographics_id\",\n       '' || '_' || md5('GREGoR_R03_GRU_20250612' || '|' || cast(coalesce(, '') as text))::text as \"source_data_id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_GRU_20250612_ftd_accesspolicy_data_access_type": {"database": "dbt", "schema": "main_GREGoR_R03_GRU_20250612_data", "name": "GREGoR_R03_GRU_20250612_ftd_accesspolicy_data_access_type", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_accesspolicy_data_access_type.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_accesspolicy_data_access_type.sql", "unique_id": "model.ftd.GREGoR_R03_GRU_20250612_ftd_accesspolicy_data_access_type", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "GREGoR_R03_GRU_20250612_ftd_accesspolicy_data_access_type"], "alias": "GREGoR_R03_GRU_20250612_ftd_accesspolicy_data_access_type", "checksum": {"name": "sha256", "checksum": "71f9cd47bd56aaebf8b20e137296c955246f31fbb594103525257db81e97006c"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_GRU_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_GRU_20250612_ftd_accesspolicy_data_access_type.", "columns": {"accesspolicy_id": {"name": "accesspolicy_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "data_access_type": {"name": "data_access_type", "description": "Data Access Type", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_GRU_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_GRU_20250612_data"}, "created_at": 1757448969.413181, "relation_name": "\"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_accesspolicy_data_access_type\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_GRU_20250612_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_GRU_20250612') }}::text as \"accesspolicy_id\",\n       GEN_UNKNOWN.data_access_type::text as \"data_access_type\"\n        from {{ ref('GREGoR_R03_GRU_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_GRU_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_GRU_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_accesspolicy_data_access_type.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('GREGoR_R03_GRU_20250612' || '|' || cast(coalesce(, '') as text))::text as \"accesspolicy_id\",\n       GEN_UNKNOWN.data_access_type::text as \"data_access_type\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_GRU_20250612_ftd_datasource": {"database": "dbt", "schema": "main_GREGoR_R03_GRU_20250612_data", "name": "GREGoR_R03_GRU_20250612_ftd_datasource", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_datasource.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_datasource.sql", "unique_id": "model.ftd.GREGoR_R03_GRU_20250612_ftd_datasource", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "GREGoR_R03_GRU_20250612_ftd_datasource"], "alias": "GREGoR_R03_GRU_20250612_ftd_datasource", "checksum": {"name": "sha256", "checksum": "c887b104df2412be02e9c9fb134bc8915ebad96791027ff0ae56032fc2142b41"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_GRU_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_GRU_20250612_ftd_datasource.", "columns": {"snapshot_id": {"name": "snapshot_id", "description": "The Terra Data Repository Snapshot ID.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "google_data_project": {"name": "google_data_project", "description": "The Google Data Project needed to query this snapshot in BigQuery.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "snapshot_dataset": {"name": "snapshot_dataset", "description": "The Dataset within BigQuery where the table can be queried.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "table": {"name": "table", "description": "The table in the dataset that contains the row of interest.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "parameterized_query": {"name": "parameterized_query", "description": "A parameterized query that contains the primary key fields and can be used to select specific rows. This should be formatted according to (https://cloud.google.com/bigquery/docs/parameterized-queries)[BigQuery instructions], including using named parameters.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_GRU_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_GRU_20250612_data"}, "created_at": 1757448969.4176972, "relation_name": "\"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_datasource\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_GRU_20250612_data') }}\n\n    with source as (\n        select \n        GEN_UNKNOWN.snapshot_id::text as \"snapshot_id\",\n       GEN_UNKNOWN.google_data_project::text as \"google_data_project\",\n       GEN_UNKNOWN.snapshot_dataset::text as \"snapshot_dataset\",\n       GEN_UNKNOWN.table::text as \"table\",\n       GEN_UNKNOWN.parameterized_query::text as \"parameterized_query\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_GRU_20250612') }}::text as \"id\"\n        from {{ ref('GREGoR_R03_GRU_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_GRU_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id  join {{ ref('GREGoR_R03_GRU_20250612_stg_experiment') }} as experiment\non   join {{ ref('GREGoR_R03_GRU_20250612_stg_anvil_project') }} as anvil_project\non  \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_GRU_20250612_stg_phenotype", "package": null, "version": null}, {"name": "GREGoR_R03_GRU_20250612_stg_experiment", "package": null, "version": null}, {"name": "GREGoR_R03_GRU_20250612_stg_anvil_project", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_experiment", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_anvil_project"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_datasource.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        GEN_UNKNOWN.snapshot_id::text as \"snapshot_id\",\n       GEN_UNKNOWN.google_data_project::text as \"google_data_project\",\n       GEN_UNKNOWN.snapshot_dataset::text as \"snapshot_dataset\",\n       GEN_UNKNOWN.table::text as \"table\",\n       GEN_UNKNOWN.parameterized_query::text as \"parameterized_query\",\n       '' || '_' || md5('GREGoR_R03_GRU_20250612' || '|' || cast(coalesce(, '') as text))::text as \"id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id  join \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_experiment\" as experiment\non   join \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_anvil_project\" as anvil_project\non  \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_GRU_20250612_ftd_sample": {"database": "dbt", "schema": "main_GREGoR_R03_GRU_20250612_data", "name": "GREGoR_R03_GRU_20250612_ftd_sample", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_sample.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_sample.sql", "unique_id": "model.ftd.GREGoR_R03_GRU_20250612_ftd_sample", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "GREGoR_R03_GRU_20250612_ftd_sample"], "alias": "GREGoR_R03_GRU_20250612_ftd_sample", "checksum": {"name": "sha256", "checksum": "843585ce125c0dfa4540168acb7fd824cd98097f3a35f8dd43272ebd53e96adf"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_GRU_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_GRU_20250612_ftd_sample.", "columns": {"parent_sample": {"name": "parent_sample", "description": "Sample from which this sample is derived", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "sample_type": {"name": "sample_type", "description": "Type of material of which this Sample is comprised", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "availablity_status": {"name": "availablity_status", "description": "Can this Sample be requested for further analysis?", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "quantity_number": {"name": "quantity_number", "description": "The total quantity of the specimen", "meta": {}, "data_type": "number", "constraints": [], "quote": null, "tags": [], "granularity": null}, "quantity_units": {"name": "quantity_units", "description": "The structured term defining the units of the quantity.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "subject_id": {"name": "subject_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "biospecimen_collection_id": {"name": "biospecimen_collection_id", "description": "Biospecimen Collection that generated this sample.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_GRU_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_GRU_20250612_data"}, "created_at": 1757448969.4182715, "relation_name": "\"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_sample\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_GRU_20250612_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_GRU_20250612') }}::text as \"parent_sample\",\n       GEN_UNKNOWN.sample_type::text as \"sample_type\",\n       GEN_UNKNOWN.availablity_status::text as \"availablity_status\",\n       GEN_UNKNOWN.quantity_number::text as \"quantity_number\",\n       GEN_UNKNOWN.quantity_units::text as \"quantity_units\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_GRU_20250612') }}::text as \"has_access_policy\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_GRU_20250612') }}::text as \"id\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_GRU_20250612') }}::text as \"subject_id\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_GRU_20250612') }}::text as \"biospecimen_collection_id\"\n        from {{ ref('GREGoR_R03_GRU_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_GRU_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_GRU_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_sample.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('GREGoR_R03_GRU_20250612' || '|' || cast(coalesce(, '') as text))::text as \"parent_sample\",\n       GEN_UNKNOWN.sample_type::text as \"sample_type\",\n       GEN_UNKNOWN.availablity_status::text as \"availablity_status\",\n       GEN_UNKNOWN.quantity_number::text as \"quantity_number\",\n       GEN_UNKNOWN.quantity_units::text as \"quantity_units\",\n       '' || '_' || md5('GREGoR_R03_GRU_20250612' || '|' || cast(coalesce(, '') as text))::text as \"has_access_policy\",\n       '' || '_' || md5('GREGoR_R03_GRU_20250612' || '|' || cast(coalesce(, '') as text))::text as \"id\",\n       '' || '_' || md5('GREGoR_R03_GRU_20250612' || '|' || cast(coalesce(, '') as text))::text as \"subject_id\",\n       '' || '_' || md5('GREGoR_R03_GRU_20250612' || '|' || cast(coalesce(, '') as text))::text as \"biospecimen_collection_id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_GRU_20250612_ftd_thing_external_id": {"database": "dbt", "schema": "main_GREGoR_R03_GRU_20250612_data", "name": "GREGoR_R03_GRU_20250612_ftd_thing_external_id", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_thing_external_id.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_thing_external_id.sql", "unique_id": "model.ftd.GREGoR_R03_GRU_20250612_ftd_thing_external_id", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "GREGoR_R03_GRU_20250612_ftd_thing_external_id"], "alias": "GREGoR_R03_GRU_20250612_ftd_thing_external_id", "checksum": {"name": "sha256", "checksum": "abb8731b0b2505c7d588951cba8a1524d9dfda25ba91bcba74bb58495a6c23e9"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_GRU_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_GRU_20250612_ftd_thing_external_id.", "columns": {"thing_id": {"name": "thing_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_GRU_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_GRU_20250612_data"}, "created_at": 1757448969.4094098, "relation_name": "\"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_thing_external_id\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_GRU_20250612_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_GRU_20250612') }}::text as \"thing_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from {{ ref('GREGoR_R03_GRU_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_GRU_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_GRU_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_thing_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('GREGoR_R03_GRU_20250612' || '|' || cast(coalesce(, '') as text))::text as \"thing_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_GRU_20250612_ftd_study_external_study_id": {"database": "dbt", "schema": "main_GREGoR_R03_GRU_20250612_data", "name": "GREGoR_R03_GRU_20250612_ftd_study_external_study_id", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_study_external_study_id.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_study_external_study_id.sql", "unique_id": "model.ftd.GREGoR_R03_GRU_20250612_ftd_study_external_study_id", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "GREGoR_R03_GRU_20250612_ftd_study_external_study_id"], "alias": "GREGoR_R03_GRU_20250612_ftd_study_external_study_id", "checksum": {"name": "sha256", "checksum": "7f4dfbfd9ade53c413122620e996a60db9c330b32d5d7ea704c43272061b7da9"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_GRU_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_GRU_20250612_data"}, "created_at": 1757448967.9887109, "relation_name": "\"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_study_external_study_id\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_GRU_20250612_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_GRU_20250612') }}::text as \"study_id\",\n       GEN_UNKNOWN.external_study_id::text as \"external_study_id\"\n        from {{ ref('GREGoR_R03_GRU_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_GRU_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_GRU_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_study_external_study_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('GREGoR_R03_GRU_20250612' || '|' || cast(coalesce(, '') as text))::text as \"study_id\",\n       GEN_UNKNOWN.external_study_id::text as \"external_study_id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_GRU_20250612_ftd_file_sample": {"database": "dbt", "schema": "main_GREGoR_R03_GRU_20250612_data", "name": "GREGoR_R03_GRU_20250612_ftd_file_sample", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_file_sample.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_file_sample.sql", "unique_id": "model.ftd.GREGoR_R03_GRU_20250612_ftd_file_sample", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "GREGoR_R03_GRU_20250612_ftd_file_sample"], "alias": "GREGoR_R03_GRU_20250612_ftd_file_sample", "checksum": {"name": "sha256", "checksum": "9e76b7b537708d2d4a1edceea5cc0d1bba521fa0a9bca5d0ab6df5e0d17a9b97"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_GRU_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_GRU_20250612_ftd_file_sample.", "columns": {"file_id": {"name": "file_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "sample_id": {"name": "sample_id", "description": "The Samples(s) used to generate data in this file.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_GRU_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_GRU_20250612_data"}, "created_at": 1757448969.4118416, "relation_name": "\"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_file_sample\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_GRU_20250612_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_GRU_20250612') }}::text as \"file_id\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_GRU_20250612') }}::text as \"sample_id\"\n        from {{ ref('GREGoR_R03_GRU_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_GRU_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_GRU_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_file_sample.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('GREGoR_R03_GRU_20250612' || '|' || cast(coalesce(, '') as text))::text as \"file_id\",\n       '' || '_' || md5('GREGoR_R03_GRU_20250612' || '|' || cast(coalesce(, '') as text))::text as \"sample_id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_GRU_20250612_ftd_subjectassertion_source_data": {"database": "dbt", "schema": "main_GREGoR_R03_GRU_20250612_data", "name": "GREGoR_R03_GRU_20250612_ftd_subjectassertion_source_data", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_subjectassertion_source_data.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_subjectassertion_source_data.sql", "unique_id": "model.ftd.GREGoR_R03_GRU_20250612_ftd_subjectassertion_source_data", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "GREGoR_R03_GRU_20250612_ftd_subjectassertion_source_data"], "alias": "GREGoR_R03_GRU_20250612_ftd_subjectassertion_source_data", "checksum": {"name": "sha256", "checksum": "f23b741147d567fd307b6de91e0188d07b1620fc3f8ecc44699b329faf647666"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_GRU_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_GRU_20250612_ftd_subjectassertion_source_data.", "columns": {"subjectassertion_id": {"name": "subjectassertion_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "source_data_id": {"name": "source_data_id", "description": "The sources from which this assertion was derived", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_GRU_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_GRU_20250612_data"}, "created_at": 1757448969.4048533, "relation_name": "\"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_subjectassertion_source_data\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_GRU_20250612_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_GRU_20250612') }}::text as \"subjectassertion_id\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_GRU_20250612') }}::text as \"source_data_id\"\n        from {{ ref('GREGoR_R03_GRU_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_GRU_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_GRU_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_subjectassertion_source_data.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('GREGoR_R03_GRU_20250612' || '|' || cast(coalesce(, '') as text))::text as \"subjectassertion_id\",\n       '' || '_' || md5('GREGoR_R03_GRU_20250612' || '|' || cast(coalesce(, '') as text))::text as \"source_data_id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_GRU_20250612_ftd_familyrelationship": {"database": "dbt", "schema": "main_GREGoR_R03_GRU_20250612_data", "name": "GREGoR_R03_GRU_20250612_ftd_familyrelationship", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_familyrelationship.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_familyrelationship.sql", "unique_id": "model.ftd.GREGoR_R03_GRU_20250612_ftd_familyrelationship", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "GREGoR_R03_GRU_20250612_ftd_familyrelationship"], "alias": "GREGoR_R03_GRU_20250612_ftd_familyrelationship", "checksum": {"name": "sha256", "checksum": "05f1a38d49993acb138fda72d4a6df6f06ad685ce57243baa29685308a24b25e"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_GRU_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_GRU_20250612_ftd_familyrelationship.", "columns": {"family_member": {"name": "family_member", "description": "The family member Subject who is the relationship \"subject\".", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "other_family_member": {"name": "other_family_member", "description": "The family member Subject for the relationship \"object\".", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "relationship_code": {"name": "relationship_code", "description": "Code definting the relationship predicate. Relationship of the \"Family Member\" to the \"Other Family Member\" (i.e. mother, father, etc). Code must be from the HL7 [FamilyMember ValueSet](https://terminology.hl7.org/6.2.0/ValueSet-v3-FamilyMember.html)", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_GRU_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_GRU_20250612_data"}, "created_at": 1757448969.408211, "relation_name": "\"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_familyrelationship\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_GRU_20250612_data') }}\n\n    with source as (\n        select DISTINCT\n        participant_id AS other_family_member,\n        twin_id AS participant_id,\n        'KIN:009' AS relationship_code,\n        {{ generate_global_id(prefix='ap',descriptor=['participant.consent_code'], study_id='phs003047') }}::text AS \"has_access_policy\",\n        participant.family_id::text AS \"family_id\",\n        from {{ ref('GREGoR_R03_GRU_20250612_stg_participant') }} as participant WHERE twin_id != '0'\n\n        UNION \n\n        select DISTINCT\n        participant_id AS other_family_member, \n        paternal_id AS participant_id,\n        'KIN:028' AS relationship_code,\n        {{ generate_global_id(prefix='ap',descriptor=['participant.consent_code'], study_id='phs003047') }}::text AS \"has_access_policy\",\n        participant.family_id::text AS \"family_id\"\n        from {{ ref('GREGoR_R03_GRU_20250612_stg_participant') }} as participant WHERE paternal_id != '0'\n\n        UNION \n\n        select DISTINCT\n        participant_id AS other_family_member, \n        maternal_id AS participant_id,\n        'KIN:027' AS relationship_code,\n        {{ generate_global_id(prefix='ap',descriptor=['participant.consent_code'], study_id='phs003047') }}::text AS \"has_access_policy\",\n         participant.family_id::text AS \"family_id\"\n        from {{ ref('GREGoR_R03_GRU_20250612_stg_participant') }} as participant WHERE maternal_id != '0'\n\n        UNION \n        -- Normal Direction of family relationship\n        SELECT DISTINCT\n        proband.participant_id as other_family_member, -- is proband's participant ID. -- Josh changed this as other_family_member, -- is proband's participant ID\n        participant.participant_id AS participant_id, -- is not proband's participant ID\n       CASE \n           WHEN participant.proband_relationship =  'Mother' THEN 'KIN:027' -- system: http://purl.org/ga4gh/kin.owl\n           WHEN participant.proband_relationship =  'Father' THEN 'KIN:028'\n           WHEN participant.proband_relationship =  'Sibling' THEN 'KIN:007'\n           WHEN participant.proband_relationship =  'Child' THEN 'KIN:032'\n           WHEN participant.proband_relationship =  'Maternal Half Sibling' THEN 'KIN:054'\n           WHEN participant.proband_relationship =  'Paternal Half Sibling' THEN 'KIN:055'\n           WHEN participant.proband_relationship =  'Maternal Grandmother' THEN 'KIN:052'\n           WHEN participant.proband_relationship =  'Maternal Grandfather' THEN 'KIN:052'\n           WHEN participant.proband_relationship =  'Paternal Grandmother' THEN 'KIN:053'\n           WHEN participant.proband_relationship =  'Paternal Grandfather' THEN 'KIN:053'\n           WHEN participant.proband_relationship =  'Maternal Aunt' THEN 'KIN:060'\n           WHEN participant.proband_relationship =  'Paternal Aunt' THEN 'KIN:061'\n           WHEN participant.proband_relationship =  'Maternal Uncle' THEN 'KIN:058'\n           WHEN participant.proband_relationship =  'Paternal Uncle' THEN 'KIN:059'           \n           WHEN participant.proband_relationship =  'Maternal 1st Cousin' THEN 'KIN:015'\n           WHEN participant.proband_relationship =  'Paternal 1st Cousin' THEN 'KIN:016'\n           WHEN participant.proband_relationship =  'Nephew' THEN 'KIN:046'\n           WHEN participant.proband_relationship =  'Niece' THEN 'KIN:046'\n           WHEN participant.proband_relationship =  'Other' OR participant.proband_relationship =  'Unknown' THEN 'KIN:001'\n        END::text as \"relationship_code\", \n        {{ generate_global_id(prefix='ap',descriptor=['participant.consent_code'], study_id='phs003047') }}::text as \"has_access_policy\",\n        participant.family_id::text AS \"family_id\",\n        from {{ ref('GREGoR_R03_GRU_20250612_stg_participant') }} as participant\n        LEFT JOIN {{ ref('GREGoR_R03_GRU_20250612_stg_participant') }} as proband \n        ON proband.family_id = participant.family_id  -- If multiple probands per family, assuming siblings\n        AND proband.proband_relationship = 'Self'\n        where participant.proband_relationship != 'Self'\n    )\n\n    select DISTINCT\n        {{ generate_global_id(prefix='fr',descriptor=['source.family_id','participant_id','source.other_family_member', 'relationship_code'],study_id='phs003047') }}::text as \"id\",\n        relationship_code, \n        {{ generate_global_id(prefix='sb',descriptor=['source.participant_id'], study_id='phs003047') }}::text AS \"family_member\",\n        {{ generate_global_id(prefix='sb',descriptor=['source.other_family_member'], study_id='phs003047') }}::text as \"other_family_member\"\n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_GRU_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_GRU_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_GRU_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_GRU_20250612_stg_participant", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_familyrelationship.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select DISTINCT\n        participant_id AS other_family_member,\n        twin_id AS participant_id,\n        'KIN:009' AS relationship_code,\n        'ap' || '_' || md5('phs003047' || '|' || cast(coalesce(participant.consent_code, '') as text))::text AS \"has_access_policy\",\n        participant.family_id::text AS \"family_id\",\n        from \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_participant\" as participant WHERE twin_id != '0'\n\n        UNION \n\n        select DISTINCT\n        participant_id AS other_family_member, \n        paternal_id AS participant_id,\n        'KIN:028' AS relationship_code,\n        'ap' || '_' || md5('phs003047' || '|' || cast(coalesce(participant.consent_code, '') as text))::text AS \"has_access_policy\",\n        participant.family_id::text AS \"family_id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_participant\" as participant WHERE paternal_id != '0'\n\n        UNION \n\n        select DISTINCT\n        participant_id AS other_family_member, \n        maternal_id AS participant_id,\n        'KIN:027' AS relationship_code,\n        'ap' || '_' || md5('phs003047' || '|' || cast(coalesce(participant.consent_code, '') as text))::text AS \"has_access_policy\",\n         participant.family_id::text AS \"family_id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_participant\" as participant WHERE maternal_id != '0'\n\n        UNION \n        -- Normal Direction of family relationship\n        SELECT DISTINCT\n        proband.participant_id as other_family_member, -- is proband's participant ID. -- Josh changed this as other_family_member, -- is proband's participant ID\n        participant.participant_id AS participant_id, -- is not proband's participant ID\n       CASE \n           WHEN participant.proband_relationship =  'Mother' THEN 'KIN:027' -- system: http://purl.org/ga4gh/kin.owl\n           WHEN participant.proband_relationship =  'Father' THEN 'KIN:028'\n           WHEN participant.proband_relationship =  'Sibling' THEN 'KIN:007'\n           WHEN participant.proband_relationship =  'Child' THEN 'KIN:032'\n           WHEN participant.proband_relationship =  'Maternal Half Sibling' THEN 'KIN:054'\n           WHEN participant.proband_relationship =  'Paternal Half Sibling' THEN 'KIN:055'\n           WHEN participant.proband_relationship =  'Maternal Grandmother' THEN 'KIN:052'\n           WHEN participant.proband_relationship =  'Maternal Grandfather' THEN 'KIN:052'\n           WHEN participant.proband_relationship =  'Paternal Grandmother' THEN 'KIN:053'\n           WHEN participant.proband_relationship =  'Paternal Grandfather' THEN 'KIN:053'\n           WHEN participant.proband_relationship =  'Maternal Aunt' THEN 'KIN:060'\n           WHEN participant.proband_relationship =  'Paternal Aunt' THEN 'KIN:061'\n           WHEN participant.proband_relationship =  'Maternal Uncle' THEN 'KIN:058'\n           WHEN participant.proband_relationship =  'Paternal Uncle' THEN 'KIN:059'           \n           WHEN participant.proband_relationship =  'Maternal 1st Cousin' THEN 'KIN:015'\n           WHEN participant.proband_relationship =  'Paternal 1st Cousin' THEN 'KIN:016'\n           WHEN participant.proband_relationship =  'Nephew' THEN 'KIN:046'\n           WHEN participant.proband_relationship =  'Niece' THEN 'KIN:046'\n           WHEN participant.proband_relationship =  'Other' OR participant.proband_relationship =  'Unknown' THEN 'KIN:001'\n        END::text as \"relationship_code\", \n        'ap' || '_' || md5('phs003047' || '|' || cast(coalesce(participant.consent_code, '') as text))::text as \"has_access_policy\",\n        participant.family_id::text AS \"family_id\",\n        from \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_participant\" as participant\n        LEFT JOIN \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_participant\" as proband \n        ON proband.family_id = participant.family_id  -- If multiple probands per family, assuming siblings\n        AND proband.proband_relationship = 'Self'\n        where participant.proband_relationship != 'Self'\n    )\n\n    select DISTINCT\n        'fr' || '_' || md5('phs003047' || '|' || cast(coalesce(source.family_id, '') as text) || '|' || 'phs003047' || '|' || cast(coalesce(participant_id, '') as text) || '|' || 'phs003047' || '|' || cast(coalesce(source.other_family_member, '') as text) || '|' || 'phs003047' || '|' || cast(coalesce(relationship_code, '') as text))::text as \"id\",\n        relationship_code, \n        'sb' || '_' || md5('phs003047' || '|' || cast(coalesce(source.participant_id, '') as text))::text AS \"family_member\",\n        'sb' || '_' || md5('phs003047' || '|' || cast(coalesce(source.other_family_member, '') as text))::text as \"other_family_member\"\n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_GRU_20250612_ftd_biospecimencollection": {"database": "dbt", "schema": "main_GREGoR_R03_GRU_20250612_data", "name": "GREGoR_R03_GRU_20250612_ftd_biospecimencollection", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_biospecimencollection.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_biospecimencollection.sql", "unique_id": "model.ftd.GREGoR_R03_GRU_20250612_ftd_biospecimencollection", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "GREGoR_R03_GRU_20250612_ftd_biospecimencollection"], "alias": "GREGoR_R03_GRU_20250612_ftd_biospecimencollection", "checksum": {"name": "sha256", "checksum": "cc7d1f5e7983794081de877dadf71c81e9e5a73b7f001c5149499d25acc4cee6"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_GRU_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_GRU_20250612_ftd_biospecimencollection.", "columns": {"age_at_collection": {"name": "age_at_collection", "description": "The age at which this biospecimen was collected.", "meta": {}, "data_type": "integer", "constraints": [], "quote": null, "tags": [], "granularity": null}, "method": {"name": "method", "description": "The approach used to collect the biospecimen.", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "site": {"name": "site", "description": "The location of the specimen collection.", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "spatial_qualifier": {"name": "spatial_qualifier", "description": "Any spatial/location qualifiers", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "laterality": {"name": "laterality", "description": "Laterality information for the site", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_GRU_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_GRU_20250612_data"}, "created_at": 1757448969.415967, "relation_name": "\"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_biospecimencollection\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_GRU_20250612_data') }}\n\n    with source as (\n        select \n        GEN_UNKNOWN.age_at_collection::integer as \"age_at_collection\",\n       GEN_UNKNOWN.method::text as \"method\",\n       GEN_UNKNOWN.site::text as \"site\",\n       GEN_UNKNOWN.spatial_qualifier::text as \"spatial_qualifier\",\n       GEN_UNKNOWN.laterality::text as \"laterality\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_GRU_20250612') }}::text as \"has_access_policy\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_GRU_20250612') }}::text as \"id\"\n        from {{ ref('GREGoR_R03_GRU_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_GRU_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_GRU_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_biospecimencollection.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        GEN_UNKNOWN.age_at_collection::integer as \"age_at_collection\",\n       GEN_UNKNOWN.method::text as \"method\",\n       GEN_UNKNOWN.site::text as \"site\",\n       GEN_UNKNOWN.spatial_qualifier::text as \"spatial_qualifier\",\n       GEN_UNKNOWN.laterality::text as \"laterality\",\n       '' || '_' || md5('GREGoR_R03_GRU_20250612' || '|' || cast(coalesce(, '') as text))::text as \"has_access_policy\",\n       '' || '_' || md5('GREGoR_R03_GRU_20250612' || '|' || cast(coalesce(, '') as text))::text as \"id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_GRU_20250612_ftd_aliquot_external_id": {"database": "dbt", "schema": "main_GREGoR_R03_GRU_20250612_data", "name": "GREGoR_R03_GRU_20250612_ftd_aliquot_external_id", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_aliquot_external_id.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_aliquot_external_id.sql", "unique_id": "model.ftd.GREGoR_R03_GRU_20250612_ftd_aliquot_external_id", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "GREGoR_R03_GRU_20250612_ftd_aliquot_external_id"], "alias": "GREGoR_R03_GRU_20250612_ftd_aliquot_external_id", "checksum": {"name": "sha256", "checksum": "631c961284ba75c18dfeb7bbb7fc38001952fbeedc6da03f7f33c434656a6fd0"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_GRU_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_GRU_20250612_ftd_aliquot_external_id.", "columns": {"aliquot_id": {"name": "aliquot_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_GRU_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_GRU_20250612_data"}, "created_at": 1757448969.424715, "relation_name": "\"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_aliquot_external_id\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_GRU_20250612_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_GRU_20250612') }}::text as \"aliquot_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from {{ ref('GREGoR_R03_GRU_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_GRU_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_GRU_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_aliquot_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('GREGoR_R03_GRU_20250612' || '|' || cast(coalesce(, '') as text))::text as \"aliquot_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_GRU_20250612_ftd_sample_external_id": {"database": "dbt", "schema": "main_GREGoR_R03_GRU_20250612_data", "name": "GREGoR_R03_GRU_20250612_ftd_sample_external_id", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_sample_external_id.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_sample_external_id.sql", "unique_id": "model.ftd.GREGoR_R03_GRU_20250612_ftd_sample_external_id", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "GREGoR_R03_GRU_20250612_ftd_sample_external_id"], "alias": "GREGoR_R03_GRU_20250612_ftd_sample_external_id", "checksum": {"name": "sha256", "checksum": "ba88487f12aeb5c9657edf6a2de2c42cc82a331361e967fe1ce2c89353a61bf9"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_GRU_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_GRU_20250612_ftd_sample_external_id.", "columns": {"sample_id": {"name": "sample_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_GRU_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_GRU_20250612_data"}, "created_at": 1757448969.4222186, "relation_name": "\"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_sample_external_id\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_GRU_20250612_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_GRU_20250612') }}::text as \"sample_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from {{ ref('GREGoR_R03_GRU_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_GRU_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_GRU_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_sample_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('GREGoR_R03_GRU_20250612' || '|' || cast(coalesce(, '') as text))::text as \"sample_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_GRU_20250612_ftd_demographics": {"database": "dbt", "schema": "main_GREGoR_R03_GRU_20250612_data", "name": "GREGoR_R03_GRU_20250612_ftd_demographics", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_demographics.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_demographics.sql", "unique_id": "model.ftd.GREGoR_R03_GRU_20250612_ftd_demographics", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "GREGoR_R03_GRU_20250612_ftd_demographics"], "alias": "GREGoR_R03_GRU_20250612_ftd_demographics", "checksum": {"name": "sha256", "checksum": "b6a7b787cdeda84579f375b8c8b922eb1f205ae4b0d4492af0b5fb970020256e"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_GRU_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_GRU_20250612_ftd_demographics.", "columns": {"date_of_birth": {"name": "date_of_birth", "description": "Date at which the individual was born. May be impacted by privacy rules described in date_of_birth_type.", "meta": {}, "data_type": "integer", "constraints": [], "quote": null, "tags": [], "granularity": null}, "date_of_birth_type": {"name": "date_of_birth_type", "description": "Privacy rule modification applied to date_of_birth.", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "sex": {"name": "sex", "description": "Sex of the individual", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "sex_display": {"name": "sex_display", "description": "The friendly display string of the coded term for Sex", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "race_display": {"name": "race_display", "description": "The friendly display string of the coded term(s) for Race", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "ethnicity": {"name": "ethnicity", "description": "Reported ethnicity as defined by the 1997 OMB directives.", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "ethnicity_display": {"name": "ethnicity_display", "description": "The friendly display string of the coded term for Ethnicity", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "age_at_last_vital_status": {"name": "age_at_last_vital_status", "description": "Age at last vital status in decimal years.", "meta": {}, "data_type": "integer", "constraints": [], "quote": null, "tags": [], "granularity": null}, "vital_status": {"name": "vital_status", "description": "Vital Status", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_GRU_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_GRU_20250612_data"}, "created_at": 1757448969.4127514, "relation_name": "\"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_demographics\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_GRU_20250612_data') }}\n\n    with source as (\n        select DISTINCT\n        NULL as \"date_of_birth\",\n        NULL as \"date_of_birth_type\",\n        CASE \n            WHEN participant.sex = 'Female' THEN 'female'\n            WHEN participant.sex = 'Male' THEN 'male'\n            WHEN participant.sex = 'Unknown' THEN 'unknown'\n            WHEN participant.sex = 'Intersex' THEN 'intersex'\n            WHEN participant.sex IS NULL THEN 'unknown'\n            ELSE CONCAT('FTD_FLAG: unhandled sex: ',sex)\n        END::text as \"sex\",\n        participant.sex::text as \"sex_display\",\n        CASE\n            WHEN participant.reported_race IS NULL THEN 'unknown'\n            ELSE participant.reported_race\n        END::text as \"race_display\",\n        CASE\n            WHEN  participant.reported_ethnicity = 'Hispanic or Latino' THEN 'hispanic_or_latino'\n            WHEN  participant.reported_ethnicity = 'Not Hispanic or Latino' THEN 'not_hispanic_or_latino'\n            WHEN  participant.reported_ethnicity IS NULL THEN 'unknown'\n        END::text as \"ethnicity\",\n        CASE\n            WHEN participant.reported_ethnicity IS NULL THEN 'unknown'\n            ELSE participant.reported_ethnicity\n        END::text as \"ethnicity_display\",\n        participant.age_at_last_observation::integer as \"age_at_last_vital_status\",\n        NULL as \"vital_status\",\n       {{ generate_global_id(prefix='ap',descriptor=['participant.consent_code'], study_id='phs003047') }}::text as \"has_access_policy\",\n       {{ generate_global_id(prefix='dm',descriptor=['participant.participant_id'], study_id='phs003047') }}::text as \"id\"\n        from {{ ref('GREGoR_R03_GRU_20250612_stg_participant') }} as participant\n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_stg_participant", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_demographics.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select DISTINCT\n        NULL as \"date_of_birth\",\n        NULL as \"date_of_birth_type\",\n        CASE \n            WHEN participant.sex = 'Female' THEN 'female'\n            WHEN participant.sex = 'Male' THEN 'male'\n            WHEN participant.sex = 'Unknown' THEN 'unknown'\n            WHEN participant.sex = 'Intersex' THEN 'intersex'\n            WHEN participant.sex IS NULL THEN 'unknown'\n            ELSE CONCAT('FTD_FLAG: unhandled sex: ',sex)\n        END::text as \"sex\",\n        participant.sex::text as \"sex_display\",\n        CASE\n            WHEN participant.reported_race IS NULL THEN 'unknown'\n            ELSE participant.reported_race\n        END::text as \"race_display\",\n        CASE\n            WHEN  participant.reported_ethnicity = 'Hispanic or Latino' THEN 'hispanic_or_latino'\n            WHEN  participant.reported_ethnicity = 'Not Hispanic or Latino' THEN 'not_hispanic_or_latino'\n            WHEN  participant.reported_ethnicity IS NULL THEN 'unknown'\n        END::text as \"ethnicity\",\n        CASE\n            WHEN participant.reported_ethnicity IS NULL THEN 'unknown'\n            ELSE participant.reported_ethnicity\n        END::text as \"ethnicity_display\",\n        participant.age_at_last_observation::integer as \"age_at_last_vital_status\",\n        NULL as \"vital_status\",\n       'ap' || '_' || md5('phs003047' || '|' || cast(coalesce(participant.consent_code, '') as text))::text as \"has_access_policy\",\n       'dm' || '_' || md5('phs003047' || '|' || cast(coalesce(participant.participant_id, '') as text))::text as \"id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_participant\" as participant\n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_GRU_20250612_ftd_subjectassertion": {"database": "dbt", "schema": "main_GREGoR_R03_GRU_20250612_data", "name": "GREGoR_R03_GRU_20250612_ftd_subjectassertion", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_subjectassertion.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_subjectassertion.sql", "unique_id": "model.ftd.GREGoR_R03_GRU_20250612_ftd_subjectassertion", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "GREGoR_R03_GRU_20250612_ftd_subjectassertion"], "alias": "GREGoR_R03_GRU_20250612_ftd_subjectassertion", "checksum": {"name": "sha256", "checksum": "7a8ad882575708a88e9175b6bf44719fef14e9c9c112432f8e6896fe691d5bf5"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_GRU_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_GRU_20250612_ftd_subjectassertion.", "columns": {"assertion_type": {"name": "assertion_type", "description": "The semantic type of the resource, eg, Condition.", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "age_at_assertion": {"name": "age_at_assertion", "description": "The age in decimal years of the Subject when the assertion was made.", "meta": {}, "data_type": "number", "constraints": [], "quote": null, "tags": [], "granularity": null}, "age_at_event": {"name": "age_at_event", "description": "The age in decimal years of the Subject at the time point which the assertion describes, | eg, age of onset or when a measurement was performed.", "meta": {}, "data_type": "number", "constraints": [], "quote": null, "tags": [], "granularity": null}, "age_at_resolution": {"name": "age_at_resolution", "description": "The age in decimal years of the Subject when the asserted state was resolved.", "meta": {}, "data_type": "number", "constraints": [], "quote": null, "tags": [], "granularity": null}, "code": {"name": "code", "description": "The structured term defining the meaning of the assertion.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "display": {"name": "display", "description": "The friendly display string of the coded term", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "value_code": {"name": "value_code", "description": "The structured term defining the value of the assertion.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "value_display": {"name": "value_display", "description": "The friendly display string of the coded term for the value of the assertion.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "value_number": {"name": "value_number", "description": "The numeric value of the assertion.", "meta": {}, "data_type": "number", "constraints": [], "quote": null, "tags": [], "granularity": null}, "value_units": {"name": "value_units", "description": "The structured term defining the units of the value.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "value_units_display": {"name": "value_units_display", "description": "The friendly display string of units of the value.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "subject_id": {"name": "subject_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_GRU_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_GRU_20250612_data"}, "created_at": 1757448969.4014597, "relation_name": "\"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_subjectassertion\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_GRU_20250612_data') }}\n\n    with code_cte as (\n        select DISTINCT\n        phenotype.participant_id,\n         CASE \n            WHEN UPPER(phenotype.ontology) = 'HPO' THEN 'HP'\n            WHEN UPPER(phenotype.ontology) = 'MONDO' THEN 'MONDO'\n            WHEN UPPER(phenotype.ontology) = 'MAXO' THEN 'MAXO'\n            WHEN UPPER(phenotype.ontology) = 'NCIT' THEN 'NCIT'\n            WHEN UPPER(phenotype.ontology) = 'SNOMED CT' THEN 'SNOMED'\n            WHEN UPPER(phenotype.ontology) = 'SYMP' THEN 'SYMP'\n            WHEN UPPER(phenotype.ontology) = 'LOINC' THEN 'LOINC'\n            WHEN UPPER(phenotype.ontology) = 'MEDDRA' THEN 'MEDDRA'\n            WHEN UPPER(phenotype.ontology) = 'MESH' THEN 'MESH'\n            WHEN UPPER(phenotype.ontology) = 'UCUM' THEN 'UCUM'\n            WHEN UPPER(phenotype.ontology) = 'OMIT' THEN 'OMIT'\n            WHEN UPPER(phenotype.ontology) = 'OMIM' THEN 'MIM'\n            WHEN UPPER(phenotype.ontology) = 'CDCREC' THEN 'CDCREC'\n            ELSE phenotype.ontology\n        END || ':' || SPLIT_PART(phenotype.term_id, ':', 2)::text as \"code\",\n        ),\n        source as (\n        select DISTINCT\n        NULL as \"assertion_type\",\n        NULL as \"age_at_assertion\",\n        phenotype.onset_age_range::text as \"age_at_event\",\n        NULL as \"age_at_resolution\",\n        code_cte.code,\n        NULL as \"display\",\n        CASE \n            WHEN LOWER(participant.affected_status) = 'affected' THEN 'LA9633-4'\n            WHEN LOWER(participant.affected_status) = 'unaffected' THEN 'LA9634-2'\n            WHEN LOWER(participant.affected_status) = 'unknown' THEN 'LA4489-6'\n            WHEN LOWER(participant.affected_status) = 'possibly affected' THEN 'LA15097-1'\n            WHEN participant.affected_status is null THEN 'LA4489-6'\n            ELSE CONCAT('FTD_FLAG: unhandled value_code: ', affected_status)\n        END::text as \"value_code\",\n        CASE \n            WHEN LOWER(participant.affected_status) = 'unaffected' THEN 'Absent'\n            WHEN LOWER(participant.affected_status) = 'affected' THEN 'Present'\n            WHEN LOWER(participant.affected_status) = 'unknown' THEN 'Unknown'\n            WHEN LOWER(participant.affected_status) = 'possibly affected' THEN 'Possible'\n            WHEN participant.affected_status IS NULL THEN 'Unknown'\n            ELSE CONCAT('FTD_FLAG: unhandled value_display: ', presence)\n        END::text as \"value_display\",\n        participant.age_at_enrollment::text as \"value_number\",\n        NULL as \"value_units\",\n        NULL as \"value_units_display\",\n        {{ generate_global_id(prefix='ap',descriptor=['participant.consent_code'], study_id='phs003047') }}::text as \"has_access_policy\",\n       {{ generate_global_id(prefix='sa',descriptor=['participant.participant_id', 'code_cte.code'], study_id='phs003047') }}::text as \"id\",\n       {{ generate_global_id(prefix='sb',descriptor=['phenotype.participant_id'], study_id='phs003047') }}::text as \"Subject_id\"\n        from {{ ref('GREGoR_R03_GRU_20250612_stg_participant') }} as participant\n        left join {{ ref('GREGoR_R03_GRU_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n        left join code_cte\n         on phenotype.participant_id = code_cte.participant_id\n    )\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_GRU_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_subjectassertion.sql", "compiled": true, "compiled_code": "\n\n    with code_cte as (\n        select DISTINCT\n        phenotype.participant_id,\n         CASE \n            WHEN UPPER(phenotype.ontology) = 'HPO' THEN 'HP'\n            WHEN UPPER(phenotype.ontology) = 'MONDO' THEN 'MONDO'\n            WHEN UPPER(phenotype.ontology) = 'MAXO' THEN 'MAXO'\n            WHEN UPPER(phenotype.ontology) = 'NCIT' THEN 'NCIT'\n            WHEN UPPER(phenotype.ontology) = 'SNOMED CT' THEN 'SNOMED'\n            WHEN UPPER(phenotype.ontology) = 'SYMP' THEN 'SYMP'\n            WHEN UPPER(phenotype.ontology) = 'LOINC' THEN 'LOINC'\n            WHEN UPPER(phenotype.ontology) = 'MEDDRA' THEN 'MEDDRA'\n            WHEN UPPER(phenotype.ontology) = 'MESH' THEN 'MESH'\n            WHEN UPPER(phenotype.ontology) = 'UCUM' THEN 'UCUM'\n            WHEN UPPER(phenotype.ontology) = 'OMIT' THEN 'OMIT'\n            WHEN UPPER(phenotype.ontology) = 'OMIM' THEN 'MIM'\n            WHEN UPPER(phenotype.ontology) = 'CDCREC' THEN 'CDCREC'\n            ELSE phenotype.ontology\n        END || ':' || SPLIT_PART(phenotype.term_id, ':', 2)::text as \"code\",\n        ),\n        source as (\n        select DISTINCT\n        NULL as \"assertion_type\",\n        NULL as \"age_at_assertion\",\n        phenotype.onset_age_range::text as \"age_at_event\",\n        NULL as \"age_at_resolution\",\n        code_cte.code,\n        NULL as \"display\",\n        CASE \n            WHEN LOWER(participant.affected_status) = 'affected' THEN 'LA9633-4'\n            WHEN LOWER(participant.affected_status) = 'unaffected' THEN 'LA9634-2'\n            WHEN LOWER(participant.affected_status) = 'unknown' THEN 'LA4489-6'\n            WHEN LOWER(participant.affected_status) = 'possibly affected' THEN 'LA15097-1'\n            WHEN participant.affected_status is null THEN 'LA4489-6'\n            ELSE CONCAT('FTD_FLAG: unhandled value_code: ', affected_status)\n        END::text as \"value_code\",\n        CASE \n            WHEN LOWER(participant.affected_status) = 'unaffected' THEN 'Absent'\n            WHEN LOWER(participant.affected_status) = 'affected' THEN 'Present'\n            WHEN LOWER(participant.affected_status) = 'unknown' THEN 'Unknown'\n            WHEN LOWER(participant.affected_status) = 'possibly affected' THEN 'Possible'\n            WHEN participant.affected_status IS NULL THEN 'Unknown'\n            ELSE CONCAT('FTD_FLAG: unhandled value_display: ', presence)\n        END::text as \"value_display\",\n        participant.age_at_enrollment::text as \"value_number\",\n        NULL as \"value_units\",\n        NULL as \"value_units_display\",\n        'ap' || '_' || md5('phs003047' || '|' || cast(coalesce(participant.consent_code, '') as text))::text as \"has_access_policy\",\n       'sa' || '_' || md5('phs003047' || '|' || cast(coalesce(participant.participant_id, '') as text) || '|' || 'phs003047' || '|' || cast(coalesce(code_cte.code, '') as text))::text as \"id\",\n       'sb' || '_' || md5('phs003047' || '|' || cast(coalesce(phenotype.participant_id, '') as text))::text as \"Subject_id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_participant\" as participant\n        left join \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n        left join code_cte\n         on phenotype.participant_id = code_cte.participant_id\n    )\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_GRU_20250612_ftd_datasource_external_id": {"database": "dbt", "schema": "main_GREGoR_R03_GRU_20250612_data", "name": "GREGoR_R03_GRU_20250612_ftd_datasource_external_id", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_datasource_external_id.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_datasource_external_id.sql", "unique_id": "model.ftd.GREGoR_R03_GRU_20250612_ftd_datasource_external_id", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "GREGoR_R03_GRU_20250612_ftd_datasource_external_id"], "alias": "GREGoR_R03_GRU_20250612_ftd_datasource_external_id", "checksum": {"name": "sha256", "checksum": "d6aada18738120530c492f88a9bbef58db7778ae6b68e822873594851fb8158b"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_GRU_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_GRU_20250612_ftd_datasource_external_id.", "columns": {"datasource_id": {"name": "datasource_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_GRU_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_GRU_20250612_data"}, "created_at": 1757448969.420826, "relation_name": "\"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_datasource_external_id\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_GRU_20250612_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_GRU_20250612') }}::text as \"datasource_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from {{ ref('GREGoR_R03_GRU_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_GRU_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id  join {{ ref('GREGoR_R03_GRU_20250612_stg_experiment') }} as experiment\non   join {{ ref('GREGoR_R03_GRU_20250612_stg_anvil_project') }} as anvil_project\non  \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_GRU_20250612_stg_phenotype", "package": null, "version": null}, {"name": "GREGoR_R03_GRU_20250612_stg_experiment", "package": null, "version": null}, {"name": "GREGoR_R03_GRU_20250612_stg_anvil_project", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_experiment", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_anvil_project"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_datasource_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('GREGoR_R03_GRU_20250612' || '|' || cast(coalesce(, '') as text))::text as \"datasource_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id  join \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_experiment\" as experiment\non   join \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_anvil_project\" as anvil_project\non  \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_GRU_20250612_ftd_file_subject": {"database": "dbt", "schema": "main_GREGoR_R03_GRU_20250612_data", "name": "GREGoR_R03_GRU_20250612_ftd_file_subject", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_file_subject.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_file_subject.sql", "unique_id": "model.ftd.GREGoR_R03_GRU_20250612_ftd_file_subject", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "GREGoR_R03_GRU_20250612_ftd_file_subject"], "alias": "GREGoR_R03_GRU_20250612_ftd_file_subject", "checksum": {"name": "sha256", "checksum": "7f6c4a0e7eb85bfeae8dc26f7bc9fa7d8266cbd374a33cec78e55c80b0ecd2d2"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_GRU_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_GRU_20250612_ftd_file_subject.", "columns": {"file_id": {"name": "file_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "subject_id": {"name": "subject_id", "description": "The Subject(s) which this file describes.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_GRU_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_GRU_20250612_data"}, "created_at": 1757448969.419206, "relation_name": "\"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_file_subject\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_GRU_20250612_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_GRU_20250612') }}::text as \"file_id\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_GRU_20250612') }}::text as \"subject_id\"\n        from {{ ref('GREGoR_R03_GRU_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_GRU_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_GRU_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_file_subject.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('GREGoR_R03_GRU_20250612' || '|' || cast(coalesce(, '') as text))::text as \"file_id\",\n       '' || '_' || md5('GREGoR_R03_GRU_20250612' || '|' || cast(coalesce(, '') as text))::text as \"subject_id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_GRU_20250612_ftd_study_principal_investigator": {"database": "dbt", "schema": "main_GREGoR_R03_GRU_20250612_data", "name": "GREGoR_R03_GRU_20250612_ftd_study_principal_investigator", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_study_principal_investigator.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_study_principal_investigator.sql", "unique_id": "model.ftd.GREGoR_R03_GRU_20250612_ftd_study_principal_investigator", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "GREGoR_R03_GRU_20250612_ftd_study_principal_investigator"], "alias": "GREGoR_R03_GRU_20250612_ftd_study_principal_investigator", "checksum": {"name": "sha256", "checksum": "f98690ab5a302406aee68a96a6e6b6800e8e9c2e76b409523f01a34a64cf3d0e"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_GRU_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_GRU_20250612_ftd_study_principal_investigator.", "columns": {"study_id": {"name": "study_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "principal_investigator": {"name": "principal_investigator", "description": "Principal Investigator", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_GRU_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_GRU_20250612_data"}, "created_at": 1757448969.4139483, "relation_name": "\"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_study_principal_investigator\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_GRU_20250612_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_GRU_20250612') }}::text as \"study_id\",\n       GEN_UNKNOWN.principal_investigator::text as \"principal_investigator\"\n        from {{ ref('GREGoR_R03_GRU_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_GRU_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_GRU_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_study_principal_investigator.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('GREGoR_R03_GRU_20250612' || '|' || cast(coalesce(, '') as text))::text as \"study_id\",\n       GEN_UNKNOWN.principal_investigator::text as \"principal_investigator\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_external_id": {"database": "dbt", "schema": "main_GREGoR_R03_GRU_20250612_data", "name": "GREGoR_R03_GRU_20250612_ftd_demographics_external_id", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_demographics_external_id.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_demographics_external_id.sql", "unique_id": "model.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_external_id", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "GREGoR_R03_GRU_20250612_ftd_demographics_external_id"], "alias": "GREGoR_R03_GRU_20250612_ftd_demographics_external_id", "checksum": {"name": "sha256", "checksum": "691016ae58c756e0ee88841e8f77a26346a4f22ba15829fd5920c6c16059841c"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_GRU_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_GRU_20250612_ftd_demographics_external_id.", "columns": {"demographics_id": {"name": "demographics_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_GRU_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_GRU_20250612_data"}, "created_at": 1757448969.4235322, "relation_name": "\"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_demographics_external_id\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_GRU_20250612_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='dm',descriptor=['participant.participant_id'], study_id='GREGoR_R03_GRU_20250612') }}::text as \"Demographics_id\",\n    --    GEN_UNKNOWN.external_id::text as \"external_id\"\n       from {{ ref('GREGoR_R03_GRU_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_GRU_20250612_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_GRU_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_demographics_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        'dm' || '_' || md5('GREGoR_R03_GRU_20250612' || '|' || cast(coalesce(participant.participant_id, '') as text))::text as \"Demographics_id\",\n    --    GEN_UNKNOWN.external_id::text as \"external_id\"\n       from \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GREGoR_R03_GRU_20250612_ftd_familyrelationship_external_id": {"database": "dbt", "schema": "main_GREGoR_R03_GRU_20250612_data", "name": "GREGoR_R03_GRU_20250612_ftd_familyrelationship_external_id", "resource_type": "model", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_familyrelationship_external_id.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_familyrelationship_external_id.sql", "unique_id": "model.ftd.GREGoR_R03_GRU_20250612_ftd_familyrelationship_external_id", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "GREGoR_R03_GRU_20250612_ftd_familyrelationship_external_id"], "alias": "GREGoR_R03_GRU_20250612_ftd_familyrelationship_external_id", "checksum": {"name": "sha256", "checksum": "6be4bd773e2b337c426933e606a6c4046de5e6ea316267c5fca52645cd17c532"}, "config": {"enabled": true, "alias": null, "schema": "GREGoR_R03_GRU_20250612_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GREGoR_R03_GRU_20250612_ftd_familyrelationship_external_id.", "columns": {"familyrelationship_id": {"name": "familyrelationship_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GREGoR_R03_GRU_20250612/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GREGoR_R03_GRU_20250612_data"}, "created_at": 1757448969.42263, "relation_name": "\"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_familyrelationship_external_id\"", "raw_code": "{{ config(materialized='table', schema='GREGoR_R03_GRU_20250612_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='fm',descriptor=['participant.participant_id, participant.family_id'], study_id='phs003047') }}::text as \"familyMember_id\",\n        participant.participant_id::text as \"external_id\"\n        from {{ ref('GREGoR_R03_GRU_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_GRU_20250612_stg_phenotype') }} as phenotype\n        on participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_GRU_20250612_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/GREGoR_R03_GRU_20250612_ftd_familyrelationship_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        'fm' || '_' || md5('phs003047' || '|' || cast(coalesce(participant.participant_id, participant.family_id, '') as text))::text as \"familyMember_id\",\n        participant.participant_id::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_phenotype\" as phenotype\n        on participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.cmg_bh_ftd_sample": {"database": "dbt", "schema": "main_cmg_bh_data", "name": "cmg_bh_ftd_sample", "resource_type": "model", "package_name": "ftd", "path": "cmg_bh/cmg_bh_ftd_sample.sql", "original_file_path": "models/cmg_bh/cmg_bh_ftd_sample.sql", "unique_id": "model.ftd.cmg_bh_ftd_sample", "fqn": ["ftd", "cmg_bh", "cmg_bh_ftd_sample"], "alias": "cmg_bh_ftd_sample", "checksum": {"name": "sha256", "checksum": "cbd5a586e41110b95308cc98679d9596c56cfcee821f1a86efce711b9573b4ad"}, "config": {"enabled": true, "alias": null, "schema": "cmg_bh_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for cmg_bh_ftd_sample.", "columns": {"parent_sample": {"name": "parent_sample", "description": "Sample from which this sample is derived", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "sample_type": {"name": "sample_type", "description": "Type of material of which this Sample is comprised", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "availablity_status": {"name": "availablity_status", "description": "Can this Sample be requested for further analysis?", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "quantity_number": {"name": "quantity_number", "description": "The total quantity of the specimen", "meta": {}, "data_type": "number", "constraints": [], "quote": null, "tags": [], "granularity": null}, "quantity_units": {"name": "quantity_units", "description": "The structured term defining the units of the quantity.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "subject_id": {"name": "subject_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "biospecimen_collection_id": {"name": "biospecimen_collection_id", "description": "Biospecimen Collection that generated this sample.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/cmg_bh/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "cmg_bh_data"}, "created_at": 1757448969.4723418, "relation_name": "\"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_sample\"", "raw_code": "{{ config(materialized='table', schema='cmg_bh_data') }}\n\nselect \n  distinct\n--   { { generate_global_id(prefix='sm',descriptor=['sample_id'], study_id='cmg_bh') }}::text as \"parent_sample\",\n  NULL::text as \"parent_sample\",\n  sample_source::text as \"sample_type\",\n  NULL::text as \"availablity_status\",\n  NULL::text as \"quantity_number\",\n  NULL::text as \"quantity_units\",\n  {{ generate_global_id(prefix='ap',descriptor=['ingest_provenance'], study_id='cmg_bh') }}::text as \"has_access_policy\",\n  {{ generate_global_id(prefix='sm',descriptor=['sample_id','subject_id'], study_id='cmg_bh') }}::text as \"id\",\n  {{ generate_global_id(prefix='sb',descriptor=['subject_id'], study_id='cmg_bh') }}::text as \"subject_id\",\n--   {  { generate_global_id(prefix='bc',descriptor=['sample_id','{TBD}'], study_id='cmg_bh') }}::text as \"biospecimen_collection_id\"\n  NULL::text as \"biospecimen_collection_id\"\nfrom (select distinct sample_id, subject_id, sample_source, sam.ingest_provenance as ingest_provenance\n    from (\n        select distinct subject_id, replace(ingest_provenance,'sample_','') as access, ingest_provenance, sample_source, sample_id \n        from {{ ref('cmg_bh_stg_sample') }}\n        ) as sam\n    left join (\n        select distinct subject_id, replace(ingest_provenance,'subject_','') as access, ingest_provenance \n        from {{ ref('cmg_bh_stg_subject') }}\n        ) as sub\n    using (subject_id, access)\n    ) as f", "language": "sql", "refs": [{"name": "cmg_bh_stg_sample", "package": null, "version": null}, {"name": "cmg_bh_stg_subject", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.cmg_bh.cmg_bh_stg_sample", "model.cmg_bh.cmg_bh_stg_subject"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/cmg_bh_ftd_sample.sql", "compiled": true, "compiled_code": "\n\nselect \n  distinct\n--   { { generate_global_id(prefix='sm',descriptor=['sample_id'], study_id='cmg_bh') }}::text as \"parent_sample\",\n  NULL::text as \"parent_sample\",\n  sample_source::text as \"sample_type\",\n  NULL::text as \"availablity_status\",\n  NULL::text as \"quantity_number\",\n  NULL::text as \"quantity_units\",\n  'ap' || '_' || md5('cmg_bh' || '|' || cast(coalesce(ingest_provenance, '') as text))::text as \"has_access_policy\",\n  'sm' || '_' || md5('cmg_bh' || '|' || cast(coalesce(sample_id, '') as text) || '|' || 'cmg_bh' || '|' || cast(coalesce(subject_id, '') as text))::text as \"id\",\n  'sb' || '_' || md5('cmg_bh' || '|' || cast(coalesce(subject_id, '') as text))::text as \"subject_id\",\n--   {  { generate_global_id(prefix='bc',descriptor=['sample_id','{TBD}'], study_id='cmg_bh') }}::text as \"biospecimen_collection_id\"\n  NULL::text as \"biospecimen_collection_id\"\nfrom (select distinct sample_id, subject_id, sample_source, sam.ingest_provenance as ingest_provenance\n    from (\n        select distinct subject_id, replace(ingest_provenance,'sample_','') as access, ingest_provenance, sample_source, sample_id \n        from \"dbt\".\"main_main\".\"cmg_bh_stg_sample\"\n        ) as sam\n    left join (\n        select distinct subject_id, replace(ingest_provenance,'subject_','') as access, ingest_provenance \n        from \"dbt\".\"main_main\".\"cmg_bh_stg_subject\"\n        ) as sub\n    using (subject_id, access)\n    ) as f", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.cmg_bh_ftd_demographics_source_data": {"database": "dbt", "schema": "main_cmg_bh_data", "name": "cmg_bh_ftd_demographics_source_data", "resource_type": "model", "package_name": "ftd", "path": "cmg_bh/cmg_bh_ftd_demographics_source_data.sql", "original_file_path": "models/cmg_bh/cmg_bh_ftd_demographics_source_data.sql", "unique_id": "model.ftd.cmg_bh_ftd_demographics_source_data", "fqn": ["ftd", "cmg_bh", "cmg_bh_ftd_demographics_source_data"], "alias": "cmg_bh_ftd_demographics_source_data", "checksum": {"name": "sha256", "checksum": "d1e214c123bb11c9b0a1c6339d7f1a0a01609b3a4806e0113e481a3e54c7e4fe"}, "config": {"enabled": true, "alias": null, "schema": "cmg_bh_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for cmg_bh_ftd_demographics_source_data.", "columns": {"demographics_id": {"name": "demographics_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "source_data_id": {"name": "source_data_id", "description": "The sources from which this assertion was derived", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/cmg_bh/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "cmg_bh_data"}, "created_at": 1757448969.4715924, "relation_name": "\"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_demographics_source_data\"", "raw_code": "{{ config(materialized='table', schema='cmg_bh_data') }}\n\nselect \n  {{ generate_global_id(prefix='dm',descriptor=['subject_id'], study_id='cmg_bh') }}::text as \"demographics_id\",\n  {{ generate_global_id(prefix='sd',descriptor=['dbgap_study_id'], study_id='cmg_bh') }}::text as \"source_data_id\"\nfrom (select distinct subject_id, dbgap_study_id from {{ ref('cmg_bh_stg_subject') }} ) as s", "language": "sql", "refs": [{"name": "cmg_bh_stg_subject", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.cmg_bh.cmg_bh_stg_subject"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/cmg_bh_ftd_demographics_source_data.sql", "compiled": true, "compiled_code": "\n\nselect \n  'dm' || '_' || md5('cmg_bh' || '|' || cast(coalesce(subject_id, '') as text))::text as \"demographics_id\",\n  'sd' || '_' || md5('cmg_bh' || '|' || cast(coalesce(dbgap_study_id, '') as text))::text as \"source_data_id\"\nfrom (select distinct subject_id, dbgap_study_id from \"dbt\".\"main_main\".\"cmg_bh_stg_subject\" ) as s", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.cmg_bh_ftd_sourcedata": {"database": "dbt", "schema": "main_cmg_bh_data", "name": "cmg_bh_ftd_sourcedata", "resource_type": "model", "package_name": "ftd", "path": "cmg_bh/cmg_bh_ftd_sourcedata.sql", "original_file_path": "models/cmg_bh/cmg_bh_ftd_sourcedata.sql", "unique_id": "model.ftd.cmg_bh_ftd_sourcedata", "fqn": ["ftd", "cmg_bh", "cmg_bh_ftd_sourcedata"], "alias": "cmg_bh_ftd_sourcedata", "checksum": {"name": "sha256", "checksum": "5406bd05e56e5bdb5bc58167486847f41aee38277d87cf695df0523c6d108832"}, "config": {"enabled": true, "alias": null, "schema": "cmg_bh_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for cmg_bh_ftd_sourcedata.", "columns": {"data_source": {"name": "data_source", "description": "Defines the location of data and how to query it.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/cmg_bh/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "cmg_bh_data"}, "created_at": 1757448969.4751549, "relation_name": "\"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_sourcedata\"", "raw_code": "{{ config(materialized='table', schema='cmg_bh_data') }}\n\nselect \n  {{ generate_global_id(prefix='ds',descriptor=['dbgap_study_id'], study_id='cmg_bh') }}::text as \"data_source\",\n  {{ generate_global_id(prefix='ap',descriptor=['ingest_provenance'], study_id='cmg_bh') }}::text as \"has_access_policy\",\n  {{ generate_global_id(prefix='sd',descriptor=['dbgap_study_id'], study_id='cmg_bh') }}::text as \"id\"\nfrom (select distinct dbgap_study_id, ingest_provenance from {{ ref('cmg_bh_stg_subject') }} ) as s", "language": "sql", "refs": [{"name": "cmg_bh_stg_subject", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.cmg_bh.cmg_bh_stg_subject"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/cmg_bh_ftd_sourcedata.sql", "compiled": true, "compiled_code": "\n\nselect \n  'ds' || '_' || md5('cmg_bh' || '|' || cast(coalesce(dbgap_study_id, '') as text))::text as \"data_source\",\n  'ap' || '_' || md5('cmg_bh' || '|' || cast(coalesce(ingest_provenance, '') as text))::text as \"has_access_policy\",\n  'sd' || '_' || md5('cmg_bh' || '|' || cast(coalesce(dbgap_study_id, '') as text))::text as \"id\"\nfrom (select distinct dbgap_study_id, ingest_provenance from \"dbt\".\"main_main\".\"cmg_bh_stg_subject\" ) as s", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.cmg_bh_ftd_study_external_id": {"database": "dbt", "schema": "main_cmg_bh_data", "name": "cmg_bh_ftd_study_external_id", "resource_type": "model", "package_name": "ftd", "path": "cmg_bh/cmg_bh_ftd_study_external_id.sql", "original_file_path": "models/cmg_bh/cmg_bh_ftd_study_external_id.sql", "unique_id": "model.ftd.cmg_bh_ftd_study_external_id", "fqn": ["ftd", "cmg_bh", "cmg_bh_ftd_study_external_id"], "alias": "cmg_bh_ftd_study_external_id", "checksum": {"name": "sha256", "checksum": "e0bd8777bced455a973eae55d52a8e73bac91f0f1d2b78edaec2ff363c5b8a4c"}, "config": {"enabled": true, "alias": null, "schema": "cmg_bh_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for cmg_bh_ftd_study_external_id.", "columns": {"study_id": {"name": "study_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/cmg_bh/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "cmg_bh_data"}, "created_at": 1757448969.4665954, "relation_name": "\"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_study_external_id\"", "raw_code": "{{ config(materialized='table', schema='cmg_bh_data') }}\n\nselect \n  {{ generate_global_id(prefix='st',descriptor=['dbgap_study_id'], study_id='cmg_bh') }}::text as \"study_id\",\n  dbgap_study_id::text as \"external_id\"\nfrom (select distinct dbgap_study_id from {{ ref('cmg_bh_stg_subject') }}) as s", "language": "sql", "refs": [{"name": "cmg_bh_stg_subject", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.cmg_bh.cmg_bh_stg_subject"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/cmg_bh_ftd_study_external_id.sql", "compiled": true, "compiled_code": "\n\nselect \n  'st' || '_' || md5('cmg_bh' || '|' || cast(coalesce(dbgap_study_id, '') as text))::text as \"study_id\",\n  dbgap_study_id::text as \"external_id\"\nfrom (select distinct dbgap_study_id from \"dbt\".\"main_main\".\"cmg_bh_stg_subject\") as s", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.cmg_bh_ftd_file_subject": {"database": "dbt", "schema": "main_cmg_bh_data", "name": "cmg_bh_ftd_file_subject", "resource_type": "model", "package_name": "ftd", "path": "cmg_bh/cmg_bh_ftd_file_subject.sql", "original_file_path": "models/cmg_bh/cmg_bh_ftd_file_subject.sql", "unique_id": "model.ftd.cmg_bh_ftd_file_subject", "fqn": ["ftd", "cmg_bh", "cmg_bh_ftd_file_subject"], "alias": "cmg_bh_ftd_file_subject", "checksum": {"name": "sha256", "checksum": "2c9fd1670f16d885d07a7d63908bdadad4e7797b8f8af1783e07ef6e106ddd34"}, "config": {"enabled": true, "alias": null, "schema": "cmg_bh_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for cmg_bh_ftd_file_subject.", "columns": {"file_id": {"name": "file_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "subject_id": {"name": "subject_id", "description": "The Subject(s) which this file describes.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/cmg_bh/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "cmg_bh_data"}, "created_at": 1757448969.475584, "relation_name": "\"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_file_subject\"", "raw_code": "{{ config(materialized='table', schema='cmg_bh_data') }}\n{%- set relation = ref('cmg_bh_stg_sample') -%}\n{%- set constant_columns = ['ftd_index','sample_id','subject_id','ingest_provenance','Submission_Batch','dbgap_sample_id','sample_provider','sample_source','tissue_affected_status'] -%}\n{%- set sample_columns = get_columns(relation=relation, exclude=constant_columns) -%}\n\nwith \nunpivot_df as (\n    {%- for col in sample_columns -%}\n        select\n            distinct\n            subject_id,\n            ingest_provenance,\n            '{{ col }}' as \"file_type\",\n            cast({{ col }} as varchar) as \"drs_uri\"\n        from {{ ref('cmg_bh_stg_sample') }}\n        where {{ col }} IS NOT NULL\n        {% if not loop.last %}union all{% endif %}\n    {% endfor %}\n)\nselect \n  {{ generate_global_id(prefix='fl',descriptor=['drs_uri'], study_id='cmg_bh') }}::text as \"file_id\",\n  {{ generate_global_id(prefix='sm',descriptor=['subject_id'], study_id='cmg_bh') }}::text as \"subject_id\"\nfrom unpivot_df", "language": "sql", "refs": [{"name": "cmg_bh_stg_sample", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.get_columns", "macro.base.generate_global_id"], "nodes": ["model.cmg_bh.cmg_bh_stg_sample"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/cmg_bh_ftd_file_subject.sql", "compiled": true, "compiled_code": "with \nunpivot_df as (\n)\nselect \n  'fl' || '_' || md5('cmg_bh' || '|' || cast(coalesce(drs_uri, '') as text))::text as \"file_id\",\n  'sm' || '_' || md5('cmg_bh' || '|' || cast(coalesce(subject_id, '') as text))::text as \"subject_id\"\nfrom unpivot_df", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.cmg_bh_ftd_sample_external_id": {"database": "dbt", "schema": "main_cmg_bh_data", "name": "cmg_bh_ftd_sample_external_id", "resource_type": "model", "package_name": "ftd", "path": "cmg_bh/cmg_bh_ftd_sample_external_id.sql", "original_file_path": "models/cmg_bh/cmg_bh_ftd_sample_external_id.sql", "unique_id": "model.ftd.cmg_bh_ftd_sample_external_id", "fqn": ["ftd", "cmg_bh", "cmg_bh_ftd_sample_external_id"], "alias": "cmg_bh_ftd_sample_external_id", "checksum": {"name": "sha256", "checksum": "47185c2925e8781a285a70b21dc32e5ce9d06f7e9e419a881419ad79272a14ad"}, "config": {"enabled": true, "alias": null, "schema": "cmg_bh_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for cmg_bh_ftd_sample_external_id.", "columns": {"sample_id": {"name": "sample_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/cmg_bh/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "cmg_bh_data"}, "created_at": 1757448969.4643335, "relation_name": "\"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_sample_external_id\"", "raw_code": "{{ config(materialized='table', schema='cmg_bh_data') }}\n\nselect \n  distinct\n  {{ generate_global_id(prefix='sm',descriptor=['sample_id','subject_id'], study_id='cmg_bh') }}::text as \"sample_id\",\n  sample_id::text as \"external_id\"\nfrom (select distinct sample_id, subject_id, sample_source, sam.ingest_provenance as ingest_provenance\n    from (\n        select distinct subject_id, replace(ingest_provenance,'sample_','') as access, ingest_provenance, sample_source, sample_id \n        from {{ ref('cmg_bh_stg_sample') }}\n        ) as sam\n    left join (\n        select distinct subject_id, replace(ingest_provenance,'subject_','') as access, ingest_provenance \n        from {{ ref('cmg_bh_stg_subject') }}\n        ) as sub\n    using (subject_id, access)\n    ) as f", "language": "sql", "refs": [{"name": "cmg_bh_stg_sample", "package": null, "version": null}, {"name": "cmg_bh_stg_subject", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.cmg_bh.cmg_bh_stg_sample", "model.cmg_bh.cmg_bh_stg_subject"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/cmg_bh_ftd_sample_external_id.sql", "compiled": true, "compiled_code": "\n\nselect \n  distinct\n  'sm' || '_' || md5('cmg_bh' || '|' || cast(coalesce(sample_id, '') as text) || '|' || 'cmg_bh' || '|' || cast(coalesce(subject_id, '') as text))::text as \"sample_id\",\n  sample_id::text as \"external_id\"\nfrom (select distinct sample_id, subject_id, sample_source, sam.ingest_provenance as ingest_provenance\n    from (\n        select distinct subject_id, replace(ingest_provenance,'sample_','') as access, ingest_provenance, sample_source, sample_id \n        from \"dbt\".\"main_main\".\"cmg_bh_stg_sample\"\n        ) as sam\n    left join (\n        select distinct subject_id, replace(ingest_provenance,'subject_','') as access, ingest_provenance \n        from \"dbt\".\"main_main\".\"cmg_bh_stg_subject\"\n        ) as sub\n    using (subject_id, access)\n    ) as f", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.cmg_bh_ftd_demographics": {"database": "dbt", "schema": "main_cmg_bh_data", "name": "cmg_bh_ftd_demographics", "resource_type": "model", "package_name": "ftd", "path": "cmg_bh/cmg_bh_ftd_demographics.sql", "original_file_path": "models/cmg_bh/cmg_bh_ftd_demographics.sql", "unique_id": "model.ftd.cmg_bh_ftd_demographics", "fqn": ["ftd", "cmg_bh", "cmg_bh_ftd_demographics"], "alias": "cmg_bh_ftd_demographics", "checksum": {"name": "sha256", "checksum": "bc80e63cf3f9fec0876d53bf7689ed9da07a22d584fd083d780f7d040e8ef624"}, "config": {"enabled": true, "alias": null, "schema": "cmg_bh_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for cmg_bh_ftd_demographics.", "columns": {"date_of_birth": {"name": "date_of_birth", "description": "Date at which the individual was born. May be impacted by privacy rules described in date_of_birth_type.", "meta": {}, "data_type": "integer", "constraints": [], "quote": null, "tags": [], "granularity": null}, "date_of_birth_type": {"name": "date_of_birth_type", "description": "Privacy rule modification applied to date_of_birth.", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "sex": {"name": "sex", "description": "Sex of the individual", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "sex_display": {"name": "sex_display", "description": "The friendly display string of the coded term for Sex", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "race_display": {"name": "race_display", "description": "The friendly display string of the coded term(s) for Race", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "ethnicity": {"name": "ethnicity", "description": "Reported ethnicity as defined by the 1997 OMB directives.", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "ethnicity_display": {"name": "ethnicity_display", "description": "The friendly display string of the coded term for Ethnicity", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "age_at_last_vital_status": {"name": "age_at_last_vital_status", "description": "Age at last vital status in decimal years.", "meta": {}, "data_type": "integer", "constraints": [], "quote": null, "tags": [], "granularity": null}, "vital_status": {"name": "vital_status", "description": "Vital Status", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/cmg_bh/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "cmg_bh_data"}, "created_at": 1757448969.4784496, "relation_name": "\"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_demographics\"", "raw_code": "{{ config(materialized='table', schema='cmg_bh_data') }}\n\n with \n source as (\n    select \n        case\n          when sex = 'Female' then 'female'\n          when sex = 'Male' then 'male'\n          when sex = 'Unknown' then 'unknown'\n          when sex = 'Intersex' then 'intersex'\n          when sex is null then 'unknown'\n        else CONCAT('FTD_FLAG:unhandled sex: ',sex)\n      end::text as \"sex\",\n        case \n          when sex in ('Female',\n                         'Male',\n                         'Unknown',\n                         'Intersex') then sex\n          when sex is null then 'Unknown'\n        else CONCAT('FTD_FLAG:unhandled sex_display: ',sex)\n      end as \"sex_display\",\n        case\n          when ancestry in ('American Indian or Alaskan Native',\n                              'Asian',\n                              'Black or African American',\n                              'Native Hawaiian or Pacific Islander',\n                              'White',\n                              'Other',\n                              'Unknown',\n                              'Asked but Unknown') then ancestry\n          when ancestry is null then null\n        else CONCAT('FTD_FLAG:unhandled race_display: ',ancestry)\n      end as \"race_display\",\n      {{ generate_global_id(prefix='ap',descriptor=['ingest_provenance'], study_id='cmg_bh') }}::text as \"has_access_policy\",\n      {{ generate_global_id(prefix='dm',descriptor=['subject_id'], study_id='cmg_bh') }}::text as \"id\"\n    from (select distinct sex, ancestry, subject_id, ingest_provenance from {{ ref('cmg_bh_stg_subject') }}) as s\n)\n\nselect \n   distinct\n   NULL::integer as \"date_of_birth\",\n   NULL::text as \"date_of_birth_type\",\n   source.sex as \"sex\",\n   source.sex_display as \"sex_display\",\n   source.race_display as \"race_display\",\n   'unknown'::text as \"ethnicity\",\n   'Unknown'::text as \"ethnicity_display\",\n   NULL::integer as \"age_at_last_vital_status\",\n   'unspecified'::text as vital_status,\n   source.has_access_policy,\n   source.id\nfrom source", "language": "sql", "refs": [{"name": "cmg_bh_stg_subject", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.cmg_bh.cmg_bh_stg_subject"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/cmg_bh_ftd_demographics.sql", "compiled": true, "compiled_code": "\n\n with \n source as (\n    select \n        case\n          when sex = 'Female' then 'female'\n          when sex = 'Male' then 'male'\n          when sex = 'Unknown' then 'unknown'\n          when sex = 'Intersex' then 'intersex'\n          when sex is null then 'unknown'\n        else CONCAT('FTD_FLAG:unhandled sex: ',sex)\n      end::text as \"sex\",\n        case \n          when sex in ('Female',\n                         'Male',\n                         'Unknown',\n                         'Intersex') then sex\n          when sex is null then 'Unknown'\n        else CONCAT('FTD_FLAG:unhandled sex_display: ',sex)\n      end as \"sex_display\",\n        case\n          when ancestry in ('American Indian or Alaskan Native',\n                              'Asian',\n                              'Black or African American',\n                              'Native Hawaiian or Pacific Islander',\n                              'White',\n                              'Other',\n                              'Unknown',\n                              'Asked but Unknown') then ancestry\n          when ancestry is null then null\n        else CONCAT('FTD_FLAG:unhandled race_display: ',ancestry)\n      end as \"race_display\",\n      'ap' || '_' || md5('cmg_bh' || '|' || cast(coalesce(ingest_provenance, '') as text))::text as \"has_access_policy\",\n      'dm' || '_' || md5('cmg_bh' || '|' || cast(coalesce(subject_id, '') as text))::text as \"id\"\n    from (select distinct sex, ancestry, subject_id, ingest_provenance from \"dbt\".\"main_main\".\"cmg_bh_stg_subject\") as s\n)\n\nselect \n   distinct\n   NULL::integer as \"date_of_birth\",\n   NULL::text as \"date_of_birth_type\",\n   source.sex as \"sex\",\n   source.sex_display as \"sex_display\",\n   source.race_display as \"race_display\",\n   'unknown'::text as \"ethnicity\",\n   'Unknown'::text as \"ethnicity_display\",\n   NULL::integer as \"age_at_last_vital_status\",\n   'unspecified'::text as vital_status,\n   source.has_access_policy,\n   source.id\nfrom source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.cmg_bh_ftd_file_external_id": {"database": "dbt", "schema": "main_cmg_bh_data", "name": "cmg_bh_ftd_file_external_id", "resource_type": "model", "package_name": "ftd", "path": "cmg_bh/cmg_bh_ftd_file_external_id.sql", "original_file_path": "models/cmg_bh/cmg_bh_ftd_file_external_id.sql", "unique_id": "model.ftd.cmg_bh_ftd_file_external_id", "fqn": ["ftd", "cmg_bh", "cmg_bh_ftd_file_external_id"], "alias": "cmg_bh_ftd_file_external_id", "checksum": {"name": "sha256", "checksum": "c9ee8e1b4c0d2fa4e7d682dd929ae27788dd9c62212a53197b7ef90cb6be7869"}, "config": {"enabled": true, "alias": null, "schema": "cmg_bh_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for cmg_bh_ftd_file_external_id.", "columns": {"file_id": {"name": "file_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/cmg_bh/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "cmg_bh_data"}, "created_at": 1757448969.481081, "relation_name": "\"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_file_external_id\"", "raw_code": "{{ config(materialized='table', schema='cmg_bh_data') }}\n{%- set relation = ref('cmg_bh_stg_sample') -%}\n{%- set constant_columns = ['ftd_index','sample_id','subject_id','ingest_provenance','Submission_Batch','dbgap_sample_id','sample_provider','sample_source','tissue_affected_status'] -%}\n{%- set sample_columns = get_columns(relation=relation, exclude=constant_columns) -%}\n\nwith \nunpivot_df as (\n    {%- for col in sample_columns -%}\n        select\n            distinct\n            ingest_provenance,\n            '{{ col }}' as \"file_type\",\n            cast({{ col }} as varchar) as \"drs_uri\"\n        from {{ ref('cmg_bh_stg_sample') }}\n        where {{ col }} IS NOT NULL\n        {% if not loop.last %}union all{% endif %}\n    {% endfor %}\n)\nselect \n  {{ generate_global_id(prefix='fl',descriptor=['drs_uri'], study_id='cmg_bh') }}::text as \"file_id\",\n  drs_uri::text as \"external_id\"\nfrom unpivot_df", "language": "sql", "refs": [{"name": "cmg_bh_stg_sample", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.get_columns", "macro.base.generate_global_id"], "nodes": ["model.cmg_bh.cmg_bh_stg_sample"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/cmg_bh_ftd_file_external_id.sql", "compiled": true, "compiled_code": "with \nunpivot_df as (\n)\nselect \n  'fl' || '_' || md5('cmg_bh' || '|' || cast(coalesce(drs_uri, '') as text))::text as \"file_id\",\n  drs_uri::text as \"external_id\"\nfrom unpivot_df", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.cmg_bh_ftd_familymember_external_id": {"database": "dbt", "schema": "main_cmg_bh_data", "name": "cmg_bh_ftd_familymember_external_id", "resource_type": "model", "package_name": "ftd", "path": "cmg_bh/cmg_bh_ftd_familymember_external_id.sql", "original_file_path": "models/cmg_bh/cmg_bh_ftd_familymember_external_id.sql", "unique_id": "model.ftd.cmg_bh_ftd_familymember_external_id", "fqn": ["ftd", "cmg_bh", "cmg_bh_ftd_familymember_external_id"], "alias": "cmg_bh_ftd_familymember_external_id", "checksum": {"name": "sha256", "checksum": "6b53925adc7d954c204dce0694998d0457d84b6c6f5513a136bf20611d1f8e08"}, "config": {"enabled": true, "alias": null, "schema": "cmg_bh_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for cmg_bh_ftd_familymember_external_id.", "columns": {"familymember_id": {"name": "familymember_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/cmg_bh/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "cmg_bh_data"}, "created_at": 1757448969.4735065, "relation_name": "\"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_familymember_external_id\"", "raw_code": "{{ config(materialized='table', schema='cmg_bh_data') }}\n\nselect\n  distinct\n  {{ generate_global_id(prefix='fm',descriptor=['subject_id'], study_id='cmg_bh') }}::text as \"familymember_id\",\n  subject_id::text as \"external_id\"\nfrom (select distinct subject_id, family_relationship, ingest_provenance from {{ ref('cmg_bh_stg_subject') }}) as s", "language": "sql", "refs": [{"name": "cmg_bh_stg_subject", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.cmg_bh.cmg_bh_stg_subject"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/cmg_bh_ftd_familymember_external_id.sql", "compiled": true, "compiled_code": "\n\nselect\n  distinct\n  'fm' || '_' || md5('cmg_bh' || '|' || cast(coalesce(subject_id, '') as text))::text as \"familymember_id\",\n  subject_id::text as \"external_id\"\nfrom (select distinct subject_id, family_relationship, ingest_provenance from \"dbt\".\"main_main\".\"cmg_bh_stg_subject\") as s", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.cmg_bh_ftd_family_external_id": {"database": "dbt", "schema": "main_cmg_bh_data", "name": "cmg_bh_ftd_family_external_id", "resource_type": "model", "package_name": "ftd", "path": "cmg_bh/cmg_bh_ftd_family_external_id.sql", "original_file_path": "models/cmg_bh/cmg_bh_ftd_family_external_id.sql", "unique_id": "model.ftd.cmg_bh_ftd_family_external_id", "fqn": ["ftd", "cmg_bh", "cmg_bh_ftd_family_external_id"], "alias": "cmg_bh_ftd_family_external_id", "checksum": {"name": "sha256", "checksum": "a3a2dd229418c90f83a280eb9c4b87bcf68eff9d827866fae91bb5c5ffb9e252"}, "config": {"enabled": true, "alias": null, "schema": "cmg_bh_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for cmg_bh_ftd_family_external_id.", "columns": {"family_id": {"name": "family_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/cmg_bh/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "cmg_bh_data"}, "created_at": 1757448969.4774997, "relation_name": "\"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_family_external_id\"", "raw_code": "{{ config(materialized='table', schema='cmg_bh_data') }}\n\nselect\n  distinct\n  {{ generate_global_id(prefix='fm',descriptor=['family_id'], study_id='cmg_bh') }}::text as \"family_id\",\n  family_id::text as \"external_id\"\nfrom (select distinct family_id, ingest_provenance from {{ ref('cmg_bh_stg_subject') }})", "language": "sql", "refs": [{"name": "cmg_bh_stg_subject", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.cmg_bh.cmg_bh_stg_subject"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/cmg_bh_ftd_family_external_id.sql", "compiled": true, "compiled_code": "\n\nselect\n  distinct\n  'fm' || '_' || md5('cmg_bh' || '|' || cast(coalesce(family_id, '') as text))::text as \"family_id\",\n  family_id::text as \"external_id\"\nfrom (select distinct family_id, ingest_provenance from \"dbt\".\"main_main\".\"cmg_bh_stg_subject\")", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.cmg_bh_ftd_accesspolicy_external_id": {"database": "dbt", "schema": "main_cmg_bh_data", "name": "cmg_bh_ftd_accesspolicy_external_id", "resource_type": "model", "package_name": "ftd", "path": "cmg_bh/cmg_bh_ftd_accesspolicy_external_id.sql", "original_file_path": "models/cmg_bh/cmg_bh_ftd_accesspolicy_external_id.sql", "unique_id": "model.ftd.cmg_bh_ftd_accesspolicy_external_id", "fqn": ["ftd", "cmg_bh", "cmg_bh_ftd_accesspolicy_external_id"], "alias": "cmg_bh_ftd_accesspolicy_external_id", "checksum": {"name": "sha256", "checksum": "ccd9acef83ea10edf345144a139551b730c030f90ea53502a31220b76bbcf27d"}, "config": {"enabled": true, "alias": null, "schema": "cmg_bh_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for cmg_bh_ftd_accesspolicy_external_id.", "columns": {"accesspolicy_id": {"name": "accesspolicy_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/cmg_bh/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "cmg_bh_data"}, "created_at": 1757448969.479732, "relation_name": "\"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_accesspolicy_external_id\"", "raw_code": "{{ config(materialized='table', schema='cmg_bh_data') }}\n\nselect \n  {{ generate_global_id(prefix='ap',descriptor=['ingest_provenance'], study_id='cmg_bh') }}::text as \"accesspolicy_id\",\n  ingest_provenance::text as \"external_id\"\nfrom (select distinct ingest_provenance from {{ ref('cmg_bh_stg_subject') }}) as s", "language": "sql", "refs": [{"name": "cmg_bh_stg_subject", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.cmg_bh.cmg_bh_stg_subject"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/cmg_bh_ftd_accesspolicy_external_id.sql", "compiled": true, "compiled_code": "\n\nselect \n  'ap' || '_' || md5('cmg_bh' || '|' || cast(coalesce(ingest_provenance, '') as text))::text as \"accesspolicy_id\",\n  ingest_provenance::text as \"external_id\"\nfrom (select distinct ingest_provenance from \"dbt\".\"main_main\".\"cmg_bh_stg_subject\") as s", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.cmg_bh_ftd_family": {"database": "dbt", "schema": "main_cmg_bh_data", "name": "cmg_bh_ftd_family", "resource_type": "model", "package_name": "ftd", "path": "cmg_bh/cmg_bh_ftd_family.sql", "original_file_path": "models/cmg_bh/cmg_bh_ftd_family.sql", "unique_id": "model.ftd.cmg_bh_ftd_family", "fqn": ["ftd", "cmg_bh", "cmg_bh_ftd_family"], "alias": "cmg_bh_ftd_family", "checksum": {"name": "sha256", "checksum": "a9049fd3313b4e22479b66a2af4a4c07af2def1cfcf605c384672076778c9ebb"}, "config": {"enabled": true, "alias": null, "schema": "cmg_bh_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for cmg_bh_ftd_family.", "columns": {"family_type": {"name": "family_type", "description": "Describes the 'type' of study family, eg, trio.", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "family_description": {"name": "family_description", "description": "Free title describing the study family, such as potential inheritance or details about consanguinity", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "consanguinity": {"name": "consanguinity", "description": "Is there known or suspected consanguinity in this study family?", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "family_study_focus": {"name": "family_study_focus", "description": "What is this study family investigating? EG, a specific condition. The code should be prefixed with a recognizable curie.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/cmg_bh/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "cmg_bh_data"}, "created_at": 1757448969.4835024, "relation_name": "\"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_family\"", "raw_code": "{{ config(materialized='table', schema='cmg_bh_data') }}\n\nselect \n  NULL::text as \"family_type\",\n  NULL::text as \"family_description\",\n  NULL::text as \"consanguinity\",\n  NULL::text as \"family_study_focus\",\n  {{ generate_global_id(prefix='ap',descriptor=['ingest_provenance'], study_id='cmg_bh') }}::text as \"has_access_policy\",\n  {{ generate_global_id(prefix='fy',descriptor=['family_id'], study_id='cmg_bh') }}::text as \"id\"\nfrom (select distinct ingest_provenance, family_id from {{ ref('cmg_bh_stg_subject') }})", "language": "sql", "refs": [{"name": "cmg_bh_stg_subject", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.cmg_bh.cmg_bh_stg_subject"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/cmg_bh_ftd_family.sql", "compiled": true, "compiled_code": "\n\nselect \n  NULL::text as \"family_type\",\n  NULL::text as \"family_description\",\n  NULL::text as \"consanguinity\",\n  NULL::text as \"family_study_focus\",\n  'ap' || '_' || md5('cmg_bh' || '|' || cast(coalesce(ingest_provenance, '') as text))::text as \"has_access_policy\",\n  'fy' || '_' || md5('cmg_bh' || '|' || cast(coalesce(family_id, '') as text))::text as \"id\"\nfrom (select distinct ingest_provenance, family_id from \"dbt\".\"main_main\".\"cmg_bh_stg_subject\")", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.cmg_bh_ftd_file": {"database": "dbt", "schema": "main_cmg_bh_data", "name": "cmg_bh_ftd_file", "resource_type": "model", "package_name": "ftd", "path": "cmg_bh/cmg_bh_ftd_file.sql", "original_file_path": "models/cmg_bh/cmg_bh_ftd_file.sql", "unique_id": "model.ftd.cmg_bh_ftd_file", "fqn": ["ftd", "cmg_bh", "cmg_bh_ftd_file"], "alias": "cmg_bh_ftd_file", "checksum": {"name": "sha256", "checksum": "d1850cd840d6ffdbe0b27eb09f1f9c8eb1ff51f8e983c4d0be1f3c1f192e9459"}, "config": {"enabled": true, "alias": null, "schema": "cmg_bh_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for cmg_bh_ftd_file.", "columns": {"filename": {"name": "filename", "description": "The name of the file.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "format": {"name": "format", "description": "The format of the file.", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "data_type": {"name": "data_type", "description": "The type of data within this file.", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "size": {"name": "size", "description": "Size of the file, in Bytes.", "meta": {}, "data_type": "integer", "constraints": [], "quote": null, "tags": [], "granularity": null}, "drs_uri": {"name": "drs_uri", "description": "DRS location to access the data.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "file_metadata": {"name": "file_metadata", "description": "Additional metadata about the contents of the file, eg, genome reference build.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/cmg_bh/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "cmg_bh_data"}, "created_at": 1757448969.4649768, "relation_name": "\"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_file\"", "raw_code": "{{ config(materialized='table', schema='cmg_bh_data') }}\n\n{%- set relation = ref('cmg_bh_stg_sample') -%}\n{%- set constant_columns = ['ftd_index','sample_id','subject_id','ingest_provenance','Submission_Batch','dbgap_sample_id','sample_provider','sample_source','tissue_affected_status'] -%}\n{%- set sample_columns = get_columns(relation=relation, exclude=constant_columns) -%}\n\nwith \nunpivot_df as (\n    {%- for col in sample_columns -%}\n        select\n            distinct \n            ingest_provenance,\n            '{{ col }}' as \"file_type\",\n            cast({{ col }} as varchar) as \"drs_uri\"\n        from {{ ref('cmg_bh_stg_sample') }}\n        where {{ col }} IS NOT NULL\n        {% if not loop.last %}union all{% endif %}\n    {% endfor %}\n)\nselect \n  drs_uri::text as \"filename\",\n  NULL::text as \"format\",\n  file_type::text as \"data_type\",\n  NULL::integer as \"size\",\n  drs_uri::text as \"drs_uri\",\n  {{ generate_global_id(prefix='fm',descriptor=['drs_uri'], study_id='cmg_bh') }}::text as \"file_metadata\",\n  {{ generate_global_id(prefix='ap',descriptor=['ingest_provenance'], study_id='cmg_bh') }}::text as \"has_access_policy\",\n  {{ generate_global_id(prefix='fl',descriptor=['drs_uri'], study_id='cmg_bh') }}::text as \"id\"\nfrom unpivot_df", "language": "sql", "refs": [{"name": "cmg_bh_stg_sample", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.get_columns", "macro.base.generate_global_id"], "nodes": ["model.cmg_bh.cmg_bh_stg_sample"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/cmg_bh_ftd_file.sql", "compiled": true, "compiled_code": "with \nunpivot_df as (\n)\nselect \n  drs_uri::text as \"filename\",\n  NULL::text as \"format\",\n  file_type::text as \"data_type\",\n  NULL::integer as \"size\",\n  drs_uri::text as \"drs_uri\",\n  'fm' || '_' || md5('cmg_bh' || '|' || cast(coalesce(drs_uri, '') as text))::text as \"file_metadata\",\n  'ap' || '_' || md5('cmg_bh' || '|' || cast(coalesce(ingest_provenance, '') as text))::text as \"has_access_policy\",\n  'fl' || '_' || md5('cmg_bh' || '|' || cast(coalesce(drs_uri, '') as text))::text as \"id\"\nfrom unpivot_df", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.cmg_bh_ftd_accesspolicy": {"database": "dbt", "schema": "main_cmg_bh_data", "name": "cmg_bh_ftd_accesspolicy", "resource_type": "model", "package_name": "ftd", "path": "cmg_bh/cmg_bh_ftd_accesspolicy.sql", "original_file_path": "models/cmg_bh/cmg_bh_ftd_accesspolicy.sql", "unique_id": "model.ftd.cmg_bh_ftd_accesspolicy", "fqn": ["ftd", "cmg_bh", "cmg_bh_ftd_accesspolicy"], "alias": "cmg_bh_ftd_accesspolicy", "checksum": {"name": "sha256", "checksum": "e37108a83e7b0e08f780fc8a36d89091089b549efc42fc5a4e22575f32e760c5"}, "config": {"enabled": true, "alias": null, "schema": "cmg_bh_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for cmg_bh_ftd_accesspolicy.", "columns": {"disease_limitation": {"name": "disease_limitation", "description": "Disease Use Limitations", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "description": {"name": "description", "description": "Model for cmg_bh_ftd_accesspolicy.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "website": {"name": "website", "description": "Website", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/cmg_bh/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "cmg_bh_data"}, "created_at": 1757448969.4706745, "relation_name": "\"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_accesspolicy\"", "raw_code": "{{ config(materialized='table', schema='cmg_bh_data') }}\n\nselect \n  NULL::text as \"disease_limitation\",\n  NULL::text as \"website\", --TODO version of website\n    case \n    when ingest_provenance like '%AnVIL_CMG_BaylorHopkins_HMB-IRB-NPU_WES%'\n      then 'HMB-IRB-NPU'\n    when ingest_provenance like '%AnVIL_CMG_BaylorHopkins_HMB-NPU_WES%'\n      then 'HMB-NPU'\n    else NULL\n  end::text as \"description\",\n  {{ generate_global_id(prefix='ap',descriptor=['ingest_provenance'], study_id='cmg_bh') }}::text as \"id\"\nfrom (select distinct ingest_provenance from {{ ref('cmg_bh_stg_subject') }}) as s", "language": "sql", "refs": [{"name": "cmg_bh_stg_subject", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.cmg_bh.cmg_bh_stg_subject"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/cmg_bh_ftd_accesspolicy.sql", "compiled": true, "compiled_code": "\n\nselect \n  NULL::text as \"disease_limitation\",\n  NULL::text as \"website\", --TODO version of website\n    case \n    when ingest_provenance like '%AnVIL_CMG_BaylorHopkins_HMB-IRB-NPU_WES%'\n      then 'HMB-IRB-NPU'\n    when ingest_provenance like '%AnVIL_CMG_BaylorHopkins_HMB-NPU_WES%'\n      then 'HMB-NPU'\n    else NULL\n  end::text as \"description\",\n  'ap' || '_' || md5('cmg_bh' || '|' || cast(coalesce(ingest_provenance, '') as text))::text as \"id\"\nfrom (select distinct ingest_provenance from \"dbt\".\"main_main\".\"cmg_bh_stg_subject\") as s", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.cmg_bh_ftd_file_sample": {"database": "dbt", "schema": "main_cmg_bh_data", "name": "cmg_bh_ftd_file_sample", "resource_type": "model", "package_name": "ftd", "path": "cmg_bh/cmg_bh_ftd_file_sample.sql", "original_file_path": "models/cmg_bh/cmg_bh_ftd_file_sample.sql", "unique_id": "model.ftd.cmg_bh_ftd_file_sample", "fqn": ["ftd", "cmg_bh", "cmg_bh_ftd_file_sample"], "alias": "cmg_bh_ftd_file_sample", "checksum": {"name": "sha256", "checksum": "f2821d2478ed1e74e68c3d905ecbfa68febc78a1bf8b091bfb3807dd99eb8b7d"}, "config": {"enabled": true, "alias": null, "schema": "cmg_bh_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for cmg_bh_ftd_file_sample.", "columns": {"file_id": {"name": "file_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "sample_id": {"name": "sample_id", "description": "The Samples(s) used to generate data in this file.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/cmg_bh/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "cmg_bh_data"}, "created_at": 1757448969.4633112, "relation_name": "\"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_file_sample\"", "raw_code": "{{ config(materialized='table', schema='cmg_bh_data') }}\n{%- set relation = ref('cmg_bh_stg_sample') -%}\n{%- set constant_columns = ['ftd_index','sample_id','subject_id','ingest_provenance','Submission_Batch','dbgap_sample_id','sample_provider','sample_source','tissue_affected_status'] -%}\n{%- set sample_columns = get_columns(relation=relation, exclude=constant_columns) -%}\n\nwith \nunpivot_df as (\n    {%- for col in sample_columns -%}\n        select\n            distinct\n            sample_id,\n            ingest_provenance,\n            '{{ col }}' as \"file_type\",\n            cast({{ col }} as varchar) as \"drs_uri\"\n        from {{ ref('cmg_bh_stg_sample') }}\n        where {{ col }} IS NOT NULL\n        {% if not loop.last %}union all{% endif %}\n    {% endfor %}\n)\nselect \n  {{ generate_global_id(prefix='fl',descriptor=['drs_uri'], study_id='cmg_bh') }}::text as \"file_id\",\n  {{ generate_global_id(prefix='sm',descriptor=['sample_id'], study_id='cmg_bh') }}::text as \"sample_id\"\nfrom unpivot_df", "language": "sql", "refs": [{"name": "cmg_bh_stg_sample", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.get_columns", "macro.base.generate_global_id"], "nodes": ["model.cmg_bh.cmg_bh_stg_sample"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/cmg_bh_ftd_file_sample.sql", "compiled": true, "compiled_code": "with \nunpivot_df as (\n)\nselect \n  'fl' || '_' || md5('cmg_bh' || '|' || cast(coalesce(drs_uri, '') as text))::text as \"file_id\",\n  'sm' || '_' || md5('cmg_bh' || '|' || cast(coalesce(sample_id, '') as text))::text as \"sample_id\"\nfrom unpivot_df", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.cmg_bh_ftd_accesspolicy_access_policy_code": {"database": "dbt", "schema": "main_cmg_bh_data", "name": "cmg_bh_ftd_accesspolicy_access_policy_code", "resource_type": "model", "package_name": "ftd", "path": "cmg_bh/cmg_bh_ftd_accesspolicy_access_policy_code.sql", "original_file_path": "models/cmg_bh/cmg_bh_ftd_accesspolicy_access_policy_code.sql", "unique_id": "model.ftd.cmg_bh_ftd_accesspolicy_access_policy_code", "fqn": ["ftd", "cmg_bh", "cmg_bh_ftd_accesspolicy_access_policy_code"], "alias": "cmg_bh_ftd_accesspolicy_access_policy_code", "checksum": {"name": "sha256", "checksum": "fd43cd7147600d846e021072e4bd0d7a3d4b3e6b6b3198936c2f6ed78f543cfe"}, "config": {"enabled": true, "alias": null, "schema": "cmg_bh_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for cmg_bh_ftd_accesspolicy_access_policy_code.", "columns": {"accesspolicy_id": {"name": "accesspolicy_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "access_policy_code": {"name": "access_policy_code", "description": "Access Policy Code", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/cmg_bh/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "cmg_bh_data"}, "created_at": 1757448969.481955, "relation_name": "\"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_accesspolicy_access_policy_code\"", "raw_code": "{{ config(materialized='table', schema='cmg_bh_data') }}\n{%- set consent_groups = ['hmb','irb','npu'] -%}\n{%- for grp in consent_groups -%}\n        select\n      {{ generate_global_id(prefix='ap',descriptor=['ingest_provenance'], study_id='cmg_bh') }}::text as \"accesspolicy_id\",\n      '{{ grp }}' as access_policy_code,\n    from (select distinct ingest_provenance from {{ ref('cmg_bh_stg_subject') }}) as s\n    where s.ingest_provenance ILIKE '{{ grp }}'\n    {% if not loop.last %}union all{% endif %}\n{% endfor %}", "language": "sql", "refs": [{"name": "cmg_bh_stg_subject", "package": null, "version": null}, {"name": "cmg_bh_stg_subject", "package": null, "version": null}, {"name": "cmg_bh_stg_subject", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.cmg_bh.cmg_bh_stg_subject"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/cmg_bh_ftd_accesspolicy_access_policy_code.sql", "compiled": true, "compiled_code": "select\n      'ap' || '_' || md5('cmg_bh' || '|' || cast(coalesce(ingest_provenance, '') as text))::text as \"accesspolicy_id\",\n      'hmb' as access_policy_code,\n    from (select distinct ingest_provenance from \"dbt\".\"main_main\".\"cmg_bh_stg_subject\") as s\n    where s.ingest_provenance ILIKE 'hmb'\n    union all\nselect\n      'ap' || '_' || md5('cmg_bh' || '|' || cast(coalesce(ingest_provenance, '') as text))::text as \"accesspolicy_id\",\n      'irb' as access_policy_code,\n    from (select distinct ingest_provenance from \"dbt\".\"main_main\".\"cmg_bh_stg_subject\") as s\n    where s.ingest_provenance ILIKE 'irb'\n    union all\nselect\n      'ap' || '_' || md5('cmg_bh' || '|' || cast(coalesce(ingest_provenance, '') as text))::text as \"accesspolicy_id\",\n      'npu' as access_policy_code,\n    from (select distinct ingest_provenance from \"dbt\".\"main_main\".\"cmg_bh_stg_subject\") as s\n    where s.ingest_provenance ILIKE 'npu'\n    \n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.cmg_bh_ftd_subjectassertion": {"database": "dbt", "schema": "main_cmg_bh_data", "name": "cmg_bh_ftd_subjectassertion", "resource_type": "model", "package_name": "ftd", "path": "cmg_bh/cmg_bh_ftd_subjectassertion.sql", "original_file_path": "models/cmg_bh/cmg_bh_ftd_subjectassertion.sql", "unique_id": "model.ftd.cmg_bh_ftd_subjectassertion", "fqn": ["ftd", "cmg_bh", "cmg_bh_ftd_subjectassertion"], "alias": "cmg_bh_ftd_subjectassertion", "checksum": {"name": "sha256", "checksum": "03d5e72087d7d01aed9d8c1d088acc31a49a01d1c9cbdcd02b24df54ae2db6ef"}, "config": {"enabled": true, "alias": null, "schema": "cmg_bh_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for cmg_bh_ftd_subjectassertion.", "columns": {"assertion_type": {"name": "assertion_type", "description": "The semantic type of the resource, eg, Condition.", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "age_at_assertion": {"name": "age_at_assertion", "description": "The age in decimal years of the Subject when the assertion was made.", "meta": {}, "data_type": "number", "constraints": [], "quote": null, "tags": [], "granularity": null}, "age_at_event": {"name": "age_at_event", "description": "The age in decimal years of the Subject at the time point which the assertion describes, | eg, age of onset or when a measurement was performed.", "meta": {}, "data_type": "number", "constraints": [], "quote": null, "tags": [], "granularity": null}, "age_at_resolution": {"name": "age_at_resolution", "description": "The age in decimal years of the Subject when the asserted state was resolved.", "meta": {}, "data_type": "number", "constraints": [], "quote": null, "tags": [], "granularity": null}, "code": {"name": "code", "description": "The structured term defining the meaning of the assertion.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "display": {"name": "display", "description": "The friendly display string of the coded term", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "value_code": {"name": "value_code", "description": "The structured term defining the value of the assertion.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "value_display": {"name": "value_display", "description": "The friendly display string of the coded term for the value of the assertion.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "value_number": {"name": "value_number", "description": "The numeric value of the assertion.", "meta": {}, "data_type": "number", "constraints": [], "quote": null, "tags": [], "granularity": null}, "value_units": {"name": "value_units", "description": "The structured term defining the units of the value.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "value_units_display": {"name": "value_units_display", "description": "The friendly display string of units of the value.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "subject_id": {"name": "subject_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/cmg_bh/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "cmg_bh_data"}, "created_at": 1757448969.4854343, "relation_name": "\"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_subjectassertion\"", "raw_code": "{{ config(materialized='table', schema='cmg_bh_data') }}\n\nwith\nlookup as (\n    select -- annotations from src\n      \"searched_code\" as join_code,\n      \"searched_code\" as code,\n      \"display\" as display\n    from {{ ref('cmg_bh_annotations_code') }}\n    \n    union all\n    \n    select -- annotations from MD\n      \"local code\" as join_code,\n      \"code\" as code,\n      \"display\" as display\n    from {{ ref('subject_mappings') }}\n)\n\nselect \n  distinct\n  'phenotypic_feature'::text as \"assertion_type\",\n  NULL::text as \"age_at_assertion\",\n  NULL::text as \"age_at_event\",\n  NULL::text as \"age_at_resolution\",\n  lookup.code as \"code\",\n  lookup.display as \"display\",\n    case lower(presence)\n    when 'affected' then 'LA9633-4'\n    when 'unaffected' then 'LA9634-2'\n    when 'unknown' then 'LA4489-6'\n    when presence is null then 'LA4489-6'\n    else CONCAT('FTD_FLAG:unhandled value_code: ',presence)\n  end::text as \"value_code\",\n    case lower(presence)\n    when 'affected' then 'Affected'\n    when 'unaffected' then 'Unaffected'\n    when 'unknown' then 'Unknown'\n    when presence is null then 'Unknown'\n    else CONCAT('FTD_FLAG:unhandled value_display: ',presence)\n  end::text as \"value_display\",  \n  NULL::text as \"value_number\",\n  NULL::text as \"value_units\",\n  NULL::text as \"value_units_display\",\n  {{ generate_global_id(prefix='ap',descriptor=['ingest_provenance'], study_id='cmg_bh') }}::text as \"has_access_policy\",\n  {{ generate_global_id(prefix='sa',descriptor=['subject_id','condition_or_disease_code'], study_id='cmg_bh') }}::text as \"id\",\n  {{ generate_global_id(prefix='sb',descriptor=['subject_id'], study_id='cmg_bh') }}::text as \"subject_id\"\nfrom (select distinct ingest_provenance, subject_id, condition_or_disease_code, presence from {{ ref('cmg_bh_stg_subject') }}) as s\njoin lookup\non s.condition_or_disease_code = lookup.join_code", "language": "sql", "refs": [{"name": "cmg_bh_annotations_code", "package": null, "version": null}, {"name": "subject_mappings", "package": null, "version": null}, {"name": "cmg_bh_stg_subject", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["seed.base.cmg_bh_annotations_code", "seed.base.subject_mappings", "model.cmg_bh.cmg_bh_stg_subject"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/cmg_bh_ftd_subjectassertion.sql", "compiled": true, "compiled_code": "\n\nwith\nlookup as (\n    select -- annotations from src\n      \"searched_code\" as join_code,\n      \"searched_code\" as code,\n      \"display\" as display\n    from \"dbt\".\"main\".\"cmg_bh_annotations_code\"\n    \n    union all\n    \n    select -- annotations from MD\n      \"local code\" as join_code,\n      \"code\" as code,\n      \"display\" as display\n    from \"dbt\".\"main\".\"subject_mappings\"\n)\n\nselect \n  distinct\n  'phenotypic_feature'::text as \"assertion_type\",\n  NULL::text as \"age_at_assertion\",\n  NULL::text as \"age_at_event\",\n  NULL::text as \"age_at_resolution\",\n  lookup.code as \"code\",\n  lookup.display as \"display\",\n    case lower(presence)\n    when 'affected' then 'LA9633-4'\n    when 'unaffected' then 'LA9634-2'\n    when 'unknown' then 'LA4489-6'\n    when presence is null then 'LA4489-6'\n    else CONCAT('FTD_FLAG:unhandled value_code: ',presence)\n  end::text as \"value_code\",\n    case lower(presence)\n    when 'affected' then 'Affected'\n    when 'unaffected' then 'Unaffected'\n    when 'unknown' then 'Unknown'\n    when presence is null then 'Unknown'\n    else CONCAT('FTD_FLAG:unhandled value_display: ',presence)\n  end::text as \"value_display\",  \n  NULL::text as \"value_number\",\n  NULL::text as \"value_units\",\n  NULL::text as \"value_units_display\",\n  'ap' || '_' || md5('cmg_bh' || '|' || cast(coalesce(ingest_provenance, '') as text))::text as \"has_access_policy\",\n  'sa' || '_' || md5('cmg_bh' || '|' || cast(coalesce(subject_id, '') as text) || '|' || 'cmg_bh' || '|' || cast(coalesce(condition_or_disease_code, '') as text))::text as \"id\",\n  'sb' || '_' || md5('cmg_bh' || '|' || cast(coalesce(subject_id, '') as text))::text as \"subject_id\"\nfrom (select distinct ingest_provenance, subject_id, condition_or_disease_code, presence from \"dbt\".\"main_main\".\"cmg_bh_stg_subject\") as s\njoin lookup\non s.condition_or_disease_code = lookup.join_code", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.cmg_bh_ftd_family_family_relationships": {"database": "dbt", "schema": "main_cmg_bh_data", "name": "cmg_bh_ftd_family_family_relationships", "resource_type": "model", "package_name": "ftd", "path": "cmg_bh/cmg_bh_ftd_family_family_relationships.sql", "original_file_path": "models/cmg_bh/cmg_bh_ftd_family_family_relationships.sql", "unique_id": "model.ftd.cmg_bh_ftd_family_family_relationships", "fqn": ["ftd", "cmg_bh", "cmg_bh_ftd_family_family_relationships"], "alias": "cmg_bh_ftd_family_family_relationships", "checksum": {"name": "sha256", "checksum": "8363079fdc7bbecbd4e75ca666b8688927dd774d7297d7e933d5344219ceaa70"}, "config": {"enabled": true, "alias": null, "schema": "cmg_bh_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for cmg_bh_ftd_family_family_relationships.", "columns": {"family_id": {"name": "family_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "family_relationships_id": {"name": "family_relationships_id", "description": "Family relationships associated with this family.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/cmg_bh/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "cmg_bh_data"}, "created_at": 1757448969.4739497, "relation_name": "\"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_family_family_relationships\"", "raw_code": "{{ config(materialized='table', schema='cmg_bh_data') }}\nwith\nprobands_only as (\n    select distinct\n      ingest_provenance,\n      family_id,\n      subject_id,\n      family_relationship as \"proband_rel_code\",\n    from {{ ref('cmg_bh_stg_subject') }}\n    where family_relationship = 'Proband'\n)\n,others_only as (\n    select distinct\n      ingest_provenance,\n      family_id,\n      subject_id,\n      family_relationship as \"other_rel_code\",\n    from {{ ref('cmg_bh_stg_subject') }}\n    where family_relationship != 'Proband'\n)\n\nselect\n  distinct\n  {{ generate_global_id(prefix='fy',descriptor=['o.family_id'], study_id='cmg_bh') }}::text as \"family_id\",\n  {{ generate_global_id(prefix='fr',descriptor=['p.subject_id','o.subject_id'], study_id='cmg_bh') }}::text as \"family_relationships_id\"\nfrom probands_only p\nleft join others_only o\non p.family_id = o.family_id\n  and p.ingest_provenance = o.ingest_provenance\nwhere o.subject_id is not null", "language": "sql", "refs": [{"name": "cmg_bh_stg_subject", "package": null, "version": null}, {"name": "cmg_bh_stg_subject", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.cmg_bh.cmg_bh_stg_subject"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/cmg_bh_ftd_family_family_relationships.sql", "compiled": true, "compiled_code": "\nwith\nprobands_only as (\n    select distinct\n      ingest_provenance,\n      family_id,\n      subject_id,\n      family_relationship as \"proband_rel_code\",\n    from \"dbt\".\"main_main\".\"cmg_bh_stg_subject\"\n    where family_relationship = 'Proband'\n)\n,others_only as (\n    select distinct\n      ingest_provenance,\n      family_id,\n      subject_id,\n      family_relationship as \"other_rel_code\",\n    from \"dbt\".\"main_main\".\"cmg_bh_stg_subject\"\n    where family_relationship != 'Proband'\n)\n\nselect\n  distinct\n  'fy' || '_' || md5('cmg_bh' || '|' || cast(coalesce(o.family_id, '') as text))::text as \"family_id\",\n  'fr' || '_' || md5('cmg_bh' || '|' || cast(coalesce(p.subject_id, '') as text) || '|' || 'cmg_bh' || '|' || cast(coalesce(o.subject_id, '') as text))::text as \"family_relationships_id\"\nfrom probands_only p\nleft join others_only o\non p.family_id = o.family_id\n  and p.ingest_provenance = o.ingest_provenance\nwhere o.subject_id is not null", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.cmg_bh_ftd_subject_external_id": {"database": "dbt", "schema": "main_cmg_bh_data", "name": "cmg_bh_ftd_subject_external_id", "resource_type": "model", "package_name": "ftd", "path": "cmg_bh/cmg_bh_ftd_subject_external_id.sql", "original_file_path": "models/cmg_bh/cmg_bh_ftd_subject_external_id.sql", "unique_id": "model.ftd.cmg_bh_ftd_subject_external_id", "fqn": ["ftd", "cmg_bh", "cmg_bh_ftd_subject_external_id"], "alias": "cmg_bh_ftd_subject_external_id", "checksum": {"name": "sha256", "checksum": "5def4a40ca6e058c4831d5486ed05fdccb9b6ffc42ff2f4cc53be2507e1f463a"}, "config": {"enabled": true, "alias": null, "schema": "cmg_bh_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for cmg_bh_ftd_subject_external_id.", "columns": {"subject_id": {"name": "subject_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/cmg_bh/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "cmg_bh_data"}, "created_at": 1757448969.4628148, "relation_name": "\"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_subject_external_id\"", "raw_code": "{{ config(materialized='table', schema='cmg_bh_data') }}\n\nselect \n  {{ generate_global_id(prefix='sb',descriptor=['subject_id'], study_id='cmg_bh') }}::text as \"subject_id\",\n  subject_id::text as \"external_id\"\nfrom (select distinct subject_id from {{ ref('cmg_bh_stg_subject') }} ) as s", "language": "sql", "refs": [{"name": "cmg_bh_stg_subject", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.cmg_bh.cmg_bh_stg_subject"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/cmg_bh_ftd_subject_external_id.sql", "compiled": true, "compiled_code": "\n\nselect \n  'sb' || '_' || md5('cmg_bh' || '|' || cast(coalesce(subject_id, '') as text))::text as \"subject_id\",\n  subject_id::text as \"external_id\"\nfrom (select distinct subject_id from \"dbt\".\"main_main\".\"cmg_bh_stg_subject\" ) as s", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.cmg_bh_ftd_familyrelationship": {"database": "dbt", "schema": "main_cmg_bh_data", "name": "cmg_bh_ftd_familyrelationship", "resource_type": "model", "package_name": "ftd", "path": "cmg_bh/cmg_bh_ftd_familyrelationship.sql", "original_file_path": "models/cmg_bh/cmg_bh_ftd_familyrelationship.sql", "unique_id": "model.ftd.cmg_bh_ftd_familyrelationship", "fqn": ["ftd", "cmg_bh", "cmg_bh_ftd_familyrelationship"], "alias": "cmg_bh_ftd_familyrelationship", "checksum": {"name": "sha256", "checksum": "e97def54c98425dfff2fce20ae5d4b63a7472b16703de8d95f27db0d1603601f"}, "config": {"enabled": true, "alias": null, "schema": "cmg_bh_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for cmg_bh_ftd_familyrelationship.", "columns": {"family_member": {"name": "family_member", "description": "The family member Subject who is the relationship \"subject\".", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "other_family_member": {"name": "other_family_member", "description": "The family member Subject for the relationship \"object\".", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "relationship_code": {"name": "relationship_code", "description": "Code definting the relationship predicate. Relationship of the \"Family Member\" to the \"Other Family Member\" (i.e. mother, father, etc). Code must be from the HL7 [FamilyMember ValueSet](https://terminology.hl7.org/6.2.0/ValueSet-v3-FamilyMember.html)", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/cmg_bh/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "cmg_bh_data"}, "created_at": 1757448969.4730432, "relation_name": "\"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_familyrelationship\"", "raw_code": "{{ config(materialized='table', schema='cmg_bh_data') }}\n-- Does not take into account multiple probands per family\n-- left join - are there any others that don't have a proband\nwith\nprobands_only as (\n    select distinct\n      ingest_provenance,\n      family_id,\n      subject_id,\n      family_relationship as \"proband_rel_code\",\n    from {{ ref('cmg_bh_stg_subject') }}\n    where family_relationship = 'Proband'\n)\n,others_only as (\n    select distinct\n      ingest_provenance,\n      family_id,\n      subject_id,\n      family_relationship as \"other_rel_code\",\n    from {{ ref('cmg_bh_stg_subject') }}\n    where family_relationship != 'Proband'\n)\n,fr_base as (\n    select\n      distinct\n      {{ generate_global_id(prefix='sb',descriptor=['p.subject_id'], study_id='cmg_bh') }}::text as \"family_member\",\n      proband_rel_code,\n      {{ generate_global_id(prefix='sb',descriptor=['o.subject_id'], study_id='cmg_bh') }}::text as \"other_family_member\",\n      other_rel_code,\n      {{ generate_global_id(prefix='ap',descriptor=['ingest_provenance'], study_id='cmg_bh') }}::text as \"has_access_policy\",\n      {{ generate_global_id(prefix='fr',descriptor=['family_id','p.subject_id','o.subject_id','other_rel_code'], study_id='cmg_bh') }}::text as \"id\"\n    from probands_only as p\n    left join others_only as o\n    using (family_id, ingest_provenance)\n    where o.subject_id is not null\n)\nselect\n  distinct\n  family_member,\n  other_family_member,\n  has_access_policy,\n  id,\n    case \n    when other_rel_code = 'Brother'\n    then 'KIN:024'\n    when other_rel_code = 'Child'\n    then 'KIN:032'\n    when other_rel_code = 'Father'\n    then 'KIN:028'\n    when other_rel_code = 'Grandchild'\n    then 'KIN:036'\n    when other_rel_code = 'Maternal Aunt'\n    then 'KIN:060'\n    when other_rel_code = 'Maternal Cousin'\n    then 'KIN:015'\n    when other_rel_code = 'Maternal Grandmother'\n    then 'KIN:052'\n    when other_rel_code = 'Maternal Half Brother'\n    then 'KIN:012'\n    when other_rel_code = 'Maternal Uncle'\n    then 'KIN:058'\n    when other_rel_code = 'Monozygous Twin'\n    then 'KIN:010'\n    when other_rel_code = 'Mother'\n    then 'KIN:027'\n    when other_rel_code = 'Nephew'\n    then 'KIN:046'\n    when other_rel_code = 'Niece'\n    then 'KIN:046'\n    when other_rel_code = 'Niece''s Child' --TODO esc works?\n    then 'KIN:001' -- isRelativeOf\n    when other_rel_code = 'Paternal Cousin'\n    then 'KIN:016'\n    when other_rel_code = 'Paternal Uncle'\n    then 'KIN:059'\n    when other_rel_code = 'Sister'\n    then 'KIN:024'\n    when other_rel_code is null then null\n    else CONCAT('FTD_FLAG:unhandled relationship_code: ',other_rel_code)\n  end as \"relationship_code\"\nfrom fr_base", "language": "sql", "refs": [{"name": "cmg_bh_stg_subject", "package": null, "version": null}, {"name": "cmg_bh_stg_subject", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.cmg_bh.cmg_bh_stg_subject"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/cmg_bh_ftd_familyrelationship.sql", "compiled": true, "compiled_code": "\n-- Does not take into account multiple probands per family\n-- left join - are there any others that don't have a proband\nwith\nprobands_only as (\n    select distinct\n      ingest_provenance,\n      family_id,\n      subject_id,\n      family_relationship as \"proband_rel_code\",\n    from \"dbt\".\"main_main\".\"cmg_bh_stg_subject\"\n    where family_relationship = 'Proband'\n)\n,others_only as (\n    select distinct\n      ingest_provenance,\n      family_id,\n      subject_id,\n      family_relationship as \"other_rel_code\",\n    from \"dbt\".\"main_main\".\"cmg_bh_stg_subject\"\n    where family_relationship != 'Proband'\n)\n,fr_base as (\n    select\n      distinct\n      'sb' || '_' || md5('cmg_bh' || '|' || cast(coalesce(p.subject_id, '') as text))::text as \"family_member\",\n      proband_rel_code,\n      'sb' || '_' || md5('cmg_bh' || '|' || cast(coalesce(o.subject_id, '') as text))::text as \"other_family_member\",\n      other_rel_code,\n      'ap' || '_' || md5('cmg_bh' || '|' || cast(coalesce(ingest_provenance, '') as text))::text as \"has_access_policy\",\n      'fr' || '_' || md5('cmg_bh' || '|' || cast(coalesce(family_id, '') as text) || '|' || 'cmg_bh' || '|' || cast(coalesce(p.subject_id, '') as text) || '|' || 'cmg_bh' || '|' || cast(coalesce(o.subject_id, '') as text) || '|' || 'cmg_bh' || '|' || cast(coalesce(other_rel_code, '') as text))::text as \"id\"\n    from probands_only as p\n    left join others_only as o\n    using (family_id, ingest_provenance)\n    where o.subject_id is not null\n)\nselect\n  distinct\n  family_member,\n  other_family_member,\n  has_access_policy,\n  id,\n    case \n    when other_rel_code = 'Brother'\n    then 'KIN:024'\n    when other_rel_code = 'Child'\n    then 'KIN:032'\n    when other_rel_code = 'Father'\n    then 'KIN:028'\n    when other_rel_code = 'Grandchild'\n    then 'KIN:036'\n    when other_rel_code = 'Maternal Aunt'\n    then 'KIN:060'\n    when other_rel_code = 'Maternal Cousin'\n    then 'KIN:015'\n    when other_rel_code = 'Maternal Grandmother'\n    then 'KIN:052'\n    when other_rel_code = 'Maternal Half Brother'\n    then 'KIN:012'\n    when other_rel_code = 'Maternal Uncle'\n    then 'KIN:058'\n    when other_rel_code = 'Monozygous Twin'\n    then 'KIN:010'\n    when other_rel_code = 'Mother'\n    then 'KIN:027'\n    when other_rel_code = 'Nephew'\n    then 'KIN:046'\n    when other_rel_code = 'Niece'\n    then 'KIN:046'\n    when other_rel_code = 'Niece''s Child' --TODO esc works?\n    then 'KIN:001' -- isRelativeOf\n    when other_rel_code = 'Paternal Cousin'\n    then 'KIN:016'\n    when other_rel_code = 'Paternal Uncle'\n    then 'KIN:059'\n    when other_rel_code = 'Sister'\n    then 'KIN:024'\n    when other_rel_code is null then null\n    else CONCAT('FTD_FLAG:unhandled relationship_code: ',other_rel_code)\n  end as \"relationship_code\"\nfrom fr_base", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.cmg_bh_ftd_accesspolicy_data_access_type": {"database": "dbt", "schema": "main_cmg_bh_data", "name": "cmg_bh_ftd_accesspolicy_data_access_type", "resource_type": "model", "package_name": "ftd", "path": "cmg_bh/cmg_bh_ftd_accesspolicy_data_access_type.sql", "original_file_path": "models/cmg_bh/cmg_bh_ftd_accesspolicy_data_access_type.sql", "unique_id": "model.ftd.cmg_bh_ftd_accesspolicy_data_access_type", "fqn": ["ftd", "cmg_bh", "cmg_bh_ftd_accesspolicy_data_access_type"], "alias": "cmg_bh_ftd_accesspolicy_data_access_type", "checksum": {"name": "sha256", "checksum": "6e35bd4213f8dcba8b89b6709509ae51fbd3f376f08d00d930f6132456301e52"}, "config": {"enabled": true, "alias": null, "schema": "cmg_bh_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for cmg_bh_ftd_accesspolicy_data_access_type.", "columns": {"accesspolicy_id": {"name": "accesspolicy_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "data_access_type": {"name": "data_access_type", "description": "Data Access Type", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/cmg_bh/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "cmg_bh_data"}, "created_at": 1757448969.4711442, "relation_name": "\"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_accesspolicy_data_access_type\"", "raw_code": "{{ config(materialized='table', schema='cmg_bh_data') }}\n\nselect \n  {{ generate_global_id(prefix='sa',descriptor=['s.ingest_provenance'], study_id='cmg_bh') }}::text as \"accesspolicy_id\",\n  'controlled'::text as \"data_access_type\"\nfrom (select distinct ingest_provenance from {{ ref('cmg_bh_stg_subject') }}) as s", "language": "sql", "refs": [{"name": "cmg_bh_stg_subject", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.cmg_bh.cmg_bh_stg_subject"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/cmg_bh_ftd_accesspolicy_data_access_type.sql", "compiled": true, "compiled_code": "\n\nselect \n  'sa' || '_' || md5('cmg_bh' || '|' || cast(coalesce(s.ingest_provenance, '') as text))::text as \"accesspolicy_id\",\n  'controlled'::text as \"data_access_type\"\nfrom (select distinct ingest_provenance from \"dbt\".\"main_main\".\"cmg_bh_stg_subject\") as s", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.cmg_bh_ftd_subjectassertion_source_data": {"database": "dbt", "schema": "main_cmg_bh_data", "name": "cmg_bh_ftd_subjectassertion_source_data", "resource_type": "model", "package_name": "ftd", "path": "cmg_bh/cmg_bh_ftd_subjectassertion_source_data.sql", "original_file_path": "models/cmg_bh/cmg_bh_ftd_subjectassertion_source_data.sql", "unique_id": "model.ftd.cmg_bh_ftd_subjectassertion_source_data", "fqn": ["ftd", "cmg_bh", "cmg_bh_ftd_subjectassertion_source_data"], "alias": "cmg_bh_ftd_subjectassertion_source_data", "checksum": {"name": "sha256", "checksum": "afe4f54a98837d942490c564f692d3d985038ec7c6b6e750dd28136260de2d06"}, "config": {"enabled": true, "alias": null, "schema": "cmg_bh_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for cmg_bh_ftd_subjectassertion_source_data.", "columns": {"subjectassertion_id": {"name": "subjectassertion_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "source_data_id": {"name": "source_data_id", "description": "The sources from which this assertion was derived", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/cmg_bh/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "cmg_bh_data"}, "created_at": 1757448969.4661243, "relation_name": "\"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_subjectassertion_source_data\"", "raw_code": "{{ config(materialized='table', schema='cmg_bh_data') }}\n\nselect\n  distinct\n  {{ generate_global_id(prefix='sa',descriptor=['subject_id','condition_or_disease_code'], study_id='cmg_bh') }}::text as \"subjectassertion_id\",\n  {{ generate_global_id(prefix='sd',descriptor=['dbgap_study_id'], study_id='cmg_bh') }}::text as \"source_data_id\"\nfrom (select distinct subject_id, condition_or_disease_code, dbgap_study_id from {{ ref('cmg_bh_stg_subject') }} ) as s", "language": "sql", "refs": [{"name": "cmg_bh_stg_subject", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.cmg_bh.cmg_bh_stg_subject"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/cmg_bh_ftd_subjectassertion_source_data.sql", "compiled": true, "compiled_code": "\n\nselect\n  distinct\n  'sa' || '_' || md5('cmg_bh' || '|' || cast(coalesce(subject_id, '') as text) || '|' || 'cmg_bh' || '|' || cast(coalesce(condition_or_disease_code, '') as text))::text as \"subjectassertion_id\",\n  'sd' || '_' || md5('cmg_bh' || '|' || cast(coalesce(dbgap_study_id, '') as text))::text as \"source_data_id\"\nfrom (select distinct subject_id, condition_or_disease_code, dbgap_study_id from \"dbt\".\"main_main\".\"cmg_bh_stg_subject\" ) as s", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.cmg_bh_ftd_familyrelationship_external_id": {"database": "dbt", "schema": "main_cmg_bh_data", "name": "cmg_bh_ftd_familyrelationship_external_id", "resource_type": "model", "package_name": "ftd", "path": "cmg_bh/cmg_bh_ftd_familyrelationship_external_id.sql", "original_file_path": "models/cmg_bh/cmg_bh_ftd_familyrelationship_external_id.sql", "unique_id": "model.ftd.cmg_bh_ftd_familyrelationship_external_id", "fqn": ["ftd", "cmg_bh", "cmg_bh_ftd_familyrelationship_external_id"], "alias": "cmg_bh_ftd_familyrelationship_external_id", "checksum": {"name": "sha256", "checksum": "fcc41622773761db892505783e865a7ef1c49877c610b8e878f94333739ad941"}, "config": {"enabled": true, "alias": null, "schema": "cmg_bh_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for cmg_bh_ftd_familyrelationship_external_id.", "columns": {"familyrelationship_id": {"name": "familyrelationship_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/cmg_bh/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "cmg_bh_data"}, "created_at": 1757448969.4806638, "relation_name": "\"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_familyrelationship_external_id\"", "raw_code": "{{ config(materialized='table', schema='cmg_bh_data') }}\n\nwith\nprobands_only as (\n    select distinct\n      ingest_provenance,\n      family_id,\n      subject_id,\n      family_relationship as \"proband_rel_code\",\n    from {{ ref('cmg_bh_stg_subject') }}\n    where family_relationship = 'Proband'\n)\n,others_only as (\n    select distinct\n      ingest_provenance,\n      family_id,\n      subject_id,\n      family_relationship as \"other_rel_code\",\n    from {{ ref('cmg_bh_stg_subject') }}\n    where family_relationship != 'Proband'\n)\n\nselect\n  distinct\n  p.subject_id as \"external_id\",\n  {{ generate_global_id(prefix='fr',descriptor=['family_id','p.subject_id','o.subject_id','other_rel_code'], study_id='cmg_bh') }}::text as \"familyrelationship_id\"\nfrom probands_only as p\nleft join others_only as o\nusing (family_id, ingest_provenance)\nwhere o.subject_id is not null", "language": "sql", "refs": [{"name": "cmg_bh_stg_subject", "package": null, "version": null}, {"name": "cmg_bh_stg_subject", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.cmg_bh.cmg_bh_stg_subject"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/cmg_bh_ftd_familyrelationship_external_id.sql", "compiled": true, "compiled_code": "\n\nwith\nprobands_only as (\n    select distinct\n      ingest_provenance,\n      family_id,\n      subject_id,\n      family_relationship as \"proband_rel_code\",\n    from \"dbt\".\"main_main\".\"cmg_bh_stg_subject\"\n    where family_relationship = 'Proband'\n)\n,others_only as (\n    select distinct\n      ingest_provenance,\n      family_id,\n      subject_id,\n      family_relationship as \"other_rel_code\",\n    from \"dbt\".\"main_main\".\"cmg_bh_stg_subject\"\n    where family_relationship != 'Proband'\n)\n\nselect\n  distinct\n  p.subject_id as \"external_id\",\n  'fr' || '_' || md5('cmg_bh' || '|' || cast(coalesce(family_id, '') as text) || '|' || 'cmg_bh' || '|' || cast(coalesce(p.subject_id, '') as text) || '|' || 'cmg_bh' || '|' || cast(coalesce(o.subject_id, '') as text) || '|' || 'cmg_bh' || '|' || cast(coalesce(other_rel_code, '') as text))::text as \"familyrelationship_id\"\nfrom probands_only as p\nleft join others_only as o\nusing (family_id, ingest_provenance)\nwhere o.subject_id is not null", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.cmg_bh_ftd_datasource": {"database": "dbt", "schema": "main_cmg_bh_data", "name": "cmg_bh_ftd_datasource", "resource_type": "model", "package_name": "ftd", "path": "cmg_bh/cmg_bh_ftd_datasource.sql", "original_file_path": "models/cmg_bh/cmg_bh_ftd_datasource.sql", "unique_id": "model.ftd.cmg_bh_ftd_datasource", "fqn": ["ftd", "cmg_bh", "cmg_bh_ftd_datasource"], "alias": "cmg_bh_ftd_datasource", "checksum": {"name": "sha256", "checksum": "7ddaacaf8947f0029f8fe285f84ba36a591f534ba4fdb88e98a2598211b6de58"}, "config": {"enabled": true, "alias": null, "schema": "cmg_bh_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for cmg_bh_ftd_datasource.", "columns": {"snapshot_id": {"name": "snapshot_id", "description": "The Terra Data Repository Snapshot ID.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "google_data_project": {"name": "google_data_project", "description": "The Google Data Project needed to query this snapshot in BigQuery.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "snapshot_dataset": {"name": "snapshot_dataset", "description": "The Dataset within BigQuery where the table can be queried.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "table": {"name": "table", "description": "The table in the dataset that contains the row of interest.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "parameterized_query": {"name": "parameterized_query", "description": "A parameterized query that contains the primary key fields and can be used to select specific rows. This should be formatted according to (https://cloud.google.com/bigquery/docs/parameterized-queries)[BigQuery instructions], including using named parameters.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/cmg_bh/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "cmg_bh_data"}, "created_at": 1757448969.476111, "relation_name": "\"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_datasource\"", "raw_code": "{{ config(materialized='table', schema='cmg_bh_data') }}\n\nselect \n  '07b0243c-48fc-4eee-a338-c7571cc2df1a'::text as \"snapshot_id\",\n  'datarepo-d321333c'::text as \"google_data_project\",\n  'ANVIL_CMG_BaylorHopkins_HMB_NPU_WES_20230525_ANV5_202402290537'::text as \"snapshot_dataset\",\n  NULL::text as \"table\",\n  NULL::text as \"parameterized_query\",\n  {{ generate_global_id(prefix='ds',descriptor=['dbgap_study_id'], study_id='cmg_bh') }}::text as \"id\"\nfrom (select distinct dbgap_study_id from {{ ref('cmg_bh_stg_subject') }} ) as s", "language": "sql", "refs": [{"name": "cmg_bh_stg_subject", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.cmg_bh.cmg_bh_stg_subject"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/cmg_bh_ftd_datasource.sql", "compiled": true, "compiled_code": "\n\nselect \n  '07b0243c-48fc-4eee-a338-c7571cc2df1a'::text as \"snapshot_id\",\n  'datarepo-d321333c'::text as \"google_data_project\",\n  'ANVIL_CMG_BaylorHopkins_HMB_NPU_WES_20230525_ANV5_202402290537'::text as \"snapshot_dataset\",\n  NULL::text as \"table\",\n  NULL::text as \"parameterized_query\",\n  'ds' || '_' || md5('cmg_bh' || '|' || cast(coalesce(dbgap_study_id, '') as text))::text as \"id\"\nfrom (select distinct dbgap_study_id from \"dbt\".\"main_main\".\"cmg_bh_stg_subject\" ) as s", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.cmg_bh_ftd_subjectassertion_external_id": {"database": "dbt", "schema": "main_cmg_bh_data", "name": "cmg_bh_ftd_subjectassertion_external_id", "resource_type": "model", "package_name": "ftd", "path": "cmg_bh/cmg_bh_ftd_subjectassertion_external_id.sql", "original_file_path": "models/cmg_bh/cmg_bh_ftd_subjectassertion_external_id.sql", "unique_id": "model.ftd.cmg_bh_ftd_subjectassertion_external_id", "fqn": ["ftd", "cmg_bh", "cmg_bh_ftd_subjectassertion_external_id"], "alias": "cmg_bh_ftd_subjectassertion_external_id", "checksum": {"name": "sha256", "checksum": "825818ea8420b8733cf1a62f8c471a2b08853b8981f6c23f40420aadc83b09fa"}, "config": {"enabled": true, "alias": null, "schema": "cmg_bh_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for cmg_bh_ftd_subjectassertion_external_id.", "columns": {"subjectassertion_id": {"name": "subjectassertion_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/cmg_bh/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "cmg_bh_data"}, "created_at": 1757448969.4789076, "relation_name": "\"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_subjectassertion_external_id\"", "raw_code": "{{ config(materialized='table', schema='cmg_bh_data') }}\n\nwith\nlookup as (\n    select -- annotations from src\n      \"searched_code\" as join_code,\n      \"searched_code\" as code,\n      \"display\" as display\n    from {{ ref('cmg_bh_annotations_code') }}\n    \n    union all\n    \n    select -- annotations from MD\n      \"local code\" as join_code,\n      \"code\" as code,\n      \"display\" as display\n    from {{ ref('subject_mappings') }}\n)\n\nselect \n   distinct\n   {{ generate_global_id(prefix='sa',descriptor=['subject_id','code'], study_id='cmg_bh') }}::text as \"subjectassertion_id\",\n   subject_id::text as \"external_id\"\nfrom (select distinct subject_id, dbgap_study_id from {{ ref('cmg_bh_stg_subject') }} ) as s\nleft join lookup\non code = lookup.join_code", "language": "sql", "refs": [{"name": "cmg_bh_annotations_code", "package": null, "version": null}, {"name": "subject_mappings", "package": null, "version": null}, {"name": "cmg_bh_stg_subject", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["seed.base.cmg_bh_annotations_code", "seed.base.subject_mappings", "model.cmg_bh.cmg_bh_stg_subject"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/cmg_bh_ftd_subjectassertion_external_id.sql", "compiled": true, "compiled_code": "\n\nwith\nlookup as (\n    select -- annotations from src\n      \"searched_code\" as join_code,\n      \"searched_code\" as code,\n      \"display\" as display\n    from \"dbt\".\"main\".\"cmg_bh_annotations_code\"\n    \n    union all\n    \n    select -- annotations from MD\n      \"local code\" as join_code,\n      \"code\" as code,\n      \"display\" as display\n    from \"dbt\".\"main\".\"subject_mappings\"\n)\n\nselect \n   distinct\n   'sa' || '_' || md5('cmg_bh' || '|' || cast(coalesce(subject_id, '') as text) || '|' || 'cmg_bh' || '|' || cast(coalesce(code, '') as text))::text as \"subjectassertion_id\",\n   subject_id::text as \"external_id\"\nfrom (select distinct subject_id, dbgap_study_id from \"dbt\".\"main_main\".\"cmg_bh_stg_subject\" ) as s\nleft join lookup\non code = lookup.join_code", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.cmg_bh_ftd_subject": {"database": "dbt", "schema": "main_cmg_bh_data", "name": "cmg_bh_ftd_subject", "resource_type": "model", "package_name": "ftd", "path": "cmg_bh/cmg_bh_ftd_subject.sql", "original_file_path": "models/cmg_bh/cmg_bh_ftd_subject.sql", "unique_id": "model.ftd.cmg_bh_ftd_subject", "fqn": ["ftd", "cmg_bh", "cmg_bh_ftd_subject"], "alias": "cmg_bh_ftd_subject", "checksum": {"name": "sha256", "checksum": "518c4ab6eb9d0445ca97ce3368960416630ae7ed6b97e34d541e9a94a50d7fe0"}, "config": {"enabled": true, "alias": null, "schema": "cmg_bh_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for cmg_bh_ftd_subject.", "columns": {"subject_type": {"name": "subject_type", "description": "Type of entity this record represents", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "organism_type": {"name": "organism_type", "description": "Organism Type Label", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_demographics_id": {"name": "has_demographics_id", "description": "A demographic summary of the participant.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/cmg_bh/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "cmg_bh_data"}, "created_at": 1757448969.4701285, "relation_name": "\"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_subject\"", "raw_code": "{{ config(materialized='table', schema='cmg_bh_data') }}\n\nselect \n  distinct\n  'participant'::text as \"subject_type\",\n  'human'::text as \"organism_type\",\n  {{ generate_global_id(prefix='ap',descriptor=['ingest_provenance'], study_id='cmg_bh') }}::text as \"has_access_policy\",\n  {{ generate_global_id(prefix='sb',descriptor=['subject_id'], study_id='cmg_bh') }}::text as \"id\",\n  {{ generate_global_id(prefix='dm',descriptor=['subject_id'], study_id='cmg_bh') }}::text as \"has_demographics_id\"\nfrom (select distinct subject_id, ingest_provenance from {{ ref('cmg_bh_stg_subject') }} ) AS s", "language": "sql", "refs": [{"name": "cmg_bh_stg_subject", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.cmg_bh.cmg_bh_stg_subject"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/cmg_bh_ftd_subject.sql", "compiled": true, "compiled_code": "\n\nselect \n  distinct\n  'participant'::text as \"subject_type\",\n  'human'::text as \"organism_type\",\n  'ap' || '_' || md5('cmg_bh' || '|' || cast(coalesce(ingest_provenance, '') as text))::text as \"has_access_policy\",\n  'sb' || '_' || md5('cmg_bh' || '|' || cast(coalesce(subject_id, '') as text))::text as \"id\",\n  'dm' || '_' || md5('cmg_bh' || '|' || cast(coalesce(subject_id, '') as text))::text as \"has_demographics_id\"\nfrom (select distinct subject_id, ingest_provenance from \"dbt\".\"main_main\".\"cmg_bh_stg_subject\" ) AS s", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.cmg_bh_ftd_demographics_race": {"database": "dbt", "schema": "main_cmg_bh_data", "name": "cmg_bh_ftd_demographics_race", "resource_type": "model", "package_name": "ftd", "path": "cmg_bh/cmg_bh_ftd_demographics_race.sql", "original_file_path": "models/cmg_bh/cmg_bh_ftd_demographics_race.sql", "unique_id": "model.ftd.cmg_bh_ftd_demographics_race", "fqn": ["ftd", "cmg_bh", "cmg_bh_ftd_demographics_race"], "alias": "cmg_bh_ftd_demographics_race", "checksum": {"name": "sha256", "checksum": "cf8fc9b97efbbe2cc535a7ce91e938260fa9e7cf5bb26c59f934283b5dc69558"}, "config": {"enabled": true, "alias": null, "schema": "cmg_bh_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for cmg_bh_ftd_demographics_race.", "columns": {"demographics_id": {"name": "demographics_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "race": {"name": "race", "description": "Reported race as defined by the 1997 OMB directives.", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/cmg_bh/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "cmg_bh_data"}, "created_at": 1757448969.477041, "relation_name": "\"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_demographics_race\"", "raw_code": "{{ config(materialized='table', schema='cmg_bh_data') }}\n\nselect \n  {{ generate_global_id(prefix='dm',descriptor=['subject_id'], study_id='cmg_bh') }}::text as \"demographics_id\",\n    case \n    when ancestry in ('american_indian_or_alaskan_native',\n                        'asian',\n                        'black_or_african_american',\n                        'native_hawaiian_or_pacific_islander',\n                        'white',\n                        'other_race',\n                        'unknown',\n                        'asked_but_unknown')\n      then ancestry\n    when ancestry = 'American Indian or Alaskan Native'\n      then 'american_indian_or_alaskan_native'\n    when ancestry = 'Asian'\n      then 'asian'\n    when ancestry = 'Black or African American'\n      then 'black_or_african_american'\n    when ancestry = 'Native Hawaiian or Pacific Islander'\n      then 'native_hawaiian_or_pacific_islander'\n    when ancestry = 'White'\n      then 'white'\n    when ancestry = 'Other'\n      then 'other_race'\n    when ancestry = 'Unknown'\n      then 'unknown'\n    when ancestry = 'Asked but Unknown'\n      then 'asked_but_unknown'\n    when ancestry is null\n      then null\n    else CONCAT('FTD_FLAG:unhandled race: ',ancestry)\n   end as \"race\",\nfrom (select distinct ancestry, subject_id from {{ ref('cmg_bh_stg_subject') }}) as s", "language": "sql", "refs": [{"name": "cmg_bh_stg_subject", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.cmg_bh.cmg_bh_stg_subject"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/cmg_bh_ftd_demographics_race.sql", "compiled": true, "compiled_code": "\n\nselect \n  'dm' || '_' || md5('cmg_bh' || '|' || cast(coalesce(subject_id, '') as text))::text as \"demographics_id\",\n    case \n    when ancestry in ('american_indian_or_alaskan_native',\n                        'asian',\n                        'black_or_african_american',\n                        'native_hawaiian_or_pacific_islander',\n                        'white',\n                        'other_race',\n                        'unknown',\n                        'asked_but_unknown')\n      then ancestry\n    when ancestry = 'American Indian or Alaskan Native'\n      then 'american_indian_or_alaskan_native'\n    when ancestry = 'Asian'\n      then 'asian'\n    when ancestry = 'Black or African American'\n      then 'black_or_african_american'\n    when ancestry = 'Native Hawaiian or Pacific Islander'\n      then 'native_hawaiian_or_pacific_islander'\n    when ancestry = 'White'\n      then 'white'\n    when ancestry = 'Other'\n      then 'other_race'\n    when ancestry = 'Unknown'\n      then 'unknown'\n    when ancestry = 'Asked but Unknown'\n      then 'asked_but_unknown'\n    when ancestry is null\n      then null\n    else CONCAT('FTD_FLAG:unhandled race: ',ancestry)\n   end as \"race\",\nfrom (select distinct ancestry, subject_id from \"dbt\".\"main_main\".\"cmg_bh_stg_subject\") as s", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.cmg_bh_ftd_demographics_external_id": {"database": "dbt", "schema": "main_cmg_bh_data", "name": "cmg_bh_ftd_demographics_external_id", "resource_type": "model", "package_name": "ftd", "path": "cmg_bh/cmg_bh_ftd_demographics_external_id.sql", "original_file_path": "models/cmg_bh/cmg_bh_ftd_demographics_external_id.sql", "unique_id": "model.ftd.cmg_bh_ftd_demographics_external_id", "fqn": ["ftd", "cmg_bh", "cmg_bh_ftd_demographics_external_id"], "alias": "cmg_bh_ftd_demographics_external_id", "checksum": {"name": "sha256", "checksum": "c483f3d1963f3973d7889d90736d6f71c08f14d8bd2a15622a374dafb9717bb7"}, "config": {"enabled": true, "alias": null, "schema": "cmg_bh_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for cmg_bh_ftd_demographics_external_id.", "columns": {"demographics_id": {"name": "demographics_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/cmg_bh/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "cmg_bh_data"}, "created_at": 1757448969.4824185, "relation_name": "\"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_demographics_external_id\"", "raw_code": "{{ config(materialized='table', schema='cmg_bh_data') }}\n\nselect \n  {{ generate_global_id(prefix='dm',descriptor=['subject_id'], study_id='cmg_bh') }}::text as \"demographics_id\",\n  subject_id::text as \"external_id\"\nfrom (select distinct subject_id from {{ ref('cmg_bh_stg_subject') }}) as s", "language": "sql", "refs": [{"name": "cmg_bh_stg_subject", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.cmg_bh.cmg_bh_stg_subject"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/cmg_bh_ftd_demographics_external_id.sql", "compiled": true, "compiled_code": "\n\nselect \n  'dm' || '_' || md5('cmg_bh' || '|' || cast(coalesce(subject_id, '') as text))::text as \"demographics_id\",\n  subject_id::text as \"external_id\"\nfrom (select distinct subject_id from \"dbt\".\"main_main\".\"cmg_bh_stg_subject\") as s", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.cmg_bh_ftd_sourcedata_external_id": {"database": "dbt", "schema": "main_cmg_bh_data", "name": "cmg_bh_ftd_sourcedata_external_id", "resource_type": "model", "package_name": "ftd", "path": "cmg_bh/cmg_bh_ftd_sourcedata_external_id.sql", "original_file_path": "models/cmg_bh/cmg_bh_ftd_sourcedata_external_id.sql", "unique_id": "model.ftd.cmg_bh_ftd_sourcedata_external_id", "fqn": ["ftd", "cmg_bh", "cmg_bh_ftd_sourcedata_external_id"], "alias": "cmg_bh_ftd_sourcedata_external_id", "checksum": {"name": "sha256", "checksum": "417704ffae9004bf23e0a6a10b7eebaa2ee32b6dc3291fece9c5b4494b1c8964"}, "config": {"enabled": true, "alias": null, "schema": "cmg_bh_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for cmg_bh_ftd_sourcedata_external_id.", "columns": {"sourcedata_id": {"name": "sourcedata_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/cmg_bh/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "cmg_bh_data"}, "created_at": 1757448969.467023, "relation_name": "\"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_sourcedata_external_id\"", "raw_code": "{{ config(materialized='table', schema='cmg_bh_data') }}\n\nselect \n  {{ generate_global_id(prefix='sd',descriptor=['dbgap_study_id'], study_id='cmg_bh') }}::text as \"sourcedata_id\",\n  dbgap_study_id::text as \"external_id\"\nfrom (select distinct dbgap_study_id from {{ ref('cmg_bh_stg_subject') }} ) as s", "language": "sql", "refs": [{"name": "cmg_bh_stg_subject", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.cmg_bh.cmg_bh_stg_subject"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/cmg_bh_ftd_sourcedata_external_id.sql", "compiled": true, "compiled_code": "\n\nselect \n  'sd' || '_' || md5('cmg_bh' || '|' || cast(coalesce(dbgap_study_id, '') as text))::text as \"sourcedata_id\",\n  dbgap_study_id::text as \"external_id\"\nfrom (select distinct dbgap_study_id from \"dbt\".\"main_main\".\"cmg_bh_stg_subject\" ) as s", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.cmg_bh_ftd_study_principal_investigator": {"database": "dbt", "schema": "main_cmg_bh_data", "name": "cmg_bh_ftd_study_principal_investigator", "resource_type": "model", "package_name": "ftd", "path": "cmg_bh/cmg_bh_ftd_study_principal_investigator.sql", "original_file_path": "models/cmg_bh/cmg_bh_ftd_study_principal_investigator.sql", "unique_id": "model.ftd.cmg_bh_ftd_study_principal_investigator", "fqn": ["ftd", "cmg_bh", "cmg_bh_ftd_study_principal_investigator"], "alias": "cmg_bh_ftd_study_principal_investigator", "checksum": {"name": "sha256", "checksum": "11222ae350132fd964a43d8152cb29e3a35043627f5bb40905a682c90a7e0ac6"}, "config": {"enabled": true, "alias": null, "schema": "cmg_bh_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for cmg_bh_ftd_study_principal_investigator.", "columns": {"study_id": {"name": "study_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "principal_investigator": {"name": "principal_investigator", "description": "Principal Investigator", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/cmg_bh/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "cmg_bh_data"}, "created_at": 1757448969.4793243, "relation_name": "\"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_study_principal_investigator\"", "raw_code": "{{ config(materialized='table', schema='cmg_bh_data') }}\n\nselect \n  {{ generate_global_id(prefix='st',descriptor=['dbgap_study_id'], study_id='cmg_bh') }}::text as \"study_id\",\n  project_investigator::text as \"principal_investigator\"\nfrom  (select distinct dbgap_study_id, project_investigator from {{ ref('cmg_bh_stg_subject') }}) as s", "language": "sql", "refs": [{"name": "cmg_bh_stg_subject", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.cmg_bh.cmg_bh_stg_subject"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/cmg_bh_ftd_study_principal_investigator.sql", "compiled": true, "compiled_code": "\n\nselect \n  'st' || '_' || md5('cmg_bh' || '|' || cast(coalesce(dbgap_study_id, '') as text))::text as \"study_id\",\n  project_investigator::text as \"principal_investigator\"\nfrom  (select distinct dbgap_study_id, project_investigator from \"dbt\".\"main_main\".\"cmg_bh_stg_subject\") as s", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.cmg_bh_ftd_study_funding_source": {"database": "dbt", "schema": "main_cmg_bh_data", "name": "cmg_bh_ftd_study_funding_source", "resource_type": "model", "package_name": "ftd", "path": "cmg_bh/cmg_bh_ftd_study_funding_source.sql", "original_file_path": "models/cmg_bh/cmg_bh_ftd_study_funding_source.sql", "unique_id": "model.ftd.cmg_bh_ftd_study_funding_source", "fqn": ["ftd", "cmg_bh", "cmg_bh_ftd_study_funding_source"], "alias": "cmg_bh_ftd_study_funding_source", "checksum": {"name": "sha256", "checksum": "24984c5285db079a0fd85418e6ea84b521cfe612788804b3a439d23743f4ee94"}, "config": {"enabled": true, "alias": null, "schema": "cmg_bh_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for cmg_bh_ftd_study_funding_source.", "columns": {"study_id": {"name": "study_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "funding_source": {"name": "funding_source", "description": "Funding Source", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/cmg_bh/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "cmg_bh_data"}, "created_at": 1757448969.4839604, "relation_name": "\"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_study_funding_source\"", "raw_code": "{{ config(materialized='table', schema='cmg_bh_data') }}\n\nselect \n  {{ generate_global_id(prefix='st',descriptor=['dbgap_study_id'], study_id='cmg_bh') }}::text as \"study_id\",\n  NULL::text as \"funding_source\"\nfrom (select distinct dbgap_study_id from {{ ref('cmg_bh_stg_subject') }}) as s", "language": "sql", "refs": [{"name": "cmg_bh_stg_subject", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.cmg_bh.cmg_bh_stg_subject"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/cmg_bh_ftd_study_funding_source.sql", "compiled": true, "compiled_code": "\n\nselect \n  'st' || '_' || md5('cmg_bh' || '|' || cast(coalesce(dbgap_study_id, '') as text))::text as \"study_id\",\n  NULL::text as \"funding_source\"\nfrom (select distinct dbgap_study_id from \"dbt\".\"main_main\".\"cmg_bh_stg_subject\") as s", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.cmg_bh_ftd_datasource_external_id": {"database": "dbt", "schema": "main_cmg_bh_data", "name": "cmg_bh_ftd_datasource_external_id", "resource_type": "model", "package_name": "ftd", "path": "cmg_bh/cmg_bh_ftd_datasource_external_id.sql", "original_file_path": "models/cmg_bh/cmg_bh_ftd_datasource_external_id.sql", "unique_id": "model.ftd.cmg_bh_ftd_datasource_external_id", "fqn": ["ftd", "cmg_bh", "cmg_bh_ftd_datasource_external_id"], "alias": "cmg_bh_ftd_datasource_external_id", "checksum": {"name": "sha256", "checksum": "67bbaf308841c96f8c4f47888cf0c93b6b4b200526d422cbcb77d5ca1fd99dc2"}, "config": {"enabled": true, "alias": null, "schema": "cmg_bh_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for cmg_bh_ftd_datasource_external_id.", "columns": {"datasource_id": {"name": "datasource_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/cmg_bh/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "cmg_bh_data"}, "created_at": 1757448969.469176, "relation_name": "\"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_datasource_external_id\"", "raw_code": "{{ config(materialized='table', schema='cmg_bh_data') }}\n\nselect \n  {{ generate_global_id(prefix='ds',descriptor=['dbgap_study_id'], study_id='cmg_bh') }}::text as \"datasource_id\",\n  dbgap_study_id::text as \"external_id\"\nfrom (select distinct dbgap_study_id from {{ ref('cmg_bh_stg_subject') }} ) as s", "language": "sql", "refs": [{"name": "cmg_bh_stg_subject", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.cmg_bh.cmg_bh_stg_subject"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/cmg_bh_ftd_datasource_external_id.sql", "compiled": true, "compiled_code": "\n\nselect \n  'ds' || '_' || md5('cmg_bh' || '|' || cast(coalesce(dbgap_study_id, '') as text))::text as \"datasource_id\",\n  dbgap_study_id::text as \"external_id\"\nfrom (select distinct dbgap_study_id from \"dbt\".\"main_main\".\"cmg_bh_stg_subject\" ) as s", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.cmg_bh_ftd_sourcedata_query_parameter": {"database": "dbt", "schema": "main_cmg_bh_data", "name": "cmg_bh_ftd_sourcedata_query_parameter", "resource_type": "model", "package_name": "ftd", "path": "cmg_bh/cmg_bh_ftd_sourcedata_query_parameter.sql", "original_file_path": "models/cmg_bh/cmg_bh_ftd_sourcedata_query_parameter.sql", "unique_id": "model.ftd.cmg_bh_ftd_sourcedata_query_parameter", "fqn": ["ftd", "cmg_bh", "cmg_bh_ftd_sourcedata_query_parameter"], "alias": "cmg_bh_ftd_sourcedata_query_parameter", "checksum": {"name": "sha256", "checksum": "da8932f89738f52e8ed6dd22c85f2a6fe3263715b7c52a797b5b4786adfaed52"}, "config": {"enabled": true, "alias": null, "schema": "cmg_bh_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for cmg_bh_ftd_sourcedata_query_parameter.", "columns": {"sourcedata_id": {"name": "sourcedata_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "query_parameter": {"name": "query_parameter", "description": "One or more query parameters used to select the specific row. It will leverage the parameterized_query defined by a data_source. This should be formatted according to (https://cloud.google.com/bigquery/docs/parameterized-queries)[BigQuery instructions], specifically the bq CLI version with named parameters, ie, \"<parameter name>:<data type>:<value>\".", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/cmg_bh/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "cmg_bh_data"}, "created_at": 1757448969.4683242, "relation_name": "\"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_sourcedata_query_parameter\"", "raw_code": "{{ config(materialized='table', schema='cmg_bh_data') }}\n\nselect \n  {{ generate_global_id(prefix='sd',descriptor=['dbgap_study_id'], study_id='cmg_bh') }}::text as \"sourcedata_id\",\n  NULL::text as \"query_parameter\"\nfrom (select distinct dbgap_study_id from {{ ref('cmg_bh_stg_subject') }} ) as s", "language": "sql", "refs": [{"name": "cmg_bh_stg_subject", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.cmg_bh.cmg_bh_stg_subject"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/cmg_bh_ftd_sourcedata_query_parameter.sql", "compiled": true, "compiled_code": "\n\nselect \n  'sd' || '_' || md5('cmg_bh' || '|' || cast(coalesce(dbgap_study_id, '') as text))::text as \"sourcedata_id\",\n  NULL::text as \"query_parameter\"\nfrom (select distinct dbgap_study_id from \"dbt\".\"main_main\".\"cmg_bh_stg_subject\" ) as s", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.cmg_bh_ftd_familymember": {"database": "dbt", "schema": "main_cmg_bh_data", "name": "cmg_bh_ftd_familymember", "resource_type": "model", "package_name": "ftd", "path": "cmg_bh/cmg_bh_ftd_familymember.sql", "original_file_path": "models/cmg_bh/cmg_bh_ftd_familymember.sql", "unique_id": "model.ftd.cmg_bh_ftd_familymember", "fqn": ["ftd", "cmg_bh", "cmg_bh_ftd_familymember"], "alias": "cmg_bh_ftd_familymember", "checksum": {"name": "sha256", "checksum": "5732729fb724185b3271f70e5b1615f8a4063b7a43d66802cf79aa35fc0793df"}, "config": {"enabled": true, "alias": null, "schema": "cmg_bh_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for cmg_bh_ftd_familymember.", "columns": {"family_member": {"name": "family_member", "description": "The family member Subject who is the relationship \"subject\".", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "family_role": {"name": "family_role", "description": "The \"role\" of this indiviudal in this family.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "family_id": {"name": "family_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/cmg_bh/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "cmg_bh_data"}, "created_at": 1757448969.4655242, "relation_name": "\"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_familymember\"", "raw_code": "{{ config(materialized='table', schema='cmg_bh_data') }}\n\nselect\n  family_id,\n  subject_id as \"family_member\",\n  {{ generate_global_id(prefix='ap',descriptor=['ingest_provenance'], study_id='cmg_bh') }}::text as \"has_access_policy\",\n  {{ generate_global_id(prefix='fm',descriptor=['subject_id'], study_id='cmg_bh') }}::text as \"id\",\n    case \n    when family_relationship = 'Brother'\n    then 'BRO'\n    when family_relationship = 'Child'\n    then 'CHILD'\n    when family_relationship = 'Father'\n    then 'FTH'\n    when family_relationship = 'Grandchild'\n    then 'GRNDCHILD'\n    when family_relationship = 'Maternal Aunt'\n    then 'MAUNT'\n    when family_relationship = 'Maternal Cousin'\n    then 'MCOUSN'\n    when family_relationship = 'Maternal Grandmother'\n    then 'MGRMTH'\n    when family_relationship = 'Maternal Half Brother'\n    then 'HBRO'\n    when family_relationship = 'Maternal Uncle'\n    then 'MUNCLE'\n    when family_relationship = 'Monozygous Twin'\n    then 'ITWIN'\n    when family_relationship = 'Mother'\n    then 'MTH'\n    when family_relationship = 'Nephew'\n    then 'NEPHEW'\n    when family_relationship = 'Niece'\n    then 'NIECE'\n    when family_relationship = 'Niece''s Child'\n    then 'EXT'\n    when family_relationship = 'Paternal Cousin'\n    then 'PCOUSN'\n    when family_relationship = 'Paternal Uncle'\n    then 'PUNCLE'\n    when family_relationship = 'Sister'\n    then 'SIS'\n    when family_relationship is null then null\n    else CONCAT('FTD_FLAG:unhandled family_role: ',family_relationship)\n  end as \"family_role\"\nfrom (select distinct family_id, subject_id, family_relationship, ingest_provenance from {{ ref('cmg_bh_stg_subject') }}) as s", "language": "sql", "refs": [{"name": "cmg_bh_stg_subject", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.cmg_bh.cmg_bh_stg_subject"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/cmg_bh_ftd_familymember.sql", "compiled": true, "compiled_code": "\n\nselect\n  family_id,\n  subject_id as \"family_member\",\n  'ap' || '_' || md5('cmg_bh' || '|' || cast(coalesce(ingest_provenance, '') as text))::text as \"has_access_policy\",\n  'fm' || '_' || md5('cmg_bh' || '|' || cast(coalesce(subject_id, '') as text))::text as \"id\",\n    case \n    when family_relationship = 'Brother'\n    then 'BRO'\n    when family_relationship = 'Child'\n    then 'CHILD'\n    when family_relationship = 'Father'\n    then 'FTH'\n    when family_relationship = 'Grandchild'\n    then 'GRNDCHILD'\n    when family_relationship = 'Maternal Aunt'\n    then 'MAUNT'\n    when family_relationship = 'Maternal Cousin'\n    then 'MCOUSN'\n    when family_relationship = 'Maternal Grandmother'\n    then 'MGRMTH'\n    when family_relationship = 'Maternal Half Brother'\n    then 'HBRO'\n    when family_relationship = 'Maternal Uncle'\n    then 'MUNCLE'\n    when family_relationship = 'Monozygous Twin'\n    then 'ITWIN'\n    when family_relationship = 'Mother'\n    then 'MTH'\n    when family_relationship = 'Nephew'\n    then 'NEPHEW'\n    when family_relationship = 'Niece'\n    then 'NIECE'\n    when family_relationship = 'Niece''s Child'\n    then 'EXT'\n    when family_relationship = 'Paternal Cousin'\n    then 'PCOUSN'\n    when family_relationship = 'Paternal Uncle'\n    then 'PUNCLE'\n    when family_relationship = 'Sister'\n    then 'SIS'\n    when family_relationship is null then null\n    else CONCAT('FTD_FLAG:unhandled family_role: ',family_relationship)\n  end as \"family_role\"\nfrom (select distinct family_id, subject_id, family_relationship, ingest_provenance from \"dbt\".\"main_main\".\"cmg_bh_stg_subject\") as s", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.cmg_bh_ftd_study": {"database": "dbt", "schema": "main_cmg_bh_data", "name": "cmg_bh_ftd_study", "resource_type": "model", "package_name": "ftd", "path": "cmg_bh/cmg_bh_ftd_study.sql", "original_file_path": "models/cmg_bh/cmg_bh_ftd_study.sql", "unique_id": "model.ftd.cmg_bh_ftd_study", "fqn": ["ftd", "cmg_bh", "cmg_bh_ftd_study"], "alias": "cmg_bh_ftd_study", "checksum": {"name": "sha256", "checksum": "798cc997d1609c7d1cb7905147c3e89b588abc864a52faca3227e812f800af80"}, "config": {"enabled": true, "alias": null, "schema": "cmg_bh_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for cmg_bh_ftd_study.", "columns": {"parent_study_id": {"name": "parent_study_id", "description": "Parent Study ID", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "study_title": {"name": "study_title", "description": "Study Title", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/cmg_bh/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "cmg_bh_data"}, "created_at": 1757448969.474452, "relation_name": "\"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_study\"", "raw_code": "{{ config(materialized='table', schema='cmg_bh_data') }}\n\nselect \n  NULL::text as \"parent_study_id\",\n  'Baylor Hopkins Center for Mendelian Genomics (BH CMG)' as \"study_title\", \n  {{ generate_global_id(prefix='st',descriptor=['dbgap_study_id'], study_id='cmg_bh') }}::text as \"id\"\nfrom (select distinct dbgap_study_id from {{ ref('cmg_bh_stg_subject') }}) s", "language": "sql", "refs": [{"name": "cmg_bh_stg_subject", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.cmg_bh.cmg_bh_stg_subject"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/cmg_bh_ftd_study.sql", "compiled": true, "compiled_code": "\n\nselect \n  NULL::text as \"parent_study_id\",\n  'Baylor Hopkins Center for Mendelian Genomics (BH CMG)' as \"study_title\", \n  'st' || '_' || md5('cmg_bh' || '|' || cast(coalesce(dbgap_study_id, '') as text))::text as \"id\"\nfrom (select distinct dbgap_study_id from \"dbt\".\"main_main\".\"cmg_bh_stg_subject\") s", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.cmg_bh_ftd_sample_processing": {"database": "dbt", "schema": "main_cmg_bh_data", "name": "cmg_bh_ftd_sample_processing", "resource_type": "model", "package_name": "ftd", "path": "cmg_bh/not_for_export/cmg_bh_ftd_sample_processing.sql", "original_file_path": "models/cmg_bh/not_for_export/cmg_bh_ftd_sample_processing.sql", "unique_id": "model.ftd.cmg_bh_ftd_sample_processing", "fqn": ["ftd", "cmg_bh", "not_for_export", "cmg_bh_ftd_sample_processing"], "alias": "cmg_bh_ftd_sample_processing", "checksum": {"name": "sha256", "checksum": "7ee326da0c4d2c43a284f103d55d7db35fa3cfbcdcc6632fa3fc85ebb6f75d42"}, "config": {"enabled": true, "alias": null, "schema": "cmg_bh_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for cmg_bh_ftd_sample_processing.", "columns": {"sample_id": {"name": "sample_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "processing": {"name": "processing", "description": "Processing that was applied to the Parent Sample or from the Biospecimen Collection that yielded this distinct sample", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/cmg_bh/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "cmg_bh_data"}, "created_at": 1757448969.4695868, "relation_name": "\"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_sample_processing\"", "raw_code": "{{ config(materialized='table', schema='cmg_bh_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='cmg_bh') }}::text as \"sample_id\",\n       GEN_UNKNOWN.processing::text as \"processing\"\n        from {{ ref('cmg_bh_stg_sample') }} as sample\n        join {{ ref('cmg_bh_stg_subject') }} as subject\non sample.subject_id = subject.subject_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "cmg_bh_stg_sample", "package": null, "version": null}, {"name": "cmg_bh_stg_subject", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.cmg_bh.cmg_bh_stg_sample", "model.cmg_bh.cmg_bh_stg_subject"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/not_for_export/cmg_bh_ftd_sample_processing.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('cmg_bh' || '|' || cast(coalesce(, '') as text))::text as \"sample_id\",\n       GEN_UNKNOWN.processing::text as \"processing\"\n        from \"dbt\".\"main_main\".\"cmg_bh_stg_sample\" as sample\n        join \"dbt\".\"main_main\".\"cmg_bh_stg_subject\" as subject\non sample.subject_id = subject.subject_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.cmg_bh_ftd_biospecimencollection_external_id": {"database": "dbt", "schema": "main_cmg_bh_data", "name": "cmg_bh_ftd_biospecimencollection_external_id", "resource_type": "model", "package_name": "ftd", "path": "cmg_bh/not_for_export/cmg_bh_ftd_biospecimencollection_external_id.sql", "original_file_path": "models/cmg_bh/not_for_export/cmg_bh_ftd_biospecimencollection_external_id.sql", "unique_id": "model.ftd.cmg_bh_ftd_biospecimencollection_external_id", "fqn": ["ftd", "cmg_bh", "not_for_export", "cmg_bh_ftd_biospecimencollection_external_id"], "alias": "cmg_bh_ftd_biospecimencollection_external_id", "checksum": {"name": "sha256", "checksum": "c869d9960d6b608e63b54cdac7924b5d91baac2cb21d3399c236da0c13d29ecd"}, "config": {"enabled": true, "alias": null, "schema": "cmg_bh_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for cmg_bh_ftd_biospecimencollection_external_id.", "columns": {"biospecimencollection_id": {"name": "biospecimencollection_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/cmg_bh/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "cmg_bh_data"}, "created_at": 1757448969.4687884, "relation_name": "\"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_biospecimencollection_external_id\"", "raw_code": "{{ config(materialized='table', schema='cmg_bh_data') }}\n\nselect\n  sample_id::text as \"external_id\",\n  {{ generate_global_id(prefix='bc',descriptor=['sample_id','sample_source'], study_id='cmg_bh') }}::text as \"biospecimencollection_id\"\nfrom (select distinct sample_id, sample_source, ingest_provenance\n    from (select distinct subject_id, sample_source, sample_id from {{ ref('cmg_bh_stg_sample') }}) as sam\n    join (select distinct subject_id, ingest_provenance from {{ ref('cmg_bh_stg_subject') }}) as sub\n    using (subject_id)\n      )", "language": "sql", "refs": [{"name": "cmg_bh_stg_sample", "package": null, "version": null}, {"name": "cmg_bh_stg_subject", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.cmg_bh.cmg_bh_stg_sample", "model.cmg_bh.cmg_bh_stg_subject"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/not_for_export/cmg_bh_ftd_biospecimencollection_external_id.sql", "compiled": true, "compiled_code": "\n\nselect\n  sample_id::text as \"external_id\",\n  'bc' || '_' || md5('cmg_bh' || '|' || cast(coalesce(sample_id, '') as text) || '|' || 'cmg_bh' || '|' || cast(coalesce(sample_source, '') as text))::text as \"biospecimencollection_id\"\nfrom (select distinct sample_id, sample_source, ingest_provenance\n    from (select distinct subject_id, sample_source, sample_id from \"dbt\".\"main_main\".\"cmg_bh_stg_sample\") as sam\n    join (select distinct subject_id, ingest_provenance from \"dbt\".\"main_main\".\"cmg_bh_stg_subject\") as sub\n    using (subject_id)\n      )", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.cmg_bh_ftd_aliquot_external_id": {"database": "dbt", "schema": "main_cmg_bh_data", "name": "cmg_bh_ftd_aliquot_external_id", "resource_type": "model", "package_name": "ftd", "path": "cmg_bh/not_for_export/cmg_bh_ftd_aliquot_external_id.sql", "original_file_path": "models/cmg_bh/not_for_export/cmg_bh_ftd_aliquot_external_id.sql", "unique_id": "model.ftd.cmg_bh_ftd_aliquot_external_id", "fqn": ["ftd", "cmg_bh", "not_for_export", "cmg_bh_ftd_aliquot_external_id"], "alias": "cmg_bh_ftd_aliquot_external_id", "checksum": {"name": "sha256", "checksum": "fbafaa3916baf6068129f86aa33b8b5ed112ca20138e63ab78e868deeaf43c62"}, "config": {"enabled": true, "alias": null, "schema": "cmg_bh_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for cmg_bh_ftd_aliquot_external_id.", "columns": {"aliquot_id": {"name": "aliquot_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/cmg_bh/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "cmg_bh_data"}, "created_at": 1757448969.482836, "relation_name": "\"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_aliquot_external_id\"", "raw_code": "{{ config(materialized='table', schema='cmg_bh_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='cmg_bh') }}::text as \"aliquot_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from {{ ref('cmg_bh_stg_sample') }} as sample\n        join {{ ref('cmg_bh_stg_subject') }} as subject\non sample.subject_id = subject.subject_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "cmg_bh_stg_sample", "package": null, "version": null}, {"name": "cmg_bh_stg_subject", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.cmg_bh.cmg_bh_stg_sample", "model.cmg_bh.cmg_bh_stg_subject"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/not_for_export/cmg_bh_ftd_aliquot_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('cmg_bh' || '|' || cast(coalesce(, '') as text))::text as \"aliquot_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"cmg_bh_stg_sample\" as sample\n        join \"dbt\".\"main_main\".\"cmg_bh_stg_subject\" as subject\non sample.subject_id = subject.subject_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.cmg_bh_ftd_sample_storage_method": {"database": "dbt", "schema": "main_cmg_bh_data", "name": "cmg_bh_ftd_sample_storage_method", "resource_type": "model", "package_name": "ftd", "path": "cmg_bh/not_for_export/cmg_bh_ftd_sample_storage_method.sql", "original_file_path": "models/cmg_bh/not_for_export/cmg_bh_ftd_sample_storage_method.sql", "unique_id": "model.ftd.cmg_bh_ftd_sample_storage_method", "fqn": ["ftd", "cmg_bh", "not_for_export", "cmg_bh_ftd_sample_storage_method"], "alias": "cmg_bh_ftd_sample_storage_method", "checksum": {"name": "sha256", "checksum": "e1060d772b5edb8bbba603a5be01fc361152d65199474f955b159f625dacdb80"}, "config": {"enabled": true, "alias": null, "schema": "cmg_bh_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for cmg_bh_ftd_sample_storage_method.", "columns": {"sample_id": {"name": "sample_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "storage_method": {"name": "storage_method", "description": "Sample storage method, eg, Frozen or with additives", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/cmg_bh/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "cmg_bh_data"}, "created_at": 1757448969.4678545, "relation_name": "\"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_sample_storage_method\"", "raw_code": "{{ config(materialized='table', schema='cmg_bh_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='cmg_bh') }}::text as \"sample_id\",\n       GEN_UNKNOWN.storage_method::text as \"storage_method\"\n        from {{ ref('cmg_bh_stg_sample') }} as sample\n        join {{ ref('cmg_bh_stg_subject') }} as subject\non sample.subject_id = subject.subject_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "cmg_bh_stg_sample", "package": null, "version": null}, {"name": "cmg_bh_stg_subject", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.cmg_bh.cmg_bh_stg_sample", "model.cmg_bh.cmg_bh_stg_subject"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/not_for_export/cmg_bh_ftd_sample_storage_method.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('cmg_bh' || '|' || cast(coalesce(, '') as text))::text as \"sample_id\",\n       GEN_UNKNOWN.storage_method::text as \"storage_method\"\n        from \"dbt\".\"main_main\".\"cmg_bh_stg_sample\" as sample\n        join \"dbt\".\"main_main\".\"cmg_bh_stg_subject\" as subject\non sample.subject_id = subject.subject_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.cmg_bh_ftd_filemetadata_external_id": {"database": "dbt", "schema": "main_cmg_bh_data", "name": "cmg_bh_ftd_filemetadata_external_id", "resource_type": "model", "package_name": "ftd", "path": "cmg_bh/not_for_export/cmg_bh_ftd_filemetadata_external_id.sql", "original_file_path": "models/cmg_bh/not_for_export/cmg_bh_ftd_filemetadata_external_id.sql", "unique_id": "model.ftd.cmg_bh_ftd_filemetadata_external_id", "fqn": ["ftd", "cmg_bh", "not_for_export", "cmg_bh_ftd_filemetadata_external_id"], "alias": "cmg_bh_ftd_filemetadata_external_id", "checksum": {"name": "sha256", "checksum": "cbcb43a9c625852655eb98e111352c3a1c488cffa5cefa5710ed4e9cde1b0b6e"}, "config": {"enabled": true, "alias": null, "schema": "cmg_bh_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for cmg_bh_ftd_filemetadata_external_id.", "columns": {"filemetadata_id": {"name": "filemetadata_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/cmg_bh/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "cmg_bh_data"}, "created_at": 1757448969.4802008, "relation_name": "\"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_filemetadata_external_id\"", "raw_code": "{{ config(materialized='table', schema='cmg_bh_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='cmg_bh') }}::text as \"filemetadata_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from {{ ref('cmg_bh_stg_sample') }} as sample\n        join {{ ref('cmg_bh_stg_subject') }} as subject\non sample.subject_id = subject.subject_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "cmg_bh_stg_sample", "package": null, "version": null}, {"name": "cmg_bh_stg_subject", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.cmg_bh.cmg_bh_stg_sample", "model.cmg_bh.cmg_bh_stg_subject"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/not_for_export/cmg_bh_ftd_filemetadata_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('cmg_bh' || '|' || cast(coalesce(, '') as text))::text as \"filemetadata_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"cmg_bh_stg_sample\" as sample\n        join \"dbt\".\"main_main\".\"cmg_bh_stg_subject\" as subject\non sample.subject_id = subject.subject_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.cmg_bh_ftd_filemetadata": {"database": "dbt", "schema": "main_cmg_bh_data", "name": "cmg_bh_ftd_filemetadata", "resource_type": "model", "package_name": "ftd", "path": "cmg_bh/not_for_export/cmg_bh_ftd_filemetadata.sql", "original_file_path": "models/cmg_bh/not_for_export/cmg_bh_ftd_filemetadata.sql", "unique_id": "model.ftd.cmg_bh_ftd_filemetadata", "fqn": ["ftd", "cmg_bh", "not_for_export", "cmg_bh_ftd_filemetadata"], "alias": "cmg_bh_ftd_filemetadata", "checksum": {"name": "sha256", "checksum": "b5181ec4998536cf0f99971fddcb8acedb3c8a78edc69f6d4cf7afe223fbdd72"}, "config": {"enabled": true, "alias": null, "schema": "cmg_bh_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for cmg_bh_ftd_filemetadata.", "columns": {"code": {"name": "code", "description": "The structured term defining the meaning of the assertion.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "display": {"name": "display", "description": "The friendly display string of the coded term", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "value_code": {"name": "value_code", "description": "The structured term defining the value of the assertion.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "value_display": {"name": "value_display", "description": "The friendly display string of the coded term for the value of the assertion.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/cmg_bh/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "cmg_bh_data"}, "created_at": 1757448969.4638443, "relation_name": "\"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_filemetadata\"", "raw_code": "{{ config(materialized='table', schema='cmg_bh_data') }}\n\n    with source as (\n        select \n        GEN_UNKNOWN.code::text as \"code\",\n       GEN_UNKNOWN.display::text as \"display\",\n       GEN_UNKNOWN.value_code::text as \"value_code\",\n       GEN_UNKNOWN.value_display::text as \"value_display\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='cmg_bh') }}::text as \"id\"\n        from {{ ref('cmg_bh_stg_sample') }} as sample\n        join {{ ref('cmg_bh_stg_subject') }} as subject\non sample.subject_id = subject.subject_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "cmg_bh_stg_sample", "package": null, "version": null}, {"name": "cmg_bh_stg_subject", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.cmg_bh.cmg_bh_stg_sample", "model.cmg_bh.cmg_bh_stg_subject"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/not_for_export/cmg_bh_ftd_filemetadata.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        GEN_UNKNOWN.code::text as \"code\",\n       GEN_UNKNOWN.display::text as \"display\",\n       GEN_UNKNOWN.value_code::text as \"value_code\",\n       GEN_UNKNOWN.value_display::text as \"value_display\",\n       '' || '_' || md5('cmg_bh' || '|' || cast(coalesce(, '') as text))::text as \"id\"\n        from \"dbt\".\"main_main\".\"cmg_bh_stg_sample\" as sample\n        join \"dbt\".\"main_main\".\"cmg_bh_stg_subject\" as subject\non sample.subject_id = subject.subject_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.cmg_bh_ftd_biospecimencollection": {"database": "dbt", "schema": "main_cmg_bh_data", "name": "cmg_bh_ftd_biospecimencollection", "resource_type": "model", "package_name": "ftd", "path": "cmg_bh/not_for_export/cmg_bh_ftd_biospecimencollection.sql", "original_file_path": "models/cmg_bh/not_for_export/cmg_bh_ftd_biospecimencollection.sql", "unique_id": "model.ftd.cmg_bh_ftd_biospecimencollection", "fqn": ["ftd", "cmg_bh", "not_for_export", "cmg_bh_ftd_biospecimencollection"], "alias": "cmg_bh_ftd_biospecimencollection", "checksum": {"name": "sha256", "checksum": "5276b11e57f73872d11b9974bab90cc660daf72c7c9a992f149c2b9e8cbb1ba6"}, "config": {"enabled": true, "alias": null, "schema": "cmg_bh_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for cmg_bh_ftd_biospecimencollection.", "columns": {"age_at_collection": {"name": "age_at_collection", "description": "The age at which this biospecimen was collected.", "meta": {}, "data_type": "integer", "constraints": [], "quote": null, "tags": [], "granularity": null}, "method": {"name": "method", "description": "The approach used to collect the biospecimen.", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "site": {"name": "site", "description": "The location of the specimen collection.", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "spatial_qualifier": {"name": "spatial_qualifier", "description": "Any spatial/location qualifiers", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "laterality": {"name": "laterality", "description": "Laterality information for the site", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/cmg_bh/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "cmg_bh_data"}, "created_at": 1757448969.486154, "relation_name": "\"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_biospecimencollection\"", "raw_code": "{{ config(materialized='table', schema='cmg_bh_data') }}\n\nselect \n  NULL::integer as \"age_at_collection\",\n  NULL::text as \"method\",\n  NULL::text as \"site\",\n  NULL::text as \"spatial_qualifier\",\n  NULL::text as \"laterality\",\n  {{ generate_global_id(prefix='ap',descriptor=['ingest_provenance'], study_id='cmg_bh') }}::text as \"has_access_policy\",\n  -- { { generate_global_id(prefix='bc',descriptor=['sample_id','{site or method identifier}'], study_id='cmg_bh') }}::text as \"id\"\n  NULL::text as \"id\"\nfrom (select distinct sample_id, ingest_provenance\n    from (select distinct subject_id, sample_id ingest_provenance from {{ ref('cmg_bh_stg_sample') }}) as sam\n    join (select distinct subject_id, ingest_provenance from {{ ref('cmg_bh_stg_subject') }}) as sub\n    using (subject_id)\n      )", "language": "sql", "refs": [{"name": "cmg_bh_stg_sample", "package": null, "version": null}, {"name": "cmg_bh_stg_subject", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.cmg_bh.cmg_bh_stg_sample", "model.cmg_bh.cmg_bh_stg_subject"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/not_for_export/cmg_bh_ftd_biospecimencollection.sql", "compiled": true, "compiled_code": "\n\nselect \n  NULL::integer as \"age_at_collection\",\n  NULL::text as \"method\",\n  NULL::text as \"site\",\n  NULL::text as \"spatial_qualifier\",\n  NULL::text as \"laterality\",\n  'ap' || '_' || md5('cmg_bh' || '|' || cast(coalesce(ingest_provenance, '') as text))::text as \"has_access_policy\",\n  -- { { generate_global_id(prefix='bc',descriptor=['sample_id','{site or method identifier}'], study_id='cmg_bh') }}::text as \"id\"\n  NULL::text as \"id\"\nfrom (select distinct sample_id, ingest_provenance\n    from (select distinct subject_id, sample_id ingest_provenance from \"dbt\".\"main_main\".\"cmg_bh_stg_sample\") as sam\n    join (select distinct subject_id, ingest_provenance from \"dbt\".\"main_main\".\"cmg_bh_stg_subject\") as sub\n    using (subject_id)\n      )", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.cmg_bh_ftd_aliquot": {"database": "dbt", "schema": "main_cmg_bh_data", "name": "cmg_bh_ftd_aliquot", "resource_type": "model", "package_name": "ftd", "path": "cmg_bh/not_for_export/cmg_bh_ftd_aliquot.sql", "original_file_path": "models/cmg_bh/not_for_export/cmg_bh_ftd_aliquot.sql", "unique_id": "model.ftd.cmg_bh_ftd_aliquot", "fqn": ["ftd", "cmg_bh", "not_for_export", "cmg_bh_ftd_aliquot"], "alias": "cmg_bh_ftd_aliquot", "checksum": {"name": "sha256", "checksum": "ad250d6fe91c07ec9c428cb3993d7bd9c4292cc229f91b1fde8a0f045cad2ad6"}, "config": {"enabled": true, "alias": null, "schema": "cmg_bh_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for cmg_bh_ftd_aliquot.", "columns": {"availablity_status": {"name": "availablity_status", "description": "Can this Sample be requested for further analysis?", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "quantity_number": {"name": "quantity_number", "description": "The total quantity of the specimen", "meta": {}, "data_type": "number", "constraints": [], "quote": null, "tags": [], "granularity": null}, "quantity_units": {"name": "quantity_units", "description": "The structured term defining the units of the quantity.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "concentration_number": {"name": "concentration_number", "description": "What is the concentration of the analyte in the Aliquot?", "meta": {}, "data_type": "number", "constraints": [], "quote": null, "tags": [], "granularity": null}, "concentration_unit": {"name": "concentration_unit", "description": "Units associated with the concentration of the analyte in the Aliquot? UCUM coding preferred (with curie, UCUM)", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "sample_id": {"name": "sample_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/cmg_bh/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "cmg_bh_data"}, "created_at": 1757448969.484622, "relation_name": "\"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_aliquot\"", "raw_code": "{{ config(materialized='table', schema='cmg_bh_data') }}\n\n    with source as (\n        select \n        GEN_UNKNOWN.availablity_status::text as \"availablity_status\",\n       GEN_UNKNOWN.quantity_number::text as \"quantity_number\",\n       GEN_UNKNOWN.quantity_units::text as \"quantity_units\",\n       GEN_UNKNOWN.concentration_number::text as \"concentration_number\",\n       GEN_UNKNOWN.concentration_unit::text as \"concentration_unit\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='cmg_bh') }}::text as \"has_access_policy\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='cmg_bh') }}::text as \"id\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='cmg_bh') }}::text as \"sample_id\"\n        from {{ ref('cmg_bh_stg_sample') }} as sample\n        join {{ ref('cmg_bh_stg_subject') }} as subject\non sample.subject_id = subject.subject_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "cmg_bh_stg_sample", "package": null, "version": null}, {"name": "cmg_bh_stg_subject", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.cmg_bh.cmg_bh_stg_sample", "model.cmg_bh.cmg_bh_stg_subject"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/not_for_export/cmg_bh_ftd_aliquot.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        GEN_UNKNOWN.availablity_status::text as \"availablity_status\",\n       GEN_UNKNOWN.quantity_number::text as \"quantity_number\",\n       GEN_UNKNOWN.quantity_units::text as \"quantity_units\",\n       GEN_UNKNOWN.concentration_number::text as \"concentration_number\",\n       GEN_UNKNOWN.concentration_unit::text as \"concentration_unit\",\n       '' || '_' || md5('cmg_bh' || '|' || cast(coalesce(, '') as text))::text as \"has_access_policy\",\n       '' || '_' || md5('cmg_bh' || '|' || cast(coalesce(, '') as text))::text as \"id\",\n       '' || '_' || md5('cmg_bh' || '|' || cast(coalesce(, '') as text))::text as \"sample_id\"\n        from \"dbt\".\"main_main\".\"cmg_bh_stg_sample\" as sample\n        join \"dbt\".\"main_main\".\"cmg_bh_stg_subject\" as subject\non sample.subject_id = subject.subject_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.cmg_bh_ftd_accesscontrolledrecord": {"database": "dbt", "schema": "main_cmg_bh_data", "name": "cmg_bh_ftd_accesscontrolledrecord", "resource_type": "model", "package_name": "ftd", "path": "cmg_bh/not_for_export/cmg_bh_ftd_accesscontrolledrecord.sql", "original_file_path": "models/cmg_bh/not_for_export/cmg_bh_ftd_accesscontrolledrecord.sql", "unique_id": "model.ftd.cmg_bh_ftd_accesscontrolledrecord", "fqn": ["ftd", "cmg_bh", "not_for_export", "cmg_bh_ftd_accesscontrolledrecord"], "alias": "cmg_bh_ftd_accesscontrolledrecord", "checksum": {"name": "sha256", "checksum": "41aad6ff8e57fcea40cfbd7e873331bde28717769191df7524907865ae75fe6e"}, "config": {"enabled": true, "alias": null, "schema": "cmg_bh_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for cmg_bh_ftd_accesscontrolledrecord.", "columns": {"has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/cmg_bh/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "cmg_bh_data"}, "created_at": 1757448969.4765809, "relation_name": "\"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_accesscontrolledrecord\"", "raw_code": "{{ config(materialized='table', schema='cmg_bh_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='cmg_bh') }}::text as \"has_access_policy\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='cmg_bh') }}::text as \"id\"\n        from {{ ref('cmg_bh_stg_sample') }} as sample\n        join {{ ref('cmg_bh_stg_subject') }} as subject\non sample.subject_id = subject.subject_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "cmg_bh_stg_sample", "package": null, "version": null}, {"name": "cmg_bh_stg_subject", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.cmg_bh.cmg_bh_stg_sample", "model.cmg_bh.cmg_bh_stg_subject"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/not_for_export/cmg_bh_ftd_accesscontrolledrecord.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('cmg_bh' || '|' || cast(coalesce(, '') as text))::text as \"has_access_policy\",\n       '' || '_' || md5('cmg_bh' || '|' || cast(coalesce(, '') as text))::text as \"id\"\n        from \"dbt\".\"main_main\".\"cmg_bh_stg_sample\" as sample\n        join \"dbt\".\"main_main\".\"cmg_bh_stg_subject\" as subject\non sample.subject_id = subject.subject_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.cmg_bh_ftd_accesscontrolledrecord_external_id": {"database": "dbt", "schema": "main_cmg_bh_data", "name": "cmg_bh_ftd_accesscontrolledrecord_external_id", "resource_type": "model", "package_name": "ftd", "path": "cmg_bh/not_for_export/cmg_bh_ftd_accesscontrolledrecord_external_id.sql", "original_file_path": "models/cmg_bh/not_for_export/cmg_bh_ftd_accesscontrolledrecord_external_id.sql", "unique_id": "model.ftd.cmg_bh_ftd_accesscontrolledrecord_external_id", "fqn": ["ftd", "cmg_bh", "not_for_export", "cmg_bh_ftd_accesscontrolledrecord_external_id"], "alias": "cmg_bh_ftd_accesscontrolledrecord_external_id", "checksum": {"name": "sha256", "checksum": "ff62d328e3e18381c06e6969760fd491fb21b6844560248f6d8f545415672650"}, "config": {"enabled": true, "alias": null, "schema": "cmg_bh_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for cmg_bh_ftd_accesscontrolledrecord_external_id.", "columns": {"accesscontrolledrecord_id": {"name": "accesscontrolledrecord_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/cmg_bh/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "cmg_bh_data"}, "created_at": 1757448969.4814875, "relation_name": "\"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_accesscontrolledrecord_external_id\"", "raw_code": "{{ config(materialized='table', schema='cmg_bh_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='cmg_bh') }}::text as \"accesscontrolledrecord_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from {{ ref('cmg_bh_stg_sample') }} as sample\n        join {{ ref('cmg_bh_stg_subject') }} as subject\non sample.subject_id = subject.subject_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "cmg_bh_stg_sample", "package": null, "version": null}, {"name": "cmg_bh_stg_subject", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.cmg_bh.cmg_bh_stg_sample", "model.cmg_bh.cmg_bh_stg_subject"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/not_for_export/cmg_bh_ftd_accesscontrolledrecord_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('cmg_bh' || '|' || cast(coalesce(, '') as text))::text as \"accesscontrolledrecord_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"cmg_bh_stg_sample\" as sample\n        join \"dbt\".\"main_main\".\"cmg_bh_stg_subject\" as subject\non sample.subject_id = subject.subject_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GWAS_ftd_sample": {"database": "dbt", "schema": "main_GWAS_data", "name": "GWAS_ftd_sample", "resource_type": "model", "package_name": "ftd", "path": "GWAS/GWAS_ftd_sample.sql", "original_file_path": "models/GWAS/GWAS_ftd_sample.sql", "unique_id": "model.ftd.GWAS_ftd_sample", "fqn": ["ftd", "GWAS", "GWAS_ftd_sample"], "alias": "GWAS_ftd_sample", "checksum": {"name": "sha256", "checksum": "f6a73d4c2fafa633801526747ed44aa33dd845f6d9715df35a29dd40c768785b"}, "config": {"enabled": true, "alias": null, "schema": "GWAS_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GWAS_ftd_sample.", "columns": {"parent_sample": {"name": "parent_sample", "description": "Sample from which this sample is derived", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "sample_type": {"name": "sample_type", "description": "Type of material of which this Sample is comprised", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "availablity_status": {"name": "availablity_status", "description": "Can this Sample be requested for further analysis?", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "quantity_number": {"name": "quantity_number", "description": "The total quantity of the specimen", "meta": {}, "data_type": "number", "constraints": [], "quote": null, "tags": [], "granularity": null}, "quantity_units": {"name": "quantity_units", "description": "The structured term defining the units of the quantity.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "subject_id": {"name": "subject_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "biospecimen_collection_id": {"name": "biospecimen_collection_id", "description": "Biospecimen Collection that generated this sample.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GWAS/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GWAS_data"}, "created_at": 1757448969.5882885, "relation_name": "\"dbt\".\"main_GWAS_data\".\"GWAS_ftd_sample\"", "raw_code": "{{ config(materialized='table', schema='GWAS_data') }}\n\nselect DISTINCT\n  NULL as \"parent_sample\",\n  CASE WHEN sampleattributes.analyte_type = 'DNA' THEN 'LNC:LP18329-0'\n       ELSE CONCAT('FTD_FLAG: unhandled sample_type: ',analyte_type)\n  END::text as \"sample_type\",\n  NULL as \"availablity_status\",\n  NULL as \"quantity_number\",\n  NULL as \"quantity_units\",\n    {{ generate_global_id(prefix='ap',descriptor=['subjectconsent.consent'], study_id='phs001584') }}::text as \"has_access_policy\",\n    {{ generate_global_id(prefix='sm',descriptor=['samplesubjectmapping.subject_id', 'samplesubjectmapping.source_sampid'], study_id='phs001584') }}::text as \"id\",\n    {{ generate_global_id(prefix='sb',descriptor=['samplesubjectmapping.subject_id'], study_id='phs001584') }}::text as \"subject_id\",\n    NULL as \"biospecimen_collection_id\"\nfrom {{ ref('GWAS_stg_sampleattributes') }} as sampleattributes\nleft join {{ ref('GWAS_stg_samplesubjectmapping') }} as samplesubjectmapping\nusing (sample_id)\nleft join {{ ref('GWAS_stg_subjectconsent') }} as subjectconsent\nusing (subject_id)", "language": "sql", "refs": [{"name": "GWAS_stg_sampleattributes", "package": null, "version": null}, {"name": "GWAS_stg_samplesubjectmapping", "package": null, "version": null}, {"name": "GWAS_stg_subjectconsent", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GWAS.GWAS_stg_sampleattributes", "model.GWAS.GWAS_stg_samplesubjectmapping", "model.GWAS.GWAS_stg_subjectconsent"]}, "compiled_path": "target/compiled/ftd/models/GWAS/GWAS_ftd_sample.sql", "compiled": true, "compiled_code": "\n\nselect DISTINCT\n  NULL as \"parent_sample\",\n  CASE WHEN sampleattributes.analyte_type = 'DNA' THEN 'LNC:LP18329-0'\n       ELSE CONCAT('FTD_FLAG: unhandled sample_type: ',analyte_type)\n  END::text as \"sample_type\",\n  NULL as \"availablity_status\",\n  NULL as \"quantity_number\",\n  NULL as \"quantity_units\",\n    'ap' || '_' || md5('phs001584' || '|' || cast(coalesce(subjectconsent.consent, '') as text))::text as \"has_access_policy\",\n    'sm' || '_' || md5('phs001584' || '|' || cast(coalesce(samplesubjectmapping.subject_id, '') as text) || '|' || 'phs001584' || '|' || cast(coalesce(samplesubjectmapping.source_sampid, '') as text))::text as \"id\",\n    'sb' || '_' || md5('phs001584' || '|' || cast(coalesce(samplesubjectmapping.subject_id, '') as text))::text as \"subject_id\",\n    NULL as \"biospecimen_collection_id\"\nfrom \"dbt\".\"main_main\".\"GWAS_stg_sampleattributes\" as sampleattributes\nleft join \"dbt\".\"main_main\".\"GWAS_stg_samplesubjectmapping\" as samplesubjectmapping\nusing (sample_id)\nleft join \"dbt\".\"main_main\".\"GWAS_stg_subjectconsent\" as subjectconsent\nusing (subject_id)", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GWAS_ftd_subject_external_id": {"database": "dbt", "schema": "main_GWAS_data", "name": "GWAS_ftd_subject_external_id", "resource_type": "model", "package_name": "ftd", "path": "GWAS/GWAS_ftd_subject_external_id.sql", "original_file_path": "models/GWAS/GWAS_ftd_subject_external_id.sql", "unique_id": "model.ftd.GWAS_ftd_subject_external_id", "fqn": ["ftd", "GWAS", "GWAS_ftd_subject_external_id"], "alias": "GWAS_ftd_subject_external_id", "checksum": {"name": "sha256", "checksum": "e1640a0cac0345b6a699228f17e72117ddd16638ada65de7c22a85c1889a28f1"}, "config": {"enabled": true, "alias": null, "schema": "GWAS_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GWAS_ftd_subject_external_id.", "columns": {"subject_id": {"name": "subject_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GWAS/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GWAS_data"}, "created_at": 1757448969.6058064, "relation_name": "\"dbt\".\"main_GWAS_data\".\"GWAS_ftd_subject_external_id\"", "raw_code": "{{ config(materialized='table', schema='GWAS_data') }}\n\nselect \n  {{ generate_global_id(prefix='sb',descriptor=['demographics.subject_id'], study_id='phs001584') }}::text as \"subject_id\",\n  demographics.subject_id::text as \"external_id\"\nfrom {{ ref('GWAS_stg_demographics') }} as demographics", "language": "sql", "refs": [{"name": "GWAS_stg_demographics", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GWAS.GWAS_stg_demographics"]}, "compiled_path": "target/compiled/ftd/models/GWAS/GWAS_ftd_subject_external_id.sql", "compiled": true, "compiled_code": "\n\nselect \n  'sb' || '_' || md5('phs001584' || '|' || cast(coalesce(demographics.subject_id, '') as text))::text as \"subject_id\",\n  demographics.subject_id::text as \"external_id\"\nfrom \"dbt\".\"main_main\".\"GWAS_stg_demographics\" as demographics", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GWAS_ftd_familymember_external_id": {"database": "dbt", "schema": "main_GWAS_data", "name": "GWAS_ftd_familymember_external_id", "resource_type": "model", "package_name": "ftd", "path": "GWAS/GWAS_ftd_familymember_external_id.sql", "original_file_path": "models/GWAS/GWAS_ftd_familymember_external_id.sql", "unique_id": "model.ftd.GWAS_ftd_familymember_external_id", "fqn": ["ftd", "GWAS", "GWAS_ftd_familymember_external_id"], "alias": "GWAS_ftd_familymember_external_id", "checksum": {"name": "sha256", "checksum": "2c7709ac4eaa1e65869cda996dee8fd9c9ef3c6d4b79a2aeabe1fefa0a291ef5"}, "config": {"enabled": true, "alias": null, "schema": "GWAS_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GWAS_ftd_familymember_external_id.", "columns": {"familymember_id": {"name": "familymember_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GWAS/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GWAS_data"}, "created_at": 1757448969.601735, "relation_name": "\"dbt\".\"main_GWAS_data\".\"GWAS_ftd_familymember_external_id\"", "raw_code": "{{ config(materialized='table', schema='GWAS_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='fm',descriptor=['subject_id', 'family_id'], study_id='phs001584') }}::text as \"familymember_id\",\n        subject_id::text as \"external_id\"\n        from {{ ref('GWAS_stg_pedigree') }} as pedigree\n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GWAS_stg_pedigree", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GWAS.GWAS_stg_pedigree"]}, "compiled_path": "target/compiled/ftd/models/GWAS/GWAS_ftd_familymember_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        'fm' || '_' || md5('phs001584' || '|' || cast(coalesce(subject_id, '') as text) || '|' || 'phs001584' || '|' || cast(coalesce(family_id, '') as text))::text as \"familymember_id\",\n        subject_id::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"GWAS_stg_pedigree\" as pedigree\n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GWAS_ftd_demographics_race": {"database": "dbt", "schema": "main_GWAS_data", "name": "GWAS_ftd_demographics_race", "resource_type": "model", "package_name": "ftd", "path": "GWAS/GWAS_ftd_demographics_race.sql", "original_file_path": "models/GWAS/GWAS_ftd_demographics_race.sql", "unique_id": "model.ftd.GWAS_ftd_demographics_race", "fqn": ["ftd", "GWAS", "GWAS_ftd_demographics_race"], "alias": "GWAS_ftd_demographics_race", "checksum": {"name": "sha256", "checksum": "21ccebf04f8fa9d7d1ec01eee021013a2252acee9e287721fb703157246f2348"}, "config": {"enabled": true, "alias": null, "schema": "GWAS_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GWAS_ftd_demographics_race.", "columns": {"demographics_id": {"name": "demographics_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "race": {"name": "race", "description": "Reported race as defined by the 1997 OMB directives.", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GWAS/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GWAS_data"}, "created_at": 1757448969.598483, "relation_name": "\"dbt\".\"main_GWAS_data\".\"GWAS_ftd_demographics_race\"", "raw_code": "{{ config(materialized='table', schema='GWAS_data') }}\n\nselect \n  {{ generate_global_id(prefix='dm',descriptor=['demographics.subject_id'], study_id='phs001584') }}::text as \"demographics_id\",\n CASE demographics.race\n            WHEN 'C41259' THEN 'american_indian_or_alaskan_native'\n            WHEN 'C41260' THEN 'asian'\n            WHEN 'C16352' THEN 'black_or_african_american'\n            WHEN 'C41219' THEN 'native_hawaiian_or_pacific_islander'\n            WHEN 'C41261' THEN 'white'\n            WHEN 'C17998' THEN 'unknown'\n            WHEN 'C43234' THEN 'unknown'\n            WHEN '.' THEN 'unknown'\n            WHEN 'NA' THEN 'unknown'\n            WHEN 'OTHER' THEN 'other_race'\n       END::text as \"race\"\nfrom {{ ref('GWAS_stg_demographics') }} as demographics", "language": "sql", "refs": [{"name": "GWAS_stg_demographics", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GWAS.GWAS_stg_demographics"]}, "compiled_path": "target/compiled/ftd/models/GWAS/GWAS_ftd_demographics_race.sql", "compiled": true, "compiled_code": "\n\nselect \n  'dm' || '_' || md5('phs001584' || '|' || cast(coalesce(demographics.subject_id, '') as text))::text as \"demographics_id\",\n CASE demographics.race\n            WHEN 'C41259' THEN 'american_indian_or_alaskan_native'\n            WHEN 'C41260' THEN 'asian'\n            WHEN 'C16352' THEN 'black_or_african_american'\n            WHEN 'C41219' THEN 'native_hawaiian_or_pacific_islander'\n            WHEN 'C41261' THEN 'white'\n            WHEN 'C17998' THEN 'unknown'\n            WHEN 'C43234' THEN 'unknown'\n            WHEN '.' THEN 'unknown'\n            WHEN 'NA' THEN 'unknown'\n            WHEN 'OTHER' THEN 'other_race'\n       END::text as \"race\"\nfrom \"dbt\".\"main_main\".\"GWAS_stg_demographics\" as demographics", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GWAS_ftd_sample_external_id": {"database": "dbt", "schema": "main_GWAS_data", "name": "GWAS_ftd_sample_external_id", "resource_type": "model", "package_name": "ftd", "path": "GWAS/GWAS_ftd_sample_external_id.sql", "original_file_path": "models/GWAS/GWAS_ftd_sample_external_id.sql", "unique_id": "model.ftd.GWAS_ftd_sample_external_id", "fqn": ["ftd", "GWAS", "GWAS_ftd_sample_external_id"], "alias": "GWAS_ftd_sample_external_id", "checksum": {"name": "sha256", "checksum": "f3d9a9f469f0a9e889486a4c145fb0332294e8708e151c78e4f6aacdb97bf51e"}, "config": {"enabled": true, "alias": null, "schema": "GWAS_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GWAS_ftd_sample_external_id.", "columns": {"sample_id": {"name": "sample_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GWAS/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GWAS_data"}, "created_at": 1757448969.5970416, "relation_name": "\"dbt\".\"main_GWAS_data\".\"GWAS_ftd_sample_external_id\"", "raw_code": "{{ config(materialized='table', schema='GWAS_data') }}\n\nselect DISTINCT\n  {{ generate_global_id(prefix='sm',descriptor=['samplesubjectmapping.subject_id', 'samplesubjectmapping.source_sampid'], study_id='phs001584') }}::text as  \"sample_id\",\n  samplesubjectmapping.source_sampid::text as \"external_id\"\nfrom {{ ref('GWAS_stg_samplesubjectmapping') }} as samplesubjectmapping", "language": "sql", "refs": [{"name": "GWAS_stg_samplesubjectmapping", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GWAS.GWAS_stg_samplesubjectmapping"]}, "compiled_path": "target/compiled/ftd/models/GWAS/GWAS_ftd_sample_external_id.sql", "compiled": true, "compiled_code": "\n\nselect DISTINCT\n  'sm' || '_' || md5('phs001584' || '|' || cast(coalesce(samplesubjectmapping.subject_id, '') as text) || '|' || 'phs001584' || '|' || cast(coalesce(samplesubjectmapping.source_sampid, '') as text))::text as  \"sample_id\",\n  samplesubjectmapping.source_sampid::text as \"external_id\"\nfrom \"dbt\".\"main_main\".\"GWAS_stg_samplesubjectmapping\" as samplesubjectmapping", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GWAS_ftd_demographics": {"database": "dbt", "schema": "main_GWAS_data", "name": "GWAS_ftd_demographics", "resource_type": "model", "package_name": "ftd", "path": "GWAS/GWAS_ftd_demographics.sql", "original_file_path": "models/GWAS/GWAS_ftd_demographics.sql", "unique_id": "model.ftd.GWAS_ftd_demographics", "fqn": ["ftd", "GWAS", "GWAS_ftd_demographics"], "alias": "GWAS_ftd_demographics", "checksum": {"name": "sha256", "checksum": "d25f040dab6cfe930e61ad348b57c835ee25cc46ab07252ef1ee00c3e10c5b1e"}, "config": {"enabled": true, "alias": null, "schema": "GWAS_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GWAS_ftd_demographics.", "columns": {"date_of_birth": {"name": "date_of_birth", "description": "Date at which the individual was born. May be impacted by privacy rules described in date_of_birth_type.", "meta": {}, "data_type": "integer", "constraints": [], "quote": null, "tags": [], "granularity": null}, "date_of_birth_type": {"name": "date_of_birth_type", "description": "Privacy rule modification applied to date_of_birth.", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "sex": {"name": "sex", "description": "Sex of the individual", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "sex_display": {"name": "sex_display", "description": "The friendly display string of the coded term for Sex", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "race_display": {"name": "race_display", "description": "The friendly display string of the coded term(s) for Race", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "ethnicity": {"name": "ethnicity", "description": "Reported ethnicity as defined by the 1997 OMB directives.", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "ethnicity_display": {"name": "ethnicity_display", "description": "The friendly display string of the coded term for Ethnicity", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "age_at_last_vital_status": {"name": "age_at_last_vital_status", "description": "Age at last vital status in decimal years.", "meta": {}, "data_type": "integer", "constraints": [], "quote": null, "tags": [], "granularity": null}, "vital_status": {"name": "vital_status", "description": "Vital Status", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GWAS/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GWAS_data"}, "created_at": 1757448969.6013026, "relation_name": "\"dbt\".\"main_GWAS_data\".\"GWAS_ftd_demographics\"", "raw_code": "{{ config(materialized='table', schema='GWAS_data') }}\n\nselect \nCASE\n    WHEN demographics.year_birth = 'NA' THEN null\n    WHEN demographics.year_birth = '.' THEN null\n    ELSE demographics.year_birth\nEND::integer as \"date_of_birth\",\n'year_only'::text as \"date_of_birth_type\",\nCASE demographics.sex\n    WHEN 'C46110' THEN 'female'\n    WHEN 'C46109' THEN 'male'\n    WHEN 'U' THEN 'unknown'\n    WHEN '.' THEN 'unknown'\n    WHEN 'NA' THEN 'unknown'\nEND::text as \"sex\",       \nCASE demographics.sex\n    WHEN 'C46110' THEN 'Female'\n    WHEN 'C46109' THEN 'Male'\n    WHEN 'U' THEN 'Unknown'\n    WHEN '.' THEN 'Unknown'\n    WHEN 'NA' THEN 'Unknown'\nEND::text as \"sex_display\",\nCASE demographics.race\n    WHEN 'C41259' THEN 'American Indian or Alaska Native'\n    WHEN 'C41260' THEN 'Asian'\n    WHEN 'C16352' THEN 'Black or African American'\n    WHEN 'C41219' THEN 'Native Hawaiian or Other Pacific Islander'\n    WHEN 'C41261' THEN 'White'\n    WHEN 'C17998' THEN 'unknown'\n    WHEN 'C43234' THEN 'unknown'\n    WHEN '.' THEN 'unknown'\n    WHEN 'NA' THEN 'unknown'\n    WHEN 'OTHER' THEN 'other race'\nEND::text as \"race_display\",\nCASE demographics.ethnicity\n    WHEN 'C17459' THEN 'hispanic_or_latino'\n    WHEN 'C41222' THEN 'not_hispanic_or_latino'\n    WHEN 'C41221' THEN 'unknown'\n    WHEN '.' THEN 'unknown'\n    WHEN 'NA' THEN 'unknown'\nEND::text as \"ethnicity\",\nCASE demographics.ethnicity\n    WHEN 'C17459' THEN 'Hispanic or Latino'\n    WHEN 'C41222' THEN 'Not Hispanic or Latino'\n    WHEN 'C41221' THEN 'unknown'\n    WHEN '.' THEN 'unknown'\n    WHEN 'NA' THEN 'unknown'\nEND::text as \"ethnicity_display\",\nNULL as \"age_at_last_vital_status\",\nNULL as \"vital_status\",\n    {{ generate_global_id(prefix='ap',descriptor=['subjectconsent.consent'], study_id='phs001584') }}::text as \"has_access_policy\",\n    {{ generate_global_id(prefix='dm',descriptor=['demographics.subject_id'], study_id='phs001584') }}::text as \"id\"\nfrom {{ ref('GWAS_stg_demographics') }} as demographics\njoin {{ ref('GWAS_stg_subjectconsent') }} as subjectconsent\nusing(subject_id)", "language": "sql", "refs": [{"name": "GWAS_stg_demographics", "package": null, "version": null}, {"name": "GWAS_stg_subjectconsent", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GWAS.GWAS_stg_demographics", "model.GWAS.GWAS_stg_subjectconsent"]}, "compiled_path": "target/compiled/ftd/models/GWAS/GWAS_ftd_demographics.sql", "compiled": true, "compiled_code": "\n\nselect \nCASE\n    WHEN demographics.year_birth = 'NA' THEN null\n    WHEN demographics.year_birth = '.' THEN null\n    ELSE demographics.year_birth\nEND::integer as \"date_of_birth\",\n'year_only'::text as \"date_of_birth_type\",\nCASE demographics.sex\n    WHEN 'C46110' THEN 'female'\n    WHEN 'C46109' THEN 'male'\n    WHEN 'U' THEN 'unknown'\n    WHEN '.' THEN 'unknown'\n    WHEN 'NA' THEN 'unknown'\nEND::text as \"sex\",       \nCASE demographics.sex\n    WHEN 'C46110' THEN 'Female'\n    WHEN 'C46109' THEN 'Male'\n    WHEN 'U' THEN 'Unknown'\n    WHEN '.' THEN 'Unknown'\n    WHEN 'NA' THEN 'Unknown'\nEND::text as \"sex_display\",\nCASE demographics.race\n    WHEN 'C41259' THEN 'American Indian or Alaska Native'\n    WHEN 'C41260' THEN 'Asian'\n    WHEN 'C16352' THEN 'Black or African American'\n    WHEN 'C41219' THEN 'Native Hawaiian or Other Pacific Islander'\n    WHEN 'C41261' THEN 'White'\n    WHEN 'C17998' THEN 'unknown'\n    WHEN 'C43234' THEN 'unknown'\n    WHEN '.' THEN 'unknown'\n    WHEN 'NA' THEN 'unknown'\n    WHEN 'OTHER' THEN 'other race'\nEND::text as \"race_display\",\nCASE demographics.ethnicity\n    WHEN 'C17459' THEN 'hispanic_or_latino'\n    WHEN 'C41222' THEN 'not_hispanic_or_latino'\n    WHEN 'C41221' THEN 'unknown'\n    WHEN '.' THEN 'unknown'\n    WHEN 'NA' THEN 'unknown'\nEND::text as \"ethnicity\",\nCASE demographics.ethnicity\n    WHEN 'C17459' THEN 'Hispanic or Latino'\n    WHEN 'C41222' THEN 'Not Hispanic or Latino'\n    WHEN 'C41221' THEN 'unknown'\n    WHEN '.' THEN 'unknown'\n    WHEN 'NA' THEN 'unknown'\nEND::text as \"ethnicity_display\",\nNULL as \"age_at_last_vital_status\",\nNULL as \"vital_status\",\n    'ap' || '_' || md5('phs001584' || '|' || cast(coalesce(subjectconsent.consent, '') as text))::text as \"has_access_policy\",\n    'dm' || '_' || md5('phs001584' || '|' || cast(coalesce(demographics.subject_id, '') as text))::text as \"id\"\nfrom \"dbt\".\"main_main\".\"GWAS_stg_demographics\" as demographics\njoin \"dbt\".\"main_main\".\"GWAS_stg_subjectconsent\" as subjectconsent\nusing(subject_id)", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GWAS_ftd_familymember": {"database": "dbt", "schema": "main_GWAS_data", "name": "GWAS_ftd_familymember", "resource_type": "model", "package_name": "ftd", "path": "GWAS/GWAS_ftd_familymember.sql", "original_file_path": "models/GWAS/GWAS_ftd_familymember.sql", "unique_id": "model.ftd.GWAS_ftd_familymember", "fqn": ["ftd", "GWAS", "GWAS_ftd_familymember"], "alias": "GWAS_ftd_familymember", "checksum": {"name": "sha256", "checksum": "c6628046952f70c3803da15db93519367622d4fb7db978fe2af43c3ac077dc9f"}, "config": {"enabled": true, "alias": null, "schema": "GWAS_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GWAS_ftd_familymember.", "columns": {"family_member": {"name": "family_member", "description": "The family member Subject who is the relationship \"subject\".", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "family_role": {"name": "family_role", "description": "The \"role\" of this indiviudal in this family.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "family_id": {"name": "family_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GWAS/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GWAS_data"}, "created_at": 1757448969.6053731, "relation_name": "\"dbt\".\"main_GWAS_data\".\"GWAS_ftd_familymember\"", "raw_code": "{{ config(materialized='table', schema='GWAS_data') }}\n    {% set relation = ref('GWAS_stg_pedigree') %}\n    {% set constant_columns = ['ftd_index', 'sex', 'subject_id', 'family_id'] %}\n    {% set pivot_columns = get_columns(relation=relation, exclude=constant_columns) %}  \n    \n    with \n    unpivot_df as (\n\n        {% for col in pivot_columns %}\n            select distinct\n                ftd_index, family_id,\n                {{ col }} as \"other_family_memb_id\",\n                subject_id as \"proband_id\",\n                NULL as \"sex\",\n                '{{ col }}' as \"family_role\",\n            from {{ ref('GWAS_stg_pedigree') }} as p\n            WHERE {{ col }} IS NOT NULL \n            {% if not loop.last %}union all{% endif %}\n        {% endfor %}\n    ),\n    \n   all_pedigree as (\n   select distinct\n        ftd_index,\n        family_id,\n        subject_id as \"proband_id\",\n        subject_id,\n        null as \"other_family_memb_id\",\n        mother,\n        father,\n        mz_twin_id,\n        p.sex,\n        'CHILD' as \"family_role\",\n    from {{ ref('GWAS_stg_pedigree') }} as p\n    where mother is not null\n    and father is not null\n    and mz_twin_id is not null\n union all\n    select distinct\n        p.ftd_index,\n        p.family_id,\n        proband_id,\n        other_family_memb_id AS \"subject_id\",\n        other_family_memb_id,\n        NULL AS mother,\n        NULL AS father,\n        NULL AS mz_twin_id,\n        p.sex,\n        CASE p.sex\n           WHEN 2 then 'MTH' \n           WHEN 1 THEN 'FTH'\n        END::text as \"family_role\"\n    from {{ ref('GWAS_stg_pedigree') }} as p\n    left join unpivot_df as u on u.proband_id = p.subject_id\n              and u.family_id = p.family_id\n    where mother is null\n    and father is null\n    and mz_twin_id is null\n),\n        source as (\n        select distinct\n        {{ generate_global_id(prefix='sb',descriptor=['subjectconsent.subject_id'], study_id='phs001584') }}::text as \"family_member\",\n       family_role,\n       {{ generate_global_id(prefix='ap',descriptor=['subjectconsent.consent'], study_id='phs001584') }}::text as \"has_access_policy\",\n       {{ generate_global_id(prefix='fm',descriptor=['pedigree.subject_id', 'pedigree.family_id'], study_id='phs001584') }}::text as \"id\",\n       {{ generate_global_id(prefix='fy',descriptor=['pedigree.family_id'], study_id='phs001584') }}::text as \"family_id\"\n       from all_pedigree as pedigree\n       left join {{ ref('GWAS_stg_subjectconsent') }} as subjectconsent\n        on pedigree.subject_id = subjectconsent.subject_id\n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GWAS_stg_pedigree", "package": null, "version": null}, {"name": "GWAS_stg_pedigree", "package": null, "version": null}, {"name": "GWAS_stg_pedigree", "package": null, "version": null}, {"name": "GWAS_stg_subjectconsent", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.get_columns", "macro.base.generate_global_id"], "nodes": ["model.GWAS.GWAS_stg_pedigree", "model.GWAS.GWAS_stg_subjectconsent"]}, "compiled_path": "target/compiled/ftd/models/GWAS/GWAS_ftd_familymember.sql", "compiled": true, "compiled_code": "\n    \n    \n      \n    \n    with \n    unpivot_df as (\n\n        \n    ),\n    \n   all_pedigree as (\n   select distinct\n        ftd_index,\n        family_id,\n        subject_id as \"proband_id\",\n        subject_id,\n        null as \"other_family_memb_id\",\n        mother,\n        father,\n        mz_twin_id,\n        p.sex,\n        'CHILD' as \"family_role\",\n    from \"dbt\".\"main_main\".\"GWAS_stg_pedigree\" as p\n    where mother is not null\n    and father is not null\n    and mz_twin_id is not null\n union all\n    select distinct\n        p.ftd_index,\n        p.family_id,\n        proband_id,\n        other_family_memb_id AS \"subject_id\",\n        other_family_memb_id,\n        NULL AS mother,\n        NULL AS father,\n        NULL AS mz_twin_id,\n        p.sex,\n        CASE p.sex\n           WHEN 2 then 'MTH' \n           WHEN 1 THEN 'FTH'\n        END::text as \"family_role\"\n    from \"dbt\".\"main_main\".\"GWAS_stg_pedigree\" as p\n    left join unpivot_df as u on u.proband_id = p.subject_id\n              and u.family_id = p.family_id\n    where mother is null\n    and father is null\n    and mz_twin_id is null\n),\n        source as (\n        select distinct\n        'sb' || '_' || md5('phs001584' || '|' || cast(coalesce(subjectconsent.subject_id, '') as text))::text as \"family_member\",\n       family_role,\n       'ap' || '_' || md5('phs001584' || '|' || cast(coalesce(subjectconsent.consent, '') as text))::text as \"has_access_policy\",\n       'fm' || '_' || md5('phs001584' || '|' || cast(coalesce(pedigree.subject_id, '') as text) || '|' || 'phs001584' || '|' || cast(coalesce(pedigree.family_id, '') as text))::text as \"id\",\n       'fy' || '_' || md5('phs001584' || '|' || cast(coalesce(pedigree.family_id, '') as text))::text as \"family_id\"\n       from all_pedigree as pedigree\n       left join \"dbt\".\"main_main\".\"GWAS_stg_subjectconsent\" as subjectconsent\n        on pedigree.subject_id = subjectconsent.subject_id\n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GWAS_ftd_familyrelationship": {"database": "dbt", "schema": "main_GWAS_data", "name": "GWAS_ftd_familyrelationship", "resource_type": "model", "package_name": "ftd", "path": "GWAS/GWAS_ftd_familyrelationship.sql", "original_file_path": "models/GWAS/GWAS_ftd_familyrelationship.sql", "unique_id": "model.ftd.GWAS_ftd_familyrelationship", "fqn": ["ftd", "GWAS", "GWAS_ftd_familyrelationship"], "alias": "GWAS_ftd_familyrelationship", "checksum": {"name": "sha256", "checksum": "b6ad3f869da19bc7efd5c76dcf4948272f38117aae7a984c124e981cd7d6e412"}, "config": {"enabled": true, "alias": null, "schema": "GWAS_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GWAS_ftd_familyrelationship.", "columns": {"family_member": {"name": "family_member", "description": "The family member Subject who is the relationship \"subject\".", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "other_family_member": {"name": "other_family_member", "description": "The family member Subject for the relationship \"object\".", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "relationship_code": {"name": "relationship_code", "description": "Code definting the relationship predicate. Relationship of the \"Family Member\" to the \"Other Family Member\" (i.e. mother, father, etc). Code must be from the HL7 [FamilyMember ValueSet](https://terminology.hl7.org/6.2.0/ValueSet-v3-FamilyMember.html)", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GWAS/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GWAS_data"}, "created_at": 1757448969.6043587, "relation_name": "\"dbt\".\"main_GWAS_data\".\"GWAS_ftd_familyrelationship\"", "raw_code": "{{ config(materialized='table', schema='GWAS_data') }}\n    {% set relation = ref('GWAS_stg_pedigree') %}\n    {% set constant_columns = ['ftd_index', 'sex', 'subject_id', 'family_id'] %}\n    {% set pivot_columns = get_columns(relation=relation, exclude=constant_columns) %}  \n    \n    with \n    unpivot_df as (\n\n        {% for col in pivot_columns %}\n            select\n                ftd_index, family_id,\n                {{ col }} as \"other_family_memb_id\",\n                subject_id as \"proband_id\",\n                NULL as \"sex\",\n                '{{ col }}' as \"relationship\",\n            from {{ ref('GWAS_stg_pedigree') }} as p\n            WHERE {{ col }} IS NOT NULL \n            {% if not loop.last %}union all{% endif %}\n        {% endfor %}\n    ),\n    \n   direct_relationship as (\n   select\n       p.ftd_index,\n       p.family_id,\n       proband_id as \"family_member\",\n       other_family_memb_id as \"other_family_member\",\n       CASE  \n           WHEN relationship = 'mother' THEN 'KIN:032'\n           WHEN relationship = 'father' THEN 'KIN:032'\n           WHEN relationship = 'mz_twin_id' THEN 'KIN:010'\n       END::text AS relationship_code\n       from {{ ref('GWAS_stg_pedigree') }} as p\n    left join unpivot_df as u on u.proband_id = p.subject_id\n       and u.family_id = p.family_id\n    where mother is not null\n    and father is not null\n    and mz_twin_id is not null\n),\n    \n   reverse_twin_relationship as (\n   select -- reverse relationship for twins\n       dr.ftd_index,\n       dr.family_id,\n       dr.other_family_member as \"family_member\",\n       dr.family_member as \"other_family_member\",\n       dr.relationship_code\n    from direct_relationship as dr\n    where relationship_code = 'KIN:010'\n    )\n\n    select DISTINCT\n        {{ generate_global_id(prefix='fr',descriptor=['family_id','family_member','other_family_member','relationship_code'],study_id='phs001584') }}::text as \"id\",\n        relationship_code, \n        {{ generate_global_id(prefix='sb',descriptor=['family_member'], study_id='phs001584') }}::text AS \"family_member\",\n        {{ generate_global_id(prefix='sb',descriptor=['other_family_member'], study_id='phs001584') }}::text as \"other_family_member\",\n        {{ generate_global_id(prefix='ap',descriptor=['subjectconsent.consent'], study_id='phs001584') }}::text as \"has_access_policy\"\n\n    from (\n        select distinct * from direct_relationship \n    \n    union all\n    \n        select distinct * from reverse_twin_relationship) as combined_relationship\n    left join {{ ref('GWAS_stg_subjectconsent') }} as subjectconsent\n    on subjectconsent.subject_id = combined_relationship.family_member", "language": "sql", "refs": [{"name": "GWAS_stg_pedigree", "package": null, "version": null}, {"name": "GWAS_stg_pedigree", "package": null, "version": null}, {"name": "GWAS_stg_subjectconsent", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.get_columns", "macro.base.generate_global_id"], "nodes": ["model.GWAS.GWAS_stg_pedigree", "model.GWAS.GWAS_stg_subjectconsent"]}, "compiled_path": "target/compiled/ftd/models/GWAS/GWAS_ftd_familyrelationship.sql", "compiled": true, "compiled_code": "\n    \n    \n      \n    \n    with \n    unpivot_df as (\n\n        \n    ),\n    \n   direct_relationship as (\n   select\n       p.ftd_index,\n       p.family_id,\n       proband_id as \"family_member\",\n       other_family_memb_id as \"other_family_member\",\n       CASE  \n           WHEN relationship = 'mother' THEN 'KIN:032'\n           WHEN relationship = 'father' THEN 'KIN:032'\n           WHEN relationship = 'mz_twin_id' THEN 'KIN:010'\n       END::text AS relationship_code\n       from \"dbt\".\"main_main\".\"GWAS_stg_pedigree\" as p\n    left join unpivot_df as u on u.proband_id = p.subject_id\n       and u.family_id = p.family_id\n    where mother is not null\n    and father is not null\n    and mz_twin_id is not null\n),\n    \n   reverse_twin_relationship as (\n   select -- reverse relationship for twins\n       dr.ftd_index,\n       dr.family_id,\n       dr.other_family_member as \"family_member\",\n       dr.family_member as \"other_family_member\",\n       dr.relationship_code\n    from direct_relationship as dr\n    where relationship_code = 'KIN:010'\n    )\n\n    select DISTINCT\n        'fr' || '_' || md5('phs001584' || '|' || cast(coalesce(family_id, '') as text) || '|' || 'phs001584' || '|' || cast(coalesce(family_member, '') as text) || '|' || 'phs001584' || '|' || cast(coalesce(other_family_member, '') as text) || '|' || 'phs001584' || '|' || cast(coalesce(relationship_code, '') as text))::text as \"id\",\n        relationship_code, \n        'sb' || '_' || md5('phs001584' || '|' || cast(coalesce(family_member, '') as text))::text AS \"family_member\",\n        'sb' || '_' || md5('phs001584' || '|' || cast(coalesce(other_family_member, '') as text))::text as \"other_family_member\",\n        'ap' || '_' || md5('phs001584' || '|' || cast(coalesce(subjectconsent.consent, '') as text))::text as \"has_access_policy\"\n\n    from (\n        select distinct * from direct_relationship \n    \n    union all\n    \n        select distinct * from reverse_twin_relationship) as combined_relationship\n    left join \"dbt\".\"main_main\".\"GWAS_stg_subjectconsent\" as subjectconsent\n    on subjectconsent.subject_id = combined_relationship.family_member", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GWAS_ftd_accesspolicy_access_policy_code": {"database": "dbt", "schema": "main_GWAS_data", "name": "GWAS_ftd_accesspolicy_access_policy_code", "resource_type": "model", "package_name": "ftd", "path": "GWAS/GWAS_ftd_accesspolicy_access_policy_code.sql", "original_file_path": "models/GWAS/GWAS_ftd_accesspolicy_access_policy_code.sql", "unique_id": "model.ftd.GWAS_ftd_accesspolicy_access_policy_code", "fqn": ["ftd", "GWAS", "GWAS_ftd_accesspolicy_access_policy_code"], "alias": "GWAS_ftd_accesspolicy_access_policy_code", "checksum": {"name": "sha256", "checksum": "3b1b2b53ab04e18f6bbe3af8a86b9bc500486ef3ddd6a327180189b925d2929e"}, "config": {"enabled": true, "alias": null, "schema": "GWAS_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GWAS_ftd_accesspolicy_access_policy_code.", "columns": {"accesspolicy_id": {"name": "accesspolicy_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "access_policy_code": {"name": "access_policy_code", "description": "Access Policy Code", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GWAS/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GWAS_data"}, "created_at": 1757448969.602201, "relation_name": "\"dbt\".\"main_GWAS_data\".\"GWAS_ftd_accesspolicy_access_policy_code\"", "raw_code": "{{ config(materialized='table', schema='GWAS_data') }}\n\n{%- set consent_groups = [\n    {'consent': 'gru', 'consents': ['1', '2', '3', '9']},\n    {'consent': 'irb', 'consents': ['2', '3', '9']},\n    {'consent': 'col', 'consents': ['3']},\n    {'consent': 'npu', 'consents': ['3']},\n    {'consent': 'pub', 'consents': ['2', '8', '9']},\n    {'consent': 'hmb', 'consents': ['4', '5', '8', '10']},\n    {'consent': 'gso', 'consents': ['2', '8', '10']},\n    {'consent': 'mds', 'consents': ['5']},\n    {'consent': 'ds', 'consents': ['6', '7']}\n] -%}\n\n    {%- for group in consent_groups -%}\n    (\n    select DISTINCT \n    {{ generate_global_id(prefix='ap',descriptor=['subjectconsent.consent'], study_id='phs001584') }}::text as \"accesspolicy_id\",\n    '{{ group.consent }}' as \"access_policy_code\"\nfrom {{ ref('GWAS_stg_subjectconsent') }} as subjectconsent\n    where subjectconsent.consent in (\n    {%- for c in group.consents -%}\n        '{{ c }}'{% if not loop.last %}, \n          {% endif %}\n        {%- endfor -%}\n          )\n        )\n    {% if not loop.last %}union all{% endif %}\n    {%- endfor -%}", "language": "sql", "refs": [{"name": "GWAS_stg_subjectconsent", "package": null, "version": null}, {"name": "GWAS_stg_subjectconsent", "package": null, "version": null}, {"name": "GWAS_stg_subjectconsent", "package": null, "version": null}, {"name": "GWAS_stg_subjectconsent", "package": null, "version": null}, {"name": "GWAS_stg_subjectconsent", "package": null, "version": null}, {"name": "GWAS_stg_subjectconsent", "package": null, "version": null}, {"name": "GWAS_stg_subjectconsent", "package": null, "version": null}, {"name": "GWAS_stg_subjectconsent", "package": null, "version": null}, {"name": "GWAS_stg_subjectconsent", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GWAS.GWAS_stg_subjectconsent"]}, "compiled_path": "target/compiled/ftd/models/GWAS/GWAS_ftd_accesspolicy_access_policy_code.sql", "compiled": true, "compiled_code": "(\n    select DISTINCT \n    'ap' || '_' || md5('phs001584' || '|' || cast(coalesce(subjectconsent.consent, '') as text))::text as \"accesspolicy_id\",\n    'gru' as \"access_policy_code\"\nfrom \"dbt\".\"main_main\".\"GWAS_stg_subjectconsent\" as subjectconsent\n    where subjectconsent.consent in ('1', \n          '2', \n          '3', \n          '9')\n        )\n    union all(\n    select DISTINCT \n    'ap' || '_' || md5('phs001584' || '|' || cast(coalesce(subjectconsent.consent, '') as text))::text as \"accesspolicy_id\",\n    'irb' as \"access_policy_code\"\nfrom \"dbt\".\"main_main\".\"GWAS_stg_subjectconsent\" as subjectconsent\n    where subjectconsent.consent in ('2', \n          '3', \n          '9')\n        )\n    union all(\n    select DISTINCT \n    'ap' || '_' || md5('phs001584' || '|' || cast(coalesce(subjectconsent.consent, '') as text))::text as \"accesspolicy_id\",\n    'col' as \"access_policy_code\"\nfrom \"dbt\".\"main_main\".\"GWAS_stg_subjectconsent\" as subjectconsent\n    where subjectconsent.consent in ('3')\n        )\n    union all(\n    select DISTINCT \n    'ap' || '_' || md5('phs001584' || '|' || cast(coalesce(subjectconsent.consent, '') as text))::text as \"accesspolicy_id\",\n    'npu' as \"access_policy_code\"\nfrom \"dbt\".\"main_main\".\"GWAS_stg_subjectconsent\" as subjectconsent\n    where subjectconsent.consent in ('3')\n        )\n    union all(\n    select DISTINCT \n    'ap' || '_' || md5('phs001584' || '|' || cast(coalesce(subjectconsent.consent, '') as text))::text as \"accesspolicy_id\",\n    'pub' as \"access_policy_code\"\nfrom \"dbt\".\"main_main\".\"GWAS_stg_subjectconsent\" as subjectconsent\n    where subjectconsent.consent in ('2', \n          '8', \n          '9')\n        )\n    union all(\n    select DISTINCT \n    'ap' || '_' || md5('phs001584' || '|' || cast(coalesce(subjectconsent.consent, '') as text))::text as \"accesspolicy_id\",\n    'hmb' as \"access_policy_code\"\nfrom \"dbt\".\"main_main\".\"GWAS_stg_subjectconsent\" as subjectconsent\n    where subjectconsent.consent in ('4', \n          '5', \n          '8', \n          '10')\n        )\n    union all(\n    select DISTINCT \n    'ap' || '_' || md5('phs001584' || '|' || cast(coalesce(subjectconsent.consent, '') as text))::text as \"accesspolicy_id\",\n    'gso' as \"access_policy_code\"\nfrom \"dbt\".\"main_main\".\"GWAS_stg_subjectconsent\" as subjectconsent\n    where subjectconsent.consent in ('2', \n          '8', \n          '10')\n        )\n    union all(\n    select DISTINCT \n    'ap' || '_' || md5('phs001584' || '|' || cast(coalesce(subjectconsent.consent, '') as text))::text as \"accesspolicy_id\",\n    'mds' as \"access_policy_code\"\nfrom \"dbt\".\"main_main\".\"GWAS_stg_subjectconsent\" as subjectconsent\n    where subjectconsent.consent in ('5')\n        )\n    union all(\n    select DISTINCT \n    'ap' || '_' || md5('phs001584' || '|' || cast(coalesce(subjectconsent.consent, '') as text))::text as \"accesspolicy_id\",\n    'ds' as \"access_policy_code\"\nfrom \"dbt\".\"main_main\".\"GWAS_stg_subjectconsent\" as subjectconsent\n    where subjectconsent.consent in ('6', \n          '7')\n        )\n    ", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GWAS_ftd_accesspolicy": {"database": "dbt", "schema": "main_GWAS_data", "name": "GWAS_ftd_accesspolicy", "resource_type": "model", "package_name": "ftd", "path": "GWAS/GWAS_ftd_accesspolicy.sql", "original_file_path": "models/GWAS/GWAS_ftd_accesspolicy.sql", "unique_id": "model.ftd.GWAS_ftd_accesspolicy", "fqn": ["ftd", "GWAS", "GWAS_ftd_accesspolicy"], "alias": "GWAS_ftd_accesspolicy", "checksum": {"name": "sha256", "checksum": "8a63cdef5adb9074b6b7295ac2fc378b0a13746e378beaeb67f4109932403ea6"}, "config": {"enabled": true, "alias": null, "schema": "GWAS_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GWAS_ftd_accesspolicy.", "columns": {"disease_limitation": {"name": "disease_limitation", "description": "Disease Use Limitations", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "description": {"name": "description", "description": "Model for GWAS_ftd_accesspolicy.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "website": {"name": "website", "description": "Website", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GWAS/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GWAS_data"}, "created_at": 1757448969.5925307, "relation_name": "\"dbt\".\"main_GWAS_data\".\"GWAS_ftd_accesspolicy\"", "raw_code": "{{ config(materialized='table', schema='GWAS_data') }}\n\n{%- set consent_groups = [\n    {'description': 'General Research Use', 'consents': ['1', '2', '3', '9']},\n    {'description': 'IRB Approval Required', 'consents': ['2', '3', '9']},\n    {'description': 'Collaboration Required', 'consents': ['3']},\n    {'description': 'Not-for-profit use only', 'consents': ['3']},\n    {'description': 'Publication Required', 'consents': ['2', '8', '9']},\n    {'description': 'Health/Medical/Biomedical', 'consents': ['4', '5', '8', '10']},\n    {'description': 'Genetic Studies only', 'consents': ['2', '8', '10']},\n    {'description': 'Methods', 'consents': ['5']},\n    {'description': 'Disease', 'consents': ['6', '7']}\n] -%}\n\nwith source as (\n    {%- for group in consent_groups -%}\n    (\n    select DISTINCT\n        CASE consent\n            WHEN '6' THEN 'Childhood Diseases'\n            WHEN '7' THEN 'Dementia'\n            ELSE NULL \n        END as \"disease_limitation\",\n        '{{ group.description }}' as \"description\",\n        NULL as \"website\",\n        {{ generate_global_id(prefix='ap', descriptor=['subjectconsent.consent'], study_id='phs001584') }}::text as \"id\"\n    from {{ ref('GWAS_stg_subjectconsent') }} as subjectconsent\n      where subjectconsent.consent in (\n        {%- for c in group.consents -%}\n            '{{ c }}'{% if not loop.last %}, \n          {% endif %}\n        {%- endfor -%}\n          )\n        )\n    {% if not loop.last %}union all{% endif %}\n    {%- endfor -%}\n\n)\nselect * from source", "language": "sql", "refs": [{"name": "GWAS_stg_subjectconsent", "package": null, "version": null}, {"name": "GWAS_stg_subjectconsent", "package": null, "version": null}, {"name": "GWAS_stg_subjectconsent", "package": null, "version": null}, {"name": "GWAS_stg_subjectconsent", "package": null, "version": null}, {"name": "GWAS_stg_subjectconsent", "package": null, "version": null}, {"name": "GWAS_stg_subjectconsent", "package": null, "version": null}, {"name": "GWAS_stg_subjectconsent", "package": null, "version": null}, {"name": "GWAS_stg_subjectconsent", "package": null, "version": null}, {"name": "GWAS_stg_subjectconsent", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GWAS.GWAS_stg_subjectconsent"]}, "compiled_path": "target/compiled/ftd/models/GWAS/GWAS_ftd_accesspolicy.sql", "compiled": true, "compiled_code": "with source as ((\n    select DISTINCT\n        CASE consent\n            WHEN '6' THEN 'Childhood Diseases'\n            WHEN '7' THEN 'Dementia'\n            ELSE NULL \n        END as \"disease_limitation\",\n        'General Research Use' as \"description\",\n        NULL as \"website\",\n        'ap' || '_' || md5('phs001584' || '|' || cast(coalesce(subjectconsent.consent, '') as text))::text as \"id\"\n    from \"dbt\".\"main_main\".\"GWAS_stg_subjectconsent\" as subjectconsent\n      where subjectconsent.consent in ('1', \n          '2', \n          '3', \n          '9')\n        )\n    union all(\n    select DISTINCT\n        CASE consent\n            WHEN '6' THEN 'Childhood Diseases'\n            WHEN '7' THEN 'Dementia'\n            ELSE NULL \n        END as \"disease_limitation\",\n        'IRB Approval Required' as \"description\",\n        NULL as \"website\",\n        'ap' || '_' || md5('phs001584' || '|' || cast(coalesce(subjectconsent.consent, '') as text))::text as \"id\"\n    from \"dbt\".\"main_main\".\"GWAS_stg_subjectconsent\" as subjectconsent\n      where subjectconsent.consent in ('2', \n          '3', \n          '9')\n        )\n    union all(\n    select DISTINCT\n        CASE consent\n            WHEN '6' THEN 'Childhood Diseases'\n            WHEN '7' THEN 'Dementia'\n            ELSE NULL \n        END as \"disease_limitation\",\n        'Collaboration Required' as \"description\",\n        NULL as \"website\",\n        'ap' || '_' || md5('phs001584' || '|' || cast(coalesce(subjectconsent.consent, '') as text))::text as \"id\"\n    from \"dbt\".\"main_main\".\"GWAS_stg_subjectconsent\" as subjectconsent\n      where subjectconsent.consent in ('3')\n        )\n    union all(\n    select DISTINCT\n        CASE consent\n            WHEN '6' THEN 'Childhood Diseases'\n            WHEN '7' THEN 'Dementia'\n            ELSE NULL \n        END as \"disease_limitation\",\n        'Not-for-profit use only' as \"description\",\n        NULL as \"website\",\n        'ap' || '_' || md5('phs001584' || '|' || cast(coalesce(subjectconsent.consent, '') as text))::text as \"id\"\n    from \"dbt\".\"main_main\".\"GWAS_stg_subjectconsent\" as subjectconsent\n      where subjectconsent.consent in ('3')\n        )\n    union all(\n    select DISTINCT\n        CASE consent\n            WHEN '6' THEN 'Childhood Diseases'\n            WHEN '7' THEN 'Dementia'\n            ELSE NULL \n        END as \"disease_limitation\",\n        'Publication Required' as \"description\",\n        NULL as \"website\",\n        'ap' || '_' || md5('phs001584' || '|' || cast(coalesce(subjectconsent.consent, '') as text))::text as \"id\"\n    from \"dbt\".\"main_main\".\"GWAS_stg_subjectconsent\" as subjectconsent\n      where subjectconsent.consent in ('2', \n          '8', \n          '9')\n        )\n    union all(\n    select DISTINCT\n        CASE consent\n            WHEN '6' THEN 'Childhood Diseases'\n            WHEN '7' THEN 'Dementia'\n            ELSE NULL \n        END as \"disease_limitation\",\n        'Health/Medical/Biomedical' as \"description\",\n        NULL as \"website\",\n        'ap' || '_' || md5('phs001584' || '|' || cast(coalesce(subjectconsent.consent, '') as text))::text as \"id\"\n    from \"dbt\".\"main_main\".\"GWAS_stg_subjectconsent\" as subjectconsent\n      where subjectconsent.consent in ('4', \n          '5', \n          '8', \n          '10')\n        )\n    union all(\n    select DISTINCT\n        CASE consent\n            WHEN '6' THEN 'Childhood Diseases'\n            WHEN '7' THEN 'Dementia'\n            ELSE NULL \n        END as \"disease_limitation\",\n        'Genetic Studies only' as \"description\",\n        NULL as \"website\",\n        'ap' || '_' || md5('phs001584' || '|' || cast(coalesce(subjectconsent.consent, '') as text))::text as \"id\"\n    from \"dbt\".\"main_main\".\"GWAS_stg_subjectconsent\" as subjectconsent\n      where subjectconsent.consent in ('2', \n          '8', \n          '10')\n        )\n    union all(\n    select DISTINCT\n        CASE consent\n            WHEN '6' THEN 'Childhood Diseases'\n            WHEN '7' THEN 'Dementia'\n            ELSE NULL \n        END as \"disease_limitation\",\n        'Methods' as \"description\",\n        NULL as \"website\",\n        'ap' || '_' || md5('phs001584' || '|' || cast(coalesce(subjectconsent.consent, '') as text))::text as \"id\"\n    from \"dbt\".\"main_main\".\"GWAS_stg_subjectconsent\" as subjectconsent\n      where subjectconsent.consent in ('5')\n        )\n    union all(\n    select DISTINCT\n        CASE consent\n            WHEN '6' THEN 'Childhood Diseases'\n            WHEN '7' THEN 'Dementia'\n            ELSE NULL \n        END as \"disease_limitation\",\n        'Disease' as \"description\",\n        NULL as \"website\",\n        'ap' || '_' || md5('phs001584' || '|' || cast(coalesce(subjectconsent.consent, '') as text))::text as \"id\"\n    from \"dbt\".\"main_main\".\"GWAS_stg_subjectconsent\" as subjectconsent\n      where subjectconsent.consent in ('6', \n          '7')\n        )\n    )\nselect * from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GWAS_ftd_subjectassertion": {"database": "dbt", "schema": "main_GWAS_data", "name": "GWAS_ftd_subjectassertion", "resource_type": "model", "package_name": "ftd", "path": "GWAS/GWAS_ftd_subjectassertion.sql", "original_file_path": "models/GWAS/GWAS_ftd_subjectassertion.sql", "unique_id": "model.ftd.GWAS_ftd_subjectassertion", "fqn": ["ftd", "GWAS", "GWAS_ftd_subjectassertion"], "alias": "GWAS_ftd_subjectassertion", "checksum": {"name": "sha256", "checksum": "090145c21598581a80c65f25422cb84381dd18d0edf2b923b5c7cc3fcc7baa48"}, "config": {"enabled": true, "alias": null, "schema": "GWAS_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GWAS_ftd_subjectassertion.", "columns": {"assertion_type": {"name": "assertion_type", "description": "The semantic type of the resource, eg, Condition.", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "age_at_assertion": {"name": "age_at_assertion", "description": "The age in decimal years of the Subject when the assertion was made.", "meta": {}, "data_type": "number", "constraints": [], "quote": null, "tags": [], "granularity": null}, "age_at_event": {"name": "age_at_event", "description": "The age in decimal years of the Subject at the time point which the assertion describes, | eg, age of onset or when a measurement was performed.", "meta": {}, "data_type": "number", "constraints": [], "quote": null, "tags": [], "granularity": null}, "age_at_resolution": {"name": "age_at_resolution", "description": "The age in decimal years of the Subject when the asserted state was resolved.", "meta": {}, "data_type": "number", "constraints": [], "quote": null, "tags": [], "granularity": null}, "code": {"name": "code", "description": "The structured term defining the meaning of the assertion.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "display": {"name": "display", "description": "The friendly display string of the coded term", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "value_code": {"name": "value_code", "description": "The structured term defining the value of the assertion.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "value_display": {"name": "value_display", "description": "The friendly display string of the coded term for the value of the assertion.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "value_number": {"name": "value_number", "description": "The numeric value of the assertion.", "meta": {}, "data_type": "number", "constraints": [], "quote": null, "tags": [], "granularity": null}, "value_units": {"name": "value_units", "description": "The structured term defining the units of the value.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "value_units_display": {"name": "value_units_display", "description": "The friendly display string of units of the value.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "subject_id": {"name": "subject_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GWAS/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GWAS_data"}, "created_at": 1757448969.5919437, "relation_name": "\"dbt\".\"main_GWAS_data\".\"GWAS_ftd_subjectassertion\"", "raw_code": "{{ config(materialized='table', schema='GWAS_data') }}\n\n{% set relation_bmi = ref('GWAS_stg_bmi') %}\n{% set constant_bmi_columns = ['ftd_index', 'subject_id', 'bmi_observation_age', 'visit_number'] %}\n{% set pivot_bmi_columns = get_columns(relation=relation_bmi, exclude=constant_bmi_columns) %}\n\nwith phecode_cte as (\n    select distinct\n      phecode.subject_id,\n      NULL as \"age_at_assertion\",\n      phecode.age_at_observation as \"age_at_event\",\n      NULL as \"age_at_resolution\",\n      phecode.phecode::text as \"code\",\n      NULL as \"display\",\n      NULL as \"value_code\",\n      NULL as \"value_display\",\n      NULL as \"value_number\",\n      NULL as \"value_units\",\n      NULL as \"value_units_display\",\n     from {{ ref('GWAS_stg_phecode') }} as phecode\n     ),\n \nunpivot_bmi as (\n\n        {% for col in pivot_bmi_columns %}\n            select distinct\n            bmi.subject_id,\n            bmi.bmi_observation_age::text as \"age_at_assertion\",\n            NULL as \"age_at_event\",\n            NULL as \"age_at_resolution\",\n            '{{ col }}' AS \"code\",\n            NULL as \"display\",\n            NULL AS \"value_code\",\n            NULL AS \"value_display\",\n           {{ col }}::text as \"value_number\",\n            NULL as \"value_units\",\n            NULL as \"value_units_display\"\n            from {{ ref('GWAS_stg_bmi') }} as bmi\n            {% if not loop.last %}union all{% endif %}\n        {% endfor %}\n    ),\n  \n union_data as (\n    select * from phecode_cte as pc\n\n    union all \n    \n    select * from unpivot_bmi as ub\n)\n\n    select distinct \n        CASE WHEN code IN ('weight', 'height', 'body_mass_index') THEN 'measurement' \n             WHEN code IS NOT NULL THEN 'ehr_billing_code'\n             ELSE CONCAT('FTD_FLAG: unhandled assertion_type: ',code)\n        END::text as \"assertion_type\",\n        age_at_assertion,\n        age_at_event, \n        null as \"age_at_resolution\",\n        CASE \n            WHEN code = 'weight'THEN 'LOINC:29463-7'\n            WHEN code = 'height' THEN 'LOINC:8302-2'\n            WHEN code = 'body_mass_index' THEN 'LOINC:39156-5'\n            ELSE code\n        END AS code,        \n        CASE \n            WHEN code = 'weight' THEN 'Body weight'\n            WHEN code = 'height' THEN 'Body height'\n            WHEN code = 'body_mass_index' THEN 'Body mass index (BMI) [Ratio]' \n            ELSE display\n        END AS display,\n        value_code, \n        value_display, \n        value_number,\n        CASE \n            WHEN code = 'weight' THEN 'kg'\n            WHEN code = 'height' THEN 'cm'\n            WHEN code = 'body_mass_index' THEN 'kg/m2'   \n            ELSE NULL\n        END AS \"value_units\",  \n        CASE \n            WHEN code = 'weight' THEN 'kilogram'\n            WHEN code = 'height' THEN 'centimeter'\n            WHEN code = 'body_mass_index' THEN 'kilogram per square meter'   \n            ELSE NULL\n        END as \"value_units_display\",\n        {{ generate_global_id(prefix='sa', descriptor=['subject_id', 'code'], study_id='phs001584') }}::text as \"id\",\n        {{ generate_global_id(prefix='ap', descriptor=['subjectconsent.consent'], study_id='phs001584') }}::text as \"has_access_policy\",\n        {{ generate_global_id(prefix='sb', descriptor=['subject_id'], study_id='phs001584') }}::text as \"subject_id\"\n    from union_data as ud\n    left join {{ ref('GWAS_stg_subjectconsent') }} as subjectconsent\n         using (subject_id)", "language": "sql", "refs": [{"name": "GWAS_stg_bmi", "package": null, "version": null}, {"name": "GWAS_stg_phecode", "package": null, "version": null}, {"name": "GWAS_stg_subjectconsent", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.get_columns", "macro.base.generate_global_id"], "nodes": ["model.GWAS.GWAS_stg_bmi", "model.GWAS.GWAS_stg_phecode", "model.GWAS.GWAS_stg_subjectconsent"]}, "compiled_path": "target/compiled/ftd/models/GWAS/GWAS_ftd_subjectassertion.sql", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith phecode_cte as (\n    select distinct\n      phecode.subject_id,\n      NULL as \"age_at_assertion\",\n      phecode.age_at_observation as \"age_at_event\",\n      NULL as \"age_at_resolution\",\n      phecode.phecode::text as \"code\",\n      NULL as \"display\",\n      NULL as \"value_code\",\n      NULL as \"value_display\",\n      NULL as \"value_number\",\n      NULL as \"value_units\",\n      NULL as \"value_units_display\",\n     from \"dbt\".\"main_main\".\"GWAS_stg_phecode\" as phecode\n     ),\n \nunpivot_bmi as (\n\n        \n    ),\n  \n union_data as (\n    select * from phecode_cte as pc\n\n    union all \n    \n    select * from unpivot_bmi as ub\n)\n\n    select distinct \n        CASE WHEN code IN ('weight', 'height', 'body_mass_index') THEN 'measurement' \n             WHEN code IS NOT NULL THEN 'ehr_billing_code'\n             ELSE CONCAT('FTD_FLAG: unhandled assertion_type: ',code)\n        END::text as \"assertion_type\",\n        age_at_assertion,\n        age_at_event, \n        null as \"age_at_resolution\",\n        CASE \n            WHEN code = 'weight'THEN 'LOINC:29463-7'\n            WHEN code = 'height' THEN 'LOINC:8302-2'\n            WHEN code = 'body_mass_index' THEN 'LOINC:39156-5'\n            ELSE code\n        END AS code,        \n        CASE \n            WHEN code = 'weight' THEN 'Body weight'\n            WHEN code = 'height' THEN 'Body height'\n            WHEN code = 'body_mass_index' THEN 'Body mass index (BMI) [Ratio]' \n            ELSE display\n        END AS display,\n        value_code, \n        value_display, \n        value_number,\n        CASE \n            WHEN code = 'weight' THEN 'kg'\n            WHEN code = 'height' THEN 'cm'\n            WHEN code = 'body_mass_index' THEN 'kg/m2'   \n            ELSE NULL\n        END AS \"value_units\",  \n        CASE \n            WHEN code = 'weight' THEN 'kilogram'\n            WHEN code = 'height' THEN 'centimeter'\n            WHEN code = 'body_mass_index' THEN 'kilogram per square meter'   \n            ELSE NULL\n        END as \"value_units_display\",\n        'sa' || '_' || md5('phs001584' || '|' || cast(coalesce(subject_id, '') as text) || '|' || 'phs001584' || '|' || cast(coalesce(code, '') as text))::text as \"id\",\n        'ap' || '_' || md5('phs001584' || '|' || cast(coalesce(subjectconsent.consent, '') as text))::text as \"has_access_policy\",\n        'sb' || '_' || md5('phs001584' || '|' || cast(coalesce(subject_id, '') as text))::text as \"subject_id\"\n    from union_data as ud\n    left join \"dbt\".\"main_main\".\"GWAS_stg_subjectconsent\" as subjectconsent\n         using (subject_id)", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GWAS_ftd_demographics_external_id": {"database": "dbt", "schema": "main_GWAS_data", "name": "GWAS_ftd_demographics_external_id", "resource_type": "model", "package_name": "ftd", "path": "GWAS/GWAS_ftd_demographics_external_id.sql", "original_file_path": "models/GWAS/GWAS_ftd_demographics_external_id.sql", "unique_id": "model.ftd.GWAS_ftd_demographics_external_id", "fqn": ["ftd", "GWAS", "GWAS_ftd_demographics_external_id"], "alias": "GWAS_ftd_demographics_external_id", "checksum": {"name": "sha256", "checksum": "74b84f68faaff66ea714a352be1538826527028d1ab0d296c9610c681b5185dd"}, "config": {"enabled": true, "alias": null, "schema": "GWAS_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GWAS_ftd_demographics_external_id.", "columns": {"demographics_id": {"name": "demographics_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GWAS/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GWAS_data"}, "created_at": 1757448969.60669, "relation_name": "\"dbt\".\"main_GWAS_data\".\"GWAS_ftd_demographics_external_id\"", "raw_code": "{{ config(materialized='table', schema='GWAS_data') }}\n\nselect \n  {{ generate_global_id(prefix='dm',descriptor=['demographics.subject_id'], study_id='phs001584') }}::text as \"demographics_id\",\n  demographics.subject_id::text as \"external_id\"\nfrom {{ ref('GWAS_stg_demographics') }} as demographics", "language": "sql", "refs": [{"name": "GWAS_stg_demographics", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GWAS.GWAS_stg_demographics"]}, "compiled_path": "target/compiled/ftd/models/GWAS/GWAS_ftd_demographics_external_id.sql", "compiled": true, "compiled_code": "\n\nselect \n  'dm' || '_' || md5('phs001584' || '|' || cast(coalesce(demographics.subject_id, '') as text))::text as \"demographics_id\",\n  demographics.subject_id::text as \"external_id\"\nfrom \"dbt\".\"main_main\".\"GWAS_stg_demographics\" as demographics", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GWAS_ftd_subject": {"database": "dbt", "schema": "main_GWAS_data", "name": "GWAS_ftd_subject", "resource_type": "model", "package_name": "ftd", "path": "GWAS/GWAS_ftd_subject.sql", "original_file_path": "models/GWAS/GWAS_ftd_subject.sql", "unique_id": "model.ftd.GWAS_ftd_subject", "fqn": ["ftd", "GWAS", "GWAS_ftd_subject"], "alias": "GWAS_ftd_subject", "checksum": {"name": "sha256", "checksum": "04e5517020cae2ecac70b6419ce7472b729ce7bd76f2343a436a8e5c00f1b353"}, "config": {"enabled": true, "alias": null, "schema": "GWAS_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GWAS_ftd_subject.", "columns": {"subject_type": {"name": "subject_type", "description": "Type of entity this record represents", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "organism_type": {"name": "organism_type", "description": "Organism Type Label", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_demographics_id": {"name": "has_demographics_id", "description": "A demographic summary of the participant.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GWAS/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GWAS_data"}, "created_at": 1757448969.595567, "relation_name": "\"dbt\".\"main_GWAS_data\".\"GWAS_ftd_subject\"", "raw_code": "{{ config(materialized='table', schema='GWAS_data') }}\n\nselect \n  CASE \n      WHEN subjectconsent.consent != 0 THEN 'participant'\n      ELSE 'non_participant'\n  END::text as subject_type,  \n  NULL as \"organism_type\",\n    {{ generate_global_id(prefix='ap',descriptor=['subjectconsent.consent'], study_id='phs001584') }}::text as \"has_access_policy\",\n    {{ generate_global_id(prefix='sb',descriptor=['subjectconsent.subject_id'], study_id='phs001584') }}::text as \"id\",\n    {{ generate_global_id(prefix='dm',descriptor=['demographics.subject_id'], study_id='phs001584') }}::text as \"has_demographics_id\"\nfrom {{ ref('GWAS_stg_subjectconsent') }} as subjectconsent\njoin {{ ref('GWAS_stg_demographics') }} as demographics\nusing (subject_id)", "language": "sql", "refs": [{"name": "GWAS_stg_subjectconsent", "package": null, "version": null}, {"name": "GWAS_stg_demographics", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GWAS.GWAS_stg_subjectconsent", "model.GWAS.GWAS_stg_demographics"]}, "compiled_path": "target/compiled/ftd/models/GWAS/GWAS_ftd_subject.sql", "compiled": true, "compiled_code": "\n\nselect \n  CASE \n      WHEN subjectconsent.consent != 0 THEN 'participant'\n      ELSE 'non_participant'\n  END::text as subject_type,  \n  NULL as \"organism_type\",\n    'ap' || '_' || md5('phs001584' || '|' || cast(coalesce(subjectconsent.consent, '') as text))::text as \"has_access_policy\",\n    'sb' || '_' || md5('phs001584' || '|' || cast(coalesce(subjectconsent.subject_id, '') as text))::text as \"id\",\n    'dm' || '_' || md5('phs001584' || '|' || cast(coalesce(demographics.subject_id, '') as text))::text as \"has_demographics_id\"\nfrom \"dbt\".\"main_main\".\"GWAS_stg_subjectconsent\" as subjectconsent\njoin \"dbt\".\"main_main\".\"GWAS_stg_demographics\" as demographics\nusing (subject_id)", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GWAS_ftd_study_principal_investigator": {"database": "dbt", "schema": "main_GWAS_data", "name": "GWAS_ftd_study_principal_investigator", "resource_type": "model", "package_name": "ftd", "path": "GWAS/unharmonized/GWAS_ftd_study_principal_investigator.sql", "original_file_path": "models/GWAS/unharmonized/GWAS_ftd_study_principal_investigator.sql", "unique_id": "model.ftd.GWAS_ftd_study_principal_investigator", "fqn": ["ftd", "GWAS", "unharmonized", "GWAS_ftd_study_principal_investigator"], "alias": "GWAS_ftd_study_principal_investigator", "checksum": {"name": "sha256", "checksum": "aeb0cd18b9453b8d00a4b85c0bbf0f0f703748b4367d84bbfe30daa3c0e8df5d"}, "config": {"enabled": true, "alias": null, "schema": "GWAS_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GWAS_ftd_study_principal_investigator.", "columns": {"study_id": {"name": "study_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "principal_investigator": {"name": "principal_investigator", "description": "Principal Investigator", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GWAS/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GWAS_data"}, "created_at": 1757448969.6099036, "relation_name": "\"dbt\".\"main_GWAS_data\".\"GWAS_ftd_study_principal_investigator\"", "raw_code": "{{ config(materialized='table', schema='GWAS_data') }}\n\nselect \nnull::text as \"study_id\",\nnull::text as \"principal_investigator\"", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "target/compiled/ftd/models/GWAS/unharmonized/GWAS_ftd_study_principal_investigator.sql", "compiled": true, "compiled_code": "\n\nselect \nnull::text as \"study_id\",\nnull::text as \"principal_investigator\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GWAS_ftd_biospecimencollection": {"database": "dbt", "schema": "main_GWAS_data", "name": "GWAS_ftd_biospecimencollection", "resource_type": "model", "package_name": "ftd", "path": "GWAS/unharmonized/GWAS_ftd_biospecimencollection.sql", "original_file_path": "models/GWAS/unharmonized/GWAS_ftd_biospecimencollection.sql", "unique_id": "model.ftd.GWAS_ftd_biospecimencollection", "fqn": ["ftd", "GWAS", "unharmonized", "GWAS_ftd_biospecimencollection"], "alias": "GWAS_ftd_biospecimencollection", "checksum": {"name": "sha256", "checksum": "18dc20c28e47f62fd58a3b13f0300516fc65c30f7a54be74887f0d0342c9a170"}, "config": {"enabled": true, "alias": null, "schema": "GWAS_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GWAS_ftd_biospecimencollection.", "columns": {"age_at_collection": {"name": "age_at_collection", "description": "The age at which this biospecimen was collected.", "meta": {}, "data_type": "integer", "constraints": [], "quote": null, "tags": [], "granularity": null}, "method": {"name": "method", "description": "The approach used to collect the biospecimen.", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "site": {"name": "site", "description": "The location of the specimen collection.", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "spatial_qualifier": {"name": "spatial_qualifier", "description": "Any spatial/location qualifiers", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "laterality": {"name": "laterality", "description": "Laterality information for the site", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GWAS/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GWAS_data"}, "created_at": 1757448969.603771, "relation_name": "\"dbt\".\"main_GWAS_data\".\"GWAS_ftd_biospecimencollection\"", "raw_code": "{{ config(materialized='table', schema='GWAS_data') }}\n\nselect \nnull::integer as \"age_at_collection\",\nnull::text as \"method\",\nnull::text as \"site\",\nnull::text as \"spatial_qualifier\",\nnull::text as \"laterality\",\nnull::text as \"has_access_policy\",\nnull::text as \"id\"", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "target/compiled/ftd/models/GWAS/unharmonized/GWAS_ftd_biospecimencollection.sql", "compiled": true, "compiled_code": "\n\nselect \nnull::integer as \"age_at_collection\",\nnull::text as \"method\",\nnull::text as \"site\",\nnull::text as \"spatial_qualifier\",\nnull::text as \"laterality\",\nnull::text as \"has_access_policy\",\nnull::text as \"id\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GWAS_ftd_accesspolicy_data_access_type": {"database": "dbt", "schema": "main_GWAS_data", "name": "GWAS_ftd_accesspolicy_data_access_type", "resource_type": "model", "package_name": "ftd", "path": "GWAS/unharmonized/GWAS_ftd_accesspolicy_data_access_type.sql", "original_file_path": "models/GWAS/unharmonized/GWAS_ftd_accesspolicy_data_access_type.sql", "unique_id": "model.ftd.GWAS_ftd_accesspolicy_data_access_type", "fqn": ["ftd", "GWAS", "unharmonized", "GWAS_ftd_accesspolicy_data_access_type"], "alias": "GWAS_ftd_accesspolicy_data_access_type", "checksum": {"name": "sha256", "checksum": "eafd6d93040ddf61687b2fb410f2e4d7be5b0ea3156c72f8626cea10c15fd310"}, "config": {"enabled": true, "alias": null, "schema": "GWAS_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GWAS_ftd_accesspolicy_data_access_type.", "columns": {"accesspolicy_id": {"name": "accesspolicy_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "data_access_type": {"name": "data_access_type", "description": "Data Access Type", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GWAS/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GWAS_data"}, "created_at": 1757448969.6081145, "relation_name": "\"dbt\".\"main_GWAS_data\".\"GWAS_ftd_accesspolicy_data_access_type\"", "raw_code": "{{ config(materialized='table', schema='GWAS_data') }}\n\nselect \n  null::text as \"accesspolicy_id\",\n  null::text as \"data_access_type\"", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "target/compiled/ftd/models/GWAS/unharmonized/GWAS_ftd_accesspolicy_data_access_type.sql", "compiled": true, "compiled_code": "\n\nselect \n  null::text as \"accesspolicy_id\",\n  null::text as \"data_access_type\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GWAS_ftd_file_external_id": {"database": "dbt", "schema": "main_GWAS_data", "name": "GWAS_ftd_file_external_id", "resource_type": "model", "package_name": "ftd", "path": "GWAS/unharmonized/GWAS_ftd_file_external_id.sql", "original_file_path": "models/GWAS/unharmonized/GWAS_ftd_file_external_id.sql", "unique_id": "model.ftd.GWAS_ftd_file_external_id", "fqn": ["ftd", "GWAS", "unharmonized", "GWAS_ftd_file_external_id"], "alias": "GWAS_ftd_file_external_id", "checksum": {"name": "sha256", "checksum": "249cd76e52ba5aa47a9051561a2c554de436cc1642bf6a6aaa10fa21c48c62e8"}, "config": {"enabled": true, "alias": null, "schema": "GWAS_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GWAS_ftd_file_external_id.", "columns": {"file_id": {"name": "file_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GWAS/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GWAS_data"}, "created_at": 1757448969.6062505, "relation_name": "\"dbt\".\"main_GWAS_data\".\"GWAS_ftd_file_external_id\"", "raw_code": "{{ config(materialized='table', schema='GWAS_data') }}\n\nselect \nnull::text as \"file_id\",\nnull::text as \"external_id\"", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "target/compiled/ftd/models/GWAS/unharmonized/GWAS_ftd_file_external_id.sql", "compiled": true, "compiled_code": "\n\nselect \nnull::text as \"file_id\",\nnull::text as \"external_id\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GWAS_ftd_study": {"database": "dbt", "schema": "main_GWAS_data", "name": "GWAS_ftd_study", "resource_type": "model", "package_name": "ftd", "path": "GWAS/unharmonized/GWAS_ftd_study.sql", "original_file_path": "models/GWAS/unharmonized/GWAS_ftd_study.sql", "unique_id": "model.ftd.GWAS_ftd_study", "fqn": ["ftd", "GWAS", "unharmonized", "GWAS_ftd_study"], "alias": "GWAS_ftd_study", "checksum": {"name": "sha256", "checksum": "de1277813a8d04c70d45c8e2dd151124a2c4626953addf4f500333ed45a1c93c"}, "config": {"enabled": true, "alias": null, "schema": "GWAS_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GWAS_ftd_study.", "columns": {"parent_study_id": {"name": "parent_study_id", "description": "Parent Study ID", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "study_title": {"name": "study_title", "description": "Study Title", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GWAS/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GWAS_data"}, "created_at": 1757448969.6027877, "relation_name": "\"dbt\".\"main_GWAS_data\".\"GWAS_ftd_study\"", "raw_code": "{{ config(materialized='table', schema='GWAS_data') }}\n\nselect \nnull::text as \"parent_study_id\",\nnull::text as \"study_title\",\nnull::text as \"id\"", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "target/compiled/ftd/models/GWAS/unharmonized/GWAS_ftd_study.sql", "compiled": true, "compiled_code": "\n\nselect \nnull::text as \"parent_study_id\",\nnull::text as \"study_title\",\nnull::text as \"id\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GWAS_ftd_familyrelationship_external_id": {"database": "dbt", "schema": "main_GWAS_data", "name": "GWAS_ftd_familyrelationship_external_id", "resource_type": "model", "package_name": "ftd", "path": "GWAS/unharmonized/GWAS_ftd_familyrelationship_external_id.sql", "original_file_path": "models/GWAS/unharmonized/GWAS_ftd_familyrelationship_external_id.sql", "unique_id": "model.ftd.GWAS_ftd_familyrelationship_external_id", "fqn": ["ftd", "GWAS", "unharmonized", "GWAS_ftd_familyrelationship_external_id"], "alias": "GWAS_ftd_familyrelationship_external_id", "checksum": {"name": "sha256", "checksum": "f44066adddf5b27772fed806b02645cabf147b5ba52fbaf651d73982af1e91fd"}, "config": {"enabled": true, "alias": null, "schema": "GWAS_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GWAS_ftd_familyrelationship_external_id.", "columns": {"familyrelationship_id": {"name": "familyrelationship_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GWAS/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GWAS_data"}, "created_at": 1757448969.5975866, "relation_name": "\"dbt\".\"main_GWAS_data\".\"GWAS_ftd_familyrelationship_external_id\"", "raw_code": "{{ config(materialized='table', schema='GWAS_data') }}\n\nselect \nnull::text as \"familyrelationship_id\",\nnull::text as \"external_id\"", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "target/compiled/ftd/models/GWAS/unharmonized/GWAS_ftd_familyrelationship_external_id.sql", "compiled": true, "compiled_code": "\n\nselect \nnull::text as \"familyrelationship_id\",\nnull::text as \"external_id\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GWAS_ftd_accesspolicy_external_id": {"database": "dbt", "schema": "main_GWAS_data", "name": "GWAS_ftd_accesspolicy_external_id", "resource_type": "model", "package_name": "ftd", "path": "GWAS/unharmonized/GWAS_ftd_accesspolicy_external_id.sql", "original_file_path": "models/GWAS/unharmonized/GWAS_ftd_accesspolicy_external_id.sql", "unique_id": "model.ftd.GWAS_ftd_accesspolicy_external_id", "fqn": ["ftd", "GWAS", "unharmonized", "GWAS_ftd_accesspolicy_external_id"], "alias": "GWAS_ftd_accesspolicy_external_id", "checksum": {"name": "sha256", "checksum": "8fdc904cb96e4194eb5014a87531a113aa6ee1a177419ea3b2658206d516576f"}, "config": {"enabled": true, "alias": null, "schema": "GWAS_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GWAS_ftd_accesspolicy_external_id.", "columns": {"accesspolicy_id": {"name": "accesspolicy_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GWAS/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GWAS_data"}, "created_at": 1757448969.5997806, "relation_name": "\"dbt\".\"main_GWAS_data\".\"GWAS_ftd_accesspolicy_external_id\"", "raw_code": "{{ config(materialized='table', schema='GWAS_data') }}\n\nselect \n null::text as \"accesspolicy_id\",\n null::text as \"external_id\"", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "target/compiled/ftd/models/GWAS/unharmonized/GWAS_ftd_accesspolicy_external_id.sql", "compiled": true, "compiled_code": "\n\nselect \n null::text as \"accesspolicy_id\",\n null::text as \"external_id\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GWAS_ftd_accesscontrolledrecord_external_id": {"database": "dbt", "schema": "main_GWAS_data", "name": "GWAS_ftd_accesscontrolledrecord_external_id", "resource_type": "model", "package_name": "ftd", "path": "GWAS/unharmonized/GWAS_ftd_accesscontrolledrecord_external_id.sql", "original_file_path": "models/GWAS/unharmonized/GWAS_ftd_accesscontrolledrecord_external_id.sql", "unique_id": "model.ftd.GWAS_ftd_accesscontrolledrecord_external_id", "fqn": ["ftd", "GWAS", "unharmonized", "GWAS_ftd_accesscontrolledrecord_external_id"], "alias": "GWAS_ftd_accesscontrolledrecord_external_id", "checksum": {"name": "sha256", "checksum": "1770a87aed8552d561c16cac32303734336b47704eeab6d0a90e334f80e3fa00"}, "config": {"enabled": true, "alias": null, "schema": "GWAS_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GWAS_ftd_accesscontrolledrecord_external_id.", "columns": {"accesscontrolledrecord_id": {"name": "accesscontrolledrecord_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GWAS/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GWAS_data"}, "created_at": 1757448969.608555, "relation_name": "\"dbt\".\"main_GWAS_data\".\"GWAS_ftd_accesscontrolledrecord_external_id\"", "raw_code": "{{ config(materialized='table', schema='GWAS_data') }}\n\nselect \n  null::text as \"accesscontrolledrecord_id\",\n  null::text as \"external_id\"", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "target/compiled/ftd/models/GWAS/unharmonized/GWAS_ftd_accesscontrolledrecord_external_id.sql", "compiled": true, "compiled_code": "\n\nselect \n  null::text as \"accesscontrolledrecord_id\",\n  null::text as \"external_id\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GWAS_ftd_file_subject": {"database": "dbt", "schema": "main_GWAS_data", "name": "GWAS_ftd_file_subject", "resource_type": "model", "package_name": "ftd", "path": "GWAS/unharmonized/GWAS_ftd_file_subject.sql", "original_file_path": "models/GWAS/unharmonized/GWAS_ftd_file_subject.sql", "unique_id": "model.ftd.GWAS_ftd_file_subject", "fqn": ["ftd", "GWAS", "unharmonized", "GWAS_ftd_file_subject"], "alias": "GWAS_ftd_file_subject", "checksum": {"name": "sha256", "checksum": "be97395319a76b52cad9df0c38ea8c80d2a1002041496e8e174f33ba2448faf8"}, "config": {"enabled": true, "alias": null, "schema": "GWAS_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GWAS_ftd_file_subject.", "columns": {"file_id": {"name": "file_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "subject_id": {"name": "subject_id", "description": "The Subject(s) which this file describes.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GWAS/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GWAS_data"}, "created_at": 1757448969.607568, "relation_name": "\"dbt\".\"main_GWAS_data\".\"GWAS_ftd_file_subject\"", "raw_code": "{{ config(materialized='table', schema='GWAS_data') }}\n\nselect \nnull::text as \"file_id\",\nnull::text as \"subject_id\"", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "target/compiled/ftd/models/GWAS/unharmonized/GWAS_ftd_file_subject.sql", "compiled": true, "compiled_code": "\n\nselect \nnull::text as \"file_id\",\nnull::text as \"subject_id\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GWAS_ftd_family_external_id": {"database": "dbt", "schema": "main_GWAS_data", "name": "GWAS_ftd_family_external_id", "resource_type": "model", "package_name": "ftd", "path": "GWAS/unharmonized/GWAS_ftd_family_external_id.sql", "original_file_path": "models/GWAS/unharmonized/GWAS_ftd_family_external_id.sql", "unique_id": "model.ftd.GWAS_ftd_family_external_id", "fqn": ["ftd", "GWAS", "unharmonized", "GWAS_ftd_family_external_id"], "alias": "GWAS_ftd_family_external_id", "checksum": {"name": "sha256", "checksum": "7780764b4bbc703a0cf28763c75543e80fc730afc170b2d3fc19c7d7ebc63a32"}, "config": {"enabled": true, "alias": null, "schema": "GWAS_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GWAS_ftd_family_external_id.", "columns": {"family_id": {"name": "family_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GWAS/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GWAS_data"}, "created_at": 1757448969.5993583, "relation_name": "\"dbt\".\"main_GWAS_data\".\"GWAS_ftd_family_external_id\"", "raw_code": "{{ config(materialized='table', schema='GWAS_data') }}\n\nselect \nnull::text as \"family_id\",\nnull::text as \"external_id\"", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "target/compiled/ftd/models/GWAS/unharmonized/GWAS_ftd_family_external_id.sql", "compiled": true, "compiled_code": "\n\nselect \nnull::text as \"family_id\",\nnull::text as \"external_id\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GWAS_ftd_family": {"database": "dbt", "schema": "main_GWAS_data", "name": "GWAS_ftd_family", "resource_type": "model", "package_name": "ftd", "path": "GWAS/unharmonized/GWAS_ftd_family.sql", "original_file_path": "models/GWAS/unharmonized/GWAS_ftd_family.sql", "unique_id": "model.ftd.GWAS_ftd_family", "fqn": ["ftd", "GWAS", "unharmonized", "GWAS_ftd_family"], "alias": "GWAS_ftd_family", "checksum": {"name": "sha256", "checksum": "8abf0adc5f460551282227aabbe33d52fee8ae218e2c131a5eb1ef32a1a1e7d6"}, "config": {"enabled": true, "alias": null, "schema": "GWAS_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GWAS_ftd_family.", "columns": {"family_type": {"name": "family_type", "description": "Describes the 'type' of study family, eg, trio.", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "family_description": {"name": "family_description", "description": "Free title describing the study family, such as potential inheritance or details about consanguinity", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "consanguinity": {"name": "consanguinity", "description": "Is there known or suspected consanguinity in this study family?", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "family_study_focus": {"name": "family_study_focus", "description": "What is this study family investigating? EG, a specific condition. The code should be prefixed with a recognizable curie.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GWAS/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GWAS_data"}, "created_at": 1757448969.5893722, "relation_name": "\"dbt\".\"main_GWAS_data\".\"GWAS_ftd_family\"", "raw_code": "{{ config(materialized='table', schema='GWAS_data') }}\n\nselect \nnull::text as \"family_type\",\nnull::text as \"family_description\",\nnull::text as \"consanguinity\",\nnull::text as \"family_study_focus\",\nnull::text as \"has_access_policy\",\nnull::text as \"id\"", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "target/compiled/ftd/models/GWAS/unharmonized/GWAS_ftd_family.sql", "compiled": true, "compiled_code": "\n\nselect \nnull::text as \"family_type\",\nnull::text as \"family_description\",\nnull::text as \"consanguinity\",\nnull::text as \"family_study_focus\",\nnull::text as \"has_access_policy\",\nnull::text as \"id\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GWAS_ftd_demographics_source_data": {"database": "dbt", "schema": "main_GWAS_data", "name": "GWAS_ftd_demographics_source_data", "resource_type": "model", "package_name": "ftd", "path": "GWAS/unharmonized/GWAS_ftd_demographics_source_data.sql", "original_file_path": "models/GWAS/unharmonized/GWAS_ftd_demographics_source_data.sql", "unique_id": "model.ftd.GWAS_ftd_demographics_source_data", "fqn": ["ftd", "GWAS", "unharmonized", "GWAS_ftd_demographics_source_data"], "alias": "GWAS_ftd_demographics_source_data", "checksum": {"name": "sha256", "checksum": "d70e248f582781ba58c43fb2f34a8a53b3076533138654811a055e16d36288c4"}, "config": {"enabled": true, "alias": null, "schema": "GWAS_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GWAS_ftd_demographics_source_data.", "columns": {"demographics_id": {"name": "demographics_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "source_data_id": {"name": "source_data_id", "description": "The sources from which this assertion was derived", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GWAS/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GWAS_data"}, "created_at": 1757448969.5887966, "relation_name": "\"dbt\".\"main_GWAS_data\".\"GWAS_ftd_demographics_source_data\"", "raw_code": "{{ config(materialized='table', schema='GWAS_data') }}\n\nselect \nnull::text as \"demographics_id\",\nnull::text as \"source_data_id\"", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "target/compiled/ftd/models/GWAS/unharmonized/GWAS_ftd_demographics_source_data.sql", "compiled": true, "compiled_code": "\n\nselect \nnull::text as \"demographics_id\",\nnull::text as \"source_data_id\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GWAS_ftd_accesscontrolledrecord": {"database": "dbt", "schema": "main_GWAS_data", "name": "GWAS_ftd_accesscontrolledrecord", "resource_type": "model", "package_name": "ftd", "path": "GWAS/unharmonized/GWAS_ftd_accesscontrolledrecord.sql", "original_file_path": "models/GWAS/unharmonized/GWAS_ftd_accesscontrolledrecord.sql", "unique_id": "model.ftd.GWAS_ftd_accesscontrolledrecord", "fqn": ["ftd", "GWAS", "unharmonized", "GWAS_ftd_accesscontrolledrecord"], "alias": "GWAS_ftd_accesscontrolledrecord", "checksum": {"name": "sha256", "checksum": "228dab5f047f2b0fdf7a984fce075c5b26c252ceb8d09d1e816fae3b2942741f"}, "config": {"enabled": true, "alias": null, "schema": "GWAS_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GWAS_ftd_accesscontrolledrecord.", "columns": {"has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GWAS/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GWAS_data"}, "created_at": 1757448969.5898268, "relation_name": "\"dbt\".\"main_GWAS_data\".\"GWAS_ftd_accesscontrolledrecord\"", "raw_code": "{{ config(materialized='table', schema='GWAS_data') }}\n\nselect \n  null::text as \"has_access_policy\",\n    null::text as \"id\"", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "target/compiled/ftd/models/GWAS/unharmonized/GWAS_ftd_accesscontrolledrecord.sql", "compiled": true, "compiled_code": "\n\nselect \n  null::text as \"has_access_policy\",\n    null::text as \"id\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GWAS_ftd_filemetadata": {"database": "dbt", "schema": "main_GWAS_data", "name": "GWAS_ftd_filemetadata", "resource_type": "model", "package_name": "ftd", "path": "GWAS/unharmonized/GWAS_ftd_filemetadata.sql", "original_file_path": "models/GWAS/unharmonized/GWAS_ftd_filemetadata.sql", "unique_id": "model.ftd.GWAS_ftd_filemetadata", "fqn": ["ftd", "GWAS", "unharmonized", "GWAS_ftd_filemetadata"], "alias": "GWAS_ftd_filemetadata", "checksum": {"name": "sha256", "checksum": "7c53a9daf4ce70169a1740c8987e90d37a38528f03cfaeb1ac878f1666520d80"}, "config": {"enabled": true, "alias": null, "schema": "GWAS_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GWAS_ftd_filemetadata.", "columns": {"code": {"name": "code", "description": "The structured term defining the meaning of the assertion.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "display": {"name": "display", "description": "The friendly display string of the coded term", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "value_code": {"name": "value_code", "description": "The structured term defining the value of the assertion.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "value_display": {"name": "value_display", "description": "The friendly display string of the coded term for the value of the assertion.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GWAS/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GWAS_data"}, "created_at": 1757448969.5930977, "relation_name": "\"dbt\".\"main_GWAS_data\".\"GWAS_ftd_filemetadata\"", "raw_code": "{{ config(materialized='table', schema='GWAS_data') }}\n\nselect \nnull::text as \"code\",\nnull::text as \"display\",\nnull::text as \"value_code\",\nnull::text as \"value_display\",\nnull::text as \"id\"", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "target/compiled/ftd/models/GWAS/unharmonized/GWAS_ftd_filemetadata.sql", "compiled": true, "compiled_code": "\n\nselect \nnull::text as \"code\",\nnull::text as \"display\",\nnull::text as \"value_code\",\nnull::text as \"value_display\",\nnull::text as \"id\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GWAS_ftd_aliquot_external_id": {"database": "dbt", "schema": "main_GWAS_data", "name": "GWAS_ftd_aliquot_external_id", "resource_type": "model", "package_name": "ftd", "path": "GWAS/unharmonized/GWAS_ftd_aliquot_external_id.sql", "original_file_path": "models/GWAS/unharmonized/GWAS_ftd_aliquot_external_id.sql", "unique_id": "model.ftd.GWAS_ftd_aliquot_external_id", "fqn": ["ftd", "GWAS", "unharmonized", "GWAS_ftd_aliquot_external_id"], "alias": "GWAS_ftd_aliquot_external_id", "checksum": {"name": "sha256", "checksum": "d25ec3a63eaba946b29f9be3c44bc965ac3d90198d890f2f3fbe522f0045aa13"}, "config": {"enabled": true, "alias": null, "schema": "GWAS_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GWAS_ftd_aliquot_external_id.", "columns": {"aliquot_id": {"name": "aliquot_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GWAS/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GWAS_data"}, "created_at": 1757448969.604793, "relation_name": "\"dbt\".\"main_GWAS_data\".\"GWAS_ftd_aliquot_external_id\"", "raw_code": "{{ config(materialized='table', schema='GWAS_data') }}\n\nselect \nnull::text as \"aliquot_id\",\nnull::text as \"external_id\"", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "target/compiled/ftd/models/GWAS/unharmonized/GWAS_ftd_aliquot_external_id.sql", "compiled": true, "compiled_code": "\n\nselect \nnull::text as \"aliquot_id\",\nnull::text as \"external_id\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GWAS_ftd_file": {"database": "dbt", "schema": "main_GWAS_data", "name": "GWAS_ftd_file", "resource_type": "model", "package_name": "ftd", "path": "GWAS/unharmonized/GWAS_ftd_file.sql", "original_file_path": "models/GWAS/unharmonized/GWAS_ftd_file.sql", "unique_id": "model.ftd.GWAS_ftd_file", "fqn": ["ftd", "GWAS", "unharmonized", "GWAS_ftd_file"], "alias": "GWAS_ftd_file", "checksum": {"name": "sha256", "checksum": "ac8f931d5a235890c48195f448903d01f64c300dfab4c4cd83b2e56905f7328c"}, "config": {"enabled": true, "alias": null, "schema": "GWAS_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GWAS_ftd_file.", "columns": {"filename": {"name": "filename", "description": "The name of the file.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "format": {"name": "format", "description": "The format of the file.", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "data_type": {"name": "data_type", "description": "The type of data within this file.", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "size": {"name": "size", "description": "Size of the file, in Bytes.", "meta": {}, "data_type": "integer", "constraints": [], "quote": null, "tags": [], "granularity": null}, "drs_uri": {"name": "drs_uri", "description": "DRS location to access the data.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "file_metadata": {"name": "file_metadata", "description": "Additional metadata about the contents of the file, eg, genome reference build.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GWAS/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GWAS_data"}, "created_at": 1757448969.593705, "relation_name": "\"dbt\".\"main_GWAS_data\".\"GWAS_ftd_file\"", "raw_code": "{{ config(materialized='table', schema='GWAS_data') }}\n\nselect \nnull::text as \"filename\",\nnull::text as \"format\",\nnull::text as \"data_type\",\nnull::integer as \"size\",\nnull:text as \"drs_uri\",\nnull::text as \"file_metadata\",\nnull::text as \"has_access_policy\",\nnull::text as \"id\"", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "target/compiled/ftd/models/GWAS/unharmonized/GWAS_ftd_file.sql", "compiled": true, "compiled_code": "\n\nselect \nnull::text as \"filename\",\nnull::text as \"format\",\nnull::text as \"data_type\",\nnull::integer as \"size\",\nnull:text as \"drs_uri\",\nnull::text as \"file_metadata\",\nnull::text as \"has_access_policy\",\nnull::text as \"id\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GWAS_ftd_sourcedata_query_parameter": {"database": "dbt", "schema": "main_GWAS_data", "name": "GWAS_ftd_sourcedata_query_parameter", "resource_type": "model", "package_name": "ftd", "path": "GWAS/unharmonized/GWAS_ftd_sourcedata_query_parameter.sql", "original_file_path": "models/GWAS/unharmonized/GWAS_ftd_sourcedata_query_parameter.sql", "unique_id": "model.ftd.GWAS_ftd_sourcedata_query_parameter", "fqn": ["ftd", "GWAS", "unharmonized", "GWAS_ftd_sourcedata_query_parameter"], "alias": "GWAS_ftd_sourcedata_query_parameter", "checksum": {"name": "sha256", "checksum": "6d720f948c8b3b1fe19f17ed0901ae8292cd62f30110ceb1b829c5aa89c6af74"}, "config": {"enabled": true, "alias": null, "schema": "GWAS_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GWAS_ftd_sourcedata_query_parameter.", "columns": {"sourcedata_id": {"name": "sourcedata_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "query_parameter": {"name": "query_parameter", "description": "One or more query parameters used to select the specific row. It will leverage the parameterized_query defined by a data_source. This should be formatted according to (https://cloud.google.com/bigquery/docs/parameterized-queries)[BigQuery instructions], specifically the bq CLI version with named parameters, ie, \"<parameter name>:<data type>:<value>\".", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GWAS/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GWAS_data"}, "created_at": 1757448969.596091, "relation_name": "\"dbt\".\"main_GWAS_data\".\"GWAS_ftd_sourcedata_query_parameter\"", "raw_code": "{{ config(materialized='table', schema='GWAS_data') }}\n\nselect \nnull::text as \"sourcedata_id\",\nnull::text as \"query_parameter\"", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "target/compiled/ftd/models/GWAS/unharmonized/GWAS_ftd_sourcedata_query_parameter.sql", "compiled": true, "compiled_code": "\n\nselect \nnull::text as \"sourcedata_id\",\nnull::text as \"query_parameter\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GWAS_ftd_subjectassertion_external_id": {"database": "dbt", "schema": "main_GWAS_data", "name": "GWAS_ftd_subjectassertion_external_id", "resource_type": "model", "package_name": "ftd", "path": "GWAS/unharmonized/GWAS_ftd_subjectassertion_external_id.sql", "original_file_path": "models/GWAS/unharmonized/GWAS_ftd_subjectassertion_external_id.sql", "unique_id": "model.ftd.GWAS_ftd_subjectassertion_external_id", "fqn": ["ftd", "GWAS", "unharmonized", "GWAS_ftd_subjectassertion_external_id"], "alias": "GWAS_ftd_subjectassertion_external_id", "checksum": {"name": "sha256", "checksum": "a00f4517185b451d3277cfca23acfaa8cf2e41321f6f356c69d4b83356aa5f37"}, "config": {"enabled": true, "alias": null, "schema": "GWAS_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GWAS_ftd_subjectassertion_external_id.", "columns": {"subjectassertion_id": {"name": "subjectassertion_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GWAS/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GWAS_data"}, "created_at": 1757448969.6032066, "relation_name": "\"dbt\".\"main_GWAS_data\".\"GWAS_ftd_subjectassertion_external_id\"", "raw_code": "{{ config(materialized='table', schema='GWAS_data') }}\n\nselect \nnull::text as \"subjectassertion_id\",\nnull::text as \"external_id\"", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "target/compiled/ftd/models/GWAS/unharmonized/GWAS_ftd_subjectassertion_external_id.sql", "compiled": true, "compiled_code": "\n\nselect \nnull::text as \"subjectassertion_id\",\nnull::text as \"external_id\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GWAS_ftd_sourcedata_external_id": {"database": "dbt", "schema": "main_GWAS_data", "name": "GWAS_ftd_sourcedata_external_id", "resource_type": "model", "package_name": "ftd", "path": "GWAS/unharmonized/GWAS_ftd_sourcedata_external_id.sql", "original_file_path": "models/GWAS/unharmonized/GWAS_ftd_sourcedata_external_id.sql", "unique_id": "model.ftd.GWAS_ftd_sourcedata_external_id", "fqn": ["ftd", "GWAS", "unharmonized", "GWAS_ftd_sourcedata_external_id"], "alias": "GWAS_ftd_sourcedata_external_id", "checksum": {"name": "sha256", "checksum": "ab312b042cc5f807c10633ced085c68f5b01f4a1956b1901a33c75fdb4dda49b"}, "config": {"enabled": true, "alias": null, "schema": "GWAS_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GWAS_ftd_sourcedata_external_id.", "columns": {"sourcedata_id": {"name": "sourcedata_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GWAS/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GWAS_data"}, "created_at": 1757448969.6094744, "relation_name": "\"dbt\".\"main_GWAS_data\".\"GWAS_ftd_sourcedata_external_id\"", "raw_code": "{{ config(materialized='table', schema='GWAS_data') }}\n\nselect \nnull::text as \"sourcedata_id\",\nnull::text as \"external_id\"", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "target/compiled/ftd/models/GWAS/unharmonized/GWAS_ftd_sourcedata_external_id.sql", "compiled": true, "compiled_code": "\n\nselect \nnull::text as \"sourcedata_id\",\nnull::text as \"external_id\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GWAS_ftd_family_family_relationships": {"database": "dbt", "schema": "main_GWAS_data", "name": "GWAS_ftd_family_family_relationships", "resource_type": "model", "package_name": "ftd", "path": "GWAS/unharmonized/GWAS_ftd_family_family_relationships.sql", "original_file_path": "models/GWAS/unharmonized/GWAS_ftd_family_family_relationships.sql", "unique_id": "model.ftd.GWAS_ftd_family_family_relationships", "fqn": ["ftd", "GWAS", "unharmonized", "GWAS_ftd_family_family_relationships"], "alias": "GWAS_ftd_family_family_relationships", "checksum": {"name": "sha256", "checksum": "2fe5feca37d701a3229ba22f1a566f31de89c209813096a7be60eafc1b0f4683"}, "config": {"enabled": true, "alias": null, "schema": "GWAS_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GWAS_ftd_family_family_relationships.", "columns": {"family_id": {"name": "family_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "family_relationships_id": {"name": "family_relationships_id", "description": "Family relationships associated with this family.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GWAS/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GWAS_data"}, "created_at": 1757448969.5980358, "relation_name": "\"dbt\".\"main_GWAS_data\".\"GWAS_ftd_family_family_relationships\"", "raw_code": "{{ config(materialized='table', schema='GWAS_data') }}\n\nselect \nnull::text as \"family_id\",\nnull::text as \"family_relationships_id\"", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "target/compiled/ftd/models/GWAS/unharmonized/GWAS_ftd_family_family_relationships.sql", "compiled": true, "compiled_code": "\n\nselect \nnull::text as \"family_id\",\nnull::text as \"family_relationships_id\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GWAS_ftd_aliquot": {"database": "dbt", "schema": "main_GWAS_data", "name": "GWAS_ftd_aliquot", "resource_type": "model", "package_name": "ftd", "path": "GWAS/unharmonized/GWAS_ftd_aliquot.sql", "original_file_path": "models/GWAS/unharmonized/GWAS_ftd_aliquot.sql", "unique_id": "model.ftd.GWAS_ftd_aliquot", "fqn": ["ftd", "GWAS", "unharmonized", "GWAS_ftd_aliquot"], "alias": "GWAS_ftd_aliquot", "checksum": {"name": "sha256", "checksum": "2b3f5df6b4fd49d8aee4671a4e1d50a7456c28ff6ef5c8f934506509e8464d68"}, "config": {"enabled": true, "alias": null, "schema": "GWAS_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GWAS_ftd_aliquot.", "columns": {"availablity_status": {"name": "availablity_status", "description": "Can this Sample be requested for further analysis?", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "quantity_number": {"name": "quantity_number", "description": "The total quantity of the specimen", "meta": {}, "data_type": "number", "constraints": [], "quote": null, "tags": [], "granularity": null}, "quantity_units": {"name": "quantity_units", "description": "The structured term defining the units of the quantity.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "concentration_number": {"name": "concentration_number", "description": "What is the concentration of the analyte in the Aliquot?", "meta": {}, "data_type": "number", "constraints": [], "quote": null, "tags": [], "granularity": null}, "concentration_unit": {"name": "concentration_unit", "description": "Units associated with the concentration of the analyte in the Aliquot? UCUM coding preferred (with curie, UCUM)", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "sample_id": {"name": "sample_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GWAS/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GWAS_data"}, "created_at": 1757448969.6004043, "relation_name": "\"dbt\".\"main_GWAS_data\".\"GWAS_ftd_aliquot\"", "raw_code": "{{ config(materialized='table', schema='GWAS_data') }}\n\nselect \nnull::text as \"availablity_status\",\nnull::text as \"quantity_number\",\nnull::text as \"quantity_units\",\nnull::text as \"concentration_number\",\nnull::text as \"concentration_unit\",\nnull::text as \"has_access_policy\",\nnull::text as \"id\",\nnull::text as \"sample_id\"", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "target/compiled/ftd/models/GWAS/unharmonized/GWAS_ftd_aliquot.sql", "compiled": true, "compiled_code": "\n\nselect \nnull::text as \"availablity_status\",\nnull::text as \"quantity_number\",\nnull::text as \"quantity_units\",\nnull::text as \"concentration_number\",\nnull::text as \"concentration_unit\",\nnull::text as \"has_access_policy\",\nnull::text as \"id\",\nnull::text as \"sample_id\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GWAS_ftd_biospecimencollection_external_id": {"database": "dbt", "schema": "main_GWAS_data", "name": "GWAS_ftd_biospecimencollection_external_id", "resource_type": "model", "package_name": "ftd", "path": "GWAS/unharmonized/GWAS_ftd_biospecimencollection_external_id.sql", "original_file_path": "models/GWAS/unharmonized/GWAS_ftd_biospecimencollection_external_id.sql", "unique_id": "model.ftd.GWAS_ftd_biospecimencollection_external_id", "fqn": ["ftd", "GWAS", "unharmonized", "GWAS_ftd_biospecimencollection_external_id"], "alias": "GWAS_ftd_biospecimencollection_external_id", "checksum": {"name": "sha256", "checksum": "ed6d1a97c19a2d95a7ce2dbf0de01b775ece980de51dbfff97b2cb573ea90906"}, "config": {"enabled": true, "alias": null, "schema": "GWAS_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GWAS_ftd_biospecimencollection_external_id.", "columns": {"biospecimencollection_id": {"name": "biospecimencollection_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GWAS/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GWAS_data"}, "created_at": 1757448969.5902624, "relation_name": "\"dbt\".\"main_GWAS_data\".\"GWAS_ftd_biospecimencollection_external_id\"", "raw_code": "{{ config(materialized='table', schema='GWAS_data') }}\n\nselect \nnull::text as \"biospecimencollection_id\",\nnull::text as \"external_id\"", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "target/compiled/ftd/models/GWAS/unharmonized/GWAS_ftd_biospecimencollection_external_id.sql", "compiled": true, "compiled_code": "\n\nselect \nnull::text as \"biospecimencollection_id\",\nnull::text as \"external_id\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GWAS_ftd_datasource": {"database": "dbt", "schema": "main_GWAS_data", "name": "GWAS_ftd_datasource", "resource_type": "model", "package_name": "ftd", "path": "GWAS/unharmonized/GWAS_ftd_datasource.sql", "original_file_path": "models/GWAS/unharmonized/GWAS_ftd_datasource.sql", "unique_id": "model.ftd.GWAS_ftd_datasource", "fqn": ["ftd", "GWAS", "unharmonized", "GWAS_ftd_datasource"], "alias": "GWAS_ftd_datasource", "checksum": {"name": "sha256", "checksum": "4acb3385e4198dce4222451cca20678bb62aa47dee6622ca1fa69f5a7589fda7"}, "config": {"enabled": true, "alias": null, "schema": "GWAS_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GWAS_ftd_datasource.", "columns": {"snapshot_id": {"name": "snapshot_id", "description": "The Terra Data Repository Snapshot ID.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "google_data_project": {"name": "google_data_project", "description": "The Google Data Project needed to query this snapshot in BigQuery.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "snapshot_dataset": {"name": "snapshot_dataset", "description": "The Dataset within BigQuery where the table can be queried.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "table": {"name": "table", "description": "The table in the dataset that contains the row of interest.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "parameterized_query": {"name": "parameterized_query", "description": "A parameterized query that contains the primary key fields and can be used to select specific rows. This should be formatted according to (https://cloud.google.com/bigquery/docs/parameterized-queries)[BigQuery instructions], including using named parameters.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GWAS/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GWAS_data"}, "created_at": 1757448969.5907724, "relation_name": "\"dbt\".\"main_GWAS_data\".\"GWAS_ftd_datasource\"", "raw_code": "{{ config(materialized='table', schema='GWAS_data') }}\n\nselect \nnull::text as \"snapshot_id\",\nnull::text as \"google_data_project\",\nnull::text as \"snapshot_dataset\",\nnull::text as \"table\",\nnull::text as \"parameterized_query\",\nnull::text as \"id\"", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "target/compiled/ftd/models/GWAS/unharmonized/GWAS_ftd_datasource.sql", "compiled": true, "compiled_code": "\n\nselect \nnull::text as \"snapshot_id\",\nnull::text as \"google_data_project\",\nnull::text as \"snapshot_dataset\",\nnull::text as \"table\",\nnull::text as \"parameterized_query\",\nnull::text as \"id\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GWAS_ftd_sample_storage_method": {"database": "dbt", "schema": "main_GWAS_data", "name": "GWAS_ftd_sample_storage_method", "resource_type": "model", "package_name": "ftd", "path": "GWAS/unharmonized/GWAS_ftd_sample_storage_method.sql", "original_file_path": "models/GWAS/unharmonized/GWAS_ftd_sample_storage_method.sql", "unique_id": "model.ftd.GWAS_ftd_sample_storage_method", "fqn": ["ftd", "GWAS", "unharmonized", "GWAS_ftd_sample_storage_method"], "alias": "GWAS_ftd_sample_storage_method", "checksum": {"name": "sha256", "checksum": "13e1b2b325a9bfc3901d629c0b68aab7d8c94f6cc682de90b837cb98a57b55ab"}, "config": {"enabled": true, "alias": null, "schema": "GWAS_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GWAS_ftd_sample_storage_method.", "columns": {"sample_id": {"name": "sample_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "storage_method": {"name": "storage_method", "description": "Sample storage method, eg, Frozen or with additives", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GWAS/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GWAS_data"}, "created_at": 1757448969.5965848, "relation_name": "\"dbt\".\"main_GWAS_data\".\"GWAS_ftd_sample_storage_method\"", "raw_code": "{{ config(materialized='table', schema='GWAS_data') }}\n\nselect \nnull::text as \"sample_id\",\nnull::text as \"storage_method\"", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "target/compiled/ftd/models/GWAS/unharmonized/GWAS_ftd_sample_storage_method.sql", "compiled": true, "compiled_code": "\n\nselect \nnull::text as \"sample_id\",\nnull::text as \"storage_method\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GWAS_ftd_study_external_id": {"database": "dbt", "schema": "main_GWAS_data", "name": "GWAS_ftd_study_external_id", "resource_type": "model", "package_name": "ftd", "path": "GWAS/unharmonized/GWAS_ftd_study_external_id.sql", "original_file_path": "models/GWAS/unharmonized/GWAS_ftd_study_external_id.sql", "unique_id": "model.ftd.GWAS_ftd_study_external_id", "fqn": ["ftd", "GWAS", "unharmonized", "GWAS_ftd_study_external_id"], "alias": "GWAS_ftd_study_external_id", "checksum": {"name": "sha256", "checksum": "62f995d35a7d31c6d2cbe9b1a90793e175db5f8239990f236399bcbf5320b193"}, "config": {"enabled": true, "alias": null, "schema": "GWAS_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GWAS_ftd_study_external_id.", "columns": {"study_id": {"name": "study_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GWAS/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GWAS_data"}, "created_at": 1757448969.6103797, "relation_name": "\"dbt\".\"main_GWAS_data\".\"GWAS_ftd_study_external_id\"", "raw_code": "{{ config(materialized='table', schema='GWAS_data') }}\n\nselect \nnull::text as \"study_id\",\nnull::text as \"external_id\"", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "target/compiled/ftd/models/GWAS/unharmonized/GWAS_ftd_study_external_id.sql", "compiled": true, "compiled_code": "\n\nselect \nnull::text as \"study_id\",\nnull::text as \"external_id\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GWAS_ftd_sample_processing": {"database": "dbt", "schema": "main_GWAS_data", "name": "GWAS_ftd_sample_processing", "resource_type": "model", "package_name": "ftd", "path": "GWAS/unharmonized/GWAS_ftd_sample_processing.sql", "original_file_path": "models/GWAS/unharmonized/GWAS_ftd_sample_processing.sql", "unique_id": "model.ftd.GWAS_ftd_sample_processing", "fqn": ["ftd", "GWAS", "unharmonized", "GWAS_ftd_sample_processing"], "alias": "GWAS_ftd_sample_processing", "checksum": {"name": "sha256", "checksum": "e6dc527f88dc6535f217656c9274e2b956ebd61c5e96ad889034dd2012bba277"}, "config": {"enabled": true, "alias": null, "schema": "GWAS_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GWAS_ftd_sample_processing.", "columns": {"sample_id": {"name": "sample_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "processing": {"name": "processing", "description": "Processing that was applied to the Parent Sample or from the Biospecimen Collection that yielded this distinct sample", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GWAS/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GWAS_data"}, "created_at": 1757448969.5941193, "relation_name": "\"dbt\".\"main_GWAS_data\".\"GWAS_ftd_sample_processing\"", "raw_code": "{{ config(materialized='table', schema='GWAS_data') }}\n\nselect \nnull::text as \"sample_id\",\nnull::text as \"processing\"", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "target/compiled/ftd/models/GWAS/unharmonized/GWAS_ftd_sample_processing.sql", "compiled": true, "compiled_code": "\n\nselect \nnull::text as \"sample_id\",\nnull::text as \"processing\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GWAS_ftd_sourcedata": {"database": "dbt", "schema": "main_GWAS_data", "name": "GWAS_ftd_sourcedata", "resource_type": "model", "package_name": "ftd", "path": "GWAS/unharmonized/GWAS_ftd_sourcedata.sql", "original_file_path": "models/GWAS/unharmonized/GWAS_ftd_sourcedata.sql", "unique_id": "model.ftd.GWAS_ftd_sourcedata", "fqn": ["ftd", "GWAS", "unharmonized", "GWAS_ftd_sourcedata"], "alias": "GWAS_ftd_sourcedata", "checksum": {"name": "sha256", "checksum": "2ba333ff8b22b077a8c05edbde18541b99ce1776f33b580af872939e3251fedb"}, "config": {"enabled": true, "alias": null, "schema": "GWAS_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GWAS_ftd_sourcedata.", "columns": {"data_source": {"name": "data_source", "description": "Defines the location of data and how to query it.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GWAS/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GWAS_data"}, "created_at": 1757448969.6090524, "relation_name": "\"dbt\".\"main_GWAS_data\".\"GWAS_ftd_sourcedata\"", "raw_code": "{{ config(materialized='table', schema='GWAS_data') }}\n\nselect \nnull::text as \"data_source\",\nnull::text as \"has_access_policy\",\nnull::text as \"id\"", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "target/compiled/ftd/models/GWAS/unharmonized/GWAS_ftd_sourcedata.sql", "compiled": true, "compiled_code": "\n\nselect \nnull::text as \"data_source\",\nnull::text as \"has_access_policy\",\nnull::text as \"id\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GWAS_ftd_datasource_external_id": {"database": "dbt", "schema": "main_GWAS_data", "name": "GWAS_ftd_datasource_external_id", "resource_type": "model", "package_name": "ftd", "path": "GWAS/unharmonized/GWAS_ftd_datasource_external_id.sql", "original_file_path": "models/GWAS/unharmonized/GWAS_ftd_datasource_external_id.sql", "unique_id": "model.ftd.GWAS_ftd_datasource_external_id", "fqn": ["ftd", "GWAS", "unharmonized", "GWAS_ftd_datasource_external_id"], "alias": "GWAS_ftd_datasource_external_id", "checksum": {"name": "sha256", "checksum": "c2c7aed0f09cc3caec17a7fd395f5a6a660fb0567da0fe75f2adef746eb00cdb"}, "config": {"enabled": true, "alias": null, "schema": "GWAS_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GWAS_ftd_datasource_external_id.", "columns": {"datasource_id": {"name": "datasource_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GWAS/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GWAS_data"}, "created_at": 1757448969.5875554, "relation_name": "\"dbt\".\"main_GWAS_data\".\"GWAS_ftd_datasource_external_id\"", "raw_code": "{{ config(materialized='table', schema='GWAS_data') }}\n\nselect \n null::text as \"datasource_id\",\n null::text as \"external_id\"", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "target/compiled/ftd/models/GWAS/unharmonized/GWAS_ftd_datasource_external_id.sql", "compiled": true, "compiled_code": "\n\nselect \n null::text as \"datasource_id\",\n null::text as \"external_id\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GWAS_ftd_filemetadata_external_id": {"database": "dbt", "schema": "main_GWAS_data", "name": "GWAS_ftd_filemetadata_external_id", "resource_type": "model", "package_name": "ftd", "path": "GWAS/unharmonized/GWAS_ftd_filemetadata_external_id.sql", "original_file_path": "models/GWAS/unharmonized/GWAS_ftd_filemetadata_external_id.sql", "unique_id": "model.ftd.GWAS_ftd_filemetadata_external_id", "fqn": ["ftd", "GWAS", "unharmonized", "GWAS_ftd_filemetadata_external_id"], "alias": "GWAS_ftd_filemetadata_external_id", "checksum": {"name": "sha256", "checksum": "33b4e6fb9c868840b722e22aa28c8b359cb485d197000a5dc749847ad476ec33"}, "config": {"enabled": true, "alias": null, "schema": "GWAS_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GWAS_ftd_filemetadata_external_id.", "columns": {"filemetadata_id": {"name": "filemetadata_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GWAS/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GWAS_data"}, "created_at": 1757448969.5950272, "relation_name": "\"dbt\".\"main_GWAS_data\".\"GWAS_ftd_filemetadata_external_id\"", "raw_code": "{{ config(materialized='table', schema='GWAS_data') }}\n\nselect \nnull::text as \"filemetadata_id\",\nnull::text as \"external_id\"", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "target/compiled/ftd/models/GWAS/unharmonized/GWAS_ftd_filemetadata_external_id.sql", "compiled": true, "compiled_code": "\n\nselect \nnull::text as \"filemetadata_id\",\nnull::text as \"external_id\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GWAS_ftd_file_sample": {"database": "dbt", "schema": "main_GWAS_data", "name": "GWAS_ftd_file_sample", "resource_type": "model", "package_name": "ftd", "path": "GWAS/unharmonized/GWAS_ftd_file_sample.sql", "original_file_path": "models/GWAS/unharmonized/GWAS_ftd_file_sample.sql", "unique_id": "model.ftd.GWAS_ftd_file_sample", "fqn": ["ftd", "GWAS", "unharmonized", "GWAS_ftd_file_sample"], "alias": "GWAS_ftd_file_sample", "checksum": {"name": "sha256", "checksum": "93941724173b4450f4874f1fe2201bfe2abec68214eb8f4a3d73436a36c45745"}, "config": {"enabled": true, "alias": null, "schema": "GWAS_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GWAS_ftd_file_sample.", "columns": {"file_id": {"name": "file_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "sample_id": {"name": "sample_id", "description": "The Samples(s) used to generate data in this file.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GWAS/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GWAS_data"}, "created_at": 1757448969.5945895, "relation_name": "\"dbt\".\"main_GWAS_data\".\"GWAS_ftd_file_sample\"", "raw_code": "{{ config(materialized='table', schema='GWAS_data') }}\n\nselect \nnull::text as \"file_id\",\nnull::text as \"sample_id\"", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "target/compiled/ftd/models/GWAS/unharmonized/GWAS_ftd_file_sample.sql", "compiled": true, "compiled_code": "\n\nselect \nnull::text as \"file_id\",\nnull::text as \"sample_id\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GWAS_ftd_subjectassertion_source_data": {"database": "dbt", "schema": "main_GWAS_data", "name": "GWAS_ftd_subjectassertion_source_data", "resource_type": "model", "package_name": "ftd", "path": "GWAS/unharmonized/GWAS_ftd_subjectassertion_source_data.sql", "original_file_path": "models/GWAS/unharmonized/GWAS_ftd_subjectassertion_source_data.sql", "unique_id": "model.ftd.GWAS_ftd_subjectassertion_source_data", "fqn": ["ftd", "GWAS", "unharmonized", "GWAS_ftd_subjectassertion_source_data"], "alias": "GWAS_ftd_subjectassertion_source_data", "checksum": {"name": "sha256", "checksum": "c4631cfc752f8e6a80c70f2ec3a4d2073623fa3208468b0ce24fd3881b004666"}, "config": {"enabled": true, "alias": null, "schema": "GWAS_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GWAS_ftd_subjectassertion_source_data.", "columns": {"subjectassertion_id": {"name": "subjectassertion_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "source_data_id": {"name": "source_data_id", "description": "The sources from which this assertion was derived", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GWAS/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GWAS_data"}, "created_at": 1757448969.6071248, "relation_name": "\"dbt\".\"main_GWAS_data\".\"GWAS_ftd_subjectassertion_source_data\"", "raw_code": "{{ config(materialized='table', schema='GWAS_data') }}\n\nselect \nnull::text as \"subjectassertion_id\",\nnull::text as \"source_data_id\"", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "target/compiled/ftd/models/GWAS/unharmonized/GWAS_ftd_subjectassertion_source_data.sql", "compiled": true, "compiled_code": "\n\nselect \nnull::text as \"subjectassertion_id\",\nnull::text as \"source_data_id\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.GWAS_ftd_study_funding_source": {"database": "dbt", "schema": "main_GWAS_data", "name": "GWAS_ftd_study_funding_source", "resource_type": "model", "package_name": "ftd", "path": "GWAS/unharmonized/GWAS_ftd_study_funding_source.sql", "original_file_path": "models/GWAS/unharmonized/GWAS_ftd_study_funding_source.sql", "unique_id": "model.ftd.GWAS_ftd_study_funding_source", "fqn": ["ftd", "GWAS", "unharmonized", "GWAS_ftd_study_funding_source"], "alias": "GWAS_ftd_study_funding_source", "checksum": {"name": "sha256", "checksum": "3f162442735785bcecb9b9426303d12638923bf7c26a7ebb009fefa4e4b02aaf"}, "config": {"enabled": true, "alias": null, "schema": "GWAS_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for GWAS_ftd_study_funding_source.", "columns": {"study_id": {"name": "study_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "funding_source": {"name": "funding_source", "description": "Funding Source", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/GWAS/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "GWAS_data"}, "created_at": 1757448969.5989182, "relation_name": "\"dbt\".\"main_GWAS_data\".\"GWAS_ftd_study_funding_source\"", "raw_code": "{{ config(materialized='table', schema='GWAS_data') }}\n\nselect \nnull::text as \"study_id\",\nnull::text as \"funding_source\"", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "target/compiled/ftd/models/GWAS/unharmonized/GWAS_ftd_study_funding_source.sql", "compiled": true, "compiled_code": "\n\nselect \nnull::text as \"study_id\",\nnull::text as \"funding_source\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.gregor_synthetic_ftd_thing_external_id": {"database": "dbt", "schema": "main_gregor_synthetic_data", "name": "gregor_synthetic_ftd_thing_external_id", "resource_type": "model", "package_name": "ftd", "path": "gregor_synthetic/gregor_synthetic_ftd_thing_external_id.sql", "original_file_path": "models/gregor_synthetic/gregor_synthetic_ftd_thing_external_id.sql", "unique_id": "model.ftd.gregor_synthetic_ftd_thing_external_id", "fqn": ["ftd", "gregor_synthetic", "gregor_synthetic_ftd_thing_external_id"], "alias": "gregor_synthetic_ftd_thing_external_id", "checksum": {"name": "sha256", "checksum": "d6a4dc159a4d4936b511b9dfb49fc8152067e0b8587cb7841ad250dbb0af0cfd"}, "config": {"enabled": true, "alias": null, "schema": "gregor_synthetic_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for gregor_synthetic_ftd_thing_external_id.", "columns": {"thing_id": {"name": "thing_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/gregor_synthetic/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "gregor_synthetic_data"}, "created_at": 1757448969.7182252, "relation_name": "\"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_thing_external_id\"", "raw_code": "{{ config(materialized='table', schema='gregor_synthetic_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='gregor_synthetic') }}::text as \"thing_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from {{ ref('gregor_synthetic_stg_participant') }} as participant\n        join {{ ref('gregor_synthetic_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "gregor_synthetic_stg_participant", "package": null, "version": null}, {"name": "gregor_synthetic_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/gregor_synthetic_ftd_thing_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(, '') as text))::text as \"thing_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"gregor_synthetic_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"gregor_synthetic_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.gregor_synthetic_ftd_study_external_id": {"database": "dbt", "schema": "main_gregor_synthetic_data", "name": "gregor_synthetic_ftd_study_external_id", "resource_type": "model", "package_name": "ftd", "path": "gregor_synthetic/gregor_synthetic_ftd_study_external_id.sql", "original_file_path": "models/gregor_synthetic/gregor_synthetic_ftd_study_external_id.sql", "unique_id": "model.ftd.gregor_synthetic_ftd_study_external_id", "fqn": ["ftd", "gregor_synthetic", "gregor_synthetic_ftd_study_external_id"], "alias": "gregor_synthetic_ftd_study_external_id", "checksum": {"name": "sha256", "checksum": "8dad84cbef485e4c70a71f19339dad232513dec60cf4ddc8ac65d5ccc51693ee"}, "config": {"enabled": true, "alias": null, "schema": "gregor_synthetic_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for gregor_synthetic_ftd_study_external_id.", "columns": {"study_id": {"name": "study_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/gregor_synthetic/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "gregor_synthetic_data"}, "created_at": 1757448969.7111614, "relation_name": "\"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_study_external_id\"", "raw_code": "{{ config(materialized='table', schema='gregor_synthetic_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='gregor_synthetic') }}::text as \"study_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from {{ ref('gregor_synthetic_stg_participant') }} as participant\n        join {{ ref('gregor_synthetic_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "gregor_synthetic_stg_participant", "package": null, "version": null}, {"name": "gregor_synthetic_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/gregor_synthetic_ftd_study_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(, '') as text))::text as \"study_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"gregor_synthetic_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"gregor_synthetic_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.gregor_synthetic_ftd_familymember_external_id": {"database": "dbt", "schema": "main_gregor_synthetic_data", "name": "gregor_synthetic_ftd_familymember_external_id", "resource_type": "model", "package_name": "ftd", "path": "gregor_synthetic/gregor_synthetic_ftd_familymember_external_id.sql", "original_file_path": "models/gregor_synthetic/gregor_synthetic_ftd_familymember_external_id.sql", "unique_id": "model.ftd.gregor_synthetic_ftd_familymember_external_id", "fqn": ["ftd", "gregor_synthetic", "gregor_synthetic_ftd_familymember_external_id"], "alias": "gregor_synthetic_ftd_familymember_external_id", "checksum": {"name": "sha256", "checksum": "3295cb71912bc13e377fa70cb6cd6e77e45cccb0aac03876e9a7da672237701b"}, "config": {"enabled": true, "alias": null, "schema": "gregor_synthetic_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for gregor_synthetic_ftd_familymember_external_id.", "columns": {"familymember_id": {"name": "familymember_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/gregor_synthetic/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "gregor_synthetic_data"}, "created_at": 1757448969.7240875, "relation_name": "\"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_familymember_external_id\"", "raw_code": "{{ config(materialized='table', schema='gregor_synthetic_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='fm',descriptor=['participant.participant_id'], study_id='gregor_synthetic') }}::text as \"familyMember_id\",\n        participant.participant_id::text as \"external_id\"\n        from {{ ref('gregor_synthetic_stg_participant') }} as participant\n        join {{ ref('gregor_synthetic_stg_phenotype') }} as phenotype\n        on participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "gregor_synthetic_stg_participant", "package": null, "version": null}, {"name": "gregor_synthetic_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/gregor_synthetic_ftd_familymember_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        'fm' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(participant.participant_id, '') as text))::text as \"familyMember_id\",\n        participant.participant_id::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"gregor_synthetic_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"gregor_synthetic_stg_phenotype\" as phenotype\n        on participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.gregor_synthetic_ftd_biospecimencollection_external_id": {"database": "dbt", "schema": "main_gregor_synthetic_data", "name": "gregor_synthetic_ftd_biospecimencollection_external_id", "resource_type": "model", "package_name": "ftd", "path": "gregor_synthetic/gregor_synthetic_ftd_biospecimencollection_external_id.sql", "original_file_path": "models/gregor_synthetic/gregor_synthetic_ftd_biospecimencollection_external_id.sql", "unique_id": "model.ftd.gregor_synthetic_ftd_biospecimencollection_external_id", "fqn": ["ftd", "gregor_synthetic", "gregor_synthetic_ftd_biospecimencollection_external_id"], "alias": "gregor_synthetic_ftd_biospecimencollection_external_id", "checksum": {"name": "sha256", "checksum": "d8ab51a2524e72989ae499aa570e4b36f502b59ed50c87bed48e6e76d5f9a6f1"}, "config": {"enabled": true, "alias": null, "schema": "gregor_synthetic_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for gregor_synthetic_ftd_biospecimencollection_external_id.", "columns": {"biospecimencollection_id": {"name": "biospecimencollection_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/gregor_synthetic/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "gregor_synthetic_data"}, "created_at": 1757448969.7154691, "relation_name": "\"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_biospecimencollection_external_id\"", "raw_code": "{{ config(materialized='table', schema='gregor_synthetic_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='gregor_synthetic') }}::text as \"biospecimencollection_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from {{ ref('gregor_synthetic_stg_participant') }} as participant\n        join {{ ref('gregor_synthetic_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "gregor_synthetic_stg_participant", "package": null, "version": null}, {"name": "gregor_synthetic_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/gregor_synthetic_ftd_biospecimencollection_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(, '') as text))::text as \"biospecimencollection_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"gregor_synthetic_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"gregor_synthetic_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.gregor_synthetic_ftd_accesscontrolledrecord": {"database": "dbt", "schema": "main_gregor_synthetic_data", "name": "gregor_synthetic_ftd_accesscontrolledrecord", "resource_type": "model", "package_name": "ftd", "path": "gregor_synthetic/gregor_synthetic_ftd_accesscontrolledrecord.sql", "original_file_path": "models/gregor_synthetic/gregor_synthetic_ftd_accesscontrolledrecord.sql", "unique_id": "model.ftd.gregor_synthetic_ftd_accesscontrolledrecord", "fqn": ["ftd", "gregor_synthetic", "gregor_synthetic_ftd_accesscontrolledrecord"], "alias": "gregor_synthetic_ftd_accesscontrolledrecord", "checksum": {"name": "sha256", "checksum": "f9dff8986e925106b6f0441088247668fe06e294ed7d4bb162762a7a79386431"}, "config": {"enabled": true, "alias": null, "schema": "gregor_synthetic_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for gregor_synthetic_ftd_accesscontrolledrecord.", "columns": {"has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/gregor_synthetic/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "gregor_synthetic_data"}, "created_at": 1757448969.7227266, "relation_name": "\"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_accesscontrolledrecord\"", "raw_code": "{{ config(materialized='table', schema='gregor_synthetic_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='gregor_synthetic') }}::text as \"has_access_policy\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='gregor_synthetic') }}::text as \"id\"\n        from {{ ref('gregor_synthetic_stg_participant') }} as participant\n        join {{ ref('gregor_synthetic_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "gregor_synthetic_stg_participant", "package": null, "version": null}, {"name": "gregor_synthetic_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/gregor_synthetic_ftd_accesscontrolledrecord.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(, '') as text))::text as \"has_access_policy\",\n       '' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(, '') as text))::text as \"id\"\n        from \"dbt\".\"main_main\".\"gregor_synthetic_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"gregor_synthetic_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.gregor_synthetic_ftd_demographics_source_data": {"database": "dbt", "schema": "main_gregor_synthetic_data", "name": "gregor_synthetic_ftd_demographics_source_data", "resource_type": "model", "package_name": "ftd", "path": "gregor_synthetic/gregor_synthetic_ftd_demographics_source_data.sql", "original_file_path": "models/gregor_synthetic/gregor_synthetic_ftd_demographics_source_data.sql", "unique_id": "model.ftd.gregor_synthetic_ftd_demographics_source_data", "fqn": ["ftd", "gregor_synthetic", "gregor_synthetic_ftd_demographics_source_data"], "alias": "gregor_synthetic_ftd_demographics_source_data", "checksum": {"name": "sha256", "checksum": "1860b4fe7667f6edd1a38b4247ef8e3c2ed1499053dbeaebdf06eaa639379951"}, "config": {"enabled": true, "alias": null, "schema": "gregor_synthetic_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for gregor_synthetic_ftd_demographics_source_data.", "columns": {"demographics_id": {"name": "demographics_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "source_data_id": {"name": "source_data_id", "description": "The sources from which this assertion was derived", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/gregor_synthetic/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "gregor_synthetic_data"}, "created_at": 1757448969.7163227, "relation_name": "\"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_demographics_source_data\"", "raw_code": "{{ config(materialized='table', schema='gregor_synthetic_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='gregor_synthetic') }}::text as \"demographics_id\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='gregor_synthetic') }}::text as \"source_data_id\"\n        from {{ ref('gregor_synthetic_stg_participant') }} as participant\n        join {{ ref('gregor_synthetic_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "gregor_synthetic_stg_participant", "package": null, "version": null}, {"name": "gregor_synthetic_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/gregor_synthetic_ftd_demographics_source_data.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(, '') as text))::text as \"demographics_id\",\n       '' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(, '') as text))::text as \"source_data_id\"\n        from \"dbt\".\"main_main\".\"gregor_synthetic_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"gregor_synthetic_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.gregor_synthetic_ftd_sourcedata": {"database": "dbt", "schema": "main_gregor_synthetic_data", "name": "gregor_synthetic_ftd_sourcedata", "resource_type": "model", "package_name": "ftd", "path": "gregor_synthetic/gregor_synthetic_ftd_sourcedata.sql", "original_file_path": "models/gregor_synthetic/gregor_synthetic_ftd_sourcedata.sql", "unique_id": "model.ftd.gregor_synthetic_ftd_sourcedata", "fqn": ["ftd", "gregor_synthetic", "gregor_synthetic_ftd_sourcedata"], "alias": "gregor_synthetic_ftd_sourcedata", "checksum": {"name": "sha256", "checksum": "1a2b6aecb7f61d9b039290b49cc4a051cec3611052f04a275dd995b7887c3783"}, "config": {"enabled": true, "alias": null, "schema": "gregor_synthetic_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for gregor_synthetic_ftd_sourcedata.", "columns": {"code": {"name": "code", "description": "The structured term defining the meaning of the assertion.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "display": {"name": "display", "description": "The friendly display string of the coded term", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "value_code": {"name": "value_code", "description": "The structured term defining the value of the assertion.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "value_display": {"name": "value_display", "description": "The friendly display string of the coded term for the value of the assertion.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "value_number": {"name": "value_number", "description": "The numeric value of the assertion.", "meta": {}, "data_type": "number", "constraints": [], "quote": null, "tags": [], "granularity": null}, "value_units": {"name": "value_units", "description": "The structured term defining the units of the value.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "value_units_display": {"name": "value_units_display", "description": "The friendly display string of units of the value.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/gregor_synthetic/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "gregor_synthetic_data"}, "created_at": 1757448969.7117856, "relation_name": "\"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_sourcedata\"", "raw_code": "{{ config(materialized='table', schema='gregor_synthetic_data') }}\n\n    with source as (\n        select \n        GEN_UNKNOWN.code::text as \"code\",\n       GEN_UNKNOWN.display::text as \"display\",\n       GEN_UNKNOWN.value_code::text as \"value_code\",\n       GEN_UNKNOWN.value_display::text as \"value_display\",\n       GEN_UNKNOWN.value_number::text as \"value_number\",\n       GEN_UNKNOWN.value_units::text as \"value_units\",\n       GEN_UNKNOWN.value_units_display::text as \"value_units_display\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='gregor_synthetic') }}::text as \"has_access_policy\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='gregor_synthetic') }}::text as \"id\"\n        from {{ ref('gregor_synthetic_stg_participant') }} as participant\n        join {{ ref('gregor_synthetic_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "gregor_synthetic_stg_participant", "package": null, "version": null}, {"name": "gregor_synthetic_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/gregor_synthetic_ftd_sourcedata.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        GEN_UNKNOWN.code::text as \"code\",\n       GEN_UNKNOWN.display::text as \"display\",\n       GEN_UNKNOWN.value_code::text as \"value_code\",\n       GEN_UNKNOWN.value_display::text as \"value_display\",\n       GEN_UNKNOWN.value_number::text as \"value_number\",\n       GEN_UNKNOWN.value_units::text as \"value_units\",\n       GEN_UNKNOWN.value_units_display::text as \"value_units_display\",\n       '' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(, '') as text))::text as \"has_access_policy\",\n       '' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(, '') as text))::text as \"id\"\n        from \"dbt\".\"main_main\".\"gregor_synthetic_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"gregor_synthetic_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.gregor_synthetic_ftd_demographics": {"database": "dbt", "schema": "main_gregor_synthetic_data", "name": "gregor_synthetic_ftd_demographics", "resource_type": "model", "package_name": "ftd", "path": "gregor_synthetic/gregor_synthetic_ftd_demographics.sql", "original_file_path": "models/gregor_synthetic/gregor_synthetic_ftd_demographics.sql", "unique_id": "model.ftd.gregor_synthetic_ftd_demographics", "fqn": ["ftd", "gregor_synthetic", "gregor_synthetic_ftd_demographics"], "alias": "gregor_synthetic_ftd_demographics", "checksum": {"name": "sha256", "checksum": "ab5d9311234d0de6573af566ab606e9ddc994a6be1768435fcf94767b413f637"}, "config": {"enabled": true, "alias": null, "schema": "gregor_synthetic_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for gregor_synthetic_ftd_demographics.", "columns": {"date_of_birth": {"name": "date_of_birth", "description": "Date at which the individual was born. May be impacted by privacy rules described in date_of_birth_type.", "meta": {}, "data_type": "integer", "constraints": [], "quote": null, "tags": [], "granularity": null}, "date_of_birth_type": {"name": "date_of_birth_type", "description": "Privacy rule modification applied to date_of_birth.", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "sex": {"name": "sex", "description": "Sex of the individual", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "sex_display": {"name": "sex_display", "description": "The friendly display string of the coded term for Sex", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "race_display": {"name": "race_display", "description": "The friendly display string of the coded term(s) for Race", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "ethnicity": {"name": "ethnicity", "description": "Reported ethnicity as defined by the 1997 OMB directives.", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "ethnicity_display": {"name": "ethnicity_display", "description": "The friendly display string of the coded term for Ethnicity", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "age_at_last_vital_status": {"name": "age_at_last_vital_status", "description": "Age at last vital status in decimal years.", "meta": {}, "data_type": "integer", "constraints": [], "quote": null, "tags": [], "granularity": null}, "vital_status": {"name": "vital_status", "description": "Vital Status", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/gregor_synthetic/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "gregor_synthetic_data"}, "created_at": 1757448969.720794, "relation_name": "\"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_demographics\"", "raw_code": "{{ config(materialized='table', schema='gregor_synthetic_data') }}\n\n    with source as (\n        select \n        -- GEN_UNKNOWN.date_of_birth::integer as \"date_of_birth\",\n        -- GEN_UNKNOWN.date_of_birth_type::text as \"date_of_birth_type\",\n         CASE participant.sex\n            WHEN 'Female' THEN 'female'\n            WHEN 'Male' THEN 'male'\n            WHEN 'Unknown' THEN 'unknown'\n            WHEN 'Intersex' THEN 'intersex'\n        END::text as \"sex\",\n        participant.sex::text as \"sex_display\",\n        CASE\n            WHEN participant.reported_race IS NULL THEN 'unknown'\n            ELSE participant.reported_race\n        END::text as \"race_display\",\n        CASE\n            WHEN  participant.reported_ethnicity = 'Hispanic or Latino' THEN 'hispanic_or_latino'\n            WHEN  participant.reported_ethnicity = 'Not Hispanic or Latino' THEN 'not_hispanic_or_latino'\n            WHEN  participant.reported_ethnicity IS NULL THEN 'unknown'\n        END::text as \"ethnicity\",\n        CASE\n            WHEN participant.reported_ethnicity IS NULL THEN 'unknown'\n            ELSE participant.reported_ethnicity\n        END::text as \"ethnicity_display\",\n        participant.age_at_last_observation::integer as \"age_at_last_vital_status\",\n        -- GEN_UNKNOWN.vital_status::text as \"vital_status\",\n        -- NOTE! Currently, For the model to run successfully, the global_id rows must be able to create SQL, the args cannot be invalid, even when commented out. Use placeholders for now.\n-- To see the generated sql, run `dbt compile --select {model}`\n-- Brenda plans to make these run easier later.\n       {{ generate_global_id(prefix='ap',descriptor=['participant.consent_code'], study_id='gregor_synthetic') }}::text as \"has_access_policy\",\n       {{ generate_global_id(prefix='dm',descriptor=['participant.participant_id'], study_id='gregor_synthetic') }}::text as \"id\"\n        from {{ ref('gregor_synthetic_stg_participant') }} as participant\n        join {{ ref('gregor_synthetic_stg_phenotype') }} as phenotype\n        on participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "gregor_synthetic_stg_participant", "package": null, "version": null}, {"name": "gregor_synthetic_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/gregor_synthetic_ftd_demographics.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        -- GEN_UNKNOWN.date_of_birth::integer as \"date_of_birth\",\n        -- GEN_UNKNOWN.date_of_birth_type::text as \"date_of_birth_type\",\n         CASE participant.sex\n            WHEN 'Female' THEN 'female'\n            WHEN 'Male' THEN 'male'\n            WHEN 'Unknown' THEN 'unknown'\n            WHEN 'Intersex' THEN 'intersex'\n        END::text as \"sex\",\n        participant.sex::text as \"sex_display\",\n        CASE\n            WHEN participant.reported_race IS NULL THEN 'unknown'\n            ELSE participant.reported_race\n        END::text as \"race_display\",\n        CASE\n            WHEN  participant.reported_ethnicity = 'Hispanic or Latino' THEN 'hispanic_or_latino'\n            WHEN  participant.reported_ethnicity = 'Not Hispanic or Latino' THEN 'not_hispanic_or_latino'\n            WHEN  participant.reported_ethnicity IS NULL THEN 'unknown'\n        END::text as \"ethnicity\",\n        CASE\n            WHEN participant.reported_ethnicity IS NULL THEN 'unknown'\n            ELSE participant.reported_ethnicity\n        END::text as \"ethnicity_display\",\n        participant.age_at_last_observation::integer as \"age_at_last_vital_status\",\n        -- GEN_UNKNOWN.vital_status::text as \"vital_status\",\n        -- NOTE! Currently, For the model to run successfully, the global_id rows must be able to create SQL, the args cannot be invalid, even when commented out. Use placeholders for now.\n-- To see the generated sql, run `dbt compile --select {model}`\n-- Brenda plans to make these run easier later.\n       'ap' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(participant.consent_code, '') as text))::text as \"has_access_policy\",\n       'dm' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(participant.participant_id, '') as text))::text as \"id\"\n        from \"dbt\".\"main_main\".\"gregor_synthetic_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"gregor_synthetic_stg_phenotype\" as phenotype\n        on participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.gregor_synthetic_ftd_study": {"database": "dbt", "schema": "main_gregor_synthetic_data", "name": "gregor_synthetic_ftd_study", "resource_type": "model", "package_name": "ftd", "path": "gregor_synthetic/gregor_synthetic_ftd_study.sql", "original_file_path": "models/gregor_synthetic/gregor_synthetic_ftd_study.sql", "unique_id": "model.ftd.gregor_synthetic_ftd_study", "fqn": ["ftd", "gregor_synthetic", "gregor_synthetic_ftd_study"], "alias": "gregor_synthetic_ftd_study", "checksum": {"name": "sha256", "checksum": "ce8c87a174f03d01c04ca39946f2dc97f4e322242ac931dbfc88cd61d1e72cdf"}, "config": {"enabled": true, "alias": null, "schema": "gregor_synthetic_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for gregor_synthetic_ftd_study.", "columns": {"parent_study_id": {"name": "parent_study_id", "description": "Parent Study ID", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "study_title": {"name": "study_title", "description": "Study Title", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/gregor_synthetic/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "gregor_synthetic_data"}, "created_at": 1757448969.7135062, "relation_name": "\"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_study\"", "raw_code": "{{ config(materialized='table', schema='gregor_synthetic_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='gregor_synthetic') }}::text as \"parent_study_id\",\n       GEN_UNKNOWN.study_title::text as \"study_title\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='gregor_synthetic') }}::text as \"id\"\n        from {{ ref('gregor_synthetic_stg_participant') }} as participant\n        join {{ ref('gregor_synthetic_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "gregor_synthetic_stg_participant", "package": null, "version": null}, {"name": "gregor_synthetic_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/gregor_synthetic_ftd_study.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(, '') as text))::text as \"parent_study_id\",\n       GEN_UNKNOWN.study_title::text as \"study_title\",\n       '' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(, '') as text))::text as \"id\"\n        from \"dbt\".\"main_main\".\"gregor_synthetic_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"gregor_synthetic_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.gregor_synthetic_ftd_sample": {"database": "dbt", "schema": "main_gregor_synthetic_data", "name": "gregor_synthetic_ftd_sample", "resource_type": "model", "package_name": "ftd", "path": "gregor_synthetic/gregor_synthetic_ftd_sample.sql", "original_file_path": "models/gregor_synthetic/gregor_synthetic_ftd_sample.sql", "unique_id": "model.ftd.gregor_synthetic_ftd_sample", "fqn": ["ftd", "gregor_synthetic", "gregor_synthetic_ftd_sample"], "alias": "gregor_synthetic_ftd_sample", "checksum": {"name": "sha256", "checksum": "530121ee2a52d32ca3f1c35305692841e2ea4170cb320dcfac926dce0b669e3b"}, "config": {"enabled": true, "alias": null, "schema": "gregor_synthetic_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for gregor_synthetic_ftd_sample.", "columns": {"parent_sample": {"name": "parent_sample", "description": "Sample from which this sample is derived", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "sample_type": {"name": "sample_type", "description": "Type of material of which this Sample is comprised", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "availablity_status": {"name": "availablity_status", "description": "Can this Sample be requested for further analysis?", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "quantity_number": {"name": "quantity_number", "description": "The total quantity of the specimen", "meta": {}, "data_type": "number", "constraints": [], "quote": null, "tags": [], "granularity": null}, "quantity_units": {"name": "quantity_units", "description": "The structured term defining the units of the quantity.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "subject_id": {"name": "subject_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "biospecimen_collection_id": {"name": "biospecimen_collection_id", "description": "Biospecimen Collection that generated this sample.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/gregor_synthetic/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "gregor_synthetic_data"}, "created_at": 1757448969.7173665, "relation_name": "\"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_sample\"", "raw_code": "{{ config(materialized='table', schema='gregor_synthetic_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='gregor_synthetic') }}::text as \"parent_sample\",\n       GEN_UNKNOWN.sample_type::text as \"sample_type\",\n       GEN_UNKNOWN.availablity_status::text as \"availablity_status\",\n       GEN_UNKNOWN.quantity_number::text as \"quantity_number\",\n       GEN_UNKNOWN.quantity_units::text as \"quantity_units\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='gregor_synthetic') }}::text as \"has_access_policy\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='gregor_synthetic') }}::text as \"id\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='gregor_synthetic') }}::text as \"subject_id\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='gregor_synthetic') }}::text as \"biospecimen_collection_id\"\n        from {{ ref('gregor_synthetic_stg_participant') }} as participant\n        join {{ ref('gregor_synthetic_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "gregor_synthetic_stg_participant", "package": null, "version": null}, {"name": "gregor_synthetic_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/gregor_synthetic_ftd_sample.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(, '') as text))::text as \"parent_sample\",\n       GEN_UNKNOWN.sample_type::text as \"sample_type\",\n       GEN_UNKNOWN.availablity_status::text as \"availablity_status\",\n       GEN_UNKNOWN.quantity_number::text as \"quantity_number\",\n       GEN_UNKNOWN.quantity_units::text as \"quantity_units\",\n       '' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(, '') as text))::text as \"has_access_policy\",\n       '' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(, '') as text))::text as \"id\",\n       '' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(, '') as text))::text as \"subject_id\",\n       '' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(, '') as text))::text as \"biospecimen_collection_id\"\n        from \"dbt\".\"main_main\".\"gregor_synthetic_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"gregor_synthetic_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.gregor_synthetic_ftd_filemetadata": {"database": "dbt", "schema": "main_gregor_synthetic_data", "name": "gregor_synthetic_ftd_filemetadata", "resource_type": "model", "package_name": "ftd", "path": "gregor_synthetic/gregor_synthetic_ftd_filemetadata.sql", "original_file_path": "models/gregor_synthetic/gregor_synthetic_ftd_filemetadata.sql", "unique_id": "model.ftd.gregor_synthetic_ftd_filemetadata", "fqn": ["ftd", "gregor_synthetic", "gregor_synthetic_ftd_filemetadata"], "alias": "gregor_synthetic_ftd_filemetadata", "checksum": {"name": "sha256", "checksum": "48f623cec6cb27af7f8ba06db96efa6949be552e5ee1f69738998fb231374533"}, "config": {"enabled": true, "alias": null, "schema": "gregor_synthetic_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for gregor_synthetic_ftd_filemetadata.", "columns": {"code": {"name": "code", "description": "The structured term defining the meaning of the assertion.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "display": {"name": "display", "description": "The friendly display string of the coded term", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "value_code": {"name": "value_code", "description": "The structured term defining the value of the assertion.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "value_display": {"name": "value_display", "description": "The friendly display string of the coded term for the value of the assertion.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/gregor_synthetic/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "gregor_synthetic_data"}, "created_at": 1757448969.7232003, "relation_name": "\"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_filemetadata\"", "raw_code": "{{ config(materialized='table', schema='gregor_synthetic_data') }}\n\n    with source as (\n        select \n        GEN_UNKNOWN.code::text as \"code\",\n       GEN_UNKNOWN.display::text as \"display\",\n       GEN_UNKNOWN.value_code::text as \"value_code\",\n       GEN_UNKNOWN.value_display::text as \"value_display\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='gregor_synthetic') }}::text as \"id\"\n        from {{ ref('gregor_synthetic_stg_participant') }} as participant\n        join {{ ref('gregor_synthetic_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "gregor_synthetic_stg_participant", "package": null, "version": null}, {"name": "gregor_synthetic_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/gregor_synthetic_ftd_filemetadata.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        GEN_UNKNOWN.code::text as \"code\",\n       GEN_UNKNOWN.display::text as \"display\",\n       GEN_UNKNOWN.value_code::text as \"value_code\",\n       GEN_UNKNOWN.value_display::text as \"value_display\",\n       '' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(, '') as text))::text as \"id\"\n        from \"dbt\".\"main_main\".\"gregor_synthetic_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"gregor_synthetic_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.gregor_synthetic_ftd_accesspolicy_data_access_type": {"database": "dbt", "schema": "main_gregor_synthetic_data", "name": "gregor_synthetic_ftd_accesspolicy_data_access_type", "resource_type": "model", "package_name": "ftd", "path": "gregor_synthetic/gregor_synthetic_ftd_accesspolicy_data_access_type.sql", "original_file_path": "models/gregor_synthetic/gregor_synthetic_ftd_accesspolicy_data_access_type.sql", "unique_id": "model.ftd.gregor_synthetic_ftd_accesspolicy_data_access_type", "fqn": ["ftd", "gregor_synthetic", "gregor_synthetic_ftd_accesspolicy_data_access_type"], "alias": "gregor_synthetic_ftd_accesspolicy_data_access_type", "checksum": {"name": "sha256", "checksum": "b542ea77e91cff7b45fa72150b6a985f03fc95e3ef4866b75dde6bd78c730e16"}, "config": {"enabled": true, "alias": null, "schema": "gregor_synthetic_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for gregor_synthetic_ftd_accesspolicy_data_access_type.", "columns": {"accesspolicy_id": {"name": "accesspolicy_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "data_access_type": {"name": "data_access_type", "description": "Data Access Type", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/gregor_synthetic/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "gregor_synthetic_data"}, "created_at": 1757448969.727472, "relation_name": "\"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_accesspolicy_data_access_type\"", "raw_code": "{{ config(materialized='table', schema='gregor_synthetic_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='gregor_synthetic') }}::text as \"accesspolicy_id\",\n       GEN_UNKNOWN.data_access_type::text as \"data_access_type\"\n        from {{ ref('gregor_synthetic_stg_participant') }} as participant\n        join {{ ref('gregor_synthetic_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "gregor_synthetic_stg_participant", "package": null, "version": null}, {"name": "gregor_synthetic_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/gregor_synthetic_ftd_accesspolicy_data_access_type.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(, '') as text))::text as \"accesspolicy_id\",\n       GEN_UNKNOWN.data_access_type::text as \"data_access_type\"\n        from \"dbt\".\"main_main\".\"gregor_synthetic_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"gregor_synthetic_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.gregor_synthetic_ftd_accesspolicy": {"database": "dbt", "schema": "main_gregor_synthetic_data", "name": "gregor_synthetic_ftd_accesspolicy", "resource_type": "model", "package_name": "ftd", "path": "gregor_synthetic/gregor_synthetic_ftd_accesspolicy.sql", "original_file_path": "models/gregor_synthetic/gregor_synthetic_ftd_accesspolicy.sql", "unique_id": "model.ftd.gregor_synthetic_ftd_accesspolicy", "fqn": ["ftd", "gregor_synthetic", "gregor_synthetic_ftd_accesspolicy"], "alias": "gregor_synthetic_ftd_accesspolicy", "checksum": {"name": "sha256", "checksum": "aec6686c11195d1892ae6dbd1a6af9ff28fda8f112e9cff0c39e27e188026643"}, "config": {"enabled": true, "alias": null, "schema": "gregor_synthetic_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for gregor_synthetic_ftd_accesspolicy.", "columns": {"disease_limitation": {"name": "disease_limitation", "description": "Disease Use Limitations", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "description": {"name": "description", "description": "Model for gregor_synthetic_ftd_accesspolicy.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "website": {"name": "website", "description": "Website", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/gregor_synthetic/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "gregor_synthetic_data"}, "created_at": 1757448969.7250042, "relation_name": "\"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_accesspolicy\"", "raw_code": "{{ config(materialized='table', schema='gregor_synthetic_data') }}\n\n    with source as (\n        select \n    --     GEN_UNKNOWN.disease_limitation::text as \"disease_limitation\",\n        CASE participant.consent_code\n            WHEN 'GRU' THEN 'General Research Use'\n            WHEN 'HMB' THEN 'Health/Medical/Biomedical'\n            WHEN 'DS' THEN 'Disease-Specific (Disease/Trait/Exposure)'\n            WHEN 'IRB' THEN 'IRB Approval Required'\n            WHEN 'PUB' THEN 'Publication Required'\n            WHEN 'COL' THEN 'Collaboration Required'\n            WHEN 'NPU' THEN 'Not-for-profit use only'\n            WHEN 'MDS' THEN 'Methods'\n            WHEN 'GSO' THEN 'Genetic Studies only'\n            WHEN 'GSR' THEN 'Genomic Summary Results'\n        END::text as \"description\",        --    GEN_UNKNOWN.website::text as \"website\",\n      {{ generate_global_id(prefix='ap',descriptor=['participant.consent_code'], study_id='gregor_synthetic') }}::text as \"id\"\n        from {{ ref('gregor_synthetic_stg_participant') }} as participant\n        join {{ ref('gregor_synthetic_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "gregor_synthetic_stg_participant", "package": null, "version": null}, {"name": "gregor_synthetic_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/gregor_synthetic_ftd_accesspolicy.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n    --     GEN_UNKNOWN.disease_limitation::text as \"disease_limitation\",\n        CASE participant.consent_code\n            WHEN 'GRU' THEN 'General Research Use'\n            WHEN 'HMB' THEN 'Health/Medical/Biomedical'\n            WHEN 'DS' THEN 'Disease-Specific (Disease/Trait/Exposure)'\n            WHEN 'IRB' THEN 'IRB Approval Required'\n            WHEN 'PUB' THEN 'Publication Required'\n            WHEN 'COL' THEN 'Collaboration Required'\n            WHEN 'NPU' THEN 'Not-for-profit use only'\n            WHEN 'MDS' THEN 'Methods'\n            WHEN 'GSO' THEN 'Genetic Studies only'\n            WHEN 'GSR' THEN 'Genomic Summary Results'\n        END::text as \"description\",        --    GEN_UNKNOWN.website::text as \"website\",\n      'ap' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(participant.consent_code, '') as text))::text as \"id\"\n        from \"dbt\".\"main_main\".\"gregor_synthetic_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"gregor_synthetic_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.gregor_synthetic_ftd_subjectassertion_external_id": {"database": "dbt", "schema": "main_gregor_synthetic_data", "name": "gregor_synthetic_ftd_subjectassertion_external_id", "resource_type": "model", "package_name": "ftd", "path": "gregor_synthetic/gregor_synthetic_ftd_subjectassertion_external_id.sql", "original_file_path": "models/gregor_synthetic/gregor_synthetic_ftd_subjectassertion_external_id.sql", "unique_id": "model.ftd.gregor_synthetic_ftd_subjectassertion_external_id", "fqn": ["ftd", "gregor_synthetic", "gregor_synthetic_ftd_subjectassertion_external_id"], "alias": "gregor_synthetic_ftd_subjectassertion_external_id", "checksum": {"name": "sha256", "checksum": "1fbdbb542f927e2fd18ac0f39f2a1529bd3035cbf0dc0ad164af616fdac920ee"}, "config": {"enabled": true, "alias": null, "schema": "gregor_synthetic_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for gregor_synthetic_ftd_subjectassertion_external_id.", "columns": {"subjectassertion_id": {"name": "subjectassertion_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/gregor_synthetic/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "gregor_synthetic_data"}, "created_at": 1757448969.7069492, "relation_name": "\"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_subjectassertion_external_id\"", "raw_code": "{{ config(materialized='table', schema='gregor_synthetic_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='sa',descriptor=['participant.participant_id'], study_id='gregor_synthetic') }}::text as \"SubjectAssertion_id\",\n       participant.participant_id::text as \"external_id\"\n        from {{ ref('gregor_synthetic_stg_participant') }} as participant\n        join {{ ref('gregor_synthetic_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "gregor_synthetic_stg_participant", "package": null, "version": null}, {"name": "gregor_synthetic_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/gregor_synthetic_ftd_subjectassertion_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        'sa' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(participant.participant_id, '') as text))::text as \"SubjectAssertion_id\",\n       participant.participant_id::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"gregor_synthetic_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"gregor_synthetic_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.gregor_synthetic_ftd_sample_storage_method": {"database": "dbt", "schema": "main_gregor_synthetic_data", "name": "gregor_synthetic_ftd_sample_storage_method", "resource_type": "model", "package_name": "ftd", "path": "gregor_synthetic/gregor_synthetic_ftd_sample_storage_method.sql", "original_file_path": "models/gregor_synthetic/gregor_synthetic_ftd_sample_storage_method.sql", "unique_id": "model.ftd.gregor_synthetic_ftd_sample_storage_method", "fqn": ["ftd", "gregor_synthetic", "gregor_synthetic_ftd_sample_storage_method"], "alias": "gregor_synthetic_ftd_sample_storage_method", "checksum": {"name": "sha256", "checksum": "565a652f3cb6d4f3335836f49f9856b7cf91a3473d403f80a23875be014dca17"}, "config": {"enabled": true, "alias": null, "schema": "gregor_synthetic_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for gregor_synthetic_ftd_sample_storage_method.", "columns": {"sample_id": {"name": "sample_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "storage_method": {"name": "storage_method", "description": "Sample storage method, eg, Frozen or with additives", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/gregor_synthetic/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "gregor_synthetic_data"}, "created_at": 1757448969.7060874, "relation_name": "\"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_sample_storage_method\"", "raw_code": "{{ config(materialized='table', schema='gregor_synthetic_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='gregor_synthetic') }}::text as \"sample_id\",\n       GEN_UNKNOWN.storage_method::text as \"storage_method\"\n        from {{ ref('gregor_synthetic_stg_participant') }} as participant\n        join {{ ref('gregor_synthetic_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "gregor_synthetic_stg_participant", "package": null, "version": null}, {"name": "gregor_synthetic_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/gregor_synthetic_ftd_sample_storage_method.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(, '') as text))::text as \"sample_id\",\n       GEN_UNKNOWN.storage_method::text as \"storage_method\"\n        from \"dbt\".\"main_main\".\"gregor_synthetic_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"gregor_synthetic_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.gregor_synthetic_ftd_study_external_study_id": {"database": "dbt", "schema": "main_gregor_synthetic_data", "name": "gregor_synthetic_ftd_study_external_study_id", "resource_type": "model", "package_name": "ftd", "path": "gregor_synthetic/gregor_synthetic_ftd_study_external_study_id.sql", "original_file_path": "models/gregor_synthetic/gregor_synthetic_ftd_study_external_study_id.sql", "unique_id": "model.ftd.gregor_synthetic_ftd_study_external_study_id", "fqn": ["ftd", "gregor_synthetic", "gregor_synthetic_ftd_study_external_study_id"], "alias": "gregor_synthetic_ftd_study_external_study_id", "checksum": {"name": "sha256", "checksum": "b5c051f16231c48dd49099c66c41296a280a4cc825b3cf3d69b17f13eeb40317"}, "config": {"enabled": true, "alias": null, "schema": "gregor_synthetic_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for gregor_synthetic_ftd_study_external_study_id.", "columns": {"study_id": {"name": "study_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_study_id": {"name": "external_study_id", "description": "External Study ID", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/gregor_synthetic/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "gregor_synthetic_data"}, "created_at": 1757448969.7077813, "relation_name": "\"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_study_external_study_id\"", "raw_code": "{{ config(materialized='table', schema='gregor_synthetic_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='gregor_synthetic') }}::text as \"study_id\",\n       GEN_UNKNOWN.external_study_id::text as \"external_study_id\"\n        from {{ ref('gregor_synthetic_stg_participant') }} as participant\n        join {{ ref('gregor_synthetic_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "gregor_synthetic_stg_participant", "package": null, "version": null}, {"name": "gregor_synthetic_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/gregor_synthetic_ftd_study_external_study_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(, '') as text))::text as \"study_id\",\n       GEN_UNKNOWN.external_study_id::text as \"external_study_id\"\n        from \"dbt\".\"main_main\".\"gregor_synthetic_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"gregor_synthetic_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.gregor_synthetic_ftd_aliquot": {"database": "dbt", "schema": "main_gregor_synthetic_data", "name": "gregor_synthetic_ftd_aliquot", "resource_type": "model", "package_name": "ftd", "path": "gregor_synthetic/gregor_synthetic_ftd_aliquot.sql", "original_file_path": "models/gregor_synthetic/gregor_synthetic_ftd_aliquot.sql", "unique_id": "model.ftd.gregor_synthetic_ftd_aliquot", "fqn": ["ftd", "gregor_synthetic", "gregor_synthetic_ftd_aliquot"], "alias": "gregor_synthetic_ftd_aliquot", "checksum": {"name": "sha256", "checksum": "4e92df39e0d78e28e7608df8050367d2f651127b371ec461049b297dfbbdaaa4"}, "config": {"enabled": true, "alias": null, "schema": "gregor_synthetic_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for gregor_synthetic_ftd_aliquot.", "columns": {"availablity_status": {"name": "availablity_status", "description": "Can this Sample be requested for further analysis?", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "quantity_number": {"name": "quantity_number", "description": "The total quantity of the specimen", "meta": {}, "data_type": "number", "constraints": [], "quote": null, "tags": [], "granularity": null}, "quantity_units": {"name": "quantity_units", "description": "The structured term defining the units of the quantity.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "concentration_number": {"name": "concentration_number", "description": "What is the concentration of the analyte in the Aliquot?", "meta": {}, "data_type": "number", "constraints": [], "quote": null, "tags": [], "granularity": null}, "concentration_unit": {"name": "concentration_unit", "description": "Units associated with the concentration of the analyte in the Aliquot? UCUM coding preferred (with curie, UCUM)", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "sample_id": {"name": "sample_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/gregor_synthetic/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "gregor_synthetic_data"}, "created_at": 1757448969.7214606, "relation_name": "\"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_aliquot\"", "raw_code": "{{ config(materialized='table', schema='gregor_synthetic_data') }}\n\n    with source as (\n        select \n        GEN_UNKNOWN.availablity_status::text as \"availablity_status\",\n       GEN_UNKNOWN.quantity_number::text as \"quantity_number\",\n       GEN_UNKNOWN.quantity_units::text as \"quantity_units\",\n       GEN_UNKNOWN.concentration_number::text as \"concentration_number\",\n       GEN_UNKNOWN.concentration_unit::text as \"concentration_unit\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='gregor_synthetic') }}::text as \"has_access_policy\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='gregor_synthetic') }}::text as \"id\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='gregor_synthetic') }}::text as \"sample_id\"\n        from {{ ref('gregor_synthetic_stg_participant') }} as participant\n        join {{ ref('gregor_synthetic_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "gregor_synthetic_stg_participant", "package": null, "version": null}, {"name": "gregor_synthetic_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/gregor_synthetic_ftd_aliquot.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        GEN_UNKNOWN.availablity_status::text as \"availablity_status\",\n       GEN_UNKNOWN.quantity_number::text as \"quantity_number\",\n       GEN_UNKNOWN.quantity_units::text as \"quantity_units\",\n       GEN_UNKNOWN.concentration_number::text as \"concentration_number\",\n       GEN_UNKNOWN.concentration_unit::text as \"concentration_unit\",\n       '' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(, '') as text))::text as \"has_access_policy\",\n       '' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(, '') as text))::text as \"id\",\n       '' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(, '') as text))::text as \"sample_id\"\n        from \"dbt\".\"main_main\".\"gregor_synthetic_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"gregor_synthetic_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.gregor_synthetic_ftd_biospecimencollection": {"database": "dbt", "schema": "main_gregor_synthetic_data", "name": "gregor_synthetic_ftd_biospecimencollection", "resource_type": "model", "package_name": "ftd", "path": "gregor_synthetic/gregor_synthetic_ftd_biospecimencollection.sql", "original_file_path": "models/gregor_synthetic/gregor_synthetic_ftd_biospecimencollection.sql", "unique_id": "model.ftd.gregor_synthetic_ftd_biospecimencollection", "fqn": ["ftd", "gregor_synthetic", "gregor_synthetic_ftd_biospecimencollection"], "alias": "gregor_synthetic_ftd_biospecimencollection", "checksum": {"name": "sha256", "checksum": "413b732e99eded4ceebda7a44f77fcd625a6db98a622d96bff95712d075f2d8b"}, "config": {"enabled": true, "alias": null, "schema": "gregor_synthetic_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for gregor_synthetic_ftd_biospecimencollection.", "columns": {"age_at_collection": {"name": "age_at_collection", "description": "The age at which this biospecimen was collected.", "meta": {}, "data_type": "integer", "constraints": [], "quote": null, "tags": [], "granularity": null}, "method": {"name": "method", "description": "The approach used to collect the biospecimen.", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "site": {"name": "site", "description": "The location of the specimen collection.", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "spatial_qualifier": {"name": "spatial_qualifier", "description": "Any spatial/location qualifiers", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "laterality": {"name": "laterality", "description": "Laterality information for the site", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/gregor_synthetic/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "gregor_synthetic_data"}, "created_at": 1757448969.72705, "relation_name": "\"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_biospecimencollection\"", "raw_code": "{{ config(materialized='table', schema='gregor_synthetic_data') }}\n\n    with source as (\n        select \n        GEN_UNKNOWN.age_at_collection::integer as \"age_at_collection\",\n       GEN_UNKNOWN.method::text as \"method\",\n       GEN_UNKNOWN.site::text as \"site\",\n       GEN_UNKNOWN.spatial_qualifier::text as \"spatial_qualifier\",\n       GEN_UNKNOWN.laterality::text as \"laterality\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='gregor_synthetic') }}::text as \"has_access_policy\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='gregor_synthetic') }}::text as \"id\"\n        from {{ ref('gregor_synthetic_stg_participant') }} as participant\n        join {{ ref('gregor_synthetic_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "gregor_synthetic_stg_participant", "package": null, "version": null}, {"name": "gregor_synthetic_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/gregor_synthetic_ftd_biospecimencollection.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        GEN_UNKNOWN.age_at_collection::integer as \"age_at_collection\",\n       GEN_UNKNOWN.method::text as \"method\",\n       GEN_UNKNOWN.site::text as \"site\",\n       GEN_UNKNOWN.spatial_qualifier::text as \"spatial_qualifier\",\n       GEN_UNKNOWN.laterality::text as \"laterality\",\n       '' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(, '') as text))::text as \"has_access_policy\",\n       '' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(, '') as text))::text as \"id\"\n        from \"dbt\".\"main_main\".\"gregor_synthetic_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"gregor_synthetic_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.gregor_synthetic_ftd_sample_processing": {"database": "dbt", "schema": "main_gregor_synthetic_data", "name": "gregor_synthetic_ftd_sample_processing", "resource_type": "model", "package_name": "ftd", "path": "gregor_synthetic/gregor_synthetic_ftd_sample_processing.sql", "original_file_path": "models/gregor_synthetic/gregor_synthetic_ftd_sample_processing.sql", "unique_id": "model.ftd.gregor_synthetic_ftd_sample_processing", "fqn": ["ftd", "gregor_synthetic", "gregor_synthetic_ftd_sample_processing"], "alias": "gregor_synthetic_ftd_sample_processing", "checksum": {"name": "sha256", "checksum": "bdcc5589cd8cc6510ded987a6d94979c4496888af27f200a3fd831fa34cb5f34"}, "config": {"enabled": true, "alias": null, "schema": "gregor_synthetic_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for gregor_synthetic_ftd_sample_processing.", "columns": {"sample_id": {"name": "sample_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "processing": {"name": "processing", "description": "Processing that was applied to the Parent Sample or from the Biospecimen Collection that yielded this distinct sample", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/gregor_synthetic/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "gregor_synthetic_data"}, "created_at": 1757448969.7194645, "relation_name": "\"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_sample_processing\"", "raw_code": "{{ config(materialized='table', schema='gregor_synthetic_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='gregor_synthetic') }}::text as \"sample_id\",\n       GEN_UNKNOWN.processing::text as \"processing\"\n        from {{ ref('gregor_synthetic_stg_participant') }} as participant\n        join {{ ref('gregor_synthetic_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "gregor_synthetic_stg_participant", "package": null, "version": null}, {"name": "gregor_synthetic_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/gregor_synthetic_ftd_sample_processing.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(, '') as text))::text as \"sample_id\",\n       GEN_UNKNOWN.processing::text as \"processing\"\n        from \"dbt\".\"main_main\".\"gregor_synthetic_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"gregor_synthetic_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.gregor_synthetic_ftd_sample_external_id": {"database": "dbt", "schema": "main_gregor_synthetic_data", "name": "gregor_synthetic_ftd_sample_external_id", "resource_type": "model", "package_name": "ftd", "path": "gregor_synthetic/gregor_synthetic_ftd_sample_external_id.sql", "original_file_path": "models/gregor_synthetic/gregor_synthetic_ftd_sample_external_id.sql", "unique_id": "model.ftd.gregor_synthetic_ftd_sample_external_id", "fqn": ["ftd", "gregor_synthetic", "gregor_synthetic_ftd_sample_external_id"], "alias": "gregor_synthetic_ftd_sample_external_id", "checksum": {"name": "sha256", "checksum": "c94f81aac27475a6f71f16a0f4c917bc03fbdfc8258e193557feac7a448d21bb"}, "config": {"enabled": true, "alias": null, "schema": "gregor_synthetic_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for gregor_synthetic_ftd_sample_external_id.", "columns": {"sample_id": {"name": "sample_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/gregor_synthetic/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "gregor_synthetic_data"}, "created_at": 1757448969.726503, "relation_name": "\"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_sample_external_id\"", "raw_code": "{{ config(materialized='table', schema='gregor_synthetic_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='gregor_synthetic') }}::text as \"sample_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from {{ ref('gregor_synthetic_stg_participant') }} as participant\n        join {{ ref('gregor_synthetic_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "gregor_synthetic_stg_participant", "package": null, "version": null}, {"name": "gregor_synthetic_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/gregor_synthetic_ftd_sample_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(, '') as text))::text as \"sample_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"gregor_synthetic_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"gregor_synthetic_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.gregor_synthetic_ftd_accesscontrolledrecord_external_id": {"database": "dbt", "schema": "main_gregor_synthetic_data", "name": "gregor_synthetic_ftd_accesscontrolledrecord_external_id", "resource_type": "model", "package_name": "ftd", "path": "gregor_synthetic/gregor_synthetic_ftd_accesscontrolledrecord_external_id.sql", "original_file_path": "models/gregor_synthetic/gregor_synthetic_ftd_accesscontrolledrecord_external_id.sql", "unique_id": "model.ftd.gregor_synthetic_ftd_accesscontrolledrecord_external_id", "fqn": ["ftd", "gregor_synthetic", "gregor_synthetic_ftd_accesscontrolledrecord_external_id"], "alias": "gregor_synthetic_ftd_accesscontrolledrecord_external_id", "checksum": {"name": "sha256", "checksum": "6ef57feb7343f8fee9578a7dc4ac7abfffcb40feaeaa8cdccf249a597c305f6c"}, "config": {"enabled": true, "alias": null, "schema": "gregor_synthetic_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for gregor_synthetic_ftd_accesscontrolledrecord_external_id.", "columns": {"accesscontrolledrecord_id": {"name": "accesscontrolledrecord_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/gregor_synthetic/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "gregor_synthetic_data"}, "created_at": 1757448969.7126465, "relation_name": "\"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_accesscontrolledrecord_external_id\"", "raw_code": "{{ config(materialized='table', schema='gregor_synthetic_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='gregor_synthetic') }}::text as \"accesscontrolledrecord_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from {{ ref('gregor_synthetic_stg_participant') }} as participant\n        join {{ ref('gregor_synthetic_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "gregor_synthetic_stg_participant", "package": null, "version": null}, {"name": "gregor_synthetic_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/gregor_synthetic_ftd_accesscontrolledrecord_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(, '') as text))::text as \"accesscontrolledrecord_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"gregor_synthetic_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"gregor_synthetic_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.gregor_synthetic_ftd_family_external_id": {"database": "dbt", "schema": "main_gregor_synthetic_data", "name": "gregor_synthetic_ftd_family_external_id", "resource_type": "model", "package_name": "ftd", "path": "gregor_synthetic/gregor_synthetic_ftd_family_external_id.sql", "original_file_path": "models/gregor_synthetic/gregor_synthetic_ftd_family_external_id.sql", "unique_id": "model.ftd.gregor_synthetic_ftd_family_external_id", "fqn": ["ftd", "gregor_synthetic", "gregor_synthetic_ftd_family_external_id"], "alias": "gregor_synthetic_ftd_family_external_id", "checksum": {"name": "sha256", "checksum": "25958162bd6bbbb252cd3da569c93223db082787a5b15587b0f204b7fa43ddc2"}, "config": {"enabled": true, "alias": null, "schema": "gregor_synthetic_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for gregor_synthetic_ftd_family_external_id.", "columns": {"family_id": {"name": "family_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/gregor_synthetic/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "gregor_synthetic_data"}, "created_at": 1757448969.707373, "relation_name": "\"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_family_external_id\"", "raw_code": "{{ config(materialized='table', schema='gregor_synthetic_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='gregor_synthetic') }}::text as \"family_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from {{ ref('gregor_synthetic_stg_participant') }} as participant\n        join {{ ref('gregor_synthetic_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "gregor_synthetic_stg_participant", "package": null, "version": null}, {"name": "gregor_synthetic_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/gregor_synthetic_ftd_family_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(, '') as text))::text as \"family_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"gregor_synthetic_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"gregor_synthetic_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.gregor_synthetic_ftd_accesspolicy_access_policy_code": {"database": "dbt", "schema": "main_gregor_synthetic_data", "name": "gregor_synthetic_ftd_accesspolicy_access_policy_code", "resource_type": "model", "package_name": "ftd", "path": "gregor_synthetic/gregor_synthetic_ftd_accesspolicy_access_policy_code.sql", "original_file_path": "models/gregor_synthetic/gregor_synthetic_ftd_accesspolicy_access_policy_code.sql", "unique_id": "model.ftd.gregor_synthetic_ftd_accesspolicy_access_policy_code", "fqn": ["ftd", "gregor_synthetic", "gregor_synthetic_ftd_accesspolicy_access_policy_code"], "alias": "gregor_synthetic_ftd_accesspolicy_access_policy_code", "checksum": {"name": "sha256", "checksum": "e8a8a2520326a4e3c42d42e6d4eb6fd09c23d8cbe780c363f6f42d25b61ade82"}, "config": {"enabled": true, "alias": null, "schema": "gregor_synthetic_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for gregor_synthetic_ftd_accesspolicy_access_policy_code.", "columns": {"accesspolicy_id": {"name": "accesspolicy_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "access_policy_code": {"name": "access_policy_code", "description": "Access Policy Code", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/gregor_synthetic/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "gregor_synthetic_data"}, "created_at": 1757448969.7190466, "relation_name": "\"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_accesspolicy_access_policy_code\"", "raw_code": "{{ config(materialized='table', schema='gregor_synthetic_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='ap',descriptor=['participant.consent_code'], study_id='gregor_synthetic') }}::text as \"accesspolicy_id\",\n        participant.consent_code::text as \"access_policy_code\"\n        from {{ ref('gregor_synthetic_stg_participant') }} as participant\n        join {{ ref('gregor_synthetic_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "gregor_synthetic_stg_participant", "package": null, "version": null}, {"name": "gregor_synthetic_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/gregor_synthetic_ftd_accesspolicy_access_policy_code.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        'ap' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(participant.consent_code, '') as text))::text as \"accesspolicy_id\",\n        participant.consent_code::text as \"access_policy_code\"\n        from \"dbt\".\"main_main\".\"gregor_synthetic_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"gregor_synthetic_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.gregor_synthetic_ftd_subjectassertion_source_data": {"database": "dbt", "schema": "main_gregor_synthetic_data", "name": "gregor_synthetic_ftd_subjectassertion_source_data", "resource_type": "model", "package_name": "ftd", "path": "gregor_synthetic/gregor_synthetic_ftd_subjectassertion_source_data.sql", "original_file_path": "models/gregor_synthetic/gregor_synthetic_ftd_subjectassertion_source_data.sql", "unique_id": "model.ftd.gregor_synthetic_ftd_subjectassertion_source_data", "fqn": ["ftd", "gregor_synthetic", "gregor_synthetic_ftd_subjectassertion_source_data"], "alias": "gregor_synthetic_ftd_subjectassertion_source_data", "checksum": {"name": "sha256", "checksum": "6b87ce30efc4a36dc8c25acf5b88a1a188076bb5ab6ae37bfd1c4c506e97d31c"}, "config": {"enabled": true, "alias": null, "schema": "gregor_synthetic_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for gregor_synthetic_ftd_subjectassertion_source_data.", "columns": {"subjectassertion_id": {"name": "subjectassertion_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "source_data_id": {"name": "source_data_id", "description": "The sources from which this assertion was derived", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/gregor_synthetic/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "gregor_synthetic_data"}, "created_at": 1757448969.7158613, "relation_name": "\"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_subjectassertion_source_data\"", "raw_code": "{{ config(materialized='table', schema='gregor_synthetic_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='gregor_synthetic') }}::text as \"subjectassertion_id\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='gregor_synthetic') }}::text as \"source_data_id\"\n        from {{ ref('gregor_synthetic_stg_participant') }} as participant\n        join {{ ref('gregor_synthetic_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "gregor_synthetic_stg_participant", "package": null, "version": null}, {"name": "gregor_synthetic_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/gregor_synthetic_ftd_subjectassertion_source_data.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(, '') as text))::text as \"subjectassertion_id\",\n       '' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(, '') as text))::text as \"source_data_id\"\n        from \"dbt\".\"main_main\".\"gregor_synthetic_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"gregor_synthetic_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.gregor_synthetic_ftd_family_family_relationships": {"database": "dbt", "schema": "main_gregor_synthetic_data", "name": "gregor_synthetic_ftd_family_family_relationships", "resource_type": "model", "package_name": "ftd", "path": "gregor_synthetic/gregor_synthetic_ftd_family_family_relationships.sql", "original_file_path": "models/gregor_synthetic/gregor_synthetic_ftd_family_family_relationships.sql", "unique_id": "model.ftd.gregor_synthetic_ftd_family_family_relationships", "fqn": ["ftd", "gregor_synthetic", "gregor_synthetic_ftd_family_family_relationships"], "alias": "gregor_synthetic_ftd_family_family_relationships", "checksum": {"name": "sha256", "checksum": "666d4d1632c260f9db1f73b9ea4d9453370adb66cb9c0b0a29f001aadf86bb86"}, "config": {"enabled": true, "alias": null, "schema": "gregor_synthetic_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for gregor_synthetic_ftd_family_family_relationships.", "columns": {"family_id": {"name": "family_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "family_relationships_id": {"name": "family_relationships_id", "description": "Family relationships associated with this family.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/gregor_synthetic/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "gregor_synthetic_data"}, "created_at": 1757448969.7090135, "relation_name": "\"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_family_family_relationships\"", "raw_code": "{{ config(materialized='table', schema='gregor_synthetic_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='gregor_synthetic') }}::text as \"family_id\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='gregor_synthetic') }}::text as \"family_relationships_id\"\n        from {{ ref('gregor_synthetic_stg_participant') }} as participant\n        join {{ ref('gregor_synthetic_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "gregor_synthetic_stg_participant", "package": null, "version": null}, {"name": "gregor_synthetic_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/gregor_synthetic_ftd_family_family_relationships.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(, '') as text))::text as \"family_id\",\n       '' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(, '') as text))::text as \"family_relationships_id\"\n        from \"dbt\".\"main_main\".\"gregor_synthetic_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"gregor_synthetic_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.gregor_synthetic_ftd_accesspolicy_external_id": {"database": "dbt", "schema": "main_gregor_synthetic_data", "name": "gregor_synthetic_ftd_accesspolicy_external_id", "resource_type": "model", "package_name": "ftd", "path": "gregor_synthetic/gregor_synthetic_ftd_accesspolicy_external_id.sql", "original_file_path": "models/gregor_synthetic/gregor_synthetic_ftd_accesspolicy_external_id.sql", "unique_id": "model.ftd.gregor_synthetic_ftd_accesspolicy_external_id", "fqn": ["ftd", "gregor_synthetic", "gregor_synthetic_ftd_accesspolicy_external_id"], "alias": "gregor_synthetic_ftd_accesspolicy_external_id", "checksum": {"name": "sha256", "checksum": "d832215a89442cd2fb25f54988e92509d532e6a49c73679584e31d85a5df582c"}, "config": {"enabled": true, "alias": null, "schema": "gregor_synthetic_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for gregor_synthetic_ftd_accesspolicy_external_id.", "columns": {"accesspolicy_id": {"name": "accesspolicy_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/gregor_synthetic/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "gregor_synthetic_data"}, "created_at": 1757448969.7085977, "relation_name": "\"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_accesspolicy_external_id\"", "raw_code": "{{ config(materialized='table', schema='gregor_synthetic_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='gregor_synthetic') }}::text as \"accesspolicy_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from {{ ref('gregor_synthetic_stg_participant') }} as participant\n        join {{ ref('gregor_synthetic_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "gregor_synthetic_stg_participant", "package": null, "version": null}, {"name": "gregor_synthetic_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/gregor_synthetic_ftd_accesspolicy_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(, '') as text))::text as \"accesspolicy_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"gregor_synthetic_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"gregor_synthetic_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.gregor_synthetic_ftd_familyrelationship": {"database": "dbt", "schema": "main_gregor_synthetic_data", "name": "gregor_synthetic_ftd_familyrelationship", "resource_type": "model", "package_name": "ftd", "path": "gregor_synthetic/gregor_synthetic_ftd_familyrelationship.sql", "original_file_path": "models/gregor_synthetic/gregor_synthetic_ftd_familyrelationship.sql", "unique_id": "model.ftd.gregor_synthetic_ftd_familyrelationship", "fqn": ["ftd", "gregor_synthetic", "gregor_synthetic_ftd_familyrelationship"], "alias": "gregor_synthetic_ftd_familyrelationship", "checksum": {"name": "sha256", "checksum": "331de1921d6e0e732acb68cc0d7e03e782acd05a6b730fa51bea71e4ee2c0275"}, "config": {"enabled": true, "alias": null, "schema": "gregor_synthetic_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for gregor_synthetic_ftd_familyrelationship.", "columns": {"family_member": {"name": "family_member", "description": "The family member Subject who is the relationship \"subject\".", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "other_family_member": {"name": "other_family_member", "description": "The family member Subject for the relationship \"object\".", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "relationship_code": {"name": "relationship_code", "description": "Code definting the relationship predicate. Relationship of the \"Family Member\" to the \"Other Family Member\" (i.e. mother, father, etc). Code must be from the HL7 [FamilyMember ValueSet](https://terminology.hl7.org/6.2.0/ValueSet-v3-FamilyMember.html)", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/gregor_synthetic/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "gregor_synthetic_data"}, "created_at": 1757448969.7101731, "relation_name": "\"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_familyrelationship\"", "raw_code": "{{ config(materialized='table', schema='gregor_synthetic_data') }}\n\n    with source as (\n        select \n        participant_id AS other_family_member,\n        twin_id AS participant_id,\n        'KIN:009' AS relationship_code,\n        {{ generate_global_id(prefix='ap',descriptor=['participant.consent_code'], study_id='gregor_synthetic') }}::text AS \"has_access_policy\",\n        from {{ ref('gregor_synthetic_stg_participant') }} as participant WHERE twin_id != '0'\n\n        UNION \n\n        select \n        participant_id AS other_family_member, \n        paternal_id AS participant_id,\n        'KIN:028' AS relationship_code,\n        {{ generate_global_id(prefix='ap',descriptor=['participant.consent_code'], study_id='gregor_synthetic') }}::text AS \"has_access_policy\",\n        from {{ ref('gregor_synthetic_stg_participant') }} as participant WHERE paternal_id != '0'\n\n        UNION \n\n        select \n        participant_id AS other_family_member, \n        maternal_id AS participant_id,\n        'KIN:027' AS relationship_code,\n        {{ generate_global_id(prefix='ap',descriptor=['participant.consent_code'], study_id='gregor_synthetic') }}::text AS \"has_access_policy\",\n        from {{ ref('gregor_synthetic_stg_participant') }} as participant WHERE maternal_id != '0'\n\n        UNION \n        -- Normal Direction of family relationship\n        SELECT\n        proband.participant_id as other_family_member, -- is proband's participant ID. -- Josh changed this as other_family_member, -- is proband's participant ID\n        participant.participant_id AS participant_id, -- is not proband's participant ID\n       CASE \n           WHEN participant.proband_relationship =  'Mother' THEN 'KIN:027' -- system: http://purl.org/ga4gh/kin.owl\n           WHEN participant.proband_relationship =  'Father' THEN 'KIN:028'\n           WHEN participant.proband_relationship =  'Sibling' THEN 'KIN:007'\n           WHEN participant.proband_relationship =  'Child' THEN 'KIN:032'\n           WHEN participant.proband_relationship =  'Maternal Half Sibling' THEN 'KIN:054'\n           WHEN participant.proband_relationship =  'Paternal Half Sibling' THEN 'KIN:055'\n           WHEN participant.proband_relationship =  'Maternal Grandmother' THEN 'KIN:052'\n           WHEN participant.proband_relationship =  'Maternal Grandfather' THEN 'KIN:052'\n           WHEN participant.proband_relationship =  'Paternal Grandmother' THEN 'KIN:053'\n           WHEN participant.proband_relationship =  'Paternal Grandfather' THEN 'KIN:053'\n           WHEN participant.proband_relationship =  'Maternal Aunt' THEN 'KIN:060'\n           WHEN participant.proband_relationship =  'Paternal Aunt' THEN 'KIN:061'\n           WHEN participant.proband_relationship =  'Maternal Uncle' THEN 'KIN:058'\n           WHEN participant.proband_relationship =  'Paternal Uncle' THEN 'KIN:059'           \n           WHEN participant.proband_relationship =  'Maternal 1st Cousin' THEN 'KIN:015'\n           WHEN participant.proband_relationship =  'Paternal 1st Cousin' THEN 'KIN:016'\n           WHEN participant.proband_relationship =  'Other' OR participant.proband_relationship =  'Unknown' THEN 'KIN:001'\n        END::text as \"relationship_code\", \n        {{ generate_global_id(prefix='ap',descriptor=['participant.consent_code'], study_id='gregor_synthetic') }}::text as \"has_access_policy\",\n        from {{ ref('gregor_synthetic_stg_participant') }} as participant\n        LEFT JOIN {{ ref('gregor_synthetic_stg_participant') }} as proband \n        ON proband.family_id = participant.family_id  -- If multiple probands per family, assuming siblings\n        AND proband.proband_relationship = 'Self'\n        where participant.proband_relationship != 'Self'\n          and participant.proband_relationship NOT IN ('Self', 'Niece', 'Nephew')\n\n        UNION \n        -- Flipped Direction of family relationship\n        SELECT \n        {{ generate_global_id(prefix='sb',descriptor=['participant.participant_id'], study_id='gregor_synthetic') }}::text as \"other_family_member\", -- not proband (niece or nephew's ID)\n        (   select DISTINCT CAST(participant_id as STRING) FROM {{ ref('gregor_synthetic_stg_participant') }} as stg \n            WHERE CAST(stg.family_id as STRING) = CAST(participant.family_id as STRING) \n                AND CAST(stg.proband_relationship AS STRING) = 'Self'\n        ) AS participant_id, -- proband's participant ID\n        'KIN:013' AS \"relationship_code\", -- isParentalSibling   \n        {{ generate_global_id(prefix='ap',descriptor=['participant.consent_code'], study_id='gregor_synthetic') }}::text as \"has_access_policy\",\n        from {{ ref('gregor_synthetic_stg_participant') }} as participant\n        where participant.proband_relationship IN ('Niece', 'Nephew')\n    )\n\n    select DISTINCT\n        {{ generate_global_id(prefix='fm',descriptor=['participant_id','source.other_family_member'],study_id='gregor_synthetic') }}::text as \"id\",\n        relationship_code, \n        {{ generate_global_id(prefix='sb',descriptor=['source.participant_id'], study_id='gregor_synthetic') }}::text AS \"family_member\",\n        {{ generate_global_id(prefix='sb',descriptor=['source.other_family_member'], study_id='gregor_synthetic') }}::text as \"other_family_member\"\n    from source", "language": "sql", "refs": [{"name": "gregor_synthetic_stg_participant", "package": null, "version": null}, {"name": "gregor_synthetic_stg_participant", "package": null, "version": null}, {"name": "gregor_synthetic_stg_participant", "package": null, "version": null}, {"name": "gregor_synthetic_stg_participant", "package": null, "version": null}, {"name": "gregor_synthetic_stg_participant", "package": null, "version": null}, {"name": "gregor_synthetic_stg_participant", "package": null, "version": null}, {"name": "gregor_synthetic_stg_participant", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.gregor_synthetic.gregor_synthetic_stg_participant"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/gregor_synthetic_ftd_familyrelationship.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        participant_id AS other_family_member,\n        twin_id AS participant_id,\n        'KIN:009' AS relationship_code,\n        'ap' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(participant.consent_code, '') as text))::text AS \"has_access_policy\",\n        from \"dbt\".\"main_main\".\"gregor_synthetic_stg_participant\" as participant WHERE twin_id != '0'\n\n        UNION \n\n        select \n        participant_id AS other_family_member, \n        paternal_id AS participant_id,\n        'KIN:028' AS relationship_code,\n        'ap' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(participant.consent_code, '') as text))::text AS \"has_access_policy\",\n        from \"dbt\".\"main_main\".\"gregor_synthetic_stg_participant\" as participant WHERE paternal_id != '0'\n\n        UNION \n\n        select \n        participant_id AS other_family_member, \n        maternal_id AS participant_id,\n        'KIN:027' AS relationship_code,\n        'ap' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(participant.consent_code, '') as text))::text AS \"has_access_policy\",\n        from \"dbt\".\"main_main\".\"gregor_synthetic_stg_participant\" as participant WHERE maternal_id != '0'\n\n        UNION \n        -- Normal Direction of family relationship\n        SELECT\n        proband.participant_id as other_family_member, -- is proband's participant ID. -- Josh changed this as other_family_member, -- is proband's participant ID\n        participant.participant_id AS participant_id, -- is not proband's participant ID\n       CASE \n           WHEN participant.proband_relationship =  'Mother' THEN 'KIN:027' -- system: http://purl.org/ga4gh/kin.owl\n           WHEN participant.proband_relationship =  'Father' THEN 'KIN:028'\n           WHEN participant.proband_relationship =  'Sibling' THEN 'KIN:007'\n           WHEN participant.proband_relationship =  'Child' THEN 'KIN:032'\n           WHEN participant.proband_relationship =  'Maternal Half Sibling' THEN 'KIN:054'\n           WHEN participant.proband_relationship =  'Paternal Half Sibling' THEN 'KIN:055'\n           WHEN participant.proband_relationship =  'Maternal Grandmother' THEN 'KIN:052'\n           WHEN participant.proband_relationship =  'Maternal Grandfather' THEN 'KIN:052'\n           WHEN participant.proband_relationship =  'Paternal Grandmother' THEN 'KIN:053'\n           WHEN participant.proband_relationship =  'Paternal Grandfather' THEN 'KIN:053'\n           WHEN participant.proband_relationship =  'Maternal Aunt' THEN 'KIN:060'\n           WHEN participant.proband_relationship =  'Paternal Aunt' THEN 'KIN:061'\n           WHEN participant.proband_relationship =  'Maternal Uncle' THEN 'KIN:058'\n           WHEN participant.proband_relationship =  'Paternal Uncle' THEN 'KIN:059'           \n           WHEN participant.proband_relationship =  'Maternal 1st Cousin' THEN 'KIN:015'\n           WHEN participant.proband_relationship =  'Paternal 1st Cousin' THEN 'KIN:016'\n           WHEN participant.proband_relationship =  'Other' OR participant.proband_relationship =  'Unknown' THEN 'KIN:001'\n        END::text as \"relationship_code\", \n        'ap' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(participant.consent_code, '') as text))::text as \"has_access_policy\",\n        from \"dbt\".\"main_main\".\"gregor_synthetic_stg_participant\" as participant\n        LEFT JOIN \"dbt\".\"main_main\".\"gregor_synthetic_stg_participant\" as proband \n        ON proband.family_id = participant.family_id  -- If multiple probands per family, assuming siblings\n        AND proband.proband_relationship = 'Self'\n        where participant.proband_relationship != 'Self'\n          and participant.proband_relationship NOT IN ('Self', 'Niece', 'Nephew')\n\n        UNION \n        -- Flipped Direction of family relationship\n        SELECT \n        'sb' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(participant.participant_id, '') as text))::text as \"other_family_member\", -- not proband (niece or nephew's ID)\n        (   select DISTINCT CAST(participant_id as STRING) FROM \"dbt\".\"main_main\".\"gregor_synthetic_stg_participant\" as stg \n            WHERE CAST(stg.family_id as STRING) = CAST(participant.family_id as STRING) \n                AND CAST(stg.proband_relationship AS STRING) = 'Self'\n        ) AS participant_id, -- proband's participant ID\n        'KIN:013' AS \"relationship_code\", -- isParentalSibling   \n        'ap' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(participant.consent_code, '') as text))::text as \"has_access_policy\",\n        from \"dbt\".\"main_main\".\"gregor_synthetic_stg_participant\" as participant\n        where participant.proband_relationship IN ('Niece', 'Nephew')\n    )\n\n    select DISTINCT\n        'fm' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(participant_id, '') as text) || '|' || 'gregor_synthetic' || '|' || cast(coalesce(source.other_family_member, '') as text))::text as \"id\",\n        relationship_code, \n        'sb' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(source.participant_id, '') as text))::text AS \"family_member\",\n        'sb' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(source.other_family_member, '') as text))::text as \"other_family_member\"\n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.gregor_synthetic_ftd_familymember": {"database": "dbt", "schema": "main_gregor_synthetic_data", "name": "gregor_synthetic_ftd_familymember", "resource_type": "model", "package_name": "ftd", "path": "gregor_synthetic/gregor_synthetic_ftd_familymember.sql", "original_file_path": "models/gregor_synthetic/gregor_synthetic_ftd_familymember.sql", "unique_id": "model.ftd.gregor_synthetic_ftd_familymember", "fqn": ["ftd", "gregor_synthetic", "gregor_synthetic_ftd_familymember"], "alias": "gregor_synthetic_ftd_familymember", "checksum": {"name": "sha256", "checksum": "7af1440c7e1efe4221c61fea7965d71c2d87dfb7d66f263181044ea7790db916"}, "config": {"enabled": true, "alias": null, "schema": "gregor_synthetic_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for gregor_synthetic_ftd_familymember.", "columns": {"family_member": {"name": "family_member", "description": "The family member Subject who is the relationship \"subject\".", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "family_role": {"name": "family_role", "description": "The \"role\" of this indiviudal in this family.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "family_id": {"name": "family_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/gregor_synthetic/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "gregor_synthetic_data"}, "created_at": 1757448969.7256825, "relation_name": "\"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_familymember\"", "raw_code": "{{ config(materialized='table', schema='gregor_synthetic_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='fm',descriptor=['participant.participant_id'], study_id='gregor_synthetic') }}::text as \"family_member\",\n        CASE participant.proband_relationship\n            WHEN 'Mother' THEN 'MTH'\n            WHEN 'Father' THEN 'FTH'\n            WHEN 'Sibling' THEN 'SIB'\n            WHEN 'Child' THEN 'CHILD'\n            WHEN 'Maternal Half Sibling' THEN 'HSIB'\n            WHEN 'Paternal Half Sibling' THEN 'HSIB'\n            WHEN 'Maternal Grandmother' THEN 'MGRMTH'\n            WHEN 'Maternal Grandfather' THEN 'MGRFTH'\n            WHEN 'Paternal Grandmother' THEN 'PGRMTH'\n            WHEN 'Paternal Grandfather' THEN 'PGRFTH'\n            WHEN 'Maternal Aunt' THEN 'MAUNT'\n            WHEN 'Paternal Aunt' THEN 'PAUNT'\n            WHEN 'Maternal Uncle' THEN 'MUNCLE'\n            WHEN 'Paternal Uncle' THEN 'PUNCLE'\n            WHEN 'Niece' THEN 'NIECE'\n            WHEN 'Nephew' THEN 'NEPHEW'\n            WHEN 'Maternal 1st Cousin' THEN 'MCOUSN'\n            WHEN 'Paternal 1st Cousin' THEN 'PCOUSN'\n            WHEN 'Self' THEN 'SNOMED:85900004'\n        END::text as \"family_role\",       \n        {{ generate_global_id(prefix='ap',descriptor=['participant.consent_code'], study_id='gregor_synthetic') }}::text as \"has_access_policy\",\n        {{ generate_global_id(prefix='fm',descriptor=['participant.participant_id'], study_id='gregor_synthetic') }}::text as \"id\",\n       {{ generate_global_id(prefix='fm',descriptor=['participant.family_id'], study_id='gregor_synthetic') }}::text as \"family_id\"\n        from {{ ref('gregor_synthetic_stg_participant') }} as participant\n        join {{ ref('gregor_synthetic_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "gregor_synthetic_stg_participant", "package": null, "version": null}, {"name": "gregor_synthetic_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/gregor_synthetic_ftd_familymember.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        'fm' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(participant.participant_id, '') as text))::text as \"family_member\",\n        CASE participant.proband_relationship\n            WHEN 'Mother' THEN 'MTH'\n            WHEN 'Father' THEN 'FTH'\n            WHEN 'Sibling' THEN 'SIB'\n            WHEN 'Child' THEN 'CHILD'\n            WHEN 'Maternal Half Sibling' THEN 'HSIB'\n            WHEN 'Paternal Half Sibling' THEN 'HSIB'\n            WHEN 'Maternal Grandmother' THEN 'MGRMTH'\n            WHEN 'Maternal Grandfather' THEN 'MGRFTH'\n            WHEN 'Paternal Grandmother' THEN 'PGRMTH'\n            WHEN 'Paternal Grandfather' THEN 'PGRFTH'\n            WHEN 'Maternal Aunt' THEN 'MAUNT'\n            WHEN 'Paternal Aunt' THEN 'PAUNT'\n            WHEN 'Maternal Uncle' THEN 'MUNCLE'\n            WHEN 'Paternal Uncle' THEN 'PUNCLE'\n            WHEN 'Niece' THEN 'NIECE'\n            WHEN 'Nephew' THEN 'NEPHEW'\n            WHEN 'Maternal 1st Cousin' THEN 'MCOUSN'\n            WHEN 'Paternal 1st Cousin' THEN 'PCOUSN'\n            WHEN 'Self' THEN 'SNOMED:85900004'\n        END::text as \"family_role\",       \n        'ap' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(participant.consent_code, '') as text))::text as \"has_access_policy\",\n        'fm' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(participant.participant_id, '') as text))::text as \"id\",\n       'fm' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(participant.family_id, '') as text))::text as \"family_id\"\n        from \"dbt\".\"main_main\".\"gregor_synthetic_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"gregor_synthetic_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.gregor_synthetic_ftd_subject": {"database": "dbt", "schema": "main_gregor_synthetic_data", "name": "gregor_synthetic_ftd_subject", "resource_type": "model", "package_name": "ftd", "path": "gregor_synthetic/gregor_synthetic_ftd_subject.sql", "original_file_path": "models/gregor_synthetic/gregor_synthetic_ftd_subject.sql", "unique_id": "model.ftd.gregor_synthetic_ftd_subject", "fqn": ["ftd", "gregor_synthetic", "gregor_synthetic_ftd_subject"], "alias": "gregor_synthetic_ftd_subject", "checksum": {"name": "sha256", "checksum": "25cec97177c125898fec0789789d501daa8ad7519922889abc5b615e633bf14e"}, "config": {"enabled": true, "alias": null, "schema": "gregor_synthetic_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for gregor_synthetic_ftd_subject.", "columns": {"subject_type": {"name": "subject_type", "description": "Type of entity this record represents", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "organism_type": {"name": "organism_type", "description": "Organism Type Label", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_demographics_id": {"name": "has_demographics_id", "description": "A demographic summary of the participant.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/gregor_synthetic/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "gregor_synthetic_data"}, "created_at": 1757448969.7144456, "relation_name": "\"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_subject\"", "raw_code": "{{ config(materialized='table', schema='gregor_synthetic_data') }}\n    with source as (\n        select \n        -- GEN_UNKNOWN.subject_type::text as \"subject_type\",\n    --    GEN_UNKNOWN.organism_type::text as \"organism_type\",\n       {{ generate_global_id(prefix='ap',descriptor=['participant.consent_code'], study_id='gregor_synthetic') }}::text as \"has_access_policy\",\n       {{ generate_global_id(prefix='sb',descriptor=['participant.participant_id'], study_id='gregor_synthetic') }}::text as \"id\",\n    {# {{ generate_global_id(prefix='',descriptor=[''], study_id='gregor_synthetic') }}::text as \"has_demographics_id\" #}\n        from {{ ref('gregor_synthetic_stg_participant') }} as participant\n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "gregor_synthetic_stg_participant", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.gregor_synthetic.gregor_synthetic_stg_participant"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/gregor_synthetic_ftd_subject.sql", "compiled": true, "compiled_code": "\n    with source as (\n        select \n        -- GEN_UNKNOWN.subject_type::text as \"subject_type\",\n    --    GEN_UNKNOWN.organism_type::text as \"organism_type\",\n       'ap' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(participant.consent_code, '') as text))::text as \"has_access_policy\",\n       'sb' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(participant.participant_id, '') as text))::text as \"id\",\n    \n        from \"dbt\".\"main_main\".\"gregor_synthetic_stg_participant\" as participant\n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.gregor_synthetic_ftd_family": {"database": "dbt", "schema": "main_gregor_synthetic_data", "name": "gregor_synthetic_ftd_family", "resource_type": "model", "package_name": "ftd", "path": "gregor_synthetic/gregor_synthetic_ftd_family.sql", "original_file_path": "models/gregor_synthetic/gregor_synthetic_ftd_family.sql", "unique_id": "model.ftd.gregor_synthetic_ftd_family", "fqn": ["ftd", "gregor_synthetic", "gregor_synthetic_ftd_family"], "alias": "gregor_synthetic_ftd_family", "checksum": {"name": "sha256", "checksum": "083e443efd83e8e36f8fb7c5c0feda74e0c567bbbcbf19c67b3e68f9054e9d6a"}, "config": {"enabled": true, "alias": null, "schema": "gregor_synthetic_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for gregor_synthetic_ftd_family.", "columns": {"family_type": {"name": "family_type", "description": "Describes the 'type' of study family, eg, trio.", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "family_description": {"name": "family_description", "description": "Free title describing the study family, such as potential inheritance or details about consanguinity", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "consanguinity": {"name": "consanguinity", "description": "Is there known or suspected consanguinity in this study family?", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "family_study_focus": {"name": "family_study_focus", "description": "What is this study family investigating? EG, a specific condition. The code should be prefixed with a recognizable curie.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/gregor_synthetic/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "gregor_synthetic_data"}, "created_at": 1757448969.7149591, "relation_name": "\"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_family\"", "raw_code": "{{ config(materialized='table', schema='gregor_synthetic_data') }}\n\n    with source as (\n        select \n        GEN_UNKNOWN.family_type::text as \"family_type\",\n       GEN_UNKNOWN.family_description::text as \"family_description\",\n       GEN_UNKNOWN.consanguinity::text as \"consanguinity\",\n       GEN_UNKNOWN.family_study_focus::text as \"family_study_focus\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='gregor_synthetic') }}::text as \"has_access_policy\",\n        -- participant.family_id::text as \"id\"\n       -- Check if using the auto-generated id is correct. \n       {{ generate_global_id(prefix='',descriptor=[''], study_id='gregor_synthetic') }}::text as \"id\"\n        from {{ ref('gregor_synthetic_stg_participant') }} as participant\n        join {{ ref('gregor_synthetic_stg_phenotype') }} as phenotype\n        on participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "gregor_synthetic_stg_participant", "package": null, "version": null}, {"name": "gregor_synthetic_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/gregor_synthetic_ftd_family.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        GEN_UNKNOWN.family_type::text as \"family_type\",\n       GEN_UNKNOWN.family_description::text as \"family_description\",\n       GEN_UNKNOWN.consanguinity::text as \"consanguinity\",\n       GEN_UNKNOWN.family_study_focus::text as \"family_study_focus\",\n       '' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(, '') as text))::text as \"has_access_policy\",\n        -- participant.family_id::text as \"id\"\n       -- Check if using the auto-generated id is correct. \n       '' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(, '') as text))::text as \"id\"\n        from \"dbt\".\"main_main\".\"gregor_synthetic_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"gregor_synthetic_stg_phenotype\" as phenotype\n        on participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.gregor_synthetic_ftd_file": {"database": "dbt", "schema": "main_gregor_synthetic_data", "name": "gregor_synthetic_ftd_file", "resource_type": "model", "package_name": "ftd", "path": "gregor_synthetic/gregor_synthetic_ftd_file.sql", "original_file_path": "models/gregor_synthetic/gregor_synthetic_ftd_file.sql", "unique_id": "model.ftd.gregor_synthetic_ftd_file", "fqn": ["ftd", "gregor_synthetic", "gregor_synthetic_ftd_file"], "alias": "gregor_synthetic_ftd_file", "checksum": {"name": "sha256", "checksum": "c0bf2ad5fca80e3b4eea43f26db49383a69f8353e46cd563dbf0599c743268a2"}, "config": {"enabled": true, "alias": null, "schema": "gregor_synthetic_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for gregor_synthetic_ftd_file.", "columns": {"filename": {"name": "filename", "description": "The name of the file.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "format": {"name": "format", "description": "The format of the file.", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "data_type": {"name": "data_type", "description": "The type of data within this file.", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "size": {"name": "size", "description": "Size of the file, in Bytes.", "meta": {}, "data_type": "integer", "constraints": [], "quote": null, "tags": [], "granularity": null}, "drs_uri": {"name": "drs_uri", "description": "DRS location to access the data.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "file_metadata": {"name": "file_metadata", "description": "Additional metadata about the contents of the file, eg, genome reference build.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/gregor_synthetic/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "gregor_synthetic_data"}, "created_at": 1757448969.7095883, "relation_name": "\"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_file\"", "raw_code": "{{ config(materialized='table', schema='gregor_synthetic_data') }}\n\n    with source as (\n        select \n        GEN_UNKNOWN.filename::text as \"filename\",\n       GEN_UNKNOWN.format::text as \"format\",\n       GEN_UNKNOWN.data_type::text as \"data_type\",\n       GEN_UNKNOWN.size::integer as \"size\",\n       GEN_UNKNOWN.drs_uri::text as \"drs_uri\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='gregor_synthetic') }}::text as \"file_metadata\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='gregor_synthetic') }}::text as \"has_access_policy\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='gregor_synthetic') }}::text as \"id\"\n        from {{ ref('gregor_synthetic_stg_participant') }} as participant\n        join {{ ref('gregor_synthetic_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "gregor_synthetic_stg_participant", "package": null, "version": null}, {"name": "gregor_synthetic_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/gregor_synthetic_ftd_file.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        GEN_UNKNOWN.filename::text as \"filename\",\n       GEN_UNKNOWN.format::text as \"format\",\n       GEN_UNKNOWN.data_type::text as \"data_type\",\n       GEN_UNKNOWN.size::integer as \"size\",\n       GEN_UNKNOWN.drs_uri::text as \"drs_uri\",\n       '' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(, '') as text))::text as \"file_metadata\",\n       '' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(, '') as text))::text as \"has_access_policy\",\n       '' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(, '') as text))::text as \"id\"\n        from \"dbt\".\"main_main\".\"gregor_synthetic_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"gregor_synthetic_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.gregor_synthetic_ftd_file_sample": {"database": "dbt", "schema": "main_gregor_synthetic_data", "name": "gregor_synthetic_ftd_file_sample", "resource_type": "model", "package_name": "ftd", "path": "gregor_synthetic/gregor_synthetic_ftd_file_sample.sql", "original_file_path": "models/gregor_synthetic/gregor_synthetic_ftd_file_sample.sql", "unique_id": "model.ftd.gregor_synthetic_ftd_file_sample", "fqn": ["ftd", "gregor_synthetic", "gregor_synthetic_ftd_file_sample"], "alias": "gregor_synthetic_ftd_file_sample", "checksum": {"name": "sha256", "checksum": "c4e7e27ce8a3e92fd5c1a648c30428ff44afc967af6e8f619f9656f75d22a60a"}, "config": {"enabled": true, "alias": null, "schema": "gregor_synthetic_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for gregor_synthetic_ftd_file_sample.", "columns": {"file_id": {"name": "file_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "sample_id": {"name": "sample_id", "description": "The Samples(s) used to generate data in this file.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/gregor_synthetic/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "gregor_synthetic_data"}, "created_at": 1757448969.710764, "relation_name": "\"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_file_sample\"", "raw_code": "{{ config(materialized='table', schema='gregor_synthetic_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='gregor_synthetic') }}::text as \"file_id\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='gregor_synthetic') }}::text as \"sample_id\"\n        from {{ ref('gregor_synthetic_stg_participant') }} as participant\n        join {{ ref('gregor_synthetic_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "gregor_synthetic_stg_participant", "package": null, "version": null}, {"name": "gregor_synthetic_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/gregor_synthetic_ftd_file_sample.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(, '') as text))::text as \"file_id\",\n       '' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(, '') as text))::text as \"sample_id\"\n        from \"dbt\".\"main_main\".\"gregor_synthetic_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"gregor_synthetic_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.gregor_synthetic_ftd_subjectassertion": {"database": "dbt", "schema": "main_gregor_synthetic_data", "name": "gregor_synthetic_ftd_subjectassertion", "resource_type": "model", "package_name": "ftd", "path": "gregor_synthetic/gregor_synthetic_ftd_subjectassertion.sql", "original_file_path": "models/gregor_synthetic/gregor_synthetic_ftd_subjectassertion.sql", "unique_id": "model.ftd.gregor_synthetic_ftd_subjectassertion", "fqn": ["ftd", "gregor_synthetic", "gregor_synthetic_ftd_subjectassertion"], "alias": "gregor_synthetic_ftd_subjectassertion", "checksum": {"name": "sha256", "checksum": "1a6a1144f90a92d3b8da062a2a617a71468901769c148da5102ce0aa1c4944ff"}, "config": {"enabled": true, "alias": null, "schema": "gregor_synthetic_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for gregor_synthetic_ftd_subjectassertion.", "columns": {"assertion_type": {"name": "assertion_type", "description": "The semantic type of the resource, eg, Condition.", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "age_at_assertion": {"name": "age_at_assertion", "description": "The age in decimal years of the Subject when the assertion was made.", "meta": {}, "data_type": "number", "constraints": [], "quote": null, "tags": [], "granularity": null}, "age_at_event": {"name": "age_at_event", "description": "The age in decimal years of the Subject at the time point which the assertion describes, | eg, age of onset or when a measurement was performed.", "meta": {}, "data_type": "number", "constraints": [], "quote": null, "tags": [], "granularity": null}, "age_at_resolution": {"name": "age_at_resolution", "description": "The age in decimal years of the Subject when the asserted state was resolved.", "meta": {}, "data_type": "number", "constraints": [], "quote": null, "tags": [], "granularity": null}, "code": {"name": "code", "description": "The structured term defining the meaning of the assertion.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "display": {"name": "display", "description": "The friendly display string of the coded term", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "value_code": {"name": "value_code", "description": "The structured term defining the value of the assertion.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "value_display": {"name": "value_display", "description": "The friendly display string of the coded term for the value of the assertion.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "value_number": {"name": "value_number", "description": "The numeric value of the assertion.", "meta": {}, "data_type": "number", "constraints": [], "quote": null, "tags": [], "granularity": null}, "value_units": {"name": "value_units", "description": "The structured term defining the units of the value.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "value_units_display": {"name": "value_units_display", "description": "The friendly display string of units of the value.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "subject_id": {"name": "subject_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/gregor_synthetic/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "gregor_synthetic_data"}, "created_at": 1757448969.722301, "relation_name": "\"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_subjectassertion\"", "raw_code": "{{ config(materialized='table', schema='gregor_synthetic_data') }}\n\n    with source as (\n        select \n        -- GEN_UNKNOWN.assertion_type::text as \"assertion_type\",\n        -- GEN_UNKNOWN.age_at_assertion::text as \"age_at_assertion\",\n        phenotype.onset_age_range::text as \"age_at_event\",\n        -- GEN_UNKNOWN.age_at_resolution::text as \"age_at_resolution\",\n        CASE \n            WHEN UPPER(phenotype.ontology) = 'HPO' THEN 'HP'\n            WHEN UPPER(phenotype.ontology) = 'MONDO' THEN 'MONDO'\n            WHEN UPPER(phenotype.ontology) = 'MAXO' THEN 'MAXO'\n            WHEN UPPER(phenotype.ontology) = 'NCIT' THEN 'NCIT'\n            WHEN UPPER(phenotype.ontology) = 'SNOMED CT' THEN 'SNOMED'\n            WHEN UPPER(phenotype.ontology) = 'SYMP' THEN 'SYMP'\n            WHEN UPPER(phenotype.ontology) = 'LOINC' THEN 'LOINC'\n            WHEN UPPER(phenotype.ontology) = 'MEDDRA' THEN 'MEDDRA'\n            WHEN UPPER(phenotype.ontology) = 'MESH' THEN 'MESH'\n            WHEN UPPER(phenotype.ontology) = 'UCUM' THEN 'UCUM'\n            WHEN UPPER(phenotype.ontology) = 'OMIT' THEN 'OMIT'\n            WHEN UPPER(phenotype.ontology) = 'OMIM' THEN 'MIM'\n            WHEN UPPER(phenotype.ontology) = 'CDCREC' THEN 'CDCREC'\n            ELSE phenotype.ontology\n        END || ':' || SPLIT_PART(phenotype.term_id, ':', 2)::text as \"code\",\n        -- GEN_UNKNOWN.display::text as \"display\",\n        CASE participant.affected_status\n            WHEN 'Affected' THEN 'SCTID:782964007'\n            ELSE null\n        END::text as \"value_code\",\n        phenotype.presence::text as \"value_display\",\n        participant.age_at_enrollment::text as \"value_number\",\n        -- GEN_UNKNOWN.value_units::text as \"value_units\",\n        -- GEN_UNKNOWN.value_units_display ::text as \"value_units_display\",\n        -- GEN_UNKNOWN.has_access_policy::text as \"has_access_policy\",\n        {{ generate_global_id(prefix='ap',descriptor=['participant.consent_code'], study_id='gregor_synthetic') }}::text as \"has_access_policy\",\n       {{ generate_global_id(prefix='sa',descriptor=['participant.participant_id'], study_id='gregor_synthetic') }}::text as \"id\",\n       {{ generate_global_id(prefix='sb',descriptor=['phenotype.participant_id'], study_id='gregor_synthetic') }}::text as \"Subject_id\"\n        from {{ ref('gregor_synthetic_stg_participant') }} as participant\n        join {{ ref('gregor_synthetic_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n    select \n        * \n    from source\n\n    -- ,\n    -- ap as (\n    --     select\n    --     disease_limitation, id\n    --     from {{ ref('gregor_synthetic_ftd_accesspolicy') }}\n    -- )\n\n    -- select \n    --     source.*,\n    --     ap.id::text as \"has_access_policy\"\n    -- from source\n    -- left join ap \n    -- on source.value_code = ap.disease_limitation", "language": "sql", "refs": [{"name": "gregor_synthetic_stg_participant", "package": null, "version": null}, {"name": "gregor_synthetic_stg_phenotype", "package": null, "version": null}, {"name": "gregor_synthetic_ftd_accesspolicy", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype", "model.ftd.gregor_synthetic_ftd_accesspolicy"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/gregor_synthetic_ftd_subjectassertion.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        -- GEN_UNKNOWN.assertion_type::text as \"assertion_type\",\n        -- GEN_UNKNOWN.age_at_assertion::text as \"age_at_assertion\",\n        phenotype.onset_age_range::text as \"age_at_event\",\n        -- GEN_UNKNOWN.age_at_resolution::text as \"age_at_resolution\",\n        CASE \n            WHEN UPPER(phenotype.ontology) = 'HPO' THEN 'HP'\n            WHEN UPPER(phenotype.ontology) = 'MONDO' THEN 'MONDO'\n            WHEN UPPER(phenotype.ontology) = 'MAXO' THEN 'MAXO'\n            WHEN UPPER(phenotype.ontology) = 'NCIT' THEN 'NCIT'\n            WHEN UPPER(phenotype.ontology) = 'SNOMED CT' THEN 'SNOMED'\n            WHEN UPPER(phenotype.ontology) = 'SYMP' THEN 'SYMP'\n            WHEN UPPER(phenotype.ontology) = 'LOINC' THEN 'LOINC'\n            WHEN UPPER(phenotype.ontology) = 'MEDDRA' THEN 'MEDDRA'\n            WHEN UPPER(phenotype.ontology) = 'MESH' THEN 'MESH'\n            WHEN UPPER(phenotype.ontology) = 'UCUM' THEN 'UCUM'\n            WHEN UPPER(phenotype.ontology) = 'OMIT' THEN 'OMIT'\n            WHEN UPPER(phenotype.ontology) = 'OMIM' THEN 'MIM'\n            WHEN UPPER(phenotype.ontology) = 'CDCREC' THEN 'CDCREC'\n            ELSE phenotype.ontology\n        END || ':' || SPLIT_PART(phenotype.term_id, ':', 2)::text as \"code\",\n        -- GEN_UNKNOWN.display::text as \"display\",\n        CASE participant.affected_status\n            WHEN 'Affected' THEN 'SCTID:782964007'\n            ELSE null\n        END::text as \"value_code\",\n        phenotype.presence::text as \"value_display\",\n        participant.age_at_enrollment::text as \"value_number\",\n        -- GEN_UNKNOWN.value_units::text as \"value_units\",\n        -- GEN_UNKNOWN.value_units_display ::text as \"value_units_display\",\n        -- GEN_UNKNOWN.has_access_policy::text as \"has_access_policy\",\n        'ap' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(participant.consent_code, '') as text))::text as \"has_access_policy\",\n       'sa' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(participant.participant_id, '') as text))::text as \"id\",\n       'sb' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(phenotype.participant_id, '') as text))::text as \"Subject_id\"\n        from \"dbt\".\"main_main\".\"gregor_synthetic_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"gregor_synthetic_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n    select \n        * \n    from source\n\n    -- ,\n    -- ap as (\n    --     select\n    --     disease_limitation, id\n    --     from \"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_accesspolicy\"\n    -- )\n\n    -- select \n    --     source.*,\n    --     ap.id::text as \"has_access_policy\"\n    -- from source\n    -- left join ap \n    -- on source.value_code = ap.disease_limitation", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.gregor_synthetic_ftd_familyrelationship_external_id": {"database": "dbt", "schema": "main_gregor_synthetic_data", "name": "gregor_synthetic_ftd_familyrelationship_external_id", "resource_type": "model", "package_name": "ftd", "path": "gregor_synthetic/gregor_synthetic_ftd_familyrelationship_external_id.sql", "original_file_path": "models/gregor_synthetic/gregor_synthetic_ftd_familyrelationship_external_id.sql", "unique_id": "model.ftd.gregor_synthetic_ftd_familyrelationship_external_id", "fqn": ["ftd", "gregor_synthetic", "gregor_synthetic_ftd_familyrelationship_external_id"], "alias": "gregor_synthetic_ftd_familyrelationship_external_id", "checksum": {"name": "sha256", "checksum": "aa11d9c29acabd85dc03e0d1ec5c7425185c4d25fc2cbcd6aa99a8c9747bc28e"}, "config": {"enabled": true, "alias": null, "schema": "gregor_synthetic_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for gregor_synthetic_ftd_familyrelationship_external_id.", "columns": {"familyrelationship_id": {"name": "familyrelationship_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/gregor_synthetic/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "gregor_synthetic_data"}, "created_at": 1757448969.7186034, "relation_name": "\"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_familyrelationship_external_id\"", "raw_code": "{{ config(materialized='table', schema='gregor_synthetic_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='fr',descriptor=['participant.participant_id'], study_id='gregor_synthetic') }}::text as \"FamilyRelationship_id\",\n    --    GEN_UNKNOWN.external_id::text as \"external_id\"\n        from {{ ref('gregor_synthetic_stg_participant') }} as participant\n        join {{ ref('gregor_synthetic_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "gregor_synthetic_stg_participant", "package": null, "version": null}, {"name": "gregor_synthetic_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/gregor_synthetic_ftd_familyrelationship_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        'fr' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(participant.participant_id, '') as text))::text as \"FamilyRelationship_id\",\n    --    GEN_UNKNOWN.external_id::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"gregor_synthetic_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"gregor_synthetic_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.gregor_synthetic_ftd_aliquot_external_id": {"database": "dbt", "schema": "main_gregor_synthetic_data", "name": "gregor_synthetic_ftd_aliquot_external_id", "resource_type": "model", "package_name": "ftd", "path": "gregor_synthetic/gregor_synthetic_ftd_aliquot_external_id.sql", "original_file_path": "models/gregor_synthetic/gregor_synthetic_ftd_aliquot_external_id.sql", "unique_id": "model.ftd.gregor_synthetic_ftd_aliquot_external_id", "fqn": ["ftd", "gregor_synthetic", "gregor_synthetic_ftd_aliquot_external_id"], "alias": "gregor_synthetic_ftd_aliquot_external_id", "checksum": {"name": "sha256", "checksum": "337835746e9c54877c1e384ef9df0a01d001311efe5f7b12f0c0292dc32580f3"}, "config": {"enabled": true, "alias": null, "schema": "gregor_synthetic_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for gregor_synthetic_ftd_aliquot_external_id.", "columns": {"aliquot_id": {"name": "aliquot_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/gregor_synthetic/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "gregor_synthetic_data"}, "created_at": 1757448969.7122505, "relation_name": "\"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_aliquot_external_id\"", "raw_code": "{{ config(materialized='table', schema='gregor_synthetic_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='gregor_synthetic') }}::text as \"aliquot_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from {{ ref('gregor_synthetic_stg_participant') }} as participant\n        join {{ ref('gregor_synthetic_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "gregor_synthetic_stg_participant", "package": null, "version": null}, {"name": "gregor_synthetic_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/gregor_synthetic_ftd_aliquot_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(, '') as text))::text as \"aliquot_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"gregor_synthetic_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"gregor_synthetic_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.gregor_synthetic_ftd_filemetadata_external_id": {"database": "dbt", "schema": "main_gregor_synthetic_data", "name": "gregor_synthetic_ftd_filemetadata_external_id", "resource_type": "model", "package_name": "ftd", "path": "gregor_synthetic/gregor_synthetic_ftd_filemetadata_external_id.sql", "original_file_path": "models/gregor_synthetic/gregor_synthetic_ftd_filemetadata_external_id.sql", "unique_id": "model.ftd.gregor_synthetic_ftd_filemetadata_external_id", "fqn": ["ftd", "gregor_synthetic", "gregor_synthetic_ftd_filemetadata_external_id"], "alias": "gregor_synthetic_ftd_filemetadata_external_id", "checksum": {"name": "sha256", "checksum": "485a5b013b2c6a24492ff2d13cd498cb64d1f1c5c827381f44ef31c8fef927bd"}, "config": {"enabled": true, "alias": null, "schema": "gregor_synthetic_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for gregor_synthetic_ftd_filemetadata_external_id.", "columns": {"filemetadata_id": {"name": "filemetadata_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/gregor_synthetic/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "gregor_synthetic_data"}, "created_at": 1757448969.7236288, "relation_name": "\"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_filemetadata_external_id\"", "raw_code": "{{ config(materialized='table', schema='gregor_synthetic_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='gregor_synthetic') }}::text as \"filemetadata_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from {{ ref('gregor_synthetic_stg_participant') }} as participant\n        join {{ ref('gregor_synthetic_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "gregor_synthetic_stg_participant", "package": null, "version": null}, {"name": "gregor_synthetic_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/gregor_synthetic_ftd_filemetadata_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(, '') as text))::text as \"filemetadata_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"gregor_synthetic_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"gregor_synthetic_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.gregor_synthetic_ftd_demographics_external_id": {"database": "dbt", "schema": "main_gregor_synthetic_data", "name": "gregor_synthetic_ftd_demographics_external_id", "resource_type": "model", "package_name": "ftd", "path": "gregor_synthetic/gregor_synthetic_ftd_demographics_external_id.sql", "original_file_path": "models/gregor_synthetic/gregor_synthetic_ftd_demographics_external_id.sql", "unique_id": "model.ftd.gregor_synthetic_ftd_demographics_external_id", "fqn": ["ftd", "gregor_synthetic", "gregor_synthetic_ftd_demographics_external_id"], "alias": "gregor_synthetic_ftd_demographics_external_id", "checksum": {"name": "sha256", "checksum": "afc3186433102afee2a86f844d7c69e1e68d052fc9536a39b327b4fe31bf6dab"}, "config": {"enabled": true, "alias": null, "schema": "gregor_synthetic_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for gregor_synthetic_ftd_demographics_external_id.", "columns": {"demographics_id": {"name": "demographics_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/gregor_synthetic/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "gregor_synthetic_data"}, "created_at": 1757448969.7139015, "relation_name": "\"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_demographics_external_id\"", "raw_code": "{{ config(materialized='table', schema='gregor_synthetic_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='dm',descriptor=['participant.participant_id'], study_id='gregor_synthetic') }}::text as \"Demographics_id\",\n    --    GEN_UNKNOWN.external_id::text as \"external_id\"\n       from {{ ref('gregor_synthetic_stg_participant') }} as participant\n        join {{ ref('gregor_synthetic_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "gregor_synthetic_stg_participant", "package": null, "version": null}, {"name": "gregor_synthetic_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/gregor_synthetic_ftd_demographics_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        'dm' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(participant.participant_id, '') as text))::text as \"Demographics_id\",\n    --    GEN_UNKNOWN.external_id::text as \"external_id\"\n       from \"dbt\".\"main_main\".\"gregor_synthetic_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"gregor_synthetic_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.gregor_synthetic_ftd_study_principal_investigator": {"database": "dbt", "schema": "main_gregor_synthetic_data", "name": "gregor_synthetic_ftd_study_principal_investigator", "resource_type": "model", "package_name": "ftd", "path": "gregor_synthetic/gregor_synthetic_ftd_study_principal_investigator.sql", "original_file_path": "models/gregor_synthetic/gregor_synthetic_ftd_study_principal_investigator.sql", "unique_id": "model.ftd.gregor_synthetic_ftd_study_principal_investigator", "fqn": ["ftd", "gregor_synthetic", "gregor_synthetic_ftd_study_principal_investigator"], "alias": "gregor_synthetic_ftd_study_principal_investigator", "checksum": {"name": "sha256", "checksum": "5efb8ce3bcf04a84fcf9fe33588ae7f0a463d09e8257185e14fcfe5a33541632"}, "config": {"enabled": true, "alias": null, "schema": "gregor_synthetic_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for gregor_synthetic_ftd_study_principal_investigator.", "columns": {"study_id": {"name": "study_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "principal_investigator": {"name": "principal_investigator", "description": "Principal Investigator", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/gregor_synthetic/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "gregor_synthetic_data"}, "created_at": 1757448969.7082155, "relation_name": "\"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_study_principal_investigator\"", "raw_code": "{{ config(materialized='table', schema='gregor_synthetic_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='gregor_synthetic') }}::text as \"study_id\",\n       GEN_UNKNOWN.principal_investigator::text as \"principal_investigator\"\n        from {{ ref('gregor_synthetic_stg_participant') }} as participant\n        join {{ ref('gregor_synthetic_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "gregor_synthetic_stg_participant", "package": null, "version": null}, {"name": "gregor_synthetic_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/gregor_synthetic_ftd_study_principal_investigator.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(, '') as text))::text as \"study_id\",\n       GEN_UNKNOWN.principal_investigator::text as \"principal_investigator\"\n        from \"dbt\".\"main_main\".\"gregor_synthetic_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"gregor_synthetic_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.gregor_synthetic_ftd_file_external_id": {"database": "dbt", "schema": "main_gregor_synthetic_data", "name": "gregor_synthetic_ftd_file_external_id", "resource_type": "model", "package_name": "ftd", "path": "gregor_synthetic/gregor_synthetic_ftd_file_external_id.sql", "original_file_path": "models/gregor_synthetic/gregor_synthetic_ftd_file_external_id.sql", "unique_id": "model.ftd.gregor_synthetic_ftd_file_external_id", "fqn": ["ftd", "gregor_synthetic", "gregor_synthetic_ftd_file_external_id"], "alias": "gregor_synthetic_ftd_file_external_id", "checksum": {"name": "sha256", "checksum": "0aac5241bf682aaf4579ebd58c57306b8453445a66bdfff14f292a537f76bc9a"}, "config": {"enabled": true, "alias": null, "schema": "gregor_synthetic_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for gregor_synthetic_ftd_file_external_id.", "columns": {"file_id": {"name": "file_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/gregor_synthetic/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "gregor_synthetic_data"}, "created_at": 1757448969.7130663, "relation_name": "\"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_file_external_id\"", "raw_code": "{{ config(materialized='table', schema='gregor_synthetic_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='gregor_synthetic') }}::text as \"file_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from {{ ref('gregor_synthetic_stg_participant') }} as participant\n        join {{ ref('gregor_synthetic_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "gregor_synthetic_stg_participant", "package": null, "version": null}, {"name": "gregor_synthetic_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/gregor_synthetic_ftd_file_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(, '') as text))::text as \"file_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"gregor_synthetic_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"gregor_synthetic_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.gregor_synthetic_ftd_sourcedata_external_id": {"database": "dbt", "schema": "main_gregor_synthetic_data", "name": "gregor_synthetic_ftd_sourcedata_external_id", "resource_type": "model", "package_name": "ftd", "path": "gregor_synthetic/gregor_synthetic_ftd_sourcedata_external_id.sql", "original_file_path": "models/gregor_synthetic/gregor_synthetic_ftd_sourcedata_external_id.sql", "unique_id": "model.ftd.gregor_synthetic_ftd_sourcedata_external_id", "fqn": ["ftd", "gregor_synthetic", "gregor_synthetic_ftd_sourcedata_external_id"], "alias": "gregor_synthetic_ftd_sourcedata_external_id", "checksum": {"name": "sha256", "checksum": "89a7771f389cfa2de2e17ab04a920f1efb30e5507220b520d6d7f9727acf8159"}, "config": {"enabled": true, "alias": null, "schema": "gregor_synthetic_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for gregor_synthetic_ftd_sourcedata_external_id.", "columns": {"sourcedata_id": {"name": "sourcedata_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/gregor_synthetic/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "gregor_synthetic_data"}, "created_at": 1757448969.726106, "relation_name": "\"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_sourcedata_external_id\"", "raw_code": "{{ config(materialized='table', schema='gregor_synthetic_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='gregor_synthetic') }}::text as \"sourcedata_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from {{ ref('gregor_synthetic_stg_participant') }} as participant\n        join {{ ref('gregor_synthetic_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "gregor_synthetic_stg_participant", "package": null, "version": null}, {"name": "gregor_synthetic_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/gregor_synthetic_ftd_sourcedata_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(, '') as text))::text as \"sourcedata_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"gregor_synthetic_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"gregor_synthetic_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.gregor_synthetic_ftd_demographics_race": {"database": "dbt", "schema": "main_gregor_synthetic_data", "name": "gregor_synthetic_ftd_demographics_race", "resource_type": "model", "package_name": "ftd", "path": "gregor_synthetic/gregor_synthetic_ftd_demographics_race.sql", "original_file_path": "models/gregor_synthetic/gregor_synthetic_ftd_demographics_race.sql", "unique_id": "model.ftd.gregor_synthetic_ftd_demographics_race", "fqn": ["ftd", "gregor_synthetic", "gregor_synthetic_ftd_demographics_race"], "alias": "gregor_synthetic_ftd_demographics_race", "checksum": {"name": "sha256", "checksum": "9243dcbafec30fc12d41a97430c14d27d363353e3d8a2e9c2eb174cd9f085eb5"}, "config": {"enabled": true, "alias": null, "schema": "gregor_synthetic_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for gregor_synthetic_ftd_demographics_race.", "columns": {"demographics_id": {"name": "demographics_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "race": {"name": "race", "description": "Reported race as defined by the 1997 OMB directives.", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/gregor_synthetic/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "gregor_synthetic_data"}, "created_at": 1757448969.7167923, "relation_name": "\"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_demographics_race\"", "raw_code": "{{ config(materialized='table', schema='gregor_synthetic_data') }}\n\n    with source as (\n        select \n            {{ generate_global_id(prefix='dm',descriptor=['participant.participant_id'], study_id='gregor_synthetic') }}::text as \"Demographics_id\",\n         CASE \n            WHEN UNNEST(SPLIT(participant.reported_race, '|')) = 'American Indian or Alaska Native' THEN 'american_indian_or_alaskan_native'\n            WHEN UNNEST(SPLIT(participant.reported_race, '|')) = 'Asian' THEN 'asian'\n            WHEN UNNEST(SPLIT(participant.reported_race, '|')) = 'Black or African American' THEN 'black_or_african_american'\n            WHEN UNNEST(SPLIT(participant.reported_race, '|')) = 'Native Hawaiian or Other Pacific Islander' THEN 'native_hawaiian_or_pacific_islander'\n            WHEN UNNEST(SPLIT(participant.reported_race, '|')) = 'White' THEN 'white'\n            WHEN UNNEST(SPLIT(participant.reported_race, '|')) = 'Middle Eastern or North African' THEN 'other_race'\n            WHEN UNNEST(SPLIT(participant.reported_race, '|')) = 'Other Race' THEN 'other_race'\n            WHEN UNNEST(SPLIT(participant.reported_race, '|')) = 'Unknown' THEN 'unknown'\n            WHEN UNNEST(SPLIT(participant.reported_race, '|')) = 'asked but unknown' THEN 'asked_but_unknown'\n            WHEN STRING_SPLIT(participant.reported_race, '|') IS NULL THEN 'unknown'\n        END::text as \"race\"\n        from {{ ref('gregor_synthetic_stg_participant') }} as participant\n        join {{ ref('gregor_synthetic_stg_phenotype') }} as phenotype\n    on participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "gregor_synthetic_stg_participant", "package": null, "version": null}, {"name": "gregor_synthetic_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/gregor_synthetic_ftd_demographics_race.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n            'dm' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(participant.participant_id, '') as text))::text as \"Demographics_id\",\n         CASE \n            WHEN UNNEST(SPLIT(participant.reported_race, '|')) = 'American Indian or Alaska Native' THEN 'american_indian_or_alaskan_native'\n            WHEN UNNEST(SPLIT(participant.reported_race, '|')) = 'Asian' THEN 'asian'\n            WHEN UNNEST(SPLIT(participant.reported_race, '|')) = 'Black or African American' THEN 'black_or_african_american'\n            WHEN UNNEST(SPLIT(participant.reported_race, '|')) = 'Native Hawaiian or Other Pacific Islander' THEN 'native_hawaiian_or_pacific_islander'\n            WHEN UNNEST(SPLIT(participant.reported_race, '|')) = 'White' THEN 'white'\n            WHEN UNNEST(SPLIT(participant.reported_race, '|')) = 'Middle Eastern or North African' THEN 'other_race'\n            WHEN UNNEST(SPLIT(participant.reported_race, '|')) = 'Other Race' THEN 'other_race'\n            WHEN UNNEST(SPLIT(participant.reported_race, '|')) = 'Unknown' THEN 'unknown'\n            WHEN UNNEST(SPLIT(participant.reported_race, '|')) = 'asked but unknown' THEN 'asked_but_unknown'\n            WHEN STRING_SPLIT(participant.reported_race, '|') IS NULL THEN 'unknown'\n        END::text as \"race\"\n        from \"dbt\".\"main_main\".\"gregor_synthetic_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"gregor_synthetic_stg_phenotype\" as phenotype\n    on participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.gregor_synthetic_ftd_study_funding_source": {"database": "dbt", "schema": "main_gregor_synthetic_data", "name": "gregor_synthetic_ftd_study_funding_source", "resource_type": "model", "package_name": "ftd", "path": "gregor_synthetic/gregor_synthetic_ftd_study_funding_source.sql", "original_file_path": "models/gregor_synthetic/gregor_synthetic_ftd_study_funding_source.sql", "unique_id": "model.ftd.gregor_synthetic_ftd_study_funding_source", "fqn": ["ftd", "gregor_synthetic", "gregor_synthetic_ftd_study_funding_source"], "alias": "gregor_synthetic_ftd_study_funding_source", "checksum": {"name": "sha256", "checksum": "35d016741cb9d388685b2a770d1e5bbee5ed5994f1920224e1bdc4a881b9e895"}, "config": {"enabled": true, "alias": null, "schema": "gregor_synthetic_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for gregor_synthetic_ftd_study_funding_source.", "columns": {"study_id": {"name": "study_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "funding_source": {"name": "funding_source", "description": "Funding Source", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/gregor_synthetic/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "gregor_synthetic_data"}, "created_at": 1757448969.7244914, "relation_name": "\"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_study_funding_source\"", "raw_code": "{{ config(materialized='table', schema='gregor_synthetic_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='gregor_synthetic') }}::text as \"study_id\",\n       GEN_UNKNOWN.funding_source::text as \"funding_source\"\n        from {{ ref('gregor_synthetic_stg_participant') }} as participant\n        join {{ ref('gregor_synthetic_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "gregor_synthetic_stg_participant", "package": null, "version": null}, {"name": "gregor_synthetic_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/gregor_synthetic_ftd_study_funding_source.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(, '') as text))::text as \"study_id\",\n       GEN_UNKNOWN.funding_source::text as \"funding_source\"\n        from \"dbt\".\"main_main\".\"gregor_synthetic_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"gregor_synthetic_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.gregor_synthetic_ftd_file_subject": {"database": "dbt", "schema": "main_gregor_synthetic_data", "name": "gregor_synthetic_ftd_file_subject", "resource_type": "model", "package_name": "ftd", "path": "gregor_synthetic/gregor_synthetic_ftd_file_subject.sql", "original_file_path": "models/gregor_synthetic/gregor_synthetic_ftd_file_subject.sql", "unique_id": "model.ftd.gregor_synthetic_ftd_file_subject", "fqn": ["ftd", "gregor_synthetic", "gregor_synthetic_ftd_file_subject"], "alias": "gregor_synthetic_ftd_file_subject", "checksum": {"name": "sha256", "checksum": "0fce8db5a8b146734ae5d11a226b1ea6fb5619629bff152dbe71705ceafa0f6c"}, "config": {"enabled": true, "alias": null, "schema": "gregor_synthetic_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for gregor_synthetic_ftd_file_subject.", "columns": {"file_id": {"name": "file_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "subject_id": {"name": "subject_id", "description": "The Subject(s) which this file describes.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/gregor_synthetic/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "gregor_synthetic_data"}, "created_at": 1757448969.717797, "relation_name": "\"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_file_subject\"", "raw_code": "{{ config(materialized='table', schema='gregor_synthetic_data') }}\n\n   with source as (\n        select \n       CASE \n            WHEN experiment.participant_id IS NOT NULL then 'participant'\n            ELSE 'non_participant'\n        END::text as subject_type,\n        --    GEN_UNKNOWN.organism_type::text as \"organism_type\",\n       {{ generate_global_id(prefix='ap',descriptor=['participant.consent_code'], study_id='GREGoR_R03_GRU_20250612') }}::text as \"has_access_policy\",\n       {{ generate_global_id(prefix='sb',descriptor=['participant.participant_id'], study_id='GREGoR_R03_GRU_20250612') }}::text as \"id\",\n    {# {{ generate_global_id(prefix='',descriptor=[''], study_id='GREGoR_R03_GRU_20250612') }}::text as \"has_demographics_id\" #}\n        from {{ ref('GREGoR_R03_GRU_20250612_stg_participant') }} as participant\n        join {{ ref('GREGoR_R03_GRU_20250612_stg_experiment') }} as experiment\n        on participant.participant_id = experiment.participant_id \n    )\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_stg_participant", "package": null, "version": null}, {"name": "GREGoR_R03_GRU_20250612_stg_experiment", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_experiment"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/gregor_synthetic_ftd_file_subject.sql", "compiled": true, "compiled_code": "\n\n   with source as (\n        select \n       CASE \n            WHEN experiment.participant_id IS NOT NULL then 'participant'\n            ELSE 'non_participant'\n        END::text as subject_type,\n        --    GEN_UNKNOWN.organism_type::text as \"organism_type\",\n       'ap' || '_' || md5('GREGoR_R03_GRU_20250612' || '|' || cast(coalesce(participant.consent_code, '') as text))::text as \"has_access_policy\",\n       'sb' || '_' || md5('GREGoR_R03_GRU_20250612' || '|' || cast(coalesce(participant.participant_id, '') as text))::text as \"id\",\n    \n        from \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"GREGoR_R03_GRU_20250612_stg_experiment\" as experiment\n        on participant.participant_id = experiment.participant_id \n    )\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.gregor_synthetic_ftd_subject_external_id": {"database": "dbt", "schema": "main_gregor_synthetic_data", "name": "gregor_synthetic_ftd_subject_external_id", "resource_type": "model", "package_name": "ftd", "path": "gregor_synthetic/gregor_synthetic_ftd_subject_external_id.sql", "original_file_path": "models/gregor_synthetic/gregor_synthetic_ftd_subject_external_id.sql", "unique_id": "model.ftd.gregor_synthetic_ftd_subject_external_id", "fqn": ["ftd", "gregor_synthetic", "gregor_synthetic_ftd_subject_external_id"], "alias": "gregor_synthetic_ftd_subject_external_id", "checksum": {"name": "sha256", "checksum": "dde186dee5071e9c51ec7e8c9ab262f4356cf237e6b7d2003f190b537b268958"}, "config": {"enabled": true, "alias": null, "schema": "gregor_synthetic_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for gregor_synthetic_ftd_subject_external_id.", "columns": {"subject_id": {"name": "subject_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/gregor_synthetic/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "gregor_synthetic_data"}, "created_at": 1757448969.7065206, "relation_name": "\"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_subject_external_id\"", "raw_code": "{{ config(materialized='table', schema='gregor_synthetic_data') }}\n\n    with source as (\n        select \n       {{ generate_global_id(prefix='sb',descriptor=['participant.participant_id'], study_id='gregor_synthetic') }}::text as \"Subject_id\",\n       participant.participant_id::text as \"external_id\"\n        from {{ ref('gregor_synthetic_stg_participant') }} as participant\n        join {{ ref('gregor_synthetic_stg_phenotype') }} as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "gregor_synthetic_stg_participant", "package": null, "version": null}, {"name": "gregor_synthetic_stg_phenotype", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/gregor_synthetic_ftd_subject_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n       'sb' || '_' || md5('gregor_synthetic' || '|' || cast(coalesce(participant.participant_id, '') as text))::text as \"Subject_id\",\n       participant.participant_id::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"gregor_synthetic_stg_participant\" as participant\n        join \"dbt\".\"main_main\".\"gregor_synthetic_stg_phenotype\" as phenotype\non participant.participant_id = phenotype.participant_id \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.eMERGEseq_ftd_biospecimencollection_external_id": {"database": "dbt", "schema": "main_eMERGEseq_data", "name": "eMERGEseq_ftd_biospecimencollection_external_id", "resource_type": "model", "package_name": "ftd", "path": "eMERGEseq/eMERGEseq_ftd_biospecimencollection_external_id.sql", "original_file_path": "models/eMERGEseq/eMERGEseq_ftd_biospecimencollection_external_id.sql", "unique_id": "model.ftd.eMERGEseq_ftd_biospecimencollection_external_id", "fqn": ["ftd", "eMERGEseq", "eMERGEseq_ftd_biospecimencollection_external_id"], "alias": "eMERGEseq_ftd_biospecimencollection_external_id", "checksum": {"name": "sha256", "checksum": "8710bbb4ad08d83869201f13168b394158b701c4296527b534a26bad83725d31"}, "config": {"enabled": true, "alias": null, "schema": "eMERGEseq_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for eMERGEseq_ftd_biospecimencollection_external_id.", "columns": {"biospecimencollection_id": {"name": "biospecimencollection_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/eMERGEseq/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "eMERGEseq_data"}, "created_at": 1757448969.766106, "relation_name": "\"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_biospecimencollection_external_id\"", "raw_code": "{{ config(materialized='table', schema='eMERGEseq_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='eMERGEseq') }}::text as \"biospecimencollection_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from {{ ref('eMERGEseq_stg_subjectconsent') }} as subjectconsent\n        join {{ ref('eMERGEseq_stg_demographics') }} as demographics\non subjectconsent.subject_id = demographics.subject_id  join {{ ref('eMERGEseq_stg_phecode') }} as phecode\non   join {{ ref('eMERGEseq_stg_samplesubjectmapping') }} as samplesubjectmapping\non   join {{ ref('eMERGEseq_stg_sampleattributes') }} as sampleattributes\non  \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "eMERGEseq_stg_subjectconsent", "package": null, "version": null}, {"name": "eMERGEseq_stg_demographics", "package": null, "version": null}, {"name": "eMERGEseq_stg_phecode", "package": null, "version": null}, {"name": "eMERGEseq_stg_samplesubjectmapping", "package": null, "version": null}, {"name": "eMERGEseq_stg_sampleattributes", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.eMERGEseq.eMERGEseq_stg_subjectconsent", "model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_sampleattributes"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/eMERGEseq_ftd_biospecimencollection_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('eMERGEseq' || '|' || cast(coalesce(, '') as text))::text as \"biospecimencollection_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"eMERGEseq_stg_subjectconsent\" as subjectconsent\n        join \"dbt\".\"main_main\".\"eMERGEseq_stg_demographics\" as demographics\non subjectconsent.subject_id = demographics.subject_id  join \"dbt\".\"main_main\".\"eMERGEseq_stg_phecode\" as phecode\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_samplesubjectmapping\" as samplesubjectmapping\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_sampleattributes\" as sampleattributes\non  \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.eMERGEseq_ftd_study_funding_source": {"database": "dbt", "schema": "main_eMERGEseq_data", "name": "eMERGEseq_ftd_study_funding_source", "resource_type": "model", "package_name": "ftd", "path": "eMERGEseq/eMERGEseq_ftd_study_funding_source.sql", "original_file_path": "models/eMERGEseq/eMERGEseq_ftd_study_funding_source.sql", "unique_id": "model.ftd.eMERGEseq_ftd_study_funding_source", "fqn": ["ftd", "eMERGEseq", "eMERGEseq_ftd_study_funding_source"], "alias": "eMERGEseq_ftd_study_funding_source", "checksum": {"name": "sha256", "checksum": "3cc20e614d850f6b57a97dd00de7f273f6ef77dda37a50b6f9482adf639c1d92"}, "config": {"enabled": true, "alias": null, "schema": "eMERGEseq_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for eMERGEseq_ftd_study_funding_source.", "columns": {"study_id": {"name": "study_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "funding_source": {"name": "funding_source", "description": "Funding Source", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/eMERGEseq/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "eMERGEseq_data"}, "created_at": 1757448969.7741523, "relation_name": "\"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_study_funding_source\"", "raw_code": "{{ config(materialized='table', schema='eMERGEseq_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='eMERGEseq') }}::text as \"study_id\",\n       GEN_UNKNOWN.funding_source::text as \"funding_source\"\n        from {{ ref('eMERGEseq_stg_subjectconsent') }} as subjectconsent\n        join {{ ref('eMERGEseq_stg_demographics') }} as demographics\non subjectconsent.subject_id = demographics.subject_id  join {{ ref('eMERGEseq_stg_phecode') }} as phecode\non   join {{ ref('eMERGEseq_stg_samplesubjectmapping') }} as samplesubjectmapping\non   join {{ ref('eMERGEseq_stg_sampleattributes') }} as sampleattributes\non  \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "eMERGEseq_stg_subjectconsent", "package": null, "version": null}, {"name": "eMERGEseq_stg_demographics", "package": null, "version": null}, {"name": "eMERGEseq_stg_phecode", "package": null, "version": null}, {"name": "eMERGEseq_stg_samplesubjectmapping", "package": null, "version": null}, {"name": "eMERGEseq_stg_sampleattributes", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.eMERGEseq.eMERGEseq_stg_subjectconsent", "model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_sampleattributes"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/eMERGEseq_ftd_study_funding_source.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('eMERGEseq' || '|' || cast(coalesce(, '') as text))::text as \"study_id\",\n       GEN_UNKNOWN.funding_source::text as \"funding_source\"\n        from \"dbt\".\"main_main\".\"eMERGEseq_stg_subjectconsent\" as subjectconsent\n        join \"dbt\".\"main_main\".\"eMERGEseq_stg_demographics\" as demographics\non subjectconsent.subject_id = demographics.subject_id  join \"dbt\".\"main_main\".\"eMERGEseq_stg_phecode\" as phecode\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_samplesubjectmapping\" as samplesubjectmapping\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_sampleattributes\" as sampleattributes\non  \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.eMERGEseq_ftd_subjectassertion_external_id": {"database": "dbt", "schema": "main_eMERGEseq_data", "name": "eMERGEseq_ftd_subjectassertion_external_id", "resource_type": "model", "package_name": "ftd", "path": "eMERGEseq/eMERGEseq_ftd_subjectassertion_external_id.sql", "original_file_path": "models/eMERGEseq/eMERGEseq_ftd_subjectassertion_external_id.sql", "unique_id": "model.ftd.eMERGEseq_ftd_subjectassertion_external_id", "fqn": ["ftd", "eMERGEseq", "eMERGEseq_ftd_subjectassertion_external_id"], "alias": "eMERGEseq_ftd_subjectassertion_external_id", "checksum": {"name": "sha256", "checksum": "a70fcae607ef506b57d8b013e221592aeda0318b03dac4131c5e278111a50a71"}, "config": {"enabled": true, "alias": null, "schema": "eMERGEseq_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for eMERGEseq_ftd_subjectassertion_external_id.", "columns": {"subjectassertion_id": {"name": "subjectassertion_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/eMERGEseq/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "eMERGEseq_data"}, "created_at": 1757448969.7782235, "relation_name": "\"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_subjectassertion_external_id\"", "raw_code": "{{ config(materialized='table', schema='eMERGEseq_data') }}\n\n{% set relation = ref('eMERGEseq_stg_phecode') %}\n{% set constant_columns = ['subject_id', 'ftd_index'] %}\n{% set condition_columns = get_columns(relation=relation, exclude=constant_columns) %}  \n\n{% set relation_bmi = ref('eMERGEseq_stg_bmi') %}\n{% set constant_bmi_columns = ['ftd_index', 'subject_id', 'age_at_observation', 'visit_number'] %}\n{% set pivot_bmi_columns = get_columns(relation=relation_bmi, exclude=constant_bmi_columns) %}\n\nwith lookup as(\n    select \n        LOWER(variable_name) as code, \n    from {{ ref('phecode_seed') }}),\n\n     \nunpivot_df as (\n\n    {% for col in condition_columns %}\n        select distinct\n            {{ constant_columns | join(', ') }},\n            '{{ col }}' as code,\n        from {{ ref('eMERGEseq_stg_phecode') }} as p\n        {% if not loop.last %}union all{% endif %}\n    {% endfor %}\n),\n\nunpivot_bmi as (\n\n        {% for col in pivot_bmi_columns %}\n            select distinct\n            subject_id, ftd_index,\n            '{{ col }}' AS \"code\",\n            from {{ ref('eMERGEseq_stg_bmi') }} as bmi\n            {% if not loop.last %}union all{% endif %}\n        {% endfor %}\n    ),\n    \nunpivot_bmi_case as (\n    select \n    subject_id, ftd_index,\n     CASE \n          WHEN code = 'weight'THEN 'LOINC:29463-7'\n          WHEN code = 'height' THEN 'LOINC:8302-2'\n          WHEN code = 'body_mass_index' THEN 'LOINC:39156-5'\n          ELSE CONCAT('FTD_FLAG: unhandled code: ', code)\n     END AS code\n    from unpivot_bmi\n    ),\n    \nunion_data as (\n    select * from unpivot_df as ud\n\n    union all \n    \n    select * from unpivot_bmi_case as ubc\n)\n\n    select distinct\n    {{ generate_global_id(prefix='sa',descriptor=['ud.subject_id', 'ud.code'], study_id='phs001616') }}::text as \"subjectassertion_id\",\n       ud.code::text as \"external_id\"\n        from union_data as ud", "language": "sql", "refs": [{"name": "eMERGEseq_stg_phecode", "package": null, "version": null}, {"name": "eMERGEseq_stg_bmi", "package": null, "version": null}, {"name": "phecode_seed", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.get_columns", "macro.base.generate_global_id"], "nodes": ["model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_bmi", "seed.base.phecode_seed"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/eMERGEseq_ftd_subjectassertion_external_id.sql", "compiled": true, "compiled_code": "\n\n\n\n  \n\n\n\n\n\nwith lookup as(\n    select \n        LOWER(variable_name) as code, \n    from \"dbt\".\"main\".\"phecode_seed\"),\n\n     \nunpivot_df as (\n\n    \n),\n\nunpivot_bmi as (\n\n        \n    ),\n    \nunpivot_bmi_case as (\n    select \n    subject_id, ftd_index,\n     CASE \n          WHEN code = 'weight'THEN 'LOINC:29463-7'\n          WHEN code = 'height' THEN 'LOINC:8302-2'\n          WHEN code = 'body_mass_index' THEN 'LOINC:39156-5'\n          ELSE CONCAT('FTD_FLAG: unhandled code: ', code)\n     END AS code\n    from unpivot_bmi\n    ),\n    \nunion_data as (\n    select * from unpivot_df as ud\n\n    union all \n    \n    select * from unpivot_bmi_case as ubc\n)\n\n    select distinct\n    'sa' || '_' || md5('phs001616' || '|' || cast(coalesce(ud.subject_id, '') as text) || '|' || 'phs001616' || '|' || cast(coalesce(ud.code, '') as text))::text as \"subjectassertion_id\",\n       ud.code::text as \"external_id\"\n        from union_data as ud", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.eMERGEseq_ftd_sample": {"database": "dbt", "schema": "main_eMERGEseq_data", "name": "eMERGEseq_ftd_sample", "resource_type": "model", "package_name": "ftd", "path": "eMERGEseq/eMERGEseq_ftd_sample.sql", "original_file_path": "models/eMERGEseq/eMERGEseq_ftd_sample.sql", "unique_id": "model.ftd.eMERGEseq_ftd_sample", "fqn": ["ftd", "eMERGEseq", "eMERGEseq_ftd_sample"], "alias": "eMERGEseq_ftd_sample", "checksum": {"name": "sha256", "checksum": "1a5dfe2157306438f5f2d70c5e8214a8357b5ed30d9bc0e120d405f096c42dc6"}, "config": {"enabled": true, "alias": null, "schema": "eMERGEseq_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for eMERGEseq_ftd_sample.", "columns": {"parent_sample": {"name": "parent_sample", "description": "Sample from which this sample is derived", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "sample_type": {"name": "sample_type", "description": "Type of material of which this Sample is comprised", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "availablity_status": {"name": "availablity_status", "description": "Can this Sample be requested for further analysis?", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "quantity_number": {"name": "quantity_number", "description": "The total quantity of the specimen", "meta": {}, "data_type": "number", "constraints": [], "quote": null, "tags": [], "granularity": null}, "quantity_units": {"name": "quantity_units", "description": "The structured term defining the units of the quantity.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "subject_id": {"name": "subject_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "biospecimen_collection_id": {"name": "biospecimen_collection_id", "description": "Biospecimen Collection that generated this sample.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/eMERGEseq/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "eMERGEseq_data"}, "created_at": 1757448969.7642283, "relation_name": "\"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_sample\"", "raw_code": "{{ config(materialized='table', schema='eMERGEseq_data') }}\n\n    with source as (\n        select DISTINCT\n        NULL as \"parent_sample\",\n       CASE WHEN sampleattributes.analyte_type = 'DNA' THEN 'LNC:LP18329-0'\n            ELSE CONCAT('FTD_FLAG: unhandled sample_type: ',analyte_type)\n       END::text as \"sample_type\",\n        NULL as \"availablity_status\",\n        NULL as \"quantity_number\",\n        NULL as \"quantity_units\",\n       {{ generate_global_id(prefix='ap',descriptor=['subjectconsent.consent'], study_id='phs001616') }}::text as \"has_access_policy\",\n       {{ generate_global_id(prefix='sm',descriptor=['samplesubjectmapping.subject_id', 'samplesubjectmapping.sample_id'], study_id='phs001616') }}::text as \"id\",\n       {{ generate_global_id(prefix='sb',descriptor=['samplesubjectmapping.subject_id'], study_id='phs001616') }}::text as \"subject_id\",\n        NULL as \"biospecimen_collection_id\"\n        from {{ ref('eMERGEseq_stg_sampleattributes') }} as sampleattributes\n        left join {{ ref('eMERGEseq_stg_samplesubjectmapping') }} as samplesubjectmapping\n        on sampleattributes.sample_id = samplesubjectmapping.sample_id\n        left join {{ ref('eMERGEseq_stg_subjectconsent') }} as subjectconsent\n        on samplesubjectmapping.subject_id = subjectconsent.subject_id\n        where sampleattributes.analyte_type != '.'\n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "eMERGEseq_stg_sampleattributes", "package": null, "version": null}, {"name": "eMERGEseq_stg_samplesubjectmapping", "package": null, "version": null}, {"name": "eMERGEseq_stg_subjectconsent", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.eMERGEseq.eMERGEseq_stg_sampleattributes", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_subjectconsent"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/eMERGEseq_ftd_sample.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select DISTINCT\n        NULL as \"parent_sample\",\n       CASE WHEN sampleattributes.analyte_type = 'DNA' THEN 'LNC:LP18329-0'\n            ELSE CONCAT('FTD_FLAG: unhandled sample_type: ',analyte_type)\n       END::text as \"sample_type\",\n        NULL as \"availablity_status\",\n        NULL as \"quantity_number\",\n        NULL as \"quantity_units\",\n       'ap' || '_' || md5('phs001616' || '|' || cast(coalesce(subjectconsent.consent, '') as text))::text as \"has_access_policy\",\n       'sm' || '_' || md5('phs001616' || '|' || cast(coalesce(samplesubjectmapping.subject_id, '') as text) || '|' || 'phs001616' || '|' || cast(coalesce(samplesubjectmapping.sample_id, '') as text))::text as \"id\",\n       'sb' || '_' || md5('phs001616' || '|' || cast(coalesce(samplesubjectmapping.subject_id, '') as text))::text as \"subject_id\",\n        NULL as \"biospecimen_collection_id\"\n        from \"dbt\".\"main_main\".\"eMERGEseq_stg_sampleattributes\" as sampleattributes\n        left join \"dbt\".\"main_main\".\"eMERGEseq_stg_samplesubjectmapping\" as samplesubjectmapping\n        on sampleattributes.sample_id = samplesubjectmapping.sample_id\n        left join \"dbt\".\"main_main\".\"eMERGEseq_stg_subjectconsent\" as subjectconsent\n        on samplesubjectmapping.subject_id = subjectconsent.subject_id\n        where sampleattributes.analyte_type != '.'\n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.eMERGEseq_ftd_study_external_study_id": {"database": "dbt", "schema": "main_eMERGEseq_data", "name": "eMERGEseq_ftd_study_external_study_id", "resource_type": "model", "package_name": "ftd", "path": "eMERGEseq/eMERGEseq_ftd_study_external_study_id.sql", "original_file_path": "models/eMERGEseq/eMERGEseq_ftd_study_external_study_id.sql", "unique_id": "model.ftd.eMERGEseq_ftd_study_external_study_id", "fqn": ["ftd", "eMERGEseq", "eMERGEseq_ftd_study_external_study_id"], "alias": "eMERGEseq_ftd_study_external_study_id", "checksum": {"name": "sha256", "checksum": "ca24f4320e5de27080e2622ee605d2a32ab542548a5d86771d730cd6e0eebdde"}, "config": {"enabled": true, "alias": null, "schema": "eMERGEseq_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "table", "schema": "eMERGEseq_data"}, "created_at": 1757448968.7308166, "relation_name": "\"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_study_external_study_id\"", "raw_code": "{{ config(materialized='table', schema='eMERGEseq_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='eMERGEseq') }}::text as \"study_id\",\n       GEN_UNKNOWN.external_study_id::text as \"external_study_id\"\n        from {{ ref('eMERGEseq_stg_subjectconsent') }} as subjectconsent\n        join {{ ref('eMERGEseq_stg_demographics') }} as demographics\non subjectconsent.subject_id = demographics.subject_id  join {{ ref('eMERGEseq_stg_phecode') }} as phecode\non   join {{ ref('eMERGEseq_stg_samplesubjectmapping') }} as samplesubjectmapping\non   join {{ ref('eMERGEseq_stg_sampleattributes') }} as sampleattributes\non  \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "eMERGEseq_stg_subjectconsent", "package": null, "version": null}, {"name": "eMERGEseq_stg_demographics", "package": null, "version": null}, {"name": "eMERGEseq_stg_phecode", "package": null, "version": null}, {"name": "eMERGEseq_stg_samplesubjectmapping", "package": null, "version": null}, {"name": "eMERGEseq_stg_sampleattributes", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.eMERGEseq.eMERGEseq_stg_subjectconsent", "model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_sampleattributes"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/eMERGEseq_ftd_study_external_study_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('eMERGEseq' || '|' || cast(coalesce(, '') as text))::text as \"study_id\",\n       GEN_UNKNOWN.external_study_id::text as \"external_study_id\"\n        from \"dbt\".\"main_main\".\"eMERGEseq_stg_subjectconsent\" as subjectconsent\n        join \"dbt\".\"main_main\".\"eMERGEseq_stg_demographics\" as demographics\non subjectconsent.subject_id = demographics.subject_id  join \"dbt\".\"main_main\".\"eMERGEseq_stg_phecode\" as phecode\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_samplesubjectmapping\" as samplesubjectmapping\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_sampleattributes\" as sampleattributes\non  \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.eMERGEseq_ftd_accesscontrolledrecord": {"database": "dbt", "schema": "main_eMERGEseq_data", "name": "eMERGEseq_ftd_accesscontrolledrecord", "resource_type": "model", "package_name": "ftd", "path": "eMERGEseq/eMERGEseq_ftd_accesscontrolledrecord.sql", "original_file_path": "models/eMERGEseq/eMERGEseq_ftd_accesscontrolledrecord.sql", "unique_id": "model.ftd.eMERGEseq_ftd_accesscontrolledrecord", "fqn": ["ftd", "eMERGEseq", "eMERGEseq_ftd_accesscontrolledrecord"], "alias": "eMERGEseq_ftd_accesscontrolledrecord", "checksum": {"name": "sha256", "checksum": "404fc6fa73d4f7c41decfbae634d9cfefadd89a354d8fda7d15c1091b67d481f"}, "config": {"enabled": true, "alias": null, "schema": "eMERGEseq_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for eMERGEseq_ftd_accesscontrolledrecord.", "columns": {"has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/eMERGEseq/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "eMERGEseq_data"}, "created_at": 1757448969.7656832, "relation_name": "\"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_accesscontrolledrecord\"", "raw_code": "{{ config(materialized='table', schema='eMERGEseq_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='eMERGEseq') }}::text as \"has_access_policy\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='eMERGEseq') }}::text as \"id\"\n        from {{ ref('eMERGEseq_stg_subjectconsent') }} as subjectconsent\n        join {{ ref('eMERGEseq_stg_demographics') }} as demographics\non subjectconsent.subject_id = demographics.subject_id  join {{ ref('eMERGEseq_stg_phecode') }} as phecode\non   join {{ ref('eMERGEseq_stg_samplesubjectmapping') }} as samplesubjectmapping\non   join {{ ref('eMERGEseq_stg_sampleattributes') }} as sampleattributes\non  \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "eMERGEseq_stg_subjectconsent", "package": null, "version": null}, {"name": "eMERGEseq_stg_demographics", "package": null, "version": null}, {"name": "eMERGEseq_stg_phecode", "package": null, "version": null}, {"name": "eMERGEseq_stg_samplesubjectmapping", "package": null, "version": null}, {"name": "eMERGEseq_stg_sampleattributes", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.eMERGEseq.eMERGEseq_stg_subjectconsent", "model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_sampleattributes"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/eMERGEseq_ftd_accesscontrolledrecord.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('eMERGEseq' || '|' || cast(coalesce(, '') as text))::text as \"has_access_policy\",\n       '' || '_' || md5('eMERGEseq' || '|' || cast(coalesce(, '') as text))::text as \"id\"\n        from \"dbt\".\"main_main\".\"eMERGEseq_stg_subjectconsent\" as subjectconsent\n        join \"dbt\".\"main_main\".\"eMERGEseq_stg_demographics\" as demographics\non subjectconsent.subject_id = demographics.subject_id  join \"dbt\".\"main_main\".\"eMERGEseq_stg_phecode\" as phecode\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_samplesubjectmapping\" as samplesubjectmapping\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_sampleattributes\" as sampleattributes\non  \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.eMERGEseq_ftd_filemetadata": {"database": "dbt", "schema": "main_eMERGEseq_data", "name": "eMERGEseq_ftd_filemetadata", "resource_type": "model", "package_name": "ftd", "path": "eMERGEseq/eMERGEseq_ftd_filemetadata.sql", "original_file_path": "models/eMERGEseq/eMERGEseq_ftd_filemetadata.sql", "unique_id": "model.ftd.eMERGEseq_ftd_filemetadata", "fqn": ["ftd", "eMERGEseq", "eMERGEseq_ftd_filemetadata"], "alias": "eMERGEseq_ftd_filemetadata", "checksum": {"name": "sha256", "checksum": "9522f5226c4399cbe445a1865c5e191fd6d0940f9e4a8fba6ce24807a5a0e8c0"}, "config": {"enabled": true, "alias": null, "schema": "eMERGEseq_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for eMERGEseq_ftd_filemetadata.", "columns": {"code": {"name": "code", "description": "The structured term defining the meaning of the assertion.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "display": {"name": "display", "description": "The friendly display string of the coded term", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "value_code": {"name": "value_code", "description": "The structured term defining the value of the assertion.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "value_display": {"name": "value_display", "description": "The friendly display string of the coded term for the value of the assertion.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/eMERGEseq/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "eMERGEseq_data"}, "created_at": 1757448969.7687764, "relation_name": "\"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_filemetadata\"", "raw_code": "{{ config(materialized='table', schema='eMERGEseq_data') }}\n\n    with source as (\n        select \n        GEN_UNKNOWN.code::text as \"code\",\n       GEN_UNKNOWN.display::text as \"display\",\n       GEN_UNKNOWN.value_code::text as \"value_code\",\n       GEN_UNKNOWN.value_display::text as \"value_display\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='eMERGEseq') }}::text as \"id\"\n        from {{ ref('eMERGEseq_stg_subjectconsent') }} as subjectconsent\n        join {{ ref('eMERGEseq_stg_demographics') }} as demographics\non subjectconsent.subject_id = demographics.subject_id  join {{ ref('eMERGEseq_stg_phecode') }} as phecode\non   join {{ ref('eMERGEseq_stg_samplesubjectmapping') }} as samplesubjectmapping\non   join {{ ref('eMERGEseq_stg_sampleattributes') }} as sampleattributes\non  \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "eMERGEseq_stg_subjectconsent", "package": null, "version": null}, {"name": "eMERGEseq_stg_demographics", "package": null, "version": null}, {"name": "eMERGEseq_stg_phecode", "package": null, "version": null}, {"name": "eMERGEseq_stg_samplesubjectmapping", "package": null, "version": null}, {"name": "eMERGEseq_stg_sampleattributes", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.eMERGEseq.eMERGEseq_stg_subjectconsent", "model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_sampleattributes"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/eMERGEseq_ftd_filemetadata.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        GEN_UNKNOWN.code::text as \"code\",\n       GEN_UNKNOWN.display::text as \"display\",\n       GEN_UNKNOWN.value_code::text as \"value_code\",\n       GEN_UNKNOWN.value_display::text as \"value_display\",\n       '' || '_' || md5('eMERGEseq' || '|' || cast(coalesce(, '') as text))::text as \"id\"\n        from \"dbt\".\"main_main\".\"eMERGEseq_stg_subjectconsent\" as subjectconsent\n        join \"dbt\".\"main_main\".\"eMERGEseq_stg_demographics\" as demographics\non subjectconsent.subject_id = demographics.subject_id  join \"dbt\".\"main_main\".\"eMERGEseq_stg_phecode\" as phecode\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_samplesubjectmapping\" as samplesubjectmapping\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_sampleattributes\" as sampleattributes\non  \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.eMERGEseq_ftd_file_sample": {"database": "dbt", "schema": "main_eMERGEseq_data", "name": "eMERGEseq_ftd_file_sample", "resource_type": "model", "package_name": "ftd", "path": "eMERGEseq/eMERGEseq_ftd_file_sample.sql", "original_file_path": "models/eMERGEseq/eMERGEseq_ftd_file_sample.sql", "unique_id": "model.ftd.eMERGEseq_ftd_file_sample", "fqn": ["ftd", "eMERGEseq", "eMERGEseq_ftd_file_sample"], "alias": "eMERGEseq_ftd_file_sample", "checksum": {"name": "sha256", "checksum": "09d681dcb2c48b9ca3db8d537d6aba0d95543a52edae9ad7d7092df8b8d3c223"}, "config": {"enabled": true, "alias": null, "schema": "eMERGEseq_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for eMERGEseq_ftd_file_sample.", "columns": {"file_id": {"name": "file_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "sample_id": {"name": "sample_id", "description": "The Samples(s) used to generate data in this file.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/eMERGEseq/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "eMERGEseq_data"}, "created_at": 1757448969.7701554, "relation_name": "\"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_file_sample\"", "raw_code": "{{ config(materialized='table', schema='eMERGEseq_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='eMERGEseq') }}::text as \"file_id\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='eMERGEseq') }}::text as \"sample_id\"\n        from {{ ref('eMERGEseq_stg_subjectconsent') }} as subjectconsent\n        join {{ ref('eMERGEseq_stg_demographics') }} as demographics\non subjectconsent.subject_id = demographics.subject_id  join {{ ref('eMERGEseq_stg_phecode') }} as phecode\non   join {{ ref('eMERGEseq_stg_samplesubjectmapping') }} as samplesubjectmapping\non   join {{ ref('eMERGEseq_stg_sampleattributes') }} as sampleattributes\non  \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "eMERGEseq_stg_subjectconsent", "package": null, "version": null}, {"name": "eMERGEseq_stg_demographics", "package": null, "version": null}, {"name": "eMERGEseq_stg_phecode", "package": null, "version": null}, {"name": "eMERGEseq_stg_samplesubjectmapping", "package": null, "version": null}, {"name": "eMERGEseq_stg_sampleattributes", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.eMERGEseq.eMERGEseq_stg_subjectconsent", "model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_sampleattributes"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/eMERGEseq_ftd_file_sample.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('eMERGEseq' || '|' || cast(coalesce(, '') as text))::text as \"file_id\",\n       '' || '_' || md5('eMERGEseq' || '|' || cast(coalesce(, '') as text))::text as \"sample_id\"\n        from \"dbt\".\"main_main\".\"eMERGEseq_stg_subjectconsent\" as subjectconsent\n        join \"dbt\".\"main_main\".\"eMERGEseq_stg_demographics\" as demographics\non subjectconsent.subject_id = demographics.subject_id  join \"dbt\".\"main_main\".\"eMERGEseq_stg_phecode\" as phecode\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_samplesubjectmapping\" as samplesubjectmapping\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_sampleattributes\" as sampleattributes\non  \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.eMERGEseq_ftd_subjectassertion": {"database": "dbt", "schema": "main_eMERGEseq_data", "name": "eMERGEseq_ftd_subjectassertion", "resource_type": "model", "package_name": "ftd", "path": "eMERGEseq/eMERGEseq_ftd_subjectassertion.sql", "original_file_path": "models/eMERGEseq/eMERGEseq_ftd_subjectassertion.sql", "unique_id": "model.ftd.eMERGEseq_ftd_subjectassertion", "fqn": ["ftd", "eMERGEseq", "eMERGEseq_ftd_subjectassertion"], "alias": "eMERGEseq_ftd_subjectassertion", "checksum": {"name": "sha256", "checksum": "369d6c655940b318cceecd26d635c4820e320cbb8e63b2bbe2eebd0651528196"}, "config": {"enabled": true, "alias": null, "schema": "eMERGEseq_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for eMERGEseq_ftd_subjectassertion.", "columns": {"assertion_type": {"name": "assertion_type", "description": "The semantic type of the resource, eg, Condition.", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "age_at_assertion": {"name": "age_at_assertion", "description": "The age in decimal years of the Subject when the assertion was made.", "meta": {}, "data_type": "number", "constraints": [], "quote": null, "tags": [], "granularity": null}, "age_at_event": {"name": "age_at_event", "description": "The age in decimal years of the Subject at the time point which the assertion describes, | eg, age of onset or when a measurement was performed.", "meta": {}, "data_type": "number", "constraints": [], "quote": null, "tags": [], "granularity": null}, "age_at_resolution": {"name": "age_at_resolution", "description": "The age in decimal years of the Subject when the asserted state was resolved.", "meta": {}, "data_type": "number", "constraints": [], "quote": null, "tags": [], "granularity": null}, "code": {"name": "code", "description": "The structured term defining the meaning of the assertion.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "display": {"name": "display", "description": "The friendly display string of the coded term", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "value_code": {"name": "value_code", "description": "The structured term defining the value of the assertion.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "value_display": {"name": "value_display", "description": "The friendly display string of the coded term for the value of the assertion.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "value_number": {"name": "value_number", "description": "The numeric value of the assertion.", "meta": {}, "data_type": "number", "constraints": [], "quote": null, "tags": [], "granularity": null}, "value_units": {"name": "value_units", "description": "The structured term defining the units of the value.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "value_units_display": {"name": "value_units_display", "description": "The friendly display string of units of the value.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "subject_id": {"name": "subject_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/eMERGEseq/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "eMERGEseq_data"}, "created_at": 1757448969.767687, "relation_name": "\"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_subjectassertion\"", "raw_code": "{{ config(materialized='table', schema='eMERGEseq_data') }}\n\n{% set relation = ref('eMERGEseq_stg_phecode') %}\n{% set constant_columns = ['subject_id', 'ftd_index'] %}\n{% set condition_columns = get_columns(relation=relation, exclude=constant_columns) %} \n\n{% set relation_bmi = ref('eMERGEseq_stg_bmi') %}\n{% set constant_bmi_columns = ['ftd_index', 'subject_id', 'age_at_observation', 'visit_number'] %}\n{% set pivot_bmi_columns = get_columns(relation=relation_bmi, exclude=constant_bmi_columns) %}\nwith lookup as(\n    select \n        LOWER(variable_name) as code, \n        description as display\n    from {{ ref('phecode_seed') }}),\n\n     \nunpivot_df as (\n\n    {% for col in condition_columns %}\n        select\n            {{ constant_columns | join(', ') }},\n            NULL as \"age_at_assertion\",\n            '{{ col }}' as code,\n            case when \"{{ col }}\" = 0 then 'LA9634-2'\n                 when \"{{ col }}\" = 1 then 'LA9633-4'\n            end as value_code,\n            case when \"{{ col }}\" = 0 then 'Absent'\n                 when \"{{ col }}\" = 1 then 'Present'\n            end as value_display,\n            NULL as \"value_number\",\n        from {{ ref('eMERGEseq_stg_phecode') }} as p\n        {% if not loop.last %}union all{% endif %}\n    {% endfor %}\n),\n\nunpivoted_with_display as (\n    select distinct\n        up.*,\n        lookup.display as 'display'\n    from unpivot_df as up\n    left join lookup\n        on up.code = lookup.code\n),\n\nunpivot_bmi as (\n\n        {% for col in pivot_bmi_columns %}\n            select distinct\n            subject_id, ftd_index,\n            bmi.age_at_observation::text as \"age_at_assertion\",\n            '{{ col }}' AS \"code\",\n            NULL AS \"value_code\",\n            NULL AS \"value_display\",\n           {{ col }}::text as \"value_number\",\n            NULL as \"display\"\n            from {{ ref('eMERGEseq_stg_bmi') }} as bmi\n            {% if not loop.last %}union all{% endif %}\n        {% endfor %}\n    ),\n    \nunion_data as (\n    select * from unpivoted_with_display as uwd\n\n    union all \n    \n    select * from unpivot_bmi as ub\n)\n\n    select distinct \n        CASE WHEN code IN ('weight', 'height', 'body_mass_index') THEN 'measurement' \n             WHEN UPPER(code) LIKE 'PHE%' THEN 'ehr_billing_code'\n             ELSE CONCAT('FTD_FLAG: unhandled assertion_type: ',code)\n        END::text as \"assertion_type\",\n        age_at_assertion,\n        null as \"age_at_event\", \n        null as \"age_at_resolution\",\n        CASE \n            WHEN code = 'weight'THEN 'LOINC:29463-7'\n            WHEN code = 'height' THEN 'LOINC:8302-2'\n            WHEN code = 'body_mass_index' THEN 'LOINC:39156-5'\n            ELSE code\n        END AS code,        \n        CASE \n            WHEN code = 'weight' THEN 'Body weight'\n            WHEN code = 'height' THEN 'Body height'\n            WHEN code = 'body_mass_index' THEN 'Body mass index (BMI) [Ratio]' \n            ELSE display\n        END AS display,\n        value_code, \n        value_display, \n        value_number,\n        CASE \n            WHEN code = 'weight' THEN 'kg'\n            WHEN code = 'height' THEN 'cm'\n            WHEN code = 'body_mass_index' THEN 'kg/m2'   \n            ELSE NULL\n        END AS \"value_units\",  \n        CASE \n            WHEN code = 'weight' THEN 'kilogram'\n            WHEN code = 'height' THEN 'centimeter'\n            WHEN code = 'body_mass_index' THEN 'kilogram per square meter'   \n            ELSE NULL\n        END as \"value_units_display\",\n        {{ generate_global_id(prefix='sa', descriptor=['subject_id', 'code'], study_id='phs001616') }}::text as \"id\",\n        {{ generate_global_id(prefix='ap', descriptor=['subjectconsent.consent'], study_id='phs001616') }}::text as \"has_access_policy\",\n        {{ generate_global_id(prefix='sb', descriptor=['subject_id'], study_id='phs001616') }}::text as \"subject_id\"\n    from union_data as ud\n    left join {{ ref('eMERGEseq_stg_subjectconsent') }} as subjectconsent\n         using (subject_id)", "language": "sql", "refs": [{"name": "eMERGEseq_stg_phecode", "package": null, "version": null}, {"name": "eMERGEseq_stg_bmi", "package": null, "version": null}, {"name": "phecode_seed", "package": null, "version": null}, {"name": "eMERGEseq_stg_subjectconsent", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.get_columns", "macro.base.generate_global_id"], "nodes": ["model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_bmi", "seed.base.phecode_seed", "model.eMERGEseq.eMERGEseq_stg_subjectconsent"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/eMERGEseq_ftd_subjectassertion.sql", "compiled": true, "compiled_code": "\n\n\n\n \n\n\n\n\nwith lookup as(\n    select \n        LOWER(variable_name) as code, \n        description as display\n    from \"dbt\".\"main\".\"phecode_seed\"),\n\n     \nunpivot_df as (\n\n    \n),\n\nunpivoted_with_display as (\n    select distinct\n        up.*,\n        lookup.display as 'display'\n    from unpivot_df as up\n    left join lookup\n        on up.code = lookup.code\n),\n\nunpivot_bmi as (\n\n        \n    ),\n    \nunion_data as (\n    select * from unpivoted_with_display as uwd\n\n    union all \n    \n    select * from unpivot_bmi as ub\n)\n\n    select distinct \n        CASE WHEN code IN ('weight', 'height', 'body_mass_index') THEN 'measurement' \n             WHEN UPPER(code) LIKE 'PHE%' THEN 'ehr_billing_code'\n             ELSE CONCAT('FTD_FLAG: unhandled assertion_type: ',code)\n        END::text as \"assertion_type\",\n        age_at_assertion,\n        null as \"age_at_event\", \n        null as \"age_at_resolution\",\n        CASE \n            WHEN code = 'weight'THEN 'LOINC:29463-7'\n            WHEN code = 'height' THEN 'LOINC:8302-2'\n            WHEN code = 'body_mass_index' THEN 'LOINC:39156-5'\n            ELSE code\n        END AS code,        \n        CASE \n            WHEN code = 'weight' THEN 'Body weight'\n            WHEN code = 'height' THEN 'Body height'\n            WHEN code = 'body_mass_index' THEN 'Body mass index (BMI) [Ratio]' \n            ELSE display\n        END AS display,\n        value_code, \n        value_display, \n        value_number,\n        CASE \n            WHEN code = 'weight' THEN 'kg'\n            WHEN code = 'height' THEN 'cm'\n            WHEN code = 'body_mass_index' THEN 'kg/m2'   \n            ELSE NULL\n        END AS \"value_units\",  \n        CASE \n            WHEN code = 'weight' THEN 'kilogram'\n            WHEN code = 'height' THEN 'centimeter'\n            WHEN code = 'body_mass_index' THEN 'kilogram per square meter'   \n            ELSE NULL\n        END as \"value_units_display\",\n        'sa' || '_' || md5('phs001616' || '|' || cast(coalesce(subject_id, '') as text) || '|' || 'phs001616' || '|' || cast(coalesce(code, '') as text))::text as \"id\",\n        'ap' || '_' || md5('phs001616' || '|' || cast(coalesce(subjectconsent.consent, '') as text))::text as \"has_access_policy\",\n        'sb' || '_' || md5('phs001616' || '|' || cast(coalesce(subject_id, '') as text))::text as \"subject_id\"\n    from union_data as ud\n    left join \"dbt\".\"main_main\".\"eMERGEseq_stg_subjectconsent\" as subjectconsent\n         using (subject_id)", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.eMERGEseq_ftd_file_subject": {"database": "dbt", "schema": "main_eMERGEseq_data", "name": "eMERGEseq_ftd_file_subject", "resource_type": "model", "package_name": "ftd", "path": "eMERGEseq/eMERGEseq_ftd_file_subject.sql", "original_file_path": "models/eMERGEseq/eMERGEseq_ftd_file_subject.sql", "unique_id": "model.ftd.eMERGEseq_ftd_file_subject", "fqn": ["ftd", "eMERGEseq", "eMERGEseq_ftd_file_subject"], "alias": "eMERGEseq_ftd_file_subject", "checksum": {"name": "sha256", "checksum": "b438980e5298533dd91c1bb3408a2b65b4ac417d77c56d7423b047946a71295f"}, "config": {"enabled": true, "alias": null, "schema": "eMERGEseq_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for eMERGEseq_ftd_file_subject.", "columns": {"file_id": {"name": "file_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "subject_id": {"name": "subject_id", "description": "The Subject(s) which this file describes.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/eMERGEseq/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "eMERGEseq_data"}, "created_at": 1757448969.7823145, "relation_name": "\"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_file_subject\"", "raw_code": "{{ config(materialized='table', schema='eMERGEseq_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='eMERGEseq') }}::text as \"file_id\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='eMERGEseq') }}::text as \"subject_id\"\n        from {{ ref('eMERGEseq_stg_subjectconsent') }} as subjectconsent\n        join {{ ref('eMERGEseq_stg_demographics') }} as demographics\non subjectconsent.subject_id = demographics.subject_id  join {{ ref('eMERGEseq_stg_phecode') }} as phecode\non   join {{ ref('eMERGEseq_stg_samplesubjectmapping') }} as samplesubjectmapping\non   join {{ ref('eMERGEseq_stg_sampleattributes') }} as sampleattributes\non  \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "eMERGEseq_stg_subjectconsent", "package": null, "version": null}, {"name": "eMERGEseq_stg_demographics", "package": null, "version": null}, {"name": "eMERGEseq_stg_phecode", "package": null, "version": null}, {"name": "eMERGEseq_stg_samplesubjectmapping", "package": null, "version": null}, {"name": "eMERGEseq_stg_sampleattributes", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.eMERGEseq.eMERGEseq_stg_subjectconsent", "model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_sampleattributes"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/eMERGEseq_ftd_file_subject.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('eMERGEseq' || '|' || cast(coalesce(, '') as text))::text as \"file_id\",\n       '' || '_' || md5('eMERGEseq' || '|' || cast(coalesce(, '') as text))::text as \"subject_id\"\n        from \"dbt\".\"main_main\".\"eMERGEseq_stg_subjectconsent\" as subjectconsent\n        join \"dbt\".\"main_main\".\"eMERGEseq_stg_demographics\" as demographics\non subjectconsent.subject_id = demographics.subject_id  join \"dbt\".\"main_main\".\"eMERGEseq_stg_phecode\" as phecode\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_samplesubjectmapping\" as samplesubjectmapping\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_sampleattributes\" as sampleattributes\non  \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.eMERGEseq_ftd_study": {"database": "dbt", "schema": "main_eMERGEseq_data", "name": "eMERGEseq_ftd_study", "resource_type": "model", "package_name": "ftd", "path": "eMERGEseq/eMERGEseq_ftd_study.sql", "original_file_path": "models/eMERGEseq/eMERGEseq_ftd_study.sql", "unique_id": "model.ftd.eMERGEseq_ftd_study", "fqn": ["ftd", "eMERGEseq", "eMERGEseq_ftd_study"], "alias": "eMERGEseq_ftd_study", "checksum": {"name": "sha256", "checksum": "0996ab5671166e79d72280550a0e8c0be3c81cb79677969a58ec349c1b1a5dca"}, "config": {"enabled": true, "alias": null, "schema": "eMERGEseq_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for eMERGEseq_ftd_study.", "columns": {"parent_study_id": {"name": "parent_study_id", "description": "Parent Study ID", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "study_title": {"name": "study_title", "description": "Study Title", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/eMERGEseq/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "eMERGEseq_data"}, "created_at": 1757448969.7778149, "relation_name": "\"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_study\"", "raw_code": "{{ config(materialized='table', schema='eMERGEseq_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='eMERGEseq') }}::text as \"parent_study_id\",\n       GEN_UNKNOWN.study_title::text as \"study_title\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='eMERGEseq') }}::text as \"id\"\n        from {{ ref('eMERGEseq_stg_subjectconsent') }} as subjectconsent\n        join {{ ref('eMERGEseq_stg_demographics') }} as demographics\non subjectconsent.subject_id = demographics.subject_id  join {{ ref('eMERGEseq_stg_phecode') }} as phecode\non   join {{ ref('eMERGEseq_stg_samplesubjectmapping') }} as samplesubjectmapping\non   join {{ ref('eMERGEseq_stg_sampleattributes') }} as sampleattributes\non  \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "eMERGEseq_stg_subjectconsent", "package": null, "version": null}, {"name": "eMERGEseq_stg_demographics", "package": null, "version": null}, {"name": "eMERGEseq_stg_phecode", "package": null, "version": null}, {"name": "eMERGEseq_stg_samplesubjectmapping", "package": null, "version": null}, {"name": "eMERGEseq_stg_sampleattributes", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.eMERGEseq.eMERGEseq_stg_subjectconsent", "model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_sampleattributes"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/eMERGEseq_ftd_study.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('eMERGEseq' || '|' || cast(coalesce(, '') as text))::text as \"parent_study_id\",\n       GEN_UNKNOWN.study_title::text as \"study_title\",\n       '' || '_' || md5('eMERGEseq' || '|' || cast(coalesce(, '') as text))::text as \"id\"\n        from \"dbt\".\"main_main\".\"eMERGEseq_stg_subjectconsent\" as subjectconsent\n        join \"dbt\".\"main_main\".\"eMERGEseq_stg_demographics\" as demographics\non subjectconsent.subject_id = demographics.subject_id  join \"dbt\".\"main_main\".\"eMERGEseq_stg_phecode\" as phecode\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_samplesubjectmapping\" as samplesubjectmapping\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_sampleattributes\" as sampleattributes\non  \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.eMERGEseq_ftd_subject_external_id": {"database": "dbt", "schema": "main_eMERGEseq_data", "name": "eMERGEseq_ftd_subject_external_id", "resource_type": "model", "package_name": "ftd", "path": "eMERGEseq/eMERGEseq_ftd_subject_external_id.sql", "original_file_path": "models/eMERGEseq/eMERGEseq_ftd_subject_external_id.sql", "unique_id": "model.ftd.eMERGEseq_ftd_subject_external_id", "fqn": ["ftd", "eMERGEseq", "eMERGEseq_ftd_subject_external_id"], "alias": "eMERGEseq_ftd_subject_external_id", "checksum": {"name": "sha256", "checksum": "771e4f357c7cb174a4583583db26c13a61af1f458dfba4376d4a9be088f782b2"}, "config": {"enabled": true, "alias": null, "schema": "eMERGEseq_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for eMERGEseq_ftd_subject_external_id.", "columns": {"subject_id": {"name": "subject_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/eMERGEseq/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "eMERGEseq_data"}, "created_at": 1757448969.7807395, "relation_name": "\"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_subject_external_id\"", "raw_code": "{{ config(materialized='table', schema='eMERGEseq_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='sb',descriptor=['demographics.subject_id'], study_id='phs001616') }}::text as \"subject_id\",\n       demographics.subject_id::text as \"external_id\"\n        from{{ ref('eMERGEseq_stg_demographics') }} as demographics\n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "eMERGEseq_stg_demographics", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.eMERGEseq.eMERGEseq_stg_demographics"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/eMERGEseq_ftd_subject_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        'sb' || '_' || md5('phs001616' || '|' || cast(coalesce(demographics.subject_id, '') as text))::text as \"subject_id\",\n       demographics.subject_id::text as \"external_id\"\n        from\"dbt\".\"main_main\".\"eMERGEseq_stg_demographics\" as demographics\n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.eMERGEseq_ftd_demographics": {"database": "dbt", "schema": "main_eMERGEseq_data", "name": "eMERGEseq_ftd_demographics", "resource_type": "model", "package_name": "ftd", "path": "eMERGEseq/eMERGEseq_ftd_demographics.sql", "original_file_path": "models/eMERGEseq/eMERGEseq_ftd_demographics.sql", "unique_id": "model.ftd.eMERGEseq_ftd_demographics", "fqn": ["ftd", "eMERGEseq", "eMERGEseq_ftd_demographics"], "alias": "eMERGEseq_ftd_demographics", "checksum": {"name": "sha256", "checksum": "43980bac765df54fbef3bf1cb4d67623843c0cd9ff9b9dfeab838c91c1a93575"}, "config": {"enabled": true, "alias": null, "schema": "eMERGEseq_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for eMERGEseq_ftd_demographics.", "columns": {"date_of_birth": {"name": "date_of_birth", "description": "Date at which the individual was born. May be impacted by privacy rules described in date_of_birth_type.", "meta": {}, "data_type": "integer", "constraints": [], "quote": null, "tags": [], "granularity": null}, "date_of_birth_type": {"name": "date_of_birth_type", "description": "Privacy rule modification applied to date_of_birth.", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "sex": {"name": "sex", "description": "Sex of the individual", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "sex_display": {"name": "sex_display", "description": "The friendly display string of the coded term for Sex", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "race_display": {"name": "race_display", "description": "The friendly display string of the coded term(s) for Race", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "ethnicity": {"name": "ethnicity", "description": "Reported ethnicity as defined by the 1997 OMB directives.", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "ethnicity_display": {"name": "ethnicity_display", "description": "The friendly display string of the coded term for Ethnicity", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "age_at_last_vital_status": {"name": "age_at_last_vital_status", "description": "Age at last vital status in decimal years.", "meta": {}, "data_type": "integer", "constraints": [], "quote": null, "tags": [], "granularity": null}, "vital_status": {"name": "vital_status", "description": "Vital Status", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/eMERGEseq/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "eMERGEseq_data"}, "created_at": 1757448969.7763817, "relation_name": "\"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_demographics\"", "raw_code": "{{ config(materialized='table', schema='eMERGEseq_data') }}\n\n    with source as (\n        select \n        CASE\n            WHEN demographics.year_birth = 'NA' THEN null\n            WHEN demographics.year_birth = '.' THEN null\n            ELSE demographics.year_birth\n        END::integer as \"date_of_birth\",\n       'year_only'::text as \"date_of_birth_type\",\n        CASE demographics.sex\n            WHEN 'C46110' THEN 'female'\n            WHEN 'C46109' THEN 'male'\n            WHEN 'U' THEN 'unknown'\n            WHEN '.' THEN 'unknown'\n            WHEN 'NA' THEN 'unknown'\n        END::text as \"sex\",       \n         CASE demographics.sex\n            WHEN 'C46110' THEN 'Female'\n            WHEN 'C46109' THEN 'Male'\n            WHEN 'U' THEN 'Unknown'\n            WHEN '.' THEN 'Unknown'\n            WHEN 'NA' THEN 'Unknown'\n        END::text as \"sex_display\",\n       CASE demographics.race\n            WHEN 'C41259' THEN 'American Indian or Alaska Native'\n            WHEN 'C41260' THEN 'Asian'\n            WHEN 'C16352' THEN 'Black or African American'\n            WHEN 'C41219' THEN 'Native Hawaiian or  Other Pacific Islander'\n            WHEN 'C41261' THEN 'White'\n            WHEN 'C17998' THEN 'unknown'\n            WHEN 'C43234' THEN 'unknown'\n            WHEN 'C13652' THEN 'unknown'\n            WHEN '.' THEN 'unknown'\n            WHEN 'NA' THEN 'unknown'\n            WHEN 'OTHER' THEN 'other race'\n       END::text as \"race_display\",\n       CASE demographics.ethnicity\n            WHEN 'C17459' THEN 'hispanic_or_latino'\n            WHEN 'C41222' THEN 'not_hispanic_or_latino'\n            WHEN 'C41221' THEN 'unknown'\n            WHEN '.' THEN 'unknown'\n            WHEN 'NA' THEN 'unknown'\n        END::text as \"ethnicity\",\n        CASE demographics.ethnicity\n            WHEN 'C17459' THEN 'Hispanic or Latino'\n            WHEN 'C41222' THEN 'Not Hispanic or Latino'\n            WHEN 'C41221' THEN 'unknown'\n            WHEN '.' THEN 'unknown'\n            WHEN 'NA' THEN 'unknown'\n        END::text as \"ethnicity_display\",\n        NULL as \"age_at_last_vital_status\",\n        NULL as \"vital_status\",\n       {{ generate_global_id(prefix='ap',descriptor=['subjectconsent.consent'], study_id='phs001616') }}::text as \"has_access_policy\",\n       {{ generate_global_id(prefix='dm',descriptor=['demographics.subject_id'], study_id='phs001616') }}::text as \"id\"\n        from {{ ref('eMERGEseq_stg_demographics') }} as demographics\n        left join {{ ref('eMERGEseq_stg_subjectconsent') }} as subjectconsent\n        on demographics.subject_id = subjectconsent.subject_id\n        \n    )\n\nselect \n        * \n    from source", "language": "sql", "refs": [{"name": "eMERGEseq_stg_demographics", "package": null, "version": null}, {"name": "eMERGEseq_stg_subjectconsent", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_subjectconsent"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/eMERGEseq_ftd_demographics.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        CASE\n            WHEN demographics.year_birth = 'NA' THEN null\n            WHEN demographics.year_birth = '.' THEN null\n            ELSE demographics.year_birth\n        END::integer as \"date_of_birth\",\n       'year_only'::text as \"date_of_birth_type\",\n        CASE demographics.sex\n            WHEN 'C46110' THEN 'female'\n            WHEN 'C46109' THEN 'male'\n            WHEN 'U' THEN 'unknown'\n            WHEN '.' THEN 'unknown'\n            WHEN 'NA' THEN 'unknown'\n        END::text as \"sex\",       \n         CASE demographics.sex\n            WHEN 'C46110' THEN 'Female'\n            WHEN 'C46109' THEN 'Male'\n            WHEN 'U' THEN 'Unknown'\n            WHEN '.' THEN 'Unknown'\n            WHEN 'NA' THEN 'Unknown'\n        END::text as \"sex_display\",\n       CASE demographics.race\n            WHEN 'C41259' THEN 'American Indian or Alaska Native'\n            WHEN 'C41260' THEN 'Asian'\n            WHEN 'C16352' THEN 'Black or African American'\n            WHEN 'C41219' THEN 'Native Hawaiian or  Other Pacific Islander'\n            WHEN 'C41261' THEN 'White'\n            WHEN 'C17998' THEN 'unknown'\n            WHEN 'C43234' THEN 'unknown'\n            WHEN 'C13652' THEN 'unknown'\n            WHEN '.' THEN 'unknown'\n            WHEN 'NA' THEN 'unknown'\n            WHEN 'OTHER' THEN 'other race'\n       END::text as \"race_display\",\n       CASE demographics.ethnicity\n            WHEN 'C17459' THEN 'hispanic_or_latino'\n            WHEN 'C41222' THEN 'not_hispanic_or_latino'\n            WHEN 'C41221' THEN 'unknown'\n            WHEN '.' THEN 'unknown'\n            WHEN 'NA' THEN 'unknown'\n        END::text as \"ethnicity\",\n        CASE demographics.ethnicity\n            WHEN 'C17459' THEN 'Hispanic or Latino'\n            WHEN 'C41222' THEN 'Not Hispanic or Latino'\n            WHEN 'C41221' THEN 'unknown'\n            WHEN '.' THEN 'unknown'\n            WHEN 'NA' THEN 'unknown'\n        END::text as \"ethnicity_display\",\n        NULL as \"age_at_last_vital_status\",\n        NULL as \"vital_status\",\n       'ap' || '_' || md5('phs001616' || '|' || cast(coalesce(subjectconsent.consent, '') as text))::text as \"has_access_policy\",\n       'dm' || '_' || md5('phs001616' || '|' || cast(coalesce(demographics.subject_id, '') as text))::text as \"id\"\n        from \"dbt\".\"main_main\".\"eMERGEseq_stg_demographics\" as demographics\n        left join \"dbt\".\"main_main\".\"eMERGEseq_stg_subjectconsent\" as subjectconsent\n        on demographics.subject_id = subjectconsent.subject_id\n        \n    )\n\nselect \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.eMERGEseq_ftd_family_external_id": {"database": "dbt", "schema": "main_eMERGEseq_data", "name": "eMERGEseq_ftd_family_external_id", "resource_type": "model", "package_name": "ftd", "path": "eMERGEseq/eMERGEseq_ftd_family_external_id.sql", "original_file_path": "models/eMERGEseq/eMERGEseq_ftd_family_external_id.sql", "unique_id": "model.ftd.eMERGEseq_ftd_family_external_id", "fqn": ["ftd", "eMERGEseq", "eMERGEseq_ftd_family_external_id"], "alias": "eMERGEseq_ftd_family_external_id", "checksum": {"name": "sha256", "checksum": "81a562f935c5a87ca703c55b28f766ba7acd1fb5e5356ef90e56806b41a279cb"}, "config": {"enabled": true, "alias": null, "schema": "eMERGEseq_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for eMERGEseq_ftd_family_external_id.", "columns": {"family_id": {"name": "family_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/eMERGEseq/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "eMERGEseq_data"}, "created_at": 1757448969.7745497, "relation_name": "\"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_family_external_id\"", "raw_code": "{{ config(materialized='table', schema='eMERGEseq_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='eMERGEseq') }}::text as \"family_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from {{ ref('eMERGEseq_stg_subjectconsent') }} as subjectconsent\n        join {{ ref('eMERGEseq_stg_demographics') }} as demographics\non subjectconsent.subject_id = demographics.subject_id  join {{ ref('eMERGEseq_stg_phecode') }} as phecode\non   join {{ ref('eMERGEseq_stg_samplesubjectmapping') }} as samplesubjectmapping\non   join {{ ref('eMERGEseq_stg_sampleattributes') }} as sampleattributes\non  \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "eMERGEseq_stg_subjectconsent", "package": null, "version": null}, {"name": "eMERGEseq_stg_demographics", "package": null, "version": null}, {"name": "eMERGEseq_stg_phecode", "package": null, "version": null}, {"name": "eMERGEseq_stg_samplesubjectmapping", "package": null, "version": null}, {"name": "eMERGEseq_stg_sampleattributes", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.eMERGEseq.eMERGEseq_stg_subjectconsent", "model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_sampleattributes"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/eMERGEseq_ftd_family_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('eMERGEseq' || '|' || cast(coalesce(, '') as text))::text as \"family_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"eMERGEseq_stg_subjectconsent\" as subjectconsent\n        join \"dbt\".\"main_main\".\"eMERGEseq_stg_demographics\" as demographics\non subjectconsent.subject_id = demographics.subject_id  join \"dbt\".\"main_main\".\"eMERGEseq_stg_phecode\" as phecode\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_samplesubjectmapping\" as samplesubjectmapping\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_sampleattributes\" as sampleattributes\non  \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.eMERGEseq_ftd_family": {"database": "dbt", "schema": "main_eMERGEseq_data", "name": "eMERGEseq_ftd_family", "resource_type": "model", "package_name": "ftd", "path": "eMERGEseq/eMERGEseq_ftd_family.sql", "original_file_path": "models/eMERGEseq/eMERGEseq_ftd_family.sql", "unique_id": "model.ftd.eMERGEseq_ftd_family", "fqn": ["ftd", "eMERGEseq", "eMERGEseq_ftd_family"], "alias": "eMERGEseq_ftd_family", "checksum": {"name": "sha256", "checksum": "33a5f4345d9592c8ca17c10f91b758fb7529a9067ad83c3b9ffc4ba16d6749dd"}, "config": {"enabled": true, "alias": null, "schema": "eMERGEseq_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for eMERGEseq_ftd_family.", "columns": {"family_type": {"name": "family_type", "description": "Describes the 'type' of study family, eg, trio.", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "family_description": {"name": "family_description", "description": "Free title describing the study family, such as potential inheritance or details about consanguinity", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "consanguinity": {"name": "consanguinity", "description": "Is there known or suspected consanguinity in this study family?", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "family_study_focus": {"name": "family_study_focus", "description": "What is this study family investigating? EG, a specific condition. The code should be prefixed with a recognizable curie.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/eMERGEseq/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "eMERGEseq_data"}, "created_at": 1757448969.7651732, "relation_name": "\"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_family\"", "raw_code": "{{ config(materialized='table', schema='eMERGEseq_data') }}\n\n    with source as (\n        select \n        GEN_UNKNOWN.family_type::text as \"family_type\",\n       GEN_UNKNOWN.family_description::text as \"family_description\",\n       GEN_UNKNOWN.consanguinity::text as \"consanguinity\",\n       GEN_UNKNOWN.family_study_focus::text as \"family_study_focus\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='eMERGEseq') }}::text as \"has_access_policy\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='eMERGEseq') }}::text as \"id\"\n        from {{ ref('eMERGEseq_stg_subjectconsent') }} as subjectconsent\n        join {{ ref('eMERGEseq_stg_demographics') }} as demographics\non subjectconsent.subject_id = demographics.subject_id  join {{ ref('eMERGEseq_stg_phecode') }} as phecode\non   join {{ ref('eMERGEseq_stg_samplesubjectmapping') }} as samplesubjectmapping\non   join {{ ref('eMERGEseq_stg_sampleattributes') }} as sampleattributes\non  \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "eMERGEseq_stg_subjectconsent", "package": null, "version": null}, {"name": "eMERGEseq_stg_demographics", "package": null, "version": null}, {"name": "eMERGEseq_stg_phecode", "package": null, "version": null}, {"name": "eMERGEseq_stg_samplesubjectmapping", "package": null, "version": null}, {"name": "eMERGEseq_stg_sampleattributes", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.eMERGEseq.eMERGEseq_stg_subjectconsent", "model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_sampleattributes"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/eMERGEseq_ftd_family.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        GEN_UNKNOWN.family_type::text as \"family_type\",\n       GEN_UNKNOWN.family_description::text as \"family_description\",\n       GEN_UNKNOWN.consanguinity::text as \"consanguinity\",\n       GEN_UNKNOWN.family_study_focus::text as \"family_study_focus\",\n       '' || '_' || md5('eMERGEseq' || '|' || cast(coalesce(, '') as text))::text as \"has_access_policy\",\n       '' || '_' || md5('eMERGEseq' || '|' || cast(coalesce(, '') as text))::text as \"id\"\n        from \"dbt\".\"main_main\".\"eMERGEseq_stg_subjectconsent\" as subjectconsent\n        join \"dbt\".\"main_main\".\"eMERGEseq_stg_demographics\" as demographics\non subjectconsent.subject_id = demographics.subject_id  join \"dbt\".\"main_main\".\"eMERGEseq_stg_phecode\" as phecode\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_samplesubjectmapping\" as samplesubjectmapping\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_sampleattributes\" as sampleattributes\non  \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.eMERGEseq_ftd_datasource": {"database": "dbt", "schema": "main_eMERGEseq_data", "name": "eMERGEseq_ftd_datasource", "resource_type": "model", "package_name": "ftd", "path": "eMERGEseq/eMERGEseq_ftd_datasource.sql", "original_file_path": "models/eMERGEseq/eMERGEseq_ftd_datasource.sql", "unique_id": "model.ftd.eMERGEseq_ftd_datasource", "fqn": ["ftd", "eMERGEseq", "eMERGEseq_ftd_datasource"], "alias": "eMERGEseq_ftd_datasource", "checksum": {"name": "sha256", "checksum": "3f4b4a7be4d6cecd74001b4cf3bbfc83a3fadafafa455780c7c72c9f4c538dd0"}, "config": {"enabled": true, "alias": null, "schema": "eMERGEseq_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for eMERGEseq_ftd_datasource.", "columns": {"snapshot_id": {"name": "snapshot_id", "description": "The Terra Data Repository Snapshot ID.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "google_data_project": {"name": "google_data_project", "description": "The Google Data Project needed to query this snapshot in BigQuery.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "snapshot_dataset": {"name": "snapshot_dataset", "description": "The Dataset within BigQuery where the table can be queried.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "table": {"name": "table", "description": "The table in the dataset that contains the row of interest.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "parameterized_query": {"name": "parameterized_query", "description": "A parameterized query that contains the primary key fields and can be used to select specific rows. This should be formatted according to (https://cloud.google.com/bigquery/docs/parameterized-queries)[BigQuery instructions], including using named parameters.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/eMERGEseq/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "eMERGEseq_data"}, "created_at": 1757448969.7666264, "relation_name": "\"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_datasource\"", "raw_code": "{{ config(materialized='table', schema='eMERGEseq_data') }}\n\n    with source as (\n        select \n        GEN_UNKNOWN.snapshot_id::text as \"snapshot_id\",\n       GEN_UNKNOWN.google_data_project::text as \"google_data_project\",\n       GEN_UNKNOWN.snapshot_dataset::text as \"snapshot_dataset\",\n       GEN_UNKNOWN.table::text as \"table\",\n       GEN_UNKNOWN.parameterized_query::text as \"parameterized_query\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='eMERGEseq') }}::text as \"id\"\n        from {{ ref('eMERGEseq_stg_demographics') }} as demographics\n        join {{ ref('eMERGEseq_stg_phecode') }} as phecode\non demographics.subject_id = phecode.subject_id  join {{ ref('eMERGEseq_stg_sampleattributes') }} as sampleattributes\non samplesubjectmapping.sample_id = sampleattributes.sample_id  join {{ ref('eMERGEseq_stg_samplesubjectmapping') }} as samplesubjectmapping\non sampleattributes.sample_id = samplesubjectmapping.sample_id  join {{ ref('eMERGEseq_stg_subjectconsent') }} as subjectconsent\non   join {{ ref('eMERGEseq_stg_bmi') }} as bmi\non   join {{ ref('eMERGEseq_stg_pedigree') }} as pedigree\non  \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "eMERGEseq_stg_demographics", "package": null, "version": null}, {"name": "eMERGEseq_stg_phecode", "package": null, "version": null}, {"name": "eMERGEseq_stg_sampleattributes", "package": null, "version": null}, {"name": "eMERGEseq_stg_samplesubjectmapping", "package": null, "version": null}, {"name": "eMERGEseq_stg_subjectconsent", "package": null, "version": null}, {"name": "eMERGEseq_stg_bmi", "package": null, "version": null}, {"name": "eMERGEseq_stg_pedigree", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_sampleattributes", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_subjectconsent", "model.eMERGEseq.eMERGEseq_stg_bmi", "model.eMERGEseq.eMERGEseq_stg_pedigree"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/eMERGEseq_ftd_datasource.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        GEN_UNKNOWN.snapshot_id::text as \"snapshot_id\",\n       GEN_UNKNOWN.google_data_project::text as \"google_data_project\",\n       GEN_UNKNOWN.snapshot_dataset::text as \"snapshot_dataset\",\n       GEN_UNKNOWN.table::text as \"table\",\n       GEN_UNKNOWN.parameterized_query::text as \"parameterized_query\",\n       '' || '_' || md5('eMERGEseq' || '|' || cast(coalesce(, '') as text))::text as \"id\"\n        from \"dbt\".\"main_main\".\"eMERGEseq_stg_demographics\" as demographics\n        join \"dbt\".\"main_main\".\"eMERGEseq_stg_phecode\" as phecode\non demographics.subject_id = phecode.subject_id  join \"dbt\".\"main_main\".\"eMERGEseq_stg_sampleattributes\" as sampleattributes\non samplesubjectmapping.sample_id = sampleattributes.sample_id  join \"dbt\".\"main_main\".\"eMERGEseq_stg_samplesubjectmapping\" as samplesubjectmapping\non sampleattributes.sample_id = samplesubjectmapping.sample_id  join \"dbt\".\"main_main\".\"eMERGEseq_stg_subjectconsent\" as subjectconsent\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_bmi\" as bmi\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_pedigree\" as pedigree\non  \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.eMERGEseq_ftd_study_principal_investigator": {"database": "dbt", "schema": "main_eMERGEseq_data", "name": "eMERGEseq_ftd_study_principal_investigator", "resource_type": "model", "package_name": "ftd", "path": "eMERGEseq/eMERGEseq_ftd_study_principal_investigator.sql", "original_file_path": "models/eMERGEseq/eMERGEseq_ftd_study_principal_investigator.sql", "unique_id": "model.ftd.eMERGEseq_ftd_study_principal_investigator", "fqn": ["ftd", "eMERGEseq", "eMERGEseq_ftd_study_principal_investigator"], "alias": "eMERGEseq_ftd_study_principal_investigator", "checksum": {"name": "sha256", "checksum": "d5f35349b58328e96b31e71cf5f09d9e8b7ec7358376f381170204524d4a10f3"}, "config": {"enabled": true, "alias": null, "schema": "eMERGEseq_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for eMERGEseq_ftd_study_principal_investigator.", "columns": {"study_id": {"name": "study_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "principal_investigator": {"name": "principal_investigator", "description": "Principal Investigator", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/eMERGEseq/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "eMERGEseq_data"}, "created_at": 1757448969.7850237, "relation_name": "\"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_study_principal_investigator\"", "raw_code": "{{ config(materialized='table', schema='eMERGEseq_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='eMERGEseq') }}::text as \"study_id\",\n       GEN_UNKNOWN.principal_investigator::text as \"principal_investigator\"\n        from {{ ref('eMERGEseq_stg_subjectconsent') }} as subjectconsent\n        join {{ ref('eMERGEseq_stg_demographics') }} as demographics\non subjectconsent.subject_id = demographics.subject_id  join {{ ref('eMERGEseq_stg_phecode') }} as phecode\non   join {{ ref('eMERGEseq_stg_samplesubjectmapping') }} as samplesubjectmapping\non   join {{ ref('eMERGEseq_stg_sampleattributes') }} as sampleattributes\non  \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "eMERGEseq_stg_subjectconsent", "package": null, "version": null}, {"name": "eMERGEseq_stg_demographics", "package": null, "version": null}, {"name": "eMERGEseq_stg_phecode", "package": null, "version": null}, {"name": "eMERGEseq_stg_samplesubjectmapping", "package": null, "version": null}, {"name": "eMERGEseq_stg_sampleattributes", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.eMERGEseq.eMERGEseq_stg_subjectconsent", "model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_sampleattributes"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/eMERGEseq_ftd_study_principal_investigator.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('eMERGEseq' || '|' || cast(coalesce(, '') as text))::text as \"study_id\",\n       GEN_UNKNOWN.principal_investigator::text as \"principal_investigator\"\n        from \"dbt\".\"main_main\".\"eMERGEseq_stg_subjectconsent\" as subjectconsent\n        join \"dbt\".\"main_main\".\"eMERGEseq_stg_demographics\" as demographics\non subjectconsent.subject_id = demographics.subject_id  join \"dbt\".\"main_main\".\"eMERGEseq_stg_phecode\" as phecode\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_samplesubjectmapping\" as samplesubjectmapping\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_sampleattributes\" as sampleattributes\non  \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.eMERGEseq_ftd_file_external_id": {"database": "dbt", "schema": "main_eMERGEseq_data", "name": "eMERGEseq_ftd_file_external_id", "resource_type": "model", "package_name": "ftd", "path": "eMERGEseq/eMERGEseq_ftd_file_external_id.sql", "original_file_path": "models/eMERGEseq/eMERGEseq_ftd_file_external_id.sql", "unique_id": "model.ftd.eMERGEseq_ftd_file_external_id", "fqn": ["ftd", "eMERGEseq", "eMERGEseq_ftd_file_external_id"], "alias": "eMERGEseq_ftd_file_external_id", "checksum": {"name": "sha256", "checksum": "c016c1e838659d5c47c626dd9a0d9a436639414f76e8eb87011bd2a9c90076fb"}, "config": {"enabled": true, "alias": null, "schema": "eMERGEseq_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for eMERGEseq_ftd_file_external_id.", "columns": {"file_id": {"name": "file_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/eMERGEseq/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "eMERGEseq_data"}, "created_at": 1757448969.7811146, "relation_name": "\"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_file_external_id\"", "raw_code": "{{ config(materialized='table', schema='eMERGEseq_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='eMERGEseq') }}::text as \"file_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from {{ ref('eMERGEseq_stg_subjectconsent') }} as subjectconsent\n        join {{ ref('eMERGEseq_stg_demographics') }} as demographics\non subjectconsent.subject_id = demographics.subject_id  join {{ ref('eMERGEseq_stg_phecode') }} as phecode\non   join {{ ref('eMERGEseq_stg_samplesubjectmapping') }} as samplesubjectmapping\non   join {{ ref('eMERGEseq_stg_sampleattributes') }} as sampleattributes\non  \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "eMERGEseq_stg_subjectconsent", "package": null, "version": null}, {"name": "eMERGEseq_stg_demographics", "package": null, "version": null}, {"name": "eMERGEseq_stg_phecode", "package": null, "version": null}, {"name": "eMERGEseq_stg_samplesubjectmapping", "package": null, "version": null}, {"name": "eMERGEseq_stg_sampleattributes", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.eMERGEseq.eMERGEseq_stg_subjectconsent", "model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_sampleattributes"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/eMERGEseq_ftd_file_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('eMERGEseq' || '|' || cast(coalesce(, '') as text))::text as \"file_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"eMERGEseq_stg_subjectconsent\" as subjectconsent\n        join \"dbt\".\"main_main\".\"eMERGEseq_stg_demographics\" as demographics\non subjectconsent.subject_id = demographics.subject_id  join \"dbt\".\"main_main\".\"eMERGEseq_stg_phecode\" as phecode\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_samplesubjectmapping\" as samplesubjectmapping\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_sampleattributes\" as sampleattributes\non  \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.eMERGEseq_ftd_sample_storage_method": {"database": "dbt", "schema": "main_eMERGEseq_data", "name": "eMERGEseq_ftd_sample_storage_method", "resource_type": "model", "package_name": "ftd", "path": "eMERGEseq/eMERGEseq_ftd_sample_storage_method.sql", "original_file_path": "models/eMERGEseq/eMERGEseq_ftd_sample_storage_method.sql", "unique_id": "model.ftd.eMERGEseq_ftd_sample_storage_method", "fqn": ["ftd", "eMERGEseq", "eMERGEseq_ftd_sample_storage_method"], "alias": "eMERGEseq_ftd_sample_storage_method", "checksum": {"name": "sha256", "checksum": "f501f58020a36e1a87964806d70c51784446251e01bfdf6081d7257658a2922e"}, "config": {"enabled": true, "alias": null, "schema": "eMERGEseq_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for eMERGEseq_ftd_sample_storage_method.", "columns": {"sample_id": {"name": "sample_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "storage_method": {"name": "storage_method", "description": "Sample storage method, eg, Frozen or with additives", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/eMERGEseq/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "eMERGEseq_data"}, "created_at": 1757448969.7719607, "relation_name": "\"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_sample_storage_method\"", "raw_code": "{{ config(materialized='table', schema='eMERGEseq_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='eMERGEseq') }}::text as \"sample_id\",\n       GEN_UNKNOWN.storage_method::text as \"storage_method\"\n        from {{ ref('eMERGEseq_stg_subjectconsent') }} as subjectconsent\n        join {{ ref('eMERGEseq_stg_demographics') }} as demographics\non subjectconsent.subject_id = demographics.subject_id  join {{ ref('eMERGEseq_stg_phecode') }} as phecode\non   join {{ ref('eMERGEseq_stg_samplesubjectmapping') }} as samplesubjectmapping\non   join {{ ref('eMERGEseq_stg_sampleattributes') }} as sampleattributes\non  \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "eMERGEseq_stg_subjectconsent", "package": null, "version": null}, {"name": "eMERGEseq_stg_demographics", "package": null, "version": null}, {"name": "eMERGEseq_stg_phecode", "package": null, "version": null}, {"name": "eMERGEseq_stg_samplesubjectmapping", "package": null, "version": null}, {"name": "eMERGEseq_stg_sampleattributes", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.eMERGEseq.eMERGEseq_stg_subjectconsent", "model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_sampleattributes"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/eMERGEseq_ftd_sample_storage_method.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('eMERGEseq' || '|' || cast(coalesce(, '') as text))::text as \"sample_id\",\n       GEN_UNKNOWN.storage_method::text as \"storage_method\"\n        from \"dbt\".\"main_main\".\"eMERGEseq_stg_subjectconsent\" as subjectconsent\n        join \"dbt\".\"main_main\".\"eMERGEseq_stg_demographics\" as demographics\non subjectconsent.subject_id = demographics.subject_id  join \"dbt\".\"main_main\".\"eMERGEseq_stg_phecode\" as phecode\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_samplesubjectmapping\" as samplesubjectmapping\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_sampleattributes\" as sampleattributes\non  \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.eMERGEseq_ftd_subjectassertion_source_data": {"database": "dbt", "schema": "main_eMERGEseq_data", "name": "eMERGEseq_ftd_subjectassertion_source_data", "resource_type": "model", "package_name": "ftd", "path": "eMERGEseq/eMERGEseq_ftd_subjectassertion_source_data.sql", "original_file_path": "models/eMERGEseq/eMERGEseq_ftd_subjectassertion_source_data.sql", "unique_id": "model.ftd.eMERGEseq_ftd_subjectassertion_source_data", "fqn": ["ftd", "eMERGEseq", "eMERGEseq_ftd_subjectassertion_source_data"], "alias": "eMERGEseq_ftd_subjectassertion_source_data", "checksum": {"name": "sha256", "checksum": "a179b79fe22c56b66e017a8304ac307535ad0be340bbfc5cd6f81d16ebfff2da"}, "config": {"enabled": true, "alias": null, "schema": "eMERGEseq_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for eMERGEseq_ftd_subjectassertion_source_data.", "columns": {"subjectassertion_id": {"name": "subjectassertion_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "source_data_id": {"name": "source_data_id", "description": "The sources from which this assertion was derived", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/eMERGEseq/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "eMERGEseq_data"}, "created_at": 1757448969.7819326, "relation_name": "\"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_subjectassertion_source_data\"", "raw_code": "{{ config(materialized='table', schema='eMERGEseq_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='eMERGEseq') }}::text as \"subjectassertion_id\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='eMERGEseq') }}::text as \"source_data_id\"\n        from {{ ref('eMERGEseq_stg_subjectconsent') }} as subjectconsent\n        join {{ ref('eMERGEseq_stg_demographics') }} as demographics\non subjectconsent.subject_id = demographics.subject_id  join {{ ref('eMERGEseq_stg_phecode') }} as phecode\non   join {{ ref('eMERGEseq_stg_samplesubjectmapping') }} as samplesubjectmapping\non   join {{ ref('eMERGEseq_stg_sampleattributes') }} as sampleattributes\non  \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "eMERGEseq_stg_subjectconsent", "package": null, "version": null}, {"name": "eMERGEseq_stg_demographics", "package": null, "version": null}, {"name": "eMERGEseq_stg_phecode", "package": null, "version": null}, {"name": "eMERGEseq_stg_samplesubjectmapping", "package": null, "version": null}, {"name": "eMERGEseq_stg_sampleattributes", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.eMERGEseq.eMERGEseq_stg_subjectconsent", "model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_sampleattributes"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/eMERGEseq_ftd_subjectassertion_source_data.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('eMERGEseq' || '|' || cast(coalesce(, '') as text))::text as \"subjectassertion_id\",\n       '' || '_' || md5('eMERGEseq' || '|' || cast(coalesce(, '') as text))::text as \"source_data_id\"\n        from \"dbt\".\"main_main\".\"eMERGEseq_stg_subjectconsent\" as subjectconsent\n        join \"dbt\".\"main_main\".\"eMERGEseq_stg_demographics\" as demographics\non subjectconsent.subject_id = demographics.subject_id  join \"dbt\".\"main_main\".\"eMERGEseq_stg_phecode\" as phecode\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_samplesubjectmapping\" as samplesubjectmapping\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_sampleattributes\" as sampleattributes\non  \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.eMERGEseq_ftd_sourcedata": {"database": "dbt", "schema": "main_eMERGEseq_data", "name": "eMERGEseq_ftd_sourcedata", "resource_type": "model", "package_name": "ftd", "path": "eMERGEseq/eMERGEseq_ftd_sourcedata.sql", "original_file_path": "models/eMERGEseq/eMERGEseq_ftd_sourcedata.sql", "unique_id": "model.ftd.eMERGEseq_ftd_sourcedata", "fqn": ["ftd", "eMERGEseq", "eMERGEseq_ftd_sourcedata"], "alias": "eMERGEseq_ftd_sourcedata", "checksum": {"name": "sha256", "checksum": "be6d570f2c8b8c7b5c1eb02a77a8807905aae235a147f02d78e7fea040e5a22b"}, "config": {"enabled": true, "alias": null, "schema": "eMERGEseq_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for eMERGEseq_ftd_sourcedata.", "columns": {"code": {"name": "code", "description": "The structured term defining the meaning of the assertion.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "display": {"name": "display", "description": "The friendly display string of the coded term", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "value_code": {"name": "value_code", "description": "The structured term defining the value of the assertion.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "value_display": {"name": "value_display", "description": "The friendly display string of the coded term for the value of the assertion.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "value_number": {"name": "value_number", "description": "The numeric value of the assertion.", "meta": {}, "data_type": "number", "constraints": [], "quote": null, "tags": [], "granularity": null}, "value_units": {"name": "value_units", "description": "The structured term defining the units of the value.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "value_units_display": {"name": "value_units_display", "description": "The friendly display string of units of the value.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/eMERGEseq/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "eMERGEseq_data"}, "created_at": 1757448969.7841918, "relation_name": "\"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_sourcedata\"", "raw_code": "{{ config(materialized='table', schema='eMERGEseq_data') }}\n-- THIS IS THE WRONG DATA. BRENDA WILL CHANGE IT\n    with source as (\n        select \n        GEN_UNKNOWN.code::text as \"code\",\n       GEN_UNKNOWN.display::text as \"display\",\n       GEN_UNKNOWN.value_code::text as \"value_code\",\n       GEN_UNKNOWN.value_display::text as \"value_display\",\n       GEN_UNKNOWN.value_number::text as \"value_number\",\n       GEN_UNKNOWN.value_units::text as \"value_units\",\n       GEN_UNKNOWN.value_units_display::text as \"value_units_display\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='eMERGEseq') }}::text as \"has_access_policy\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='eMERGEseq') }}::text as \"id\"\n        from {{ ref('eMERGEseq_stg_subjectconsent') }} as subjectconsent\n        join {{ ref('eMERGEseq_stg_demographics') }} as demographics\non subjectconsent.subject_id = demographics.subject_id  join {{ ref('eMERGEseq_stg_phecode') }} as phecode\non   join {{ ref('eMERGEseq_stg_samplesubjectmapping') }} as samplesubjectmapping\non   join {{ ref('eMERGEseq_stg_sampleattributes') }} as sampleattributes\non  \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "eMERGEseq_stg_subjectconsent", "package": null, "version": null}, {"name": "eMERGEseq_stg_demographics", "package": null, "version": null}, {"name": "eMERGEseq_stg_phecode", "package": null, "version": null}, {"name": "eMERGEseq_stg_samplesubjectmapping", "package": null, "version": null}, {"name": "eMERGEseq_stg_sampleattributes", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.eMERGEseq.eMERGEseq_stg_subjectconsent", "model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_sampleattributes"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/eMERGEseq_ftd_sourcedata.sql", "compiled": true, "compiled_code": "\n-- THIS IS THE WRONG DATA. BRENDA WILL CHANGE IT\n    with source as (\n        select \n        GEN_UNKNOWN.code::text as \"code\",\n       GEN_UNKNOWN.display::text as \"display\",\n       GEN_UNKNOWN.value_code::text as \"value_code\",\n       GEN_UNKNOWN.value_display::text as \"value_display\",\n       GEN_UNKNOWN.value_number::text as \"value_number\",\n       GEN_UNKNOWN.value_units::text as \"value_units\",\n       GEN_UNKNOWN.value_units_display::text as \"value_units_display\",\n       '' || '_' || md5('eMERGEseq' || '|' || cast(coalesce(, '') as text))::text as \"has_access_policy\",\n       '' || '_' || md5('eMERGEseq' || '|' || cast(coalesce(, '') as text))::text as \"id\"\n        from \"dbt\".\"main_main\".\"eMERGEseq_stg_subjectconsent\" as subjectconsent\n        join \"dbt\".\"main_main\".\"eMERGEseq_stg_demographics\" as demographics\non subjectconsent.subject_id = demographics.subject_id  join \"dbt\".\"main_main\".\"eMERGEseq_stg_phecode\" as phecode\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_samplesubjectmapping\" as samplesubjectmapping\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_sampleattributes\" as sampleattributes\non  \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.eMERGEseq_ftd_accesspolicy_access_policy_code": {"database": "dbt", "schema": "main_eMERGEseq_data", "name": "eMERGEseq_ftd_accesspolicy_access_policy_code", "resource_type": "model", "package_name": "ftd", "path": "eMERGEseq/eMERGEseq_ftd_accesspolicy_access_policy_code.sql", "original_file_path": "models/eMERGEseq/eMERGEseq_ftd_accesspolicy_access_policy_code.sql", "unique_id": "model.ftd.eMERGEseq_ftd_accesspolicy_access_policy_code", "fqn": ["ftd", "eMERGEseq", "eMERGEseq_ftd_accesspolicy_access_policy_code"], "alias": "eMERGEseq_ftd_accesspolicy_access_policy_code", "checksum": {"name": "sha256", "checksum": "aca8ac8f075839dae758b10443381dd9c6c7f3110c15ecc6e7eacaee09c21eb0"}, "config": {"enabled": true, "alias": null, "schema": "eMERGEseq_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for eMERGEseq_ftd_accesspolicy_access_policy_code.", "columns": {"accesspolicy_id": {"name": "accesspolicy_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "access_policy_code": {"name": "access_policy_code", "description": "Access Policy Code", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/eMERGEseq/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "eMERGEseq_data"}, "created_at": 1757448969.7772892, "relation_name": "\"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_accesspolicy_access_policy_code\"", "raw_code": "{{ config(materialized='table', schema='eMERGEseq_data') }}\n\n    with source as (\n        select DISTINCT\n        {{ generate_global_id(prefix='ap',descriptor=['subjectconsent.consent'], study_id='phs001616') }}::text as \"accesspolicy_id\",\n       'gru' as \"access_policy_code\"\n        from {{ ref('eMERGEseq_stg_subjectconsent') }} as subjectconsent\n          WHERE subjectconsent.consent IN ('1', '3', '4', '5', '9')\n\n    UNION ALL\n        \n    select DISTINCT\n        {{ generate_global_id(prefix='ap',descriptor=['subjectconsent.consent'], study_id='phs001616') }}::text as \"accesspolicy_id\",\n        'irb' as \"access_policy_code\"\n    from {{ ref('eMERGEseq_stg_subjectconsent') }} as subjectconsent\n    WHERE subjectconsent.consent IN ('3', '4', '5', '10')\n\n    UNION ALL\n        \n    select DISTINCT\n        {{ generate_global_id(prefix='ap',descriptor=['subjectconsent.consent'], study_id='phs001616') }}::text as \"accesspolicy_id\",\n        'npu' as \"access_policy_code\"\n    from {{ ref('eMERGEseq_stg_subjectconsent') }} as subjectconsent\n    WHERE subjectconsent.consent IN ('4', '5', '8', '9')\n\n     UNION ALL\n        \n    select DISTINCT\n        {{ generate_global_id(prefix='ap',descriptor=['subjectconsent.consent'], study_id='phs001616') }}::text as \"accesspolicy_id\",\n        'pub' as \"access_policy_code\"\n    from {{ ref('eMERGEseq_stg_subjectconsent') }} as subjectconsent\n    WHERE subjectconsent.consent IN ('5', '10')\n    \n    UNION ALL\n        \n    select DISTINCT\n        {{ generate_global_id(prefix='ap',descriptor=['subjectconsent.consent'], study_id='phs001616') }}::text as \"accesspolicy_id\",\n        'hmb' as \"access_policy_code\"\n    from {{ ref('eMERGEseq_stg_subjectconsent') }} as subjectconsent\n    WHERE subjectconsent.consent IN ('6', '7', '8', '10')\n\n    UNION ALL\n        \n    select DISTINCT\n        {{ generate_global_id(prefix='ap',descriptor=['subjectconsent.consent'], study_id='phs001616') }}::text as \"accesspolicy_id\",\n        'gso' as \"access_policy_code\"\n    from {{ ref('eMERGEseq_stg_subjectconsent') }} as subjectconsent\n    WHERE subjectconsent.consent IN ('7')\n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "eMERGEseq_stg_subjectconsent", "package": null, "version": null}, {"name": "eMERGEseq_stg_subjectconsent", "package": null, "version": null}, {"name": "eMERGEseq_stg_subjectconsent", "package": null, "version": null}, {"name": "eMERGEseq_stg_subjectconsent", "package": null, "version": null}, {"name": "eMERGEseq_stg_subjectconsent", "package": null, "version": null}, {"name": "eMERGEseq_stg_subjectconsent", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.eMERGEseq.eMERGEseq_stg_subjectconsent"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/eMERGEseq_ftd_accesspolicy_access_policy_code.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select DISTINCT\n        'ap' || '_' || md5('phs001616' || '|' || cast(coalesce(subjectconsent.consent, '') as text))::text as \"accesspolicy_id\",\n       'gru' as \"access_policy_code\"\n        from \"dbt\".\"main_main\".\"eMERGEseq_stg_subjectconsent\" as subjectconsent\n          WHERE subjectconsent.consent IN ('1', '3', '4', '5', '9')\n\n    UNION ALL\n        \n    select DISTINCT\n        'ap' || '_' || md5('phs001616' || '|' || cast(coalesce(subjectconsent.consent, '') as text))::text as \"accesspolicy_id\",\n        'irb' as \"access_policy_code\"\n    from \"dbt\".\"main_main\".\"eMERGEseq_stg_subjectconsent\" as subjectconsent\n    WHERE subjectconsent.consent IN ('3', '4', '5', '10')\n\n    UNION ALL\n        \n    select DISTINCT\n        'ap' || '_' || md5('phs001616' || '|' || cast(coalesce(subjectconsent.consent, '') as text))::text as \"accesspolicy_id\",\n        'npu' as \"access_policy_code\"\n    from \"dbt\".\"main_main\".\"eMERGEseq_stg_subjectconsent\" as subjectconsent\n    WHERE subjectconsent.consent IN ('4', '5', '8', '9')\n\n     UNION ALL\n        \n    select DISTINCT\n        'ap' || '_' || md5('phs001616' || '|' || cast(coalesce(subjectconsent.consent, '') as text))::text as \"accesspolicy_id\",\n        'pub' as \"access_policy_code\"\n    from \"dbt\".\"main_main\".\"eMERGEseq_stg_subjectconsent\" as subjectconsent\n    WHERE subjectconsent.consent IN ('5', '10')\n    \n    UNION ALL\n        \n    select DISTINCT\n        'ap' || '_' || md5('phs001616' || '|' || cast(coalesce(subjectconsent.consent, '') as text))::text as \"accesspolicy_id\",\n        'hmb' as \"access_policy_code\"\n    from \"dbt\".\"main_main\".\"eMERGEseq_stg_subjectconsent\" as subjectconsent\n    WHERE subjectconsent.consent IN ('6', '7', '8', '10')\n\n    UNION ALL\n        \n    select DISTINCT\n        'ap' || '_' || md5('phs001616' || '|' || cast(coalesce(subjectconsent.consent, '') as text))::text as \"accesspolicy_id\",\n        'gso' as \"access_policy_code\"\n    from \"dbt\".\"main_main\".\"eMERGEseq_stg_subjectconsent\" as subjectconsent\n    WHERE subjectconsent.consent IN ('7')\n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.eMERGEseq_ftd_demographics_external_id": {"database": "dbt", "schema": "main_eMERGEseq_data", "name": "eMERGEseq_ftd_demographics_external_id", "resource_type": "model", "package_name": "ftd", "path": "eMERGEseq/eMERGEseq_ftd_demographics_external_id.sql", "original_file_path": "models/eMERGEseq/eMERGEseq_ftd_demographics_external_id.sql", "unique_id": "model.ftd.eMERGEseq_ftd_demographics_external_id", "fqn": ["ftd", "eMERGEseq", "eMERGEseq_ftd_demographics_external_id"], "alias": "eMERGEseq_ftd_demographics_external_id", "checksum": {"name": "sha256", "checksum": "dae071948e9a99f9acae26b579cd473f263c1f710fdfd203a1f59efe2cd76547"}, "config": {"enabled": true, "alias": null, "schema": "eMERGEseq_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for eMERGEseq_ftd_demographics_external_id.", "columns": {"demographics_id": {"name": "demographics_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/eMERGEseq/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "eMERGEseq_data"}, "created_at": 1757448969.781509, "relation_name": "\"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_demographics_external_id\"", "raw_code": "{{ config(materialized='table', schema='eMERGEseq_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='dm',descriptor=['demographics.subject_id'], study_id='phs001616') }}::text as \"demographics_id\",\n        demographics.subject_id::text as \"external_id\"\n        from {{ ref('eMERGEseq_stg_demographics') }} as demographics\n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "eMERGEseq_stg_demographics", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.eMERGEseq.eMERGEseq_stg_demographics"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/eMERGEseq_ftd_demographics_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        'dm' || '_' || md5('phs001616' || '|' || cast(coalesce(demographics.subject_id, '') as text))::text as \"demographics_id\",\n        demographics.subject_id::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"eMERGEseq_stg_demographics\" as demographics\n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.eMERGEseq_ftd_familymember_external_id": {"database": "dbt", "schema": "main_eMERGEseq_data", "name": "eMERGEseq_ftd_familymember_external_id", "resource_type": "model", "package_name": "ftd", "path": "eMERGEseq/eMERGEseq_ftd_familymember_external_id.sql", "original_file_path": "models/eMERGEseq/eMERGEseq_ftd_familymember_external_id.sql", "unique_id": "model.ftd.eMERGEseq_ftd_familymember_external_id", "fqn": ["ftd", "eMERGEseq", "eMERGEseq_ftd_familymember_external_id"], "alias": "eMERGEseq_ftd_familymember_external_id", "checksum": {"name": "sha256", "checksum": "79fec513cbba3d1576c628c0f4100e58dcf93417abce90a0fdd36b0154580cea"}, "config": {"enabled": true, "alias": null, "schema": "eMERGEseq_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for eMERGEseq_ftd_familymember_external_id.", "columns": {"familymember_id": {"name": "familymember_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/eMERGEseq/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "eMERGEseq_data"}, "created_at": 1757448969.7768054, "relation_name": "\"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_familymember_external_id\"", "raw_code": "{{ config(materialized='table', schema='eMERGEseq_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='fm',descriptor=['pedigree.subject_id', 'pedigree.family_id'], study_id='phs001616') }}::text as \"familymember_id\",\n       pedigree.subject_id::text as \"external_id\"\n        from {{ ref('eMERGEseq_stg_pedigree') }} as pedigree\n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "eMERGEseq_stg_pedigree", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.eMERGEseq.eMERGEseq_stg_pedigree"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/eMERGEseq_ftd_familymember_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        'fm' || '_' || md5('phs001616' || '|' || cast(coalesce(pedigree.subject_id, '') as text) || '|' || 'phs001616' || '|' || cast(coalesce(pedigree.family_id, '') as text))::text as \"familymember_id\",\n       pedigree.subject_id::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"eMERGEseq_stg_pedigree\" as pedigree\n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.eMERGEseq_ftd_accesspolicy": {"database": "dbt", "schema": "main_eMERGEseq_data", "name": "eMERGEseq_ftd_accesspolicy", "resource_type": "model", "package_name": "ftd", "path": "eMERGEseq/eMERGEseq_ftd_accesspolicy.sql", "original_file_path": "models/eMERGEseq/eMERGEseq_ftd_accesspolicy.sql", "unique_id": "model.ftd.eMERGEseq_ftd_accesspolicy", "fqn": ["ftd", "eMERGEseq", "eMERGEseq_ftd_accesspolicy"], "alias": "eMERGEseq_ftd_accesspolicy", "checksum": {"name": "sha256", "checksum": "91330a9f9d64bd150e0ce51c9925f70e4f1b8ac11c864fb355269cbaa1e74f1c"}, "config": {"enabled": true, "alias": null, "schema": "eMERGEseq_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for eMERGEseq_ftd_accesspolicy.", "columns": {"disease_limitation": {"name": "disease_limitation", "description": "Disease Use Limitations", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "description": {"name": "description", "description": "Model for eMERGEseq_ftd_accesspolicy.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "website": {"name": "website", "description": "Website", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/eMERGEseq/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "eMERGEseq_data"}, "created_at": 1757448969.7682817, "relation_name": "\"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_accesspolicy\"", "raw_code": "{{ config(materialized='table', schema='eMERGEseq_data') }}\n\n    with source as (\n     select DISTINCT\n         NULL as \"disease_limitation\",\n         'General Research Use' as \"description\",\n         NULL as \"website\",\n        {{ generate_global_id(prefix='ap',descriptor=['subjectconsent.consent'], study_id='phs001616') }}::text as \"id\"\n    from {{ ref('eMERGEseq_stg_subjectconsent') }} as subjectconsent\n  WHERE subjectconsent.consent IN ('1', '3', '4', '5', '9')\n\n    UNION ALL\n        \n    select DISTINCT\n         NULL as \"disease_limitation\",\n        'IRB Approval Required' as \"description\",\n         NULL as \"website\",\n        {{ generate_global_id(prefix='ap',descriptor=['subjectconsent.consent'], study_id='phs001616') }}::text as \"id\"\n    from {{ ref('eMERGEseq_stg_subjectconsent') }} as subjectconsent\n    WHERE subjectconsent.consent IN ('3', '4', '5', '10')\n\n    UNION ALL\n        \n    select DISTINCT\n         NULL as \"disease_limitation\",\n        'Not-for-profit use only' as \"description\",\n         NULL as \"website\",\n        {{ generate_global_id(prefix='ap',descriptor=['subjectconsent.consent'], study_id='phs001616') }}::text as \"id\"\n    from {{ ref('eMERGEseq_stg_subjectconsent') }} as subjectconsent\n    WHERE subjectconsent.consent IN ('4', '5', '8', '9')\n\n     UNION ALL\n        \n    select DISTINCT\n         NULL as \"disease_limitation\",\n        'Publication Required' as \"description\",\n         NULL as \"website\",\n        {{ generate_global_id(prefix='ap',descriptor=['subjectconsent.consent'], study_id='phs001616') }}::text as \"id\"\n    from {{ ref('eMERGEseq_stg_subjectconsent') }} as subjectconsent\n    WHERE subjectconsent.consent IN ('5', '10')\n    \n    UNION ALL\n        \n    select DISTINCT\n         NULL as \"disease_limitation\",\n        'Health/Medical/Biomedical' as \"description\",\n         NULL as \"website\",\n        {{ generate_global_id(prefix='ap',descriptor=['subjectconsent.consent'], study_id='phs001616') }}::text as \"id\"\n    from {{ ref('eMERGEseq_stg_subjectconsent') }} as subjectconsent\n    WHERE subjectconsent.consent IN ('6', '7', '8', '10')\n\n    UNION ALL\n        \n    select DISTINCT\n        NULL as \"disease_limitation\",\n        'Genetic Studies only' as \"description\",\n        NULL as \"website\",\n        {{ generate_global_id(prefix='ap',descriptor=['subjectconsent.consent'], study_id='phs001616') }}::text as \"id\"\n    from {{ ref('eMERGEseq_stg_subjectconsent') }} as subjectconsent\n    WHERE subjectconsent.consent IN ('7')\n    )\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "eMERGEseq_stg_subjectconsent", "package": null, "version": null}, {"name": "eMERGEseq_stg_subjectconsent", "package": null, "version": null}, {"name": "eMERGEseq_stg_subjectconsent", "package": null, "version": null}, {"name": "eMERGEseq_stg_subjectconsent", "package": null, "version": null}, {"name": "eMERGEseq_stg_subjectconsent", "package": null, "version": null}, {"name": "eMERGEseq_stg_subjectconsent", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.eMERGEseq.eMERGEseq_stg_subjectconsent"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/eMERGEseq_ftd_accesspolicy.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n     select DISTINCT\n         NULL as \"disease_limitation\",\n         'General Research Use' as \"description\",\n         NULL as \"website\",\n        'ap' || '_' || md5('phs001616' || '|' || cast(coalesce(subjectconsent.consent, '') as text))::text as \"id\"\n    from \"dbt\".\"main_main\".\"eMERGEseq_stg_subjectconsent\" as subjectconsent\n  WHERE subjectconsent.consent IN ('1', '3', '4', '5', '9')\n\n    UNION ALL\n        \n    select DISTINCT\n         NULL as \"disease_limitation\",\n        'IRB Approval Required' as \"description\",\n         NULL as \"website\",\n        'ap' || '_' || md5('phs001616' || '|' || cast(coalesce(subjectconsent.consent, '') as text))::text as \"id\"\n    from \"dbt\".\"main_main\".\"eMERGEseq_stg_subjectconsent\" as subjectconsent\n    WHERE subjectconsent.consent IN ('3', '4', '5', '10')\n\n    UNION ALL\n        \n    select DISTINCT\n         NULL as \"disease_limitation\",\n        'Not-for-profit use only' as \"description\",\n         NULL as \"website\",\n        'ap' || '_' || md5('phs001616' || '|' || cast(coalesce(subjectconsent.consent, '') as text))::text as \"id\"\n    from \"dbt\".\"main_main\".\"eMERGEseq_stg_subjectconsent\" as subjectconsent\n    WHERE subjectconsent.consent IN ('4', '5', '8', '9')\n\n     UNION ALL\n        \n    select DISTINCT\n         NULL as \"disease_limitation\",\n        'Publication Required' as \"description\",\n         NULL as \"website\",\n        'ap' || '_' || md5('phs001616' || '|' || cast(coalesce(subjectconsent.consent, '') as text))::text as \"id\"\n    from \"dbt\".\"main_main\".\"eMERGEseq_stg_subjectconsent\" as subjectconsent\n    WHERE subjectconsent.consent IN ('5', '10')\n    \n    UNION ALL\n        \n    select DISTINCT\n         NULL as \"disease_limitation\",\n        'Health/Medical/Biomedical' as \"description\",\n         NULL as \"website\",\n        'ap' || '_' || md5('phs001616' || '|' || cast(coalesce(subjectconsent.consent, '') as text))::text as \"id\"\n    from \"dbt\".\"main_main\".\"eMERGEseq_stg_subjectconsent\" as subjectconsent\n    WHERE subjectconsent.consent IN ('6', '7', '8', '10')\n\n    UNION ALL\n        \n    select DISTINCT\n        NULL as \"disease_limitation\",\n        'Genetic Studies only' as \"description\",\n        NULL as \"website\",\n        'ap' || '_' || md5('phs001616' || '|' || cast(coalesce(subjectconsent.consent, '') as text))::text as \"id\"\n    from \"dbt\".\"main_main\".\"eMERGEseq_stg_subjectconsent\" as subjectconsent\n    WHERE subjectconsent.consent IN ('7')\n    )\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.eMERGEseq_ftd_sample_processing": {"database": "dbt", "schema": "main_eMERGEseq_data", "name": "eMERGEseq_ftd_sample_processing", "resource_type": "model", "package_name": "ftd", "path": "eMERGEseq/eMERGEseq_ftd_sample_processing.sql", "original_file_path": "models/eMERGEseq/eMERGEseq_ftd_sample_processing.sql", "unique_id": "model.ftd.eMERGEseq_ftd_sample_processing", "fqn": ["ftd", "eMERGEseq", "eMERGEseq_ftd_sample_processing"], "alias": "eMERGEseq_ftd_sample_processing", "checksum": {"name": "sha256", "checksum": "3f009ddd50c8f58130a4faf9cc7068d3384ca76cb8b545acef1971aa5b9c0545"}, "config": {"enabled": true, "alias": null, "schema": "eMERGEseq_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for eMERGEseq_ftd_sample_processing.", "columns": {"sample_id": {"name": "sample_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "processing": {"name": "processing", "description": "Processing that was applied to the Parent Sample or from the Biospecimen Collection that yielded this distinct sample", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/eMERGEseq/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "eMERGEseq_data"}, "created_at": 1757448969.7697613, "relation_name": "\"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_sample_processing\"", "raw_code": "{{ config(materialized='table', schema='eMERGEseq_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='eMERGEseq') }}::text as \"sample_id\",\n       GEN_UNKNOWN.processing::text as \"processing\"\n        from {{ ref('eMERGEseq_stg_subjectconsent') }} as subjectconsent\n        join {{ ref('eMERGEseq_stg_demographics') }} as demographics\non subjectconsent.subject_id = demographics.subject_id  join {{ ref('eMERGEseq_stg_phecode') }} as phecode\non   join {{ ref('eMERGEseq_stg_samplesubjectmapping') }} as samplesubjectmapping\non   join {{ ref('eMERGEseq_stg_sampleattributes') }} as sampleattributes\non  \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "eMERGEseq_stg_subjectconsent", "package": null, "version": null}, {"name": "eMERGEseq_stg_demographics", "package": null, "version": null}, {"name": "eMERGEseq_stg_phecode", "package": null, "version": null}, {"name": "eMERGEseq_stg_samplesubjectmapping", "package": null, "version": null}, {"name": "eMERGEseq_stg_sampleattributes", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.eMERGEseq.eMERGEseq_stg_subjectconsent", "model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_sampleattributes"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/eMERGEseq_ftd_sample_processing.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('eMERGEseq' || '|' || cast(coalesce(, '') as text))::text as \"sample_id\",\n       GEN_UNKNOWN.processing::text as \"processing\"\n        from \"dbt\".\"main_main\".\"eMERGEseq_stg_subjectconsent\" as subjectconsent\n        join \"dbt\".\"main_main\".\"eMERGEseq_stg_demographics\" as demographics\non subjectconsent.subject_id = demographics.subject_id  join \"dbt\".\"main_main\".\"eMERGEseq_stg_phecode\" as phecode\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_samplesubjectmapping\" as samplesubjectmapping\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_sampleattributes\" as sampleattributes\non  \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.eMERGEseq_ftd_familyrelationship": {"database": "dbt", "schema": "main_eMERGEseq_data", "name": "eMERGEseq_ftd_familyrelationship", "resource_type": "model", "package_name": "ftd", "path": "eMERGEseq/eMERGEseq_ftd_familyrelationship.sql", "original_file_path": "models/eMERGEseq/eMERGEseq_ftd_familyrelationship.sql", "unique_id": "model.ftd.eMERGEseq_ftd_familyrelationship", "fqn": ["ftd", "eMERGEseq", "eMERGEseq_ftd_familyrelationship"], "alias": "eMERGEseq_ftd_familyrelationship", "checksum": {"name": "sha256", "checksum": "32e31ce8e481a8f3c62657fe9867f60d5b5a14c9fe396eb1269354e194975f19"}, "config": {"enabled": true, "alias": null, "schema": "eMERGEseq_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for eMERGEseq_ftd_familyrelationship.", "columns": {"family_member": {"name": "family_member", "description": "The family member Subject who is the relationship \"subject\".", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "other_family_member": {"name": "other_family_member", "description": "The family member Subject for the relationship \"object\".", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "relationship_code": {"name": "relationship_code", "description": "Code definting the relationship predicate. Relationship of the \"Family Member\" to the \"Other Family Member\" (i.e. mother, father, etc). Code must be from the HL7 [FamilyMember ValueSet](https://terminology.hl7.org/6.2.0/ValueSet-v3-FamilyMember.html)", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/eMERGEseq/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "eMERGEseq_data"}, "created_at": 1757448969.7793071, "relation_name": "\"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_familyrelationship\"", "raw_code": "{{ config(materialized='table', schema='eMERGEseq_data') }}\n    {% set relation = ref('eMERGEseq_stg_pedigree') %}\n    {% set constant_columns = ['ftd_index', 'sex', 'subject_id', 'family_id'] %}\n    {% set pivot_columns = get_columns(relation=relation, exclude=constant_columns) %}  \n    \n    with \n    unpivot_df as (\n\n        {% for col in pivot_columns %}\n            select\n                ftd_index, family_id,\n                {{ col }} as \"other_family_memb_id\",\n                subject_id as \"proband_id\",\n                NULL as \"sex\",\n                '{{ col }}' as \"relationship\",\n            from {{ ref('eMERGEseq_stg_pedigree') }} as p\n            WHERE {{ col }} IS NOT NULL \n            {% if not loop.last %}union all{% endif %}\n        {% endfor %}\n    ),\n    \n   direct_relationship as (\n   select -- probands on the left, others on the right\n       p.ftd_index,\n       p.family_id,\n       proband_id as \"family_member\",\n       other_family_memb_id as \"other_family_member\",\n       CASE  \n           WHEN relationship = 'mother' THEN 'KIN:032'\n           WHEN relationship = 'father' THEN 'KIN:032'\n           WHEN relationship = 'mz_twin_id' THEN 'KIN:010'\n       END::text AS relationship_code\n       from {{ ref('eMERGEseq_stg_pedigree') }} as p\n    left join unpivot_df as u on u.proband_id = p.subject_id\n       and u.family_id = p.family_id\n    where mother is not null\n    and father is not null\n    and mz_twin_id is not null\n),\n    \n   reverse_twin_relationship as (\n   select -- reverse relationship for twins\n       dr.ftd_index,\n       dr.family_id,\n       dr.other_family_member as \"family_member\",\n       dr.family_member as \"other_family_member\",\n       dr.relationship_code\n    from direct_relationship as dr\n    where relationship_code = 'KIN:010'\n    )\n\n    select DISTINCT\n        {{ generate_global_id(prefix='fr',descriptor=['family_id','family_member','other_family_member','relationship_code'],study_id='phs001616') }}::text as \"id\",\n        relationship_code, \n        {{ generate_global_id(prefix='sb',descriptor=['family_member'], study_id='phs001616') }}::text AS \"family_member\",\n        {{ generate_global_id(prefix='sb',descriptor=['other_family_member'], study_id='phs001616') }}::text as \"other_family_member\",\n        {{ generate_global_id(prefix='ap',descriptor=['subjectconsent.consent'], study_id='phs001616') }}::text as \"has_access_policy\"\n\n    from (\n        select distinct * from direct_relationship \n    \n    union all\n    \n        select distinct * from reverse_twin_relationship) as combined_relationship\n    left join {{ ref('eMERGEseq_stg_subjectconsent') }} as subjectconsent\n    on subjectconsent.subject_id = combined_relationship.family_member", "language": "sql", "refs": [{"name": "eMERGEseq_stg_pedigree", "package": null, "version": null}, {"name": "eMERGEseq_stg_pedigree", "package": null, "version": null}, {"name": "eMERGEseq_stg_subjectconsent", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.get_columns", "macro.base.generate_global_id"], "nodes": ["model.eMERGEseq.eMERGEseq_stg_pedigree", "model.eMERGEseq.eMERGEseq_stg_subjectconsent"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/eMERGEseq_ftd_familyrelationship.sql", "compiled": true, "compiled_code": "\n    \n    \n      \n    \n    with \n    unpivot_df as (\n\n        \n    ),\n    \n   direct_relationship as (\n   select -- probands on the left, others on the right\n       p.ftd_index,\n       p.family_id,\n       proband_id as \"family_member\",\n       other_family_memb_id as \"other_family_member\",\n       CASE  \n           WHEN relationship = 'mother' THEN 'KIN:032'\n           WHEN relationship = 'father' THEN 'KIN:032'\n           WHEN relationship = 'mz_twin_id' THEN 'KIN:010'\n       END::text AS relationship_code\n       from \"dbt\".\"main_main\".\"eMERGEseq_stg_pedigree\" as p\n    left join unpivot_df as u on u.proband_id = p.subject_id\n       and u.family_id = p.family_id\n    where mother is not null\n    and father is not null\n    and mz_twin_id is not null\n),\n    \n   reverse_twin_relationship as (\n   select -- reverse relationship for twins\n       dr.ftd_index,\n       dr.family_id,\n       dr.other_family_member as \"family_member\",\n       dr.family_member as \"other_family_member\",\n       dr.relationship_code\n    from direct_relationship as dr\n    where relationship_code = 'KIN:010'\n    )\n\n    select DISTINCT\n        'fr' || '_' || md5('phs001616' || '|' || cast(coalesce(family_id, '') as text) || '|' || 'phs001616' || '|' || cast(coalesce(family_member, '') as text) || '|' || 'phs001616' || '|' || cast(coalesce(other_family_member, '') as text) || '|' || 'phs001616' || '|' || cast(coalesce(relationship_code, '') as text))::text as \"id\",\n        relationship_code, \n        'sb' || '_' || md5('phs001616' || '|' || cast(coalesce(family_member, '') as text))::text AS \"family_member\",\n        'sb' || '_' || md5('phs001616' || '|' || cast(coalesce(other_family_member, '') as text))::text as \"other_family_member\",\n        'ap' || '_' || md5('phs001616' || '|' || cast(coalesce(subjectconsent.consent, '') as text))::text as \"has_access_policy\"\n\n    from (\n        select distinct * from direct_relationship \n    \n    union all\n    \n        select distinct * from reverse_twin_relationship) as combined_relationship\n    left join \"dbt\".\"main_main\".\"eMERGEseq_stg_subjectconsent\" as subjectconsent\n    on subjectconsent.subject_id = combined_relationship.family_member", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.eMERGEseq_ftd_study_external_id": {"database": "dbt", "schema": "main_eMERGEseq_data", "name": "eMERGEseq_ftd_study_external_id", "resource_type": "model", "package_name": "ftd", "path": "eMERGEseq/eMERGEseq_ftd_study_external_id.sql", "original_file_path": "models/eMERGEseq/eMERGEseq_ftd_study_external_id.sql", "unique_id": "model.ftd.eMERGEseq_ftd_study_external_id", "fqn": ["ftd", "eMERGEseq", "eMERGEseq_ftd_study_external_id"], "alias": "eMERGEseq_ftd_study_external_id", "checksum": {"name": "sha256", "checksum": "1c1e2ad19e7f227db3f1a56668776c97a407c2ce64546f68540f7471224350e2"}, "config": {"enabled": true, "alias": null, "schema": "eMERGEseq_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for eMERGEseq_ftd_study_external_id.", "columns": {"study_id": {"name": "study_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/eMERGEseq/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "eMERGEseq_data"}, "created_at": 1757448969.785419, "relation_name": "\"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_study_external_id\"", "raw_code": "{{ config(materialized='table', schema='eMERGEseq_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='eMERGEseq') }}::text as \"study_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from {{ ref('eMERGEseq_stg_subjectconsent') }} as subjectconsent\n        join {{ ref('eMERGEseq_stg_demographics') }} as demographics\non subjectconsent.subject_id = demographics.subject_id  join {{ ref('eMERGEseq_stg_phecode') }} as phecode\non   join {{ ref('eMERGEseq_stg_samplesubjectmapping') }} as samplesubjectmapping\non   join {{ ref('eMERGEseq_stg_sampleattributes') }} as sampleattributes\non  \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "eMERGEseq_stg_subjectconsent", "package": null, "version": null}, {"name": "eMERGEseq_stg_demographics", "package": null, "version": null}, {"name": "eMERGEseq_stg_phecode", "package": null, "version": null}, {"name": "eMERGEseq_stg_samplesubjectmapping", "package": null, "version": null}, {"name": "eMERGEseq_stg_sampleattributes", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.eMERGEseq.eMERGEseq_stg_subjectconsent", "model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_sampleattributes"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/eMERGEseq_ftd_study_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('eMERGEseq' || '|' || cast(coalesce(, '') as text))::text as \"study_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"eMERGEseq_stg_subjectconsent\" as subjectconsent\n        join \"dbt\".\"main_main\".\"eMERGEseq_stg_demographics\" as demographics\non subjectconsent.subject_id = demographics.subject_id  join \"dbt\".\"main_main\".\"eMERGEseq_stg_phecode\" as phecode\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_samplesubjectmapping\" as samplesubjectmapping\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_sampleattributes\" as sampleattributes\non  \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.eMERGEseq_ftd_familyrelationship_external_id": {"database": "dbt", "schema": "main_eMERGEseq_data", "name": "eMERGEseq_ftd_familyrelationship_external_id", "resource_type": "model", "package_name": "ftd", "path": "eMERGEseq/eMERGEseq_ftd_familyrelationship_external_id.sql", "original_file_path": "models/eMERGEseq/eMERGEseq_ftd_familyrelationship_external_id.sql", "unique_id": "model.ftd.eMERGEseq_ftd_familyrelationship_external_id", "fqn": ["ftd", "eMERGEseq", "eMERGEseq_ftd_familyrelationship_external_id"], "alias": "eMERGEseq_ftd_familyrelationship_external_id", "checksum": {"name": "sha256", "checksum": "6a42be8f8a358319abf549c2c5730858671fa43caa8a001acdb208c1d576bbbc"}, "config": {"enabled": true, "alias": null, "schema": "eMERGEseq_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for eMERGEseq_ftd_familyrelationship_external_id.", "columns": {"familyrelationship_id": {"name": "familyrelationship_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/eMERGEseq/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "eMERGEseq_data"}, "created_at": 1757448969.7728577, "relation_name": "\"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_familyrelationship_external_id\"", "raw_code": "{{ config(materialized='table', schema='eMERGEseq_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='eMERGEseq') }}::text as \"familyrelationship_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from {{ ref('eMERGEseq_stg_subjectconsent') }} as subjectconsent\n        join {{ ref('eMERGEseq_stg_demographics') }} as demographics\non subjectconsent.subject_id = demographics.subject_id  join {{ ref('eMERGEseq_stg_phecode') }} as phecode\non   join {{ ref('eMERGEseq_stg_samplesubjectmapping') }} as samplesubjectmapping\non   join {{ ref('eMERGEseq_stg_sampleattributes') }} as sampleattributes\non  \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "eMERGEseq_stg_subjectconsent", "package": null, "version": null}, {"name": "eMERGEseq_stg_demographics", "package": null, "version": null}, {"name": "eMERGEseq_stg_phecode", "package": null, "version": null}, {"name": "eMERGEseq_stg_samplesubjectmapping", "package": null, "version": null}, {"name": "eMERGEseq_stg_sampleattributes", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.eMERGEseq.eMERGEseq_stg_subjectconsent", "model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_sampleattributes"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/eMERGEseq_ftd_familyrelationship_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('eMERGEseq' || '|' || cast(coalesce(, '') as text))::text as \"familyrelationship_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"eMERGEseq_stg_subjectconsent\" as subjectconsent\n        join \"dbt\".\"main_main\".\"eMERGEseq_stg_demographics\" as demographics\non subjectconsent.subject_id = demographics.subject_id  join \"dbt\".\"main_main\".\"eMERGEseq_stg_phecode\" as phecode\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_samplesubjectmapping\" as samplesubjectmapping\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_sampleattributes\" as sampleattributes\non  \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.eMERGEseq_ftd_sample_external_id": {"database": "dbt", "schema": "main_eMERGEseq_data", "name": "eMERGEseq_ftd_sample_external_id", "resource_type": "model", "package_name": "ftd", "path": "eMERGEseq/eMERGEseq_ftd_sample_external_id.sql", "original_file_path": "models/eMERGEseq/eMERGEseq_ftd_sample_external_id.sql", "unique_id": "model.ftd.eMERGEseq_ftd_sample_external_id", "fqn": ["ftd", "eMERGEseq", "eMERGEseq_ftd_sample_external_id"], "alias": "eMERGEseq_ftd_sample_external_id", "checksum": {"name": "sha256", "checksum": "b31429dc291c2a22088dcb2387894d1c9991334e2ec28503cfe5cf262381fd04"}, "config": {"enabled": true, "alias": null, "schema": "eMERGEseq_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for eMERGEseq_ftd_sample_external_id.", "columns": {"sample_id": {"name": "sample_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/eMERGEseq/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "eMERGEseq_data"}, "created_at": 1757448969.7723515, "relation_name": "\"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_sample_external_id\"", "raw_code": "{{ config(materialized='table', schema='eMERGEseq_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='sm',descriptor=['samplesubjectmapping.subject_id', 'samplesubjectmapping.sample_id'], study_id='phs001616') }}::text as \"sample_id\",\n       samplesubjectmapping.sample_id::text as \"external_id\"\n        from {{ ref('eMERGEseq_stg_samplesubjectmapping') }} as samplesubjectmapping\n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "eMERGEseq_stg_samplesubjectmapping", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/eMERGEseq_ftd_sample_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        'sm' || '_' || md5('phs001616' || '|' || cast(coalesce(samplesubjectmapping.subject_id, '') as text) || '|' || 'phs001616' || '|' || cast(coalesce(samplesubjectmapping.sample_id, '') as text))::text as \"sample_id\",\n       samplesubjectmapping.sample_id::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"eMERGEseq_stg_samplesubjectmapping\" as samplesubjectmapping\n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.eMERGEseq_ftd_family_family_relationships": {"database": "dbt", "schema": "main_eMERGEseq_data", "name": "eMERGEseq_ftd_family_family_relationships", "resource_type": "model", "package_name": "ftd", "path": "eMERGEseq/eMERGEseq_ftd_family_family_relationships.sql", "original_file_path": "models/eMERGEseq/eMERGEseq_ftd_family_family_relationships.sql", "unique_id": "model.ftd.eMERGEseq_ftd_family_family_relationships", "fqn": ["ftd", "eMERGEseq", "eMERGEseq_ftd_family_family_relationships"], "alias": "eMERGEseq_ftd_family_family_relationships", "checksum": {"name": "sha256", "checksum": "d14f1b5ddf2b20ab147aded4ae9e46dfa3826f7a52036f5eb286f6737411320d"}, "config": {"enabled": true, "alias": null, "schema": "eMERGEseq_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for eMERGEseq_ftd_family_family_relationships.", "columns": {"family_id": {"name": "family_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "family_relationships_id": {"name": "family_relationships_id", "description": "Family relationships associated with this family.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/eMERGEseq/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "eMERGEseq_data"}, "created_at": 1757448969.7732499, "relation_name": "\"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_family_family_relationships\"", "raw_code": "{{ config(materialized='table', schema='eMERGEseq_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='eMERGEseq') }}::text as \"family_id\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='eMERGEseq') }}::text as \"family_relationships_id\"\n        from {{ ref('eMERGEseq_stg_subjectconsent') }} as subjectconsent\n        join {{ ref('eMERGEseq_stg_demographics') }} as demographics\non subjectconsent.subject_id = demographics.subject_id  join {{ ref('eMERGEseq_stg_phecode') }} as phecode\non   join {{ ref('eMERGEseq_stg_samplesubjectmapping') }} as samplesubjectmapping\non   join {{ ref('eMERGEseq_stg_sampleattributes') }} as sampleattributes\non  \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "eMERGEseq_stg_subjectconsent", "package": null, "version": null}, {"name": "eMERGEseq_stg_demographics", "package": null, "version": null}, {"name": "eMERGEseq_stg_phecode", "package": null, "version": null}, {"name": "eMERGEseq_stg_samplesubjectmapping", "package": null, "version": null}, {"name": "eMERGEseq_stg_sampleattributes", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.eMERGEseq.eMERGEseq_stg_subjectconsent", "model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_sampleattributes"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/eMERGEseq_ftd_family_family_relationships.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('eMERGEseq' || '|' || cast(coalesce(, '') as text))::text as \"family_id\",\n       '' || '_' || md5('eMERGEseq' || '|' || cast(coalesce(, '') as text))::text as \"family_relationships_id\"\n        from \"dbt\".\"main_main\".\"eMERGEseq_stg_subjectconsent\" as subjectconsent\n        join \"dbt\".\"main_main\".\"eMERGEseq_stg_demographics\" as demographics\non subjectconsent.subject_id = demographics.subject_id  join \"dbt\".\"main_main\".\"eMERGEseq_stg_phecode\" as phecode\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_samplesubjectmapping\" as samplesubjectmapping\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_sampleattributes\" as sampleattributes\non  \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.eMERGEseq_ftd_demographics_race": {"database": "dbt", "schema": "main_eMERGEseq_data", "name": "eMERGEseq_ftd_demographics_race", "resource_type": "model", "package_name": "ftd", "path": "eMERGEseq/eMERGEseq_ftd_demographics_race.sql", "original_file_path": "models/eMERGEseq/eMERGEseq_ftd_demographics_race.sql", "unique_id": "model.ftd.eMERGEseq_ftd_demographics_race", "fqn": ["ftd", "eMERGEseq", "eMERGEseq_ftd_demographics_race"], "alias": "eMERGEseq_ftd_demographics_race", "checksum": {"name": "sha256", "checksum": "ed1ba7ce283a64cab82a09b4079d6a8b587725110390a415a14576b9b53bb48a"}, "config": {"enabled": true, "alias": null, "schema": "eMERGEseq_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for eMERGEseq_ftd_demographics_race.", "columns": {"demographics_id": {"name": "demographics_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "race": {"name": "race", "description": "Reported race as defined by the 1997 OMB directives.", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/eMERGEseq/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "eMERGEseq_data"}, "created_at": 1757448969.7737377, "relation_name": "\"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_demographics_race\"", "raw_code": "{{ config(materialized='table', schema='eMERGEseq_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='dm',descriptor=['demographics.subject_id'], study_id='phs001616') }}::text as \"demographics_id\",\n       CASE demographics.race\n            WHEN 'C41259' THEN 'american_indian_or_alaskan_native'\n            WHEN 'C41260' THEN 'asian'\n            WHEN 'C16352' THEN 'black_or_african_american'\n            WHEN 'C41219' THEN 'native_hawaiian_or_pacific_islander'\n            WHEN 'C41261' THEN 'white'\n            WHEN 'C17998' THEN 'unknown'\n            WHEN 'C43234' THEN 'unknown'\n            WHEN 'C13652' THEN 'unknown'\n            WHEN '.' THEN 'unknown'\n            WHEN 'NA' THEN 'unknown'\n            WHEN 'OTHER' THEN 'other_race'\n       END::text as \"race\"\n        from {{ ref('eMERGEseq_stg_demographics') }} as demographics\n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "eMERGEseq_stg_demographics", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.eMERGEseq.eMERGEseq_stg_demographics"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/eMERGEseq_ftd_demographics_race.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        'dm' || '_' || md5('phs001616' || '|' || cast(coalesce(demographics.subject_id, '') as text))::text as \"demographics_id\",\n       CASE demographics.race\n            WHEN 'C41259' THEN 'american_indian_or_alaskan_native'\n            WHEN 'C41260' THEN 'asian'\n            WHEN 'C16352' THEN 'black_or_african_american'\n            WHEN 'C41219' THEN 'native_hawaiian_or_pacific_islander'\n            WHEN 'C41261' THEN 'white'\n            WHEN 'C17998' THEN 'unknown'\n            WHEN 'C43234' THEN 'unknown'\n            WHEN 'C13652' THEN 'unknown'\n            WHEN '.' THEN 'unknown'\n            WHEN 'NA' THEN 'unknown'\n            WHEN 'OTHER' THEN 'other_race'\n       END::text as \"race\"\n        from \"dbt\".\"main_main\".\"eMERGEseq_stg_demographics\" as demographics\n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.eMERGEseq_ftd_familymember": {"database": "dbt", "schema": "main_eMERGEseq_data", "name": "eMERGEseq_ftd_familymember", "resource_type": "model", "package_name": "ftd", "path": "eMERGEseq/eMERGEseq_ftd_familymember.sql", "original_file_path": "models/eMERGEseq/eMERGEseq_ftd_familymember.sql", "unique_id": "model.ftd.eMERGEseq_ftd_familymember", "fqn": ["ftd", "eMERGEseq", "eMERGEseq_ftd_familymember"], "alias": "eMERGEseq_ftd_familymember", "checksum": {"name": "sha256", "checksum": "29bcaee9b6134167fba60bb0be06eafc0993b27e45241e68275de5797faa21f7"}, "config": {"enabled": true, "alias": null, "schema": "eMERGEseq_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for eMERGEseq_ftd_familymember.", "columns": {"family_member": {"name": "family_member", "description": "The family member Subject who is the relationship \"subject\".", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "family_role": {"name": "family_role", "description": "The \"role\" of this indiviudal in this family.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "family_id": {"name": "family_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/eMERGEseq/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "eMERGEseq_data"}, "created_at": 1757448969.7803364, "relation_name": "\"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_familymember\"", "raw_code": "{{ config(materialized='table', schema='eMERGEseq_data') }}\n    {% set relation = ref('eMERGEseq_stg_pedigree') %}\n    {% set constant_columns = ['ftd_index', 'sex', 'subject_id', 'family_id'] %}\n    {% set pivot_columns = get_columns(relation=relation, exclude=constant_columns) %}  \n    \n    with \n    unpivot_df as (\n\n        {% for col in pivot_columns %}\n            select\n                ftd_index, family_id,\n                {{ col }} as \"other_family_memb_id\",\n                subject_id as \"proband_id\",\n                NULL as \"sex\",\n                '{{ col }}' as \"family_role\",\n            from {{ ref('eMERGEseq_stg_pedigree') }} as p\n            WHERE {{ col }} IS NOT NULL \n            {% if not loop.last %}union all{% endif %}\n        {% endfor %}\n    ),\n    \n   all_pedigree as (\n   select distinct -- probands only\n        ftd_index,\n        family_id,\n        subject_id as \"proband_id\",\n        subject_id,\n        null as \"other_family_memb_id\",\n        mother,\n        father,\n        mz_twin_id,\n        p.sex,\n        'CHILD' as \"family_role\",\n    from {{ ref('eMERGEseq_stg_pedigree') }} as p\n    where mother is not null\n    and father is not null\n    and mz_twin_id is not null\n union all\n    select distinct -- mothers/fathers only\n        p.ftd_index,\n        p.family_id,\n        proband_id,\n        other_family_memb_id AS \"subject_id\",\n        other_family_memb_id,\n        NULL AS mother,\n        NULL AS father,\n        NULL AS mz_twin_id,\n        p.sex,\n        CASE p.sex\n           WHEN 2 then 'MTH' \n           WHEN 1 THEN 'FTH'\n        END::text as \"family_role\"\n    from {{ ref('eMERGEseq_stg_pedigree') }} as p\n    left join unpivot_df as u on u.proband_id = p.subject_id\n              and u.family_id = p.family_id\n    where mother is null\n    and father is null\n    and mz_twin_id is null\n),\n        source as(\n        select distinct\n        {{ generate_global_id(prefix='sb',descriptor=['subjectconsent.subject_id'], study_id='phs001616') }}::text as \"family_member\",\n       family_role,\n       {{ generate_global_id(prefix='ap',descriptor=['subjectconsent.consent'], study_id='phs001616') }}::text as \"has_access_policy\",\n       {{ generate_global_id(prefix='fm',descriptor=['pedigree.subject_id', 'pedigree.family_id'], study_id='phs001616') }}::text as \"id\",\n       {{ generate_global_id(prefix='fy',descriptor=['pedigree.family_id'], study_id='phs001616') }}::text as \"family_id\"\n       from all_pedigree as pedigree\n       left join {{ ref('eMERGEseq_stg_subjectconsent') }} as subjectconsent\n        on pedigree.subject_id = subjectconsent.subject_id\n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "eMERGEseq_stg_pedigree", "package": null, "version": null}, {"name": "eMERGEseq_stg_pedigree", "package": null, "version": null}, {"name": "eMERGEseq_stg_pedigree", "package": null, "version": null}, {"name": "eMERGEseq_stg_subjectconsent", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.get_columns", "macro.base.generate_global_id"], "nodes": ["model.eMERGEseq.eMERGEseq_stg_pedigree", "model.eMERGEseq.eMERGEseq_stg_subjectconsent"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/eMERGEseq_ftd_familymember.sql", "compiled": true, "compiled_code": "\n    \n    \n      \n    \n    with \n    unpivot_df as (\n\n        \n    ),\n    \n   all_pedigree as (\n   select distinct -- probands only\n        ftd_index,\n        family_id,\n        subject_id as \"proband_id\",\n        subject_id,\n        null as \"other_family_memb_id\",\n        mother,\n        father,\n        mz_twin_id,\n        p.sex,\n        'CHILD' as \"family_role\",\n    from \"dbt\".\"main_main\".\"eMERGEseq_stg_pedigree\" as p\n    where mother is not null\n    and father is not null\n    and mz_twin_id is not null\n union all\n    select distinct -- mothers/fathers only\n        p.ftd_index,\n        p.family_id,\n        proband_id,\n        other_family_memb_id AS \"subject_id\",\n        other_family_memb_id,\n        NULL AS mother,\n        NULL AS father,\n        NULL AS mz_twin_id,\n        p.sex,\n        CASE p.sex\n           WHEN 2 then 'MTH' \n           WHEN 1 THEN 'FTH'\n        END::text as \"family_role\"\n    from \"dbt\".\"main_main\".\"eMERGEseq_stg_pedigree\" as p\n    left join unpivot_df as u on u.proband_id = p.subject_id\n              and u.family_id = p.family_id\n    where mother is null\n    and father is null\n    and mz_twin_id is null\n),\n        source as(\n        select distinct\n        'sb' || '_' || md5('phs001616' || '|' || cast(coalesce(subjectconsent.subject_id, '') as text))::text as \"family_member\",\n       family_role,\n       'ap' || '_' || md5('phs001616' || '|' || cast(coalesce(subjectconsent.consent, '') as text))::text as \"has_access_policy\",\n       'fm' || '_' || md5('phs001616' || '|' || cast(coalesce(pedigree.subject_id, '') as text) || '|' || 'phs001616' || '|' || cast(coalesce(pedigree.family_id, '') as text))::text as \"id\",\n       'fy' || '_' || md5('phs001616' || '|' || cast(coalesce(pedigree.family_id, '') as text))::text as \"family_id\"\n       from all_pedigree as pedigree\n       left join \"dbt\".\"main_main\".\"eMERGEseq_stg_subjectconsent\" as subjectconsent\n        on pedigree.subject_id = subjectconsent.subject_id\n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.eMERGEseq_ftd_biospecimencollection": {"database": "dbt", "schema": "main_eMERGEseq_data", "name": "eMERGEseq_ftd_biospecimencollection", "resource_type": "model", "package_name": "ftd", "path": "eMERGEseq/eMERGEseq_ftd_biospecimencollection.sql", "original_file_path": "models/eMERGEseq/eMERGEseq_ftd_biospecimencollection.sql", "unique_id": "model.ftd.eMERGEseq_ftd_biospecimencollection", "fqn": ["ftd", "eMERGEseq", "eMERGEseq_ftd_biospecimencollection"], "alias": "eMERGEseq_ftd_biospecimencollection", "checksum": {"name": "sha256", "checksum": "43c3324c9566e9766cb633b57184e427605407f8bec23ba01c0863217cd0af3a"}, "config": {"enabled": true, "alias": null, "schema": "eMERGEseq_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for eMERGEseq_ftd_biospecimencollection.", "columns": {"age_at_collection": {"name": "age_at_collection", "description": "The age at which this biospecimen was collected.", "meta": {}, "data_type": "integer", "constraints": [], "quote": null, "tags": [], "granularity": null}, "method": {"name": "method", "description": "The approach used to collect the biospecimen.", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "site": {"name": "site", "description": "The location of the specimen collection.", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "spatial_qualifier": {"name": "spatial_qualifier", "description": "Any spatial/location qualifiers", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "laterality": {"name": "laterality", "description": "Laterality information for the site", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/eMERGEseq/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "eMERGEseq_data"}, "created_at": 1757448969.778747, "relation_name": "\"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_biospecimencollection\"", "raw_code": "{{ config(materialized='table', schema='eMERGEseq_data') }}\n\n    with source as (\n        select \n        GEN_UNKNOWN.age_at_collection::integer as \"age_at_collection\",\n       GEN_UNKNOWN.method::text as \"method\",\n       GEN_UNKNOWN.site::text as \"site\",\n       GEN_UNKNOWN.spatial_qualifier::text as \"spatial_qualifier\",\n       GEN_UNKNOWN.laterality::text as \"laterality\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='eMERGEseq') }}::text as \"has_access_policy\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='eMERGEseq') }}::text as \"id\"\n        from {{ ref('eMERGEseq_stg_subjectconsent') }} as subjectconsent\n        join {{ ref('eMERGEseq_stg_demographics') }} as demographics\non subjectconsent.subject_id = demographics.subject_id  join {{ ref('eMERGEseq_stg_phecode') }} as phecode\non   join {{ ref('eMERGEseq_stg_samplesubjectmapping') }} as samplesubjectmapping\non   join {{ ref('eMERGEseq_stg_sampleattributes') }} as sampleattributes\non  \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "eMERGEseq_stg_subjectconsent", "package": null, "version": null}, {"name": "eMERGEseq_stg_demographics", "package": null, "version": null}, {"name": "eMERGEseq_stg_phecode", "package": null, "version": null}, {"name": "eMERGEseq_stg_samplesubjectmapping", "package": null, "version": null}, {"name": "eMERGEseq_stg_sampleattributes", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.eMERGEseq.eMERGEseq_stg_subjectconsent", "model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_sampleattributes"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/eMERGEseq_ftd_biospecimencollection.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        GEN_UNKNOWN.age_at_collection::integer as \"age_at_collection\",\n       GEN_UNKNOWN.method::text as \"method\",\n       GEN_UNKNOWN.site::text as \"site\",\n       GEN_UNKNOWN.spatial_qualifier::text as \"spatial_qualifier\",\n       GEN_UNKNOWN.laterality::text as \"laterality\",\n       '' || '_' || md5('eMERGEseq' || '|' || cast(coalesce(, '') as text))::text as \"has_access_policy\",\n       '' || '_' || md5('eMERGEseq' || '|' || cast(coalesce(, '') as text))::text as \"id\"\n        from \"dbt\".\"main_main\".\"eMERGEseq_stg_subjectconsent\" as subjectconsent\n        join \"dbt\".\"main_main\".\"eMERGEseq_stg_demographics\" as demographics\non subjectconsent.subject_id = demographics.subject_id  join \"dbt\".\"main_main\".\"eMERGEseq_stg_phecode\" as phecode\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_samplesubjectmapping\" as samplesubjectmapping\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_sampleattributes\" as sampleattributes\non  \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.eMERGEseq_ftd_demographics_source_data": {"database": "dbt", "schema": "main_eMERGEseq_data", "name": "eMERGEseq_ftd_demographics_source_data", "resource_type": "model", "package_name": "ftd", "path": "eMERGEseq/eMERGEseq_ftd_demographics_source_data.sql", "original_file_path": "models/eMERGEseq/eMERGEseq_ftd_demographics_source_data.sql", "unique_id": "model.ftd.eMERGEseq_ftd_demographics_source_data", "fqn": ["ftd", "eMERGEseq", "eMERGEseq_ftd_demographics_source_data"], "alias": "eMERGEseq_ftd_demographics_source_data", "checksum": {"name": "sha256", "checksum": "1976b3abc59abe66769a2298becd146c1c7415691d51fdef5152b63718417954"}, "config": {"enabled": true, "alias": null, "schema": "eMERGEseq_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for eMERGEseq_ftd_demographics_source_data.", "columns": {"demographics_id": {"name": "demographics_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "source_data_id": {"name": "source_data_id", "description": "The sources from which this assertion was derived", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/eMERGEseq/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "eMERGEseq_data"}, "created_at": 1757448969.7646337, "relation_name": "\"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_demographics_source_data\"", "raw_code": "{{ config(materialized='table', schema='eMERGEseq_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='eMERGEseq') }}::text as \"demographics_id\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='eMERGEseq') }}::text as \"source_data_id\"\n        from {{ ref('eMERGEseq_stg_subjectconsent') }} as subjectconsent\n        join {{ ref('eMERGEseq_stg_demographics') }} as demographics\non subjectconsent.subject_id = demographics.subject_id  join {{ ref('eMERGEseq_stg_phecode') }} as phecode\non   join {{ ref('eMERGEseq_stg_samplesubjectmapping') }} as samplesubjectmapping\non   join {{ ref('eMERGEseq_stg_sampleattributes') }} as sampleattributes\non  \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "eMERGEseq_stg_subjectconsent", "package": null, "version": null}, {"name": "eMERGEseq_stg_demographics", "package": null, "version": null}, {"name": "eMERGEseq_stg_phecode", "package": null, "version": null}, {"name": "eMERGEseq_stg_samplesubjectmapping", "package": null, "version": null}, {"name": "eMERGEseq_stg_sampleattributes", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.eMERGEseq.eMERGEseq_stg_subjectconsent", "model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_sampleattributes"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/eMERGEseq_ftd_demographics_source_data.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('eMERGEseq' || '|' || cast(coalesce(, '') as text))::text as \"demographics_id\",\n       '' || '_' || md5('eMERGEseq' || '|' || cast(coalesce(, '') as text))::text as \"source_data_id\"\n        from \"dbt\".\"main_main\".\"eMERGEseq_stg_subjectconsent\" as subjectconsent\n        join \"dbt\".\"main_main\".\"eMERGEseq_stg_demographics\" as demographics\non subjectconsent.subject_id = demographics.subject_id  join \"dbt\".\"main_main\".\"eMERGEseq_stg_phecode\" as phecode\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_samplesubjectmapping\" as samplesubjectmapping\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_sampleattributes\" as sampleattributes\non  \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.eMERGEseq_ftd_accesspolicy_data_access_type": {"database": "dbt", "schema": "main_eMERGEseq_data", "name": "eMERGEseq_ftd_accesspolicy_data_access_type", "resource_type": "model", "package_name": "ftd", "path": "eMERGEseq/eMERGEseq_ftd_accesspolicy_data_access_type.sql", "original_file_path": "models/eMERGEseq/eMERGEseq_ftd_accesspolicy_data_access_type.sql", "unique_id": "model.ftd.eMERGEseq_ftd_accesspolicy_data_access_type", "fqn": ["ftd", "eMERGEseq", "eMERGEseq_ftd_accesspolicy_data_access_type"], "alias": "eMERGEseq_ftd_accesspolicy_data_access_type", "checksum": {"name": "sha256", "checksum": "e6af5c87e6e44f95b091ff5dbbcced732feebbf740775f7d95bda5b4a9570c00"}, "config": {"enabled": true, "alias": null, "schema": "eMERGEseq_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for eMERGEseq_ftd_accesspolicy_data_access_type.", "columns": {"accesspolicy_id": {"name": "accesspolicy_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "data_access_type": {"name": "data_access_type", "description": "Data Access Type", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/eMERGEseq/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "eMERGEseq_data"}, "created_at": 1757448969.7831247, "relation_name": "\"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_accesspolicy_data_access_type\"", "raw_code": "{{ config(materialized='table', schema='eMERGEseq_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='eMERGEseq') }}::text as \"accesspolicy_id\",\n       GEN_UNKNOWN.data_access_type::text as \"data_access_type\"\n        from {{ ref('eMERGEseq_stg_subjectconsent') }} as subjectconsent\n        join {{ ref('eMERGEseq_stg_demographics') }} as demographics\non subjectconsent.subject_id = demographics.subject_id  join {{ ref('eMERGEseq_stg_phecode') }} as phecode\non   join {{ ref('eMERGEseq_stg_samplesubjectmapping') }} as samplesubjectmapping\non   join {{ ref('eMERGEseq_stg_sampleattributes') }} as sampleattributes\non  \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "eMERGEseq_stg_subjectconsent", "package": null, "version": null}, {"name": "eMERGEseq_stg_demographics", "package": null, "version": null}, {"name": "eMERGEseq_stg_phecode", "package": null, "version": null}, {"name": "eMERGEseq_stg_samplesubjectmapping", "package": null, "version": null}, {"name": "eMERGEseq_stg_sampleattributes", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.eMERGEseq.eMERGEseq_stg_subjectconsent", "model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_sampleattributes"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/eMERGEseq_ftd_accesspolicy_data_access_type.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('eMERGEseq' || '|' || cast(coalesce(, '') as text))::text as \"accesspolicy_id\",\n       GEN_UNKNOWN.data_access_type::text as \"data_access_type\"\n        from \"dbt\".\"main_main\".\"eMERGEseq_stg_subjectconsent\" as subjectconsent\n        join \"dbt\".\"main_main\".\"eMERGEseq_stg_demographics\" as demographics\non subjectconsent.subject_id = demographics.subject_id  join \"dbt\".\"main_main\".\"eMERGEseq_stg_phecode\" as phecode\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_samplesubjectmapping\" as samplesubjectmapping\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_sampleattributes\" as sampleattributes\non  \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.eMERGEseq_ftd_subject": {"database": "dbt", "schema": "main_eMERGEseq_data", "name": "eMERGEseq_ftd_subject", "resource_type": "model", "package_name": "ftd", "path": "eMERGEseq/eMERGEseq_ftd_subject.sql", "original_file_path": "models/eMERGEseq/eMERGEseq_ftd_subject.sql", "unique_id": "model.ftd.eMERGEseq_ftd_subject", "fqn": ["ftd", "eMERGEseq", "eMERGEseq_ftd_subject"], "alias": "eMERGEseq_ftd_subject", "checksum": {"name": "sha256", "checksum": "452810383afb03305c2fdd30b3ac2b465e587058fa25c4d393491a8ce70c3f24"}, "config": {"enabled": true, "alias": null, "schema": "eMERGEseq_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for eMERGEseq_ftd_subject.", "columns": {"subject_type": {"name": "subject_type", "description": "Type of entity this record represents", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "organism_type": {"name": "organism_type", "description": "Organism Type Label", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_demographics_id": {"name": "has_demographics_id", "description": "A demographic summary of the participant.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/eMERGEseq/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "eMERGEseq_data"}, "created_at": 1757448969.771101, "relation_name": "\"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_subject\"", "raw_code": "{{ config(materialized='table', schema='eMERGEseq_data') }}\n\n    with source as (\n        select DISTINCT\n         CASE \n            WHEN subjectconsent.consent != 0 THEN 'participant'\n            ELSE 'non_participant'\n        END::text as subject_type,\n        NULL as \"organism_type\",\n       {{ generate_global_id(prefix='ap',descriptor=['subjectconsent.consent'], study_id='phs001616') }}::text as \"has_access_policy\",\n       {{ generate_global_id(prefix='sb',descriptor=['subjectconsent.subject_id'], study_id='phs001616') }}::text as \"id\",\n       {{ generate_global_id(prefix='dm',descriptor=['demographics.subject_id'], study_id='phs001616') }}::text as \"has_demographics_id\"\n        from {{ ref('eMERGEseq_stg_subjectconsent') }} as subjectconsent\n        left join {{ ref('eMERGEseq_stg_demographics') }} as demographics\n        on subjectconsent.subject_id = demographics.subject_id\n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "eMERGEseq_stg_subjectconsent", "package": null, "version": null}, {"name": "eMERGEseq_stg_demographics", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.eMERGEseq.eMERGEseq_stg_subjectconsent", "model.eMERGEseq.eMERGEseq_stg_demographics"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/eMERGEseq_ftd_subject.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select DISTINCT\n         CASE \n            WHEN subjectconsent.consent != 0 THEN 'participant'\n            ELSE 'non_participant'\n        END::text as subject_type,\n        NULL as \"organism_type\",\n       'ap' || '_' || md5('phs001616' || '|' || cast(coalesce(subjectconsent.consent, '') as text))::text as \"has_access_policy\",\n       'sb' || '_' || md5('phs001616' || '|' || cast(coalesce(subjectconsent.subject_id, '') as text))::text as \"id\",\n       'dm' || '_' || md5('phs001616' || '|' || cast(coalesce(demographics.subject_id, '') as text))::text as \"has_demographics_id\"\n        from \"dbt\".\"main_main\".\"eMERGEseq_stg_subjectconsent\" as subjectconsent\n        left join \"dbt\".\"main_main\".\"eMERGEseq_stg_demographics\" as demographics\n        on subjectconsent.subject_id = demographics.subject_id\n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.eMERGEseq_ftd_aliquot_external_id": {"database": "dbt", "schema": "main_eMERGEseq_data", "name": "eMERGEseq_ftd_aliquot_external_id", "resource_type": "model", "package_name": "ftd", "path": "eMERGEseq/eMERGEseq_ftd_aliquot_external_id.sql", "original_file_path": "models/eMERGEseq/eMERGEseq_ftd_aliquot_external_id.sql", "unique_id": "model.ftd.eMERGEseq_ftd_aliquot_external_id", "fqn": ["ftd", "eMERGEseq", "eMERGEseq_ftd_aliquot_external_id"], "alias": "eMERGEseq_ftd_aliquot_external_id", "checksum": {"name": "sha256", "checksum": "1f021ac1af36d88540ebe88f24151f3c09c0ac462c2c3b06e75d854c6d0739dd"}, "config": {"enabled": true, "alias": null, "schema": "eMERGEseq_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for eMERGEseq_ftd_aliquot_external_id.", "columns": {"aliquot_id": {"name": "aliquot_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/eMERGEseq/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "eMERGEseq_data"}, "created_at": 1757448969.7797394, "relation_name": "\"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_aliquot_external_id\"", "raw_code": "{{ config(materialized='table', schema='eMERGEseq_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='eMERGEseq') }}::text as \"aliquot_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from {{ ref('eMERGEseq_stg_subjectconsent') }} as subjectconsent\n        join {{ ref('eMERGEseq_stg_demographics') }} as demographics\non subjectconsent.subject_id = demographics.subject_id  join {{ ref('eMERGEseq_stg_phecode') }} as phecode\non   join {{ ref('eMERGEseq_stg_samplesubjectmapping') }} as samplesubjectmapping\non   join {{ ref('eMERGEseq_stg_sampleattributes') }} as sampleattributes\non  \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "eMERGEseq_stg_subjectconsent", "package": null, "version": null}, {"name": "eMERGEseq_stg_demographics", "package": null, "version": null}, {"name": "eMERGEseq_stg_phecode", "package": null, "version": null}, {"name": "eMERGEseq_stg_samplesubjectmapping", "package": null, "version": null}, {"name": "eMERGEseq_stg_sampleattributes", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.eMERGEseq.eMERGEseq_stg_subjectconsent", "model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_sampleattributes"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/eMERGEseq_ftd_aliquot_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('eMERGEseq' || '|' || cast(coalesce(, '') as text))::text as \"aliquot_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"eMERGEseq_stg_subjectconsent\" as subjectconsent\n        join \"dbt\".\"main_main\".\"eMERGEseq_stg_demographics\" as demographics\non subjectconsent.subject_id = demographics.subject_id  join \"dbt\".\"main_main\".\"eMERGEseq_stg_phecode\" as phecode\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_samplesubjectmapping\" as samplesubjectmapping\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_sampleattributes\" as sampleattributes\non  \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.eMERGEseq_ftd_sourcedata_external_id": {"database": "dbt", "schema": "main_eMERGEseq_data", "name": "eMERGEseq_ftd_sourcedata_external_id", "resource_type": "model", "package_name": "ftd", "path": "eMERGEseq/eMERGEseq_ftd_sourcedata_external_id.sql", "original_file_path": "models/eMERGEseq/eMERGEseq_ftd_sourcedata_external_id.sql", "unique_id": "model.ftd.eMERGEseq_ftd_sourcedata_external_id", "fqn": ["ftd", "eMERGEseq", "eMERGEseq_ftd_sourcedata_external_id"], "alias": "eMERGEseq_ftd_sourcedata_external_id", "checksum": {"name": "sha256", "checksum": "2c490877ec4afa8e3b5376fab983b59c4255beaa6aecd6cbe838e307de740576"}, "config": {"enabled": true, "alias": null, "schema": "eMERGEseq_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for eMERGEseq_ftd_sourcedata_external_id.", "columns": {"sourcedata_id": {"name": "sourcedata_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/eMERGEseq/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "eMERGEseq_data"}, "created_at": 1757448969.784612, "relation_name": "\"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_sourcedata_external_id\"", "raw_code": "{{ config(materialized='table', schema='eMERGEseq_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='eMERGEseq') }}::text as \"sourcedata_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from {{ ref('eMERGEseq_stg_subjectconsent') }} as subjectconsent\n        join {{ ref('eMERGEseq_stg_demographics') }} as demographics\non subjectconsent.subject_id = demographics.subject_id  join {{ ref('eMERGEseq_stg_phecode') }} as phecode\non   join {{ ref('eMERGEseq_stg_samplesubjectmapping') }} as samplesubjectmapping\non   join {{ ref('eMERGEseq_stg_sampleattributes') }} as sampleattributes\non  \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "eMERGEseq_stg_subjectconsent", "package": null, "version": null}, {"name": "eMERGEseq_stg_demographics", "package": null, "version": null}, {"name": "eMERGEseq_stg_phecode", "package": null, "version": null}, {"name": "eMERGEseq_stg_samplesubjectmapping", "package": null, "version": null}, {"name": "eMERGEseq_stg_sampleattributes", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.eMERGEseq.eMERGEseq_stg_subjectconsent", "model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_sampleattributes"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/eMERGEseq_ftd_sourcedata_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('eMERGEseq' || '|' || cast(coalesce(, '') as text))::text as \"sourcedata_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"eMERGEseq_stg_subjectconsent\" as subjectconsent\n        join \"dbt\".\"main_main\".\"eMERGEseq_stg_demographics\" as demographics\non subjectconsent.subject_id = demographics.subject_id  join \"dbt\".\"main_main\".\"eMERGEseq_stg_phecode\" as phecode\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_samplesubjectmapping\" as samplesubjectmapping\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_sampleattributes\" as sampleattributes\non  \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.eMERGEseq_ftd_filemetadata_external_id": {"database": "dbt", "schema": "main_eMERGEseq_data", "name": "eMERGEseq_ftd_filemetadata_external_id", "resource_type": "model", "package_name": "ftd", "path": "eMERGEseq/eMERGEseq_ftd_filemetadata_external_id.sql", "original_file_path": "models/eMERGEseq/eMERGEseq_ftd_filemetadata_external_id.sql", "unique_id": "model.ftd.eMERGEseq_ftd_filemetadata_external_id", "fqn": ["ftd", "eMERGEseq", "eMERGEseq_ftd_filemetadata_external_id"], "alias": "eMERGEseq_ftd_filemetadata_external_id", "checksum": {"name": "sha256", "checksum": "7944d8b2f2edf24fcd3798befa02a014d8ab5810d90b1d915fcd085ca7315164"}, "config": {"enabled": true, "alias": null, "schema": "eMERGEseq_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for eMERGEseq_ftd_filemetadata_external_id.", "columns": {"filemetadata_id": {"name": "filemetadata_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/eMERGEseq/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "eMERGEseq_data"}, "created_at": 1757448969.7705393, "relation_name": "\"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_filemetadata_external_id\"", "raw_code": "{{ config(materialized='table', schema='eMERGEseq_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='eMERGEseq') }}::text as \"filemetadata_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from {{ ref('eMERGEseq_stg_subjectconsent') }} as subjectconsent\n        join {{ ref('eMERGEseq_stg_demographics') }} as demographics\non subjectconsent.subject_id = demographics.subject_id  join {{ ref('eMERGEseq_stg_phecode') }} as phecode\non   join {{ ref('eMERGEseq_stg_samplesubjectmapping') }} as samplesubjectmapping\non   join {{ ref('eMERGEseq_stg_sampleattributes') }} as sampleattributes\non  \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "eMERGEseq_stg_subjectconsent", "package": null, "version": null}, {"name": "eMERGEseq_stg_demographics", "package": null, "version": null}, {"name": "eMERGEseq_stg_phecode", "package": null, "version": null}, {"name": "eMERGEseq_stg_samplesubjectmapping", "package": null, "version": null}, {"name": "eMERGEseq_stg_sampleattributes", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.eMERGEseq.eMERGEseq_stg_subjectconsent", "model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_sampleattributes"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/eMERGEseq_ftd_filemetadata_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('eMERGEseq' || '|' || cast(coalesce(, '') as text))::text as \"filemetadata_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"eMERGEseq_stg_subjectconsent\" as subjectconsent\n        join \"dbt\".\"main_main\".\"eMERGEseq_stg_demographics\" as demographics\non subjectconsent.subject_id = demographics.subject_id  join \"dbt\".\"main_main\".\"eMERGEseq_stg_phecode\" as phecode\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_samplesubjectmapping\" as samplesubjectmapping\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_sampleattributes\" as sampleattributes\non  \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.eMERGEseq_ftd_accesscontrolledrecord_external_id": {"database": "dbt", "schema": "main_eMERGEseq_data", "name": "eMERGEseq_ftd_accesscontrolledrecord_external_id", "resource_type": "model", "package_name": "ftd", "path": "eMERGEseq/eMERGEseq_ftd_accesscontrolledrecord_external_id.sql", "original_file_path": "models/eMERGEseq/eMERGEseq_ftd_accesscontrolledrecord_external_id.sql", "unique_id": "model.ftd.eMERGEseq_ftd_accesscontrolledrecord_external_id", "fqn": ["ftd", "eMERGEseq", "eMERGEseq_ftd_accesscontrolledrecord_external_id"], "alias": "eMERGEseq_ftd_accesscontrolledrecord_external_id", "checksum": {"name": "sha256", "checksum": "ecedce59433c89d051c647ddbc77e703a427fb826a97283ae622f7733e22966c"}, "config": {"enabled": true, "alias": null, "schema": "eMERGEseq_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for eMERGEseq_ftd_accesscontrolledrecord_external_id.", "columns": {"accesscontrolledrecord_id": {"name": "accesscontrolledrecord_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/eMERGEseq/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "eMERGEseq_data"}, "created_at": 1757448969.7835488, "relation_name": "\"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_accesscontrolledrecord_external_id\"", "raw_code": "{{ config(materialized='table', schema='eMERGEseq_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='eMERGEseq') }}::text as \"accesscontrolledrecord_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from {{ ref('eMERGEseq_stg_subjectconsent') }} as subjectconsent\n        join {{ ref('eMERGEseq_stg_demographics') }} as demographics\non subjectconsent.subject_id = demographics.subject_id  join {{ ref('eMERGEseq_stg_phecode') }} as phecode\non   join {{ ref('eMERGEseq_stg_samplesubjectmapping') }} as samplesubjectmapping\non   join {{ ref('eMERGEseq_stg_sampleattributes') }} as sampleattributes\non  \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "eMERGEseq_stg_subjectconsent", "package": null, "version": null}, {"name": "eMERGEseq_stg_demographics", "package": null, "version": null}, {"name": "eMERGEseq_stg_phecode", "package": null, "version": null}, {"name": "eMERGEseq_stg_samplesubjectmapping", "package": null, "version": null}, {"name": "eMERGEseq_stg_sampleattributes", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.eMERGEseq.eMERGEseq_stg_subjectconsent", "model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_sampleattributes"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/eMERGEseq_ftd_accesscontrolledrecord_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('eMERGEseq' || '|' || cast(coalesce(, '') as text))::text as \"accesscontrolledrecord_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"eMERGEseq_stg_subjectconsent\" as subjectconsent\n        join \"dbt\".\"main_main\".\"eMERGEseq_stg_demographics\" as demographics\non subjectconsent.subject_id = demographics.subject_id  join \"dbt\".\"main_main\".\"eMERGEseq_stg_phecode\" as phecode\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_samplesubjectmapping\" as samplesubjectmapping\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_sampleattributes\" as sampleattributes\non  \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.eMERGEseq_ftd_accesspolicy_external_id": {"database": "dbt", "schema": "main_eMERGEseq_data", "name": "eMERGEseq_ftd_accesspolicy_external_id", "resource_type": "model", "package_name": "ftd", "path": "eMERGEseq/eMERGEseq_ftd_accesspolicy_external_id.sql", "original_file_path": "models/eMERGEseq/eMERGEseq_ftd_accesspolicy_external_id.sql", "unique_id": "model.ftd.eMERGEseq_ftd_accesspolicy_external_id", "fqn": ["ftd", "eMERGEseq", "eMERGEseq_ftd_accesspolicy_external_id"], "alias": "eMERGEseq_ftd_accesspolicy_external_id", "checksum": {"name": "sha256", "checksum": "19ead66a211b01c83db0963c5b77372ef73d7b67ee31f1a0b5f4e38049614086"}, "config": {"enabled": true, "alias": null, "schema": "eMERGEseq_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for eMERGEseq_ftd_accesspolicy_external_id.", "columns": {"accesspolicy_id": {"name": "accesspolicy_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/eMERGEseq/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "eMERGEseq_data"}, "created_at": 1757448969.7749317, "relation_name": "\"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_accesspolicy_external_id\"", "raw_code": "{{ config(materialized='table', schema='eMERGEseq_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='phs001616') }}::text as \"accesspolicy_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from {{ ref('eMERGEseq_stg_subjectconsent') }} as subjectconsent\n        join {{ ref('eMERGEseq_stg_demographics') }} as demographics\non subjectconsent.subject_id = demographics.subject_id  join {{ ref('eMERGEseq_stg_phecode') }} as phecode\non   join {{ ref('eMERGEseq_stg_samplesubjectmapping') }} as samplesubjectmapping\non   join {{ ref('eMERGEseq_stg_sampleattributes') }} as sampleattributes\non  \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "eMERGEseq_stg_subjectconsent", "package": null, "version": null}, {"name": "eMERGEseq_stg_demographics", "package": null, "version": null}, {"name": "eMERGEseq_stg_phecode", "package": null, "version": null}, {"name": "eMERGEseq_stg_samplesubjectmapping", "package": null, "version": null}, {"name": "eMERGEseq_stg_sampleattributes", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.eMERGEseq.eMERGEseq_stg_subjectconsent", "model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_sampleattributes"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/eMERGEseq_ftd_accesspolicy_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('phs001616' || '|' || cast(coalesce(, '') as text))::text as \"accesspolicy_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"eMERGEseq_stg_subjectconsent\" as subjectconsent\n        join \"dbt\".\"main_main\".\"eMERGEseq_stg_demographics\" as demographics\non subjectconsent.subject_id = demographics.subject_id  join \"dbt\".\"main_main\".\"eMERGEseq_stg_phecode\" as phecode\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_samplesubjectmapping\" as samplesubjectmapping\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_sampleattributes\" as sampleattributes\non  \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.eMERGEseq_ftd_thing_external_id": {"database": "dbt", "schema": "main_eMERGEseq_data", "name": "eMERGEseq_ftd_thing_external_id", "resource_type": "model", "package_name": "ftd", "path": "eMERGEseq/eMERGEseq_ftd_thing_external_id.sql", "original_file_path": "models/eMERGEseq/eMERGEseq_ftd_thing_external_id.sql", "unique_id": "model.ftd.eMERGEseq_ftd_thing_external_id", "fqn": ["ftd", "eMERGEseq", "eMERGEseq_ftd_thing_external_id"], "alias": "eMERGEseq_ftd_thing_external_id", "checksum": {"name": "sha256", "checksum": "d1c5abd2ef2a49770866185b70eba47edebd8cdf1fe1ab38378ce9d7387452f7"}, "config": {"enabled": true, "alias": null, "schema": "eMERGEseq_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "table", "schema": "eMERGEseq_data"}, "created_at": 1757448968.9147217, "relation_name": "\"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_thing_external_id\"", "raw_code": "{{ config(materialized='table', schema='eMERGEseq_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='eMERGEseq') }}::text as \"thing_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from {{ ref('eMERGEseq_stg_subjectconsent') }} as subjectconsent\n        join {{ ref('eMERGEseq_stg_demographics') }} as demographics\non subjectconsent.subject_id = demographics.subject_id  join {{ ref('eMERGEseq_stg_phecode') }} as phecode\non   join {{ ref('eMERGEseq_stg_samplesubjectmapping') }} as samplesubjectmapping\non   join {{ ref('eMERGEseq_stg_sampleattributes') }} as sampleattributes\non  \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "eMERGEseq_stg_subjectconsent", "package": null, "version": null}, {"name": "eMERGEseq_stg_demographics", "package": null, "version": null}, {"name": "eMERGEseq_stg_phecode", "package": null, "version": null}, {"name": "eMERGEseq_stg_samplesubjectmapping", "package": null, "version": null}, {"name": "eMERGEseq_stg_sampleattributes", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.eMERGEseq.eMERGEseq_stg_subjectconsent", "model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_sampleattributes"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/eMERGEseq_ftd_thing_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('eMERGEseq' || '|' || cast(coalesce(, '') as text))::text as \"thing_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"eMERGEseq_stg_subjectconsent\" as subjectconsent\n        join \"dbt\".\"main_main\".\"eMERGEseq_stg_demographics\" as demographics\non subjectconsent.subject_id = demographics.subject_id  join \"dbt\".\"main_main\".\"eMERGEseq_stg_phecode\" as phecode\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_samplesubjectmapping\" as samplesubjectmapping\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_sampleattributes\" as sampleattributes\non  \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.eMERGEseq_ftd_datasource_external_id": {"database": "dbt", "schema": "main_eMERGEseq_data", "name": "eMERGEseq_ftd_datasource_external_id", "resource_type": "model", "package_name": "ftd", "path": "eMERGEseq/eMERGEseq_ftd_datasource_external_id.sql", "original_file_path": "models/eMERGEseq/eMERGEseq_ftd_datasource_external_id.sql", "unique_id": "model.ftd.eMERGEseq_ftd_datasource_external_id", "fqn": ["ftd", "eMERGEseq", "eMERGEseq_ftd_datasource_external_id"], "alias": "eMERGEseq_ftd_datasource_external_id", "checksum": {"name": "sha256", "checksum": "bb5221b287752fb2c7edfbdb918f1eb7a8b642bdbcb865ea0489206d8bdcff45"}, "config": {"enabled": true, "alias": null, "schema": "eMERGEseq_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for eMERGEseq_ftd_datasource_external_id.", "columns": {"datasource_id": {"name": "datasource_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "external_id": {"name": "external_id", "description": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/eMERGEseq/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "eMERGEseq_data"}, "created_at": 1757448969.7634861, "relation_name": "\"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_datasource_external_id\"", "raw_code": "{{ config(materialized='table', schema='eMERGEseq_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='eMERGEseq') }}::text as \"datasource_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from {{ ref('eMERGEseq_stg_demographics') }} as demographics\n        join {{ ref('eMERGEseq_stg_phecode') }} as phecode\non demographics.subject_id = phecode.subject_id  join {{ ref('eMERGEseq_stg_sampleattributes') }} as sampleattributes\non samplesubjectmapping.sample_id = sampleattributes.sample_id  join {{ ref('eMERGEseq_stg_samplesubjectmapping') }} as samplesubjectmapping\non sampleattributes.sample_id = samplesubjectmapping.sample_id  join {{ ref('eMERGEseq_stg_subjectconsent') }} as subjectconsent\non   join {{ ref('eMERGEseq_stg_bmi') }} as bmi\non   join {{ ref('eMERGEseq_stg_pedigree') }} as pedigree\non  \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "eMERGEseq_stg_demographics", "package": null, "version": null}, {"name": "eMERGEseq_stg_phecode", "package": null, "version": null}, {"name": "eMERGEseq_stg_sampleattributes", "package": null, "version": null}, {"name": "eMERGEseq_stg_samplesubjectmapping", "package": null, "version": null}, {"name": "eMERGEseq_stg_subjectconsent", "package": null, "version": null}, {"name": "eMERGEseq_stg_bmi", "package": null, "version": null}, {"name": "eMERGEseq_stg_pedigree", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_sampleattributes", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_subjectconsent", "model.eMERGEseq.eMERGEseq_stg_bmi", "model.eMERGEseq.eMERGEseq_stg_pedigree"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/eMERGEseq_ftd_datasource_external_id.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('eMERGEseq' || '|' || cast(coalesce(, '') as text))::text as \"datasource_id\",\n       GEN_UNKNOWN.external_id::text as \"external_id\"\n        from \"dbt\".\"main_main\".\"eMERGEseq_stg_demographics\" as demographics\n        join \"dbt\".\"main_main\".\"eMERGEseq_stg_phecode\" as phecode\non demographics.subject_id = phecode.subject_id  join \"dbt\".\"main_main\".\"eMERGEseq_stg_sampleattributes\" as sampleattributes\non samplesubjectmapping.sample_id = sampleattributes.sample_id  join \"dbt\".\"main_main\".\"eMERGEseq_stg_samplesubjectmapping\" as samplesubjectmapping\non sampleattributes.sample_id = samplesubjectmapping.sample_id  join \"dbt\".\"main_main\".\"eMERGEseq_stg_subjectconsent\" as subjectconsent\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_bmi\" as bmi\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_pedigree\" as pedigree\non  \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.eMERGEseq_ftd_file": {"database": "dbt", "schema": "main_eMERGEseq_data", "name": "eMERGEseq_ftd_file", "resource_type": "model", "package_name": "ftd", "path": "eMERGEseq/eMERGEseq_ftd_file.sql", "original_file_path": "models/eMERGEseq/eMERGEseq_ftd_file.sql", "unique_id": "model.ftd.eMERGEseq_ftd_file", "fqn": ["ftd", "eMERGEseq", "eMERGEseq_ftd_file"], "alias": "eMERGEseq_ftd_file", "checksum": {"name": "sha256", "checksum": "6d3572e873a213c5f7fce001336d3b9ac89ae6f43551a8a6c866a01f4f45a27e"}, "config": {"enabled": true, "alias": null, "schema": "eMERGEseq_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for eMERGEseq_ftd_file.", "columns": {"filename": {"name": "filename", "description": "The name of the file.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "format": {"name": "format", "description": "The format of the file.", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "data_type": {"name": "data_type", "description": "The type of data within this file.", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "size": {"name": "size", "description": "Size of the file, in Bytes.", "meta": {}, "data_type": "integer", "constraints": [], "quote": null, "tags": [], "granularity": null}, "drs_uri": {"name": "drs_uri", "description": "DRS location to access the data.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "file_metadata": {"name": "file_metadata", "description": "Additional metadata about the contents of the file, eg, genome reference build.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/eMERGEseq/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "eMERGEseq_data"}, "created_at": 1757448969.7693286, "relation_name": "\"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_file\"", "raw_code": "{{ config(materialized='table', schema='eMERGEseq_data') }}\n\n    with source as (\n        select \n        GEN_UNKNOWN.filename::text as \"filename\",\n       GEN_UNKNOWN.format::text as \"format\",\n       GEN_UNKNOWN.data_type::text as \"data_type\",\n       GEN_UNKNOWN.size::integer as \"size\",\n       GEN_UNKNOWN.drs_uri::text as \"drs_uri\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='eMERGEseq') }}::text as \"file_metadata\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='eMERGEseq') }}::text as \"has_access_policy\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='eMERGEseq') }}::text as \"id\"\n        from {{ ref('eMERGEseq_stg_subjectconsent') }} as subjectconsent\n        join {{ ref('eMERGEseq_stg_demographics') }} as demographics\non subjectconsent.subject_id = demographics.subject_id  join {{ ref('eMERGEseq_stg_phecode') }} as phecode\non   join {{ ref('eMERGEseq_stg_samplesubjectmapping') }} as samplesubjectmapping\non   join {{ ref('eMERGEseq_stg_sampleattributes') }} as sampleattributes\non  \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "eMERGEseq_stg_subjectconsent", "package": null, "version": null}, {"name": "eMERGEseq_stg_demographics", "package": null, "version": null}, {"name": "eMERGEseq_stg_phecode", "package": null, "version": null}, {"name": "eMERGEseq_stg_samplesubjectmapping", "package": null, "version": null}, {"name": "eMERGEseq_stg_sampleattributes", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.eMERGEseq.eMERGEseq_stg_subjectconsent", "model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_sampleattributes"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/eMERGEseq_ftd_file.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        GEN_UNKNOWN.filename::text as \"filename\",\n       GEN_UNKNOWN.format::text as \"format\",\n       GEN_UNKNOWN.data_type::text as \"data_type\",\n       GEN_UNKNOWN.size::integer as \"size\",\n       GEN_UNKNOWN.drs_uri::text as \"drs_uri\",\n       '' || '_' || md5('eMERGEseq' || '|' || cast(coalesce(, '') as text))::text as \"file_metadata\",\n       '' || '_' || md5('eMERGEseq' || '|' || cast(coalesce(, '') as text))::text as \"has_access_policy\",\n       '' || '_' || md5('eMERGEseq' || '|' || cast(coalesce(, '') as text))::text as \"id\"\n        from \"dbt\".\"main_main\".\"eMERGEseq_stg_subjectconsent\" as subjectconsent\n        join \"dbt\".\"main_main\".\"eMERGEseq_stg_demographics\" as demographics\non subjectconsent.subject_id = demographics.subject_id  join \"dbt\".\"main_main\".\"eMERGEseq_stg_phecode\" as phecode\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_samplesubjectmapping\" as samplesubjectmapping\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_sampleattributes\" as sampleattributes\non  \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.eMERGEseq_ftd_aliquot": {"database": "dbt", "schema": "main_eMERGEseq_data", "name": "eMERGEseq_ftd_aliquot", "resource_type": "model", "package_name": "ftd", "path": "eMERGEseq/eMERGEseq_ftd_aliquot.sql", "original_file_path": "models/eMERGEseq/eMERGEseq_ftd_aliquot.sql", "unique_id": "model.ftd.eMERGEseq_ftd_aliquot", "fqn": ["ftd", "eMERGEseq", "eMERGEseq_ftd_aliquot"], "alias": "eMERGEseq_ftd_aliquot", "checksum": {"name": "sha256", "checksum": "1354efa9574e41e2af1f092fd66750a70dfd733da5bc95d178b4003641c72f94"}, "config": {"enabled": true, "alias": null, "schema": "eMERGEseq_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for eMERGEseq_ftd_aliquot.", "columns": {"availablity_status": {"name": "availablity_status", "description": "Can this Sample be requested for further analysis?", "meta": {}, "data_type": "enumeration", "constraints": [], "quote": null, "tags": [], "granularity": null}, "quantity_number": {"name": "quantity_number", "description": "The total quantity of the specimen", "meta": {}, "data_type": "number", "constraints": [], "quote": null, "tags": [], "granularity": null}, "quantity_units": {"name": "quantity_units", "description": "The structured term defining the units of the quantity.", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "concentration_number": {"name": "concentration_number", "description": "What is the concentration of the analyte in the Aliquot?", "meta": {}, "data_type": "number", "constraints": [], "quote": null, "tags": [], "granularity": null}, "concentration_unit": {"name": "concentration_unit", "description": "Units associated with the concentration of the analyte in the Aliquot? UCUM coding preferred (with curie, UCUM)", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "has_access_policy": {"name": "has_access_policy", "description": "Which access policy applies to this element?", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "id": {"name": "id", "description": "ID associated with a class", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "sample_id": {"name": "sample_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/eMERGEseq/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "eMERGEseq_data"}, "created_at": 1757448969.775491, "relation_name": "\"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_aliquot\"", "raw_code": "{{ config(materialized='table', schema='eMERGEseq_data') }}\n\n    with source as (\n        select \n        GEN_UNKNOWN.availablity_status::text as \"availablity_status\",\n       GEN_UNKNOWN.quantity_number::text as \"quantity_number\",\n       GEN_UNKNOWN.quantity_units::text as \"quantity_units\",\n       GEN_UNKNOWN.concentration_number::text as \"concentration_number\",\n       GEN_UNKNOWN.concentration_unit::text as \"concentration_unit\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='eMERGEseq') }}::text as \"has_access_policy\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='eMERGEseq') }}::text as \"id\",\n       {{ generate_global_id(prefix='',descriptor=[''], study_id='eMERGEseq') }}::text as \"sample_id\"\n        from {{ ref('eMERGEseq_stg_subjectconsent') }} as subjectconsent\n        join {{ ref('eMERGEseq_stg_demographics') }} as demographics\non subjectconsent.subject_id = demographics.subject_id  join {{ ref('eMERGEseq_stg_phecode') }} as phecode\non   join {{ ref('eMERGEseq_stg_samplesubjectmapping') }} as samplesubjectmapping\non   join {{ ref('eMERGEseq_stg_sampleattributes') }} as sampleattributes\non  \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "eMERGEseq_stg_subjectconsent", "package": null, "version": null}, {"name": "eMERGEseq_stg_demographics", "package": null, "version": null}, {"name": "eMERGEseq_stg_phecode", "package": null, "version": null}, {"name": "eMERGEseq_stg_samplesubjectmapping", "package": null, "version": null}, {"name": "eMERGEseq_stg_sampleattributes", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.eMERGEseq.eMERGEseq_stg_subjectconsent", "model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_sampleattributes"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/eMERGEseq_ftd_aliquot.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        GEN_UNKNOWN.availablity_status::text as \"availablity_status\",\n       GEN_UNKNOWN.quantity_number::text as \"quantity_number\",\n       GEN_UNKNOWN.quantity_units::text as \"quantity_units\",\n       GEN_UNKNOWN.concentration_number::text as \"concentration_number\",\n       GEN_UNKNOWN.concentration_unit::text as \"concentration_unit\",\n       '' || '_' || md5('eMERGEseq' || '|' || cast(coalesce(, '') as text))::text as \"has_access_policy\",\n       '' || '_' || md5('eMERGEseq' || '|' || cast(coalesce(, '') as text))::text as \"id\",\n       '' || '_' || md5('eMERGEseq' || '|' || cast(coalesce(, '') as text))::text as \"sample_id\"\n        from \"dbt\".\"main_main\".\"eMERGEseq_stg_subjectconsent\" as subjectconsent\n        join \"dbt\".\"main_main\".\"eMERGEseq_stg_demographics\" as demographics\non subjectconsent.subject_id = demographics.subject_id  join \"dbt\".\"main_main\".\"eMERGEseq_stg_phecode\" as phecode\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_samplesubjectmapping\" as samplesubjectmapping\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_sampleattributes\" as sampleattributes\non  \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.ftd.eMERGEseq_ftd_sourcedata_query_parameter": {"database": "dbt", "schema": "main_eMERGEseq_data", "name": "eMERGEseq_ftd_sourcedata_query_parameter", "resource_type": "model", "package_name": "ftd", "path": "eMERGEseq/eMERGEseq_ftd_sourcedata_query_parameter.sql", "original_file_path": "models/eMERGEseq/eMERGEseq_ftd_sourcedata_query_parameter.sql", "unique_id": "model.ftd.eMERGEseq_ftd_sourcedata_query_parameter", "fqn": ["ftd", "eMERGEseq", "eMERGEseq_ftd_sourcedata_query_parameter"], "alias": "eMERGEseq_ftd_sourcedata_query_parameter", "checksum": {"name": "sha256", "checksum": "b8e53a533c29f9a39e5b1885a2d2e67abb790a564ee72e7208d1f07865457f4b"}, "config": {"enabled": true, "alias": null, "schema": "eMERGEseq_data", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for eMERGEseq_ftd_sourcedata_query_parameter.", "columns": {"sourcedata_id": {"name": "sourcedata_id", "description": "Autocreated FK slot", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "query_parameter": {"name": "query_parameter", "description": "One or more query parameters used to select the specific row. It will leverage the parameterized_query defined by a data_source. This should be formatted according to (https://cloud.google.com/bigquery/docs/parameterized-queries)[BigQuery instructions], specifically the bq CLI version with named parameters, ie, \"<parameter name>:<data type>:<value>\".", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ftd://models/eMERGEseq/docs/__models.yml", "build_path": null, "unrendered_config": {"materialized": "table", "schema": "eMERGEseq_data"}, "created_at": 1757448969.7715137, "relation_name": "\"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_sourcedata_query_parameter\"", "raw_code": "{{ config(materialized='table', schema='eMERGEseq_data') }}\n\n    with source as (\n        select \n        {{ generate_global_id(prefix='',descriptor=[''], study_id='eMERGEseq') }}::text as \"sourcedata_id\",\n       GEN_UNKNOWN.query_parameter::text as \"query_parameter\"\n        from {{ ref('eMERGEseq_stg_demographics') }} as demographics\n        join {{ ref('eMERGEseq_stg_phecode') }} as phecode\non demographics.subject_id = phecode.subject_id  join {{ ref('eMERGEseq_stg_sampleattributes') }} as sampleattributes\non samplesubjectmapping.sample_id = sampleattributes.sample_id  join {{ ref('eMERGEseq_stg_samplesubjectmapping') }} as samplesubjectmapping\non sampleattributes.sample_id = samplesubjectmapping.sample_id  join {{ ref('eMERGEseq_stg_subjectconsent') }} as subjectconsent\non   join {{ ref('eMERGEseq_stg_bmi') }} as bmi\non   join {{ ref('eMERGEseq_stg_pedigree') }} as pedigree\non  \n    )\n\n    select \n        * \n    from source", "language": "sql", "refs": [{"name": "eMERGEseq_stg_demographics", "package": null, "version": null}, {"name": "eMERGEseq_stg_phecode", "package": null, "version": null}, {"name": "eMERGEseq_stg_sampleattributes", "package": null, "version": null}, {"name": "eMERGEseq_stg_samplesubjectmapping", "package": null, "version": null}, {"name": "eMERGEseq_stg_subjectconsent", "package": null, "version": null}, {"name": "eMERGEseq_stg_bmi", "package": null, "version": null}, {"name": "eMERGEseq_stg_pedigree", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.base.generate_global_id"], "nodes": ["model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_sampleattributes", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_subjectconsent", "model.eMERGEseq.eMERGEseq_stg_bmi", "model.eMERGEseq.eMERGEseq_stg_pedigree"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/eMERGEseq_ftd_sourcedata_query_parameter.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        '' || '_' || md5('eMERGEseq' || '|' || cast(coalesce(, '') as text))::text as \"sourcedata_id\",\n       GEN_UNKNOWN.query_parameter::text as \"query_parameter\"\n        from \"dbt\".\"main_main\".\"eMERGEseq_stg_demographics\" as demographics\n        join \"dbt\".\"main_main\".\"eMERGEseq_stg_phecode\" as phecode\non demographics.subject_id = phecode.subject_id  join \"dbt\".\"main_main\".\"eMERGEseq_stg_sampleattributes\" as sampleattributes\non samplesubjectmapping.sample_id = sampleattributes.sample_id  join \"dbt\".\"main_main\".\"eMERGEseq_stg_samplesubjectmapping\" as samplesubjectmapping\non sampleattributes.sample_id = samplesubjectmapping.sample_id  join \"dbt\".\"main_main\".\"eMERGEseq_stg_subjectconsent\" as subjectconsent\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_bmi\" as bmi\non   join \"dbt\".\"main_main\".\"eMERGEseq_stg_pedigree\" as pedigree\non  \n    )\n\n    select \n        * \n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.gregor_synthetic.gregor_synthetic_stg_participant": {"database": "dbt", "schema": "main_main", "name": "gregor_synthetic_stg_participant", "resource_type": "model", "package_name": "gregor_synthetic", "path": "participant/gregor_synthetic_stg_participant.sql", "original_file_path": "models/participant/gregor_synthetic_stg_participant.sql", "unique_id": "model.gregor_synthetic.gregor_synthetic_stg_participant", "fqn": ["gregor_synthetic", "participant", "gregor_synthetic_stg_participant"], "alias": "gregor_synthetic_stg_participant", "checksum": {"name": "sha256", "checksum": "e633541673b4ce0d4e056917f14a8ceea3ae8a8872015602454d7c549be12299"}, "config": {"enabled": true, "alias": null, "schema": "main", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for gregor_synthetic_stg_participant.", "columns": {"participant_id": {"name": "participant_id", "description": "Unique participant identifier", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "affected_status": {"name": "affected_status", "description": "Affected status of the participant", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "age_at_enrollment": {"name": "age_at_enrollment", "description": "Age at enrollment in years", "meta": {}, "data_type": "integer or float", "constraints": [], "quote": null, "tags": [], "granularity": null}, "age_at_last_observation": {"name": "age_at_last_observation", "description": "Age at the last known observation", "meta": {}, "data_type": "integer or float", "constraints": [], "quote": null, "tags": [], "granularity": null}, "ancestry_detail": {"name": "ancestry_detail", "description": "Detailed ancestry description", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "consent_code": {"name": "consent_code", "description": "Consent group or code for data use", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "family_id": {"name": "family_id", "description": "Family identifier", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "gregor_center": {"name": "gregor_center", "description": "GREGOR project center identifier", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "internal_project_id": {"name": "internal_project_id", "description": "Internal project identifier", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "maternal_id": {"name": "maternal_id", "description": "Maternal ID (0 if unknown)", "meta": {}, "data_type": "integer", "constraints": [], "quote": null, "tags": [], "granularity": null}, "missing_variant_case": {"name": "missing_variant_case", "description": "Indicates if the participant is a missing variant case", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "paternal_id": {"name": "paternal_id", "description": "Paternal ID (0 if unknown)", "meta": {}, "data_type": "integer", "constraints": [], "quote": null, "tags": [], "granularity": null}, "phenotype_description": {"name": "phenotype_description", "description": "Description of phenotype", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "pmid_id": {"name": "pmid_id", "description": "PMID of a related publication or report", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "prior_testing": {"name": "prior_testing", "description": "Indicates whether prior genetic testing was conducted", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "proband_relationship": {"name": "proband_relationship", "description": "Relationship to self (usually 'Self')", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "proband_relationship_detail": {"name": "proband_relationship_detail", "description": "Further detail on relationship to self", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "reported_ethnicity": {"name": "reported_ethnicity", "description": "Ethnicity reported by participant or caregiver", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "reported_race": {"name": "reported_race", "description": "Race reported by participant or caregiver", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "sex": {"name": "sex", "description": "Reported biological sex", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "sex_detail": {"name": "sex_detail", "description": "Additional detail about sex or gender", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "solve_status": {"name": "solve_status", "description": "Status of diagnostic resolution", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "twin_id": {"name": "twin_id", "description": "Identifier for twin if applicable", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "gregor_synthetic://models/participant/__models.yml", "build_path": null, "unrendered_config": {"schema": "main", "materialized": "table"}, "created_at": 1757448969.831434, "relation_name": "\"dbt\".\"main_main\".\"gregor_synthetic_stg_participant\"", "raw_code": "{{ config(materialized='table') }}\n\n    with source as (\n        select \n        \"participant_id\"::text as \"participant_id\",\n       \"affected_status\"::text as \"affected_status\",\n       \"age_at_enrollment\"::text as \"age_at_enrollment\",\n       \"age_at_last_observation\"::text as \"age_at_last_observation\",\n       \"ancestry_detail\"::text as \"ancestry_detail\",\n       \"consent_code\"::text as \"consent_code\",\n       \"family_id\"::text as \"family_id\",\n       \"gregor_center\"::text as \"gregor_center\",\n       \"internal_project_id\"::text as \"internal_project_id\",\n       \"maternal_id\"::integer as \"maternal_id\",\n       \"missing_variant_case\"::text as \"missing_variant_case\",\n       \"paternal_id\"::integer as \"paternal_id\",\n       \"phenotype_description\"::text as \"phenotype_description\",\n       \"pmid_id\"::text as \"pmid_id\",\n       \"prior_testing\"::text as \"prior_testing\",\n       \"proband_relationship\"::text as \"proband_relationship\",\n       \"proband_relationship_detail\"::text as \"proband_relationship_detail\",\n       \"reported_ethnicity\"::text as \"reported_ethnicity\",\n       \"reported_race\"::text as \"reported_race\",\n       \"sex\"::text as \"sex\",\n       \"sex_detail\"::text as \"sex_detail\",\n       \"solve_status\"::text as \"solve_status\",\n       \"twin_id\"::text as \"twin_id\"\n        from {{ source('gregor_synthetic','GREGoR_synthetic_participant_revised07Aug2024') }}\n    )\n\n    select \n        *,\n        concat('participant_id','-','family_id') as ftd_key\n    from source", "language": "sql", "refs": [], "sources": [["gregor_synthetic", "GREGoR_synthetic_participant_revised07Aug2024"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.gregor_synthetic.gregor_synthetic.GREGoR_synthetic_participant_revised07Aug2024"]}, "compiled_path": "target/compiled/gregor_synthetic/models/participant/gregor_synthetic_stg_participant.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        \"participant_id\"::text as \"participant_id\",\n       \"affected_status\"::text as \"affected_status\",\n       \"age_at_enrollment\"::text as \"age_at_enrollment\",\n       \"age_at_last_observation\"::text as \"age_at_last_observation\",\n       \"ancestry_detail\"::text as \"ancestry_detail\",\n       \"consent_code\"::text as \"consent_code\",\n       \"family_id\"::text as \"family_id\",\n       \"gregor_center\"::text as \"gregor_center\",\n       \"internal_project_id\"::text as \"internal_project_id\",\n       \"maternal_id\"::integer as \"maternal_id\",\n       \"missing_variant_case\"::text as \"missing_variant_case\",\n       \"paternal_id\"::integer as \"paternal_id\",\n       \"phenotype_description\"::text as \"phenotype_description\",\n       \"pmid_id\"::text as \"pmid_id\",\n       \"prior_testing\"::text as \"prior_testing\",\n       \"proband_relationship\"::text as \"proband_relationship\",\n       \"proband_relationship_detail\"::text as \"proband_relationship_detail\",\n       \"reported_ethnicity\"::text as \"reported_ethnicity\",\n       \"reported_race\"::text as \"reported_race\",\n       \"sex\"::text as \"sex\",\n       \"sex_detail\"::text as \"sex_detail\",\n       \"solve_status\"::text as \"solve_status\",\n       \"twin_id\"::text as \"twin_id\"\n        from \"dbt\".\"main\".\"GREGoR_synthetic_participant_revised07Aug2024\"\n    )\n\n    select \n        *,\n        concat('participant_id','-','family_id') as ftd_key\n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.gregor_synthetic.gregor_synthetic_stg_phenotype": {"database": "dbt", "schema": "main_main", "name": "gregor_synthetic_stg_phenotype", "resource_type": "model", "package_name": "gregor_synthetic", "path": "phenotype/gregor_synthetic_stg_phenotype.sql", "original_file_path": "models/phenotype/gregor_synthetic_stg_phenotype.sql", "unique_id": "model.gregor_synthetic.gregor_synthetic_stg_phenotype", "fqn": ["gregor_synthetic", "phenotype", "gregor_synthetic_stg_phenotype"], "alias": "gregor_synthetic_stg_phenotype", "checksum": {"name": "sha256", "checksum": "0845e411dccd35235bbdc5ab71b8c0e287f38743e25025cf455fb4c75d0bbaf1"}, "config": {"enabled": true, "alias": null, "schema": "main", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for gregor_synthetic_stg_phenotype.", "columns": {"phenotype_id": {"name": "phenotype_id", "description": "Unique identifier for the phenotype record", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "additional_details": {"name": "additional_details", "description": "Free text field for extra phenotype information", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "additional_modifiers": {"name": "additional_modifiers", "description": "Modifiers that qualify the phenotype term", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "onset_age_range": {"name": "onset_age_range", "description": "Age range when the phenotype was observed", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "ontology": {"name": "ontology", "description": "Ontology used for the phenotype term", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "participant_id": {"name": "participant_id", "description": "Participant ID associated with the phenotype record", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "presence": {"name": "presence", "description": "Indicates if the phenotype is present or absent", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "term_id": {"name": "term_id", "description": "Ontology identifier for the phenotype term", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "gregor_synthetic://models/phenotype/__models.yml", "build_path": null, "unrendered_config": {"schema": "main", "materialized": "table"}, "created_at": 1757448969.8322146, "relation_name": "\"dbt\".\"main_main\".\"gregor_synthetic_stg_phenotype\"", "raw_code": "{{ config(materialized='table') }}\n\n    with source as (\n        select \n        \"phenotype_id\"::text as \"phenotype_id\",\n       \"additional_details\"::text as \"additional_details\",\n       \"additional_modifiers\"::text as \"additional_modifiers\",\n       \"onset_age_range\"::text as \"onset_age_range\",\n       \"ontology\"::text as \"ontology\",\n       \"participant_id\"::text as \"participant_id\",\n       \"presence\"::text as \"presence\",\n       \"term_id\"::text as \"term_id\"\n        from {{ source('gregor_synthetic','GREGoR_synthetic_phenotype') }}\n    )\n\n    select \n        *,\n        concat('phenotype_id','-','participant_id') as ftd_key\n    from source", "language": "sql", "refs": [], "sources": [["gregor_synthetic", "GREGoR_synthetic_phenotype"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.gregor_synthetic.gregor_synthetic.GREGoR_synthetic_phenotype"]}, "compiled_path": "target/compiled/gregor_synthetic/models/phenotype/gregor_synthetic_stg_phenotype.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        \"phenotype_id\"::text as \"phenotype_id\",\n       \"additional_details\"::text as \"additional_details\",\n       \"additional_modifiers\"::text as \"additional_modifiers\",\n       \"onset_age_range\"::text as \"onset_age_range\",\n       \"ontology\"::text as \"ontology\",\n       \"participant_id\"::text as \"participant_id\",\n       \"presence\"::text as \"presence\",\n       \"term_id\"::text as \"term_id\"\n        from \"dbt\".\"main\".\"GREGoR_synthetic_phenotype\"\n    )\n\n    select \n        *,\n        concat('phenotype_id','-','participant_id') as ftd_key\n    from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.eMERGEseq.eMERGEseq_stg_demographics": {"database": "dbt", "schema": "main_main", "name": "eMERGEseq_stg_demographics", "resource_type": "model", "package_name": "eMERGEseq", "path": "demographics/eMERGEseq_stg_demographics.sql", "original_file_path": "models/demographics/eMERGEseq_stg_demographics.sql", "unique_id": "model.eMERGEseq.eMERGEseq_stg_demographics", "fqn": ["eMERGEseq", "demographics", "eMERGEseq_stg_demographics"], "alias": "eMERGEseq_stg_demographics", "checksum": {"name": "sha256", "checksum": "2696b54c0b6e9726a65d62e6420dd7a8e5ac23cd14b79830997dd1649d6b9bf0"}, "config": {"enabled": true, "alias": null, "schema": "main", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for eMERGEseq_stg_demographics.", "columns": {"subject_id": {"name": "subject_id", "description": "None", "meta": {}, "data_type": "String", "constraints": [], "quote": null, "tags": [], "granularity": null}, "sex": {"name": "sex", "description": "None", "meta": {}, "data_type": "String, Encoded value", "constraints": [], "quote": null, "tags": [], "granularity": null}, "decade_birth": {"name": "decade_birth", "description": "None", "meta": {}, "data_type": "Integer, encoded value", "constraints": [], "quote": null, "tags": [], "granularity": null}, "year_birth": {"name": "year_birth", "description": "None", "meta": {}, "data_type": "Integer", "constraints": [], "quote": null, "tags": [], "granularity": null}, "ethnicity": {"name": "ethnicity", "description": "None", "meta": {}, "data_type": "String, Encoded value", "constraints": [], "quote": null, "tags": [], "granularity": null}, "race": {"name": "race", "description": "None", "meta": {}, "data_type": "String, Encoded value", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "eMERGEseq://models/demographics/__models.yml", "build_path": null, "unrendered_config": {"schema": "main", "materialized": "table"}, "created_at": 1757448969.8449929, "relation_name": "\"dbt\".\"main_main\".\"eMERGEseq_stg_demographics\"", "raw_code": "{{ config(materialized='table') }}\n\n    with source as (\n        select \n        \"subject_id\"::text as \"subject_id\",\n       \"sex\"::text as \"sex\",\n       \"decade_birth\"::text as \"decade_birth\",\n       \"year_birth\"::text as \"year_birth\",\n       \"ethnicity\"::text as \"ethnicity\",\n       \"race\"::text as \"race\"\n        from {{ source('eMERGEseq','eMERGEseq_Demographics_DS_20200925') }}\n    )\n\n    select \n        ROW_NUMBER() OVER () AS ftd_index\n        ,source.*\n        from source", "language": "sql", "refs": [], "sources": [["eMERGEseq", "eMERGEseq_Demographics_DS_20200925"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.eMERGEseq.eMERGEseq.eMERGEseq_Demographics_DS_20200925"]}, "compiled_path": "target/compiled/eMERGEseq/models/demographics/eMERGEseq_stg_demographics.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        \"subject_id\"::text as \"subject_id\",\n       \"sex\"::text as \"sex\",\n       \"decade_birth\"::text as \"decade_birth\",\n       \"year_birth\"::text as \"year_birth\",\n       \"ethnicity\"::text as \"ethnicity\",\n       \"race\"::text as \"race\"\n        from \"dbt\".\"main\".\"eMERGEseq_Demographics_DS_20200925\"\n    )\n\n    select \n        ROW_NUMBER() OVER () AS ftd_index\n        ,source.*\n        from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.eMERGEseq.eMERGEseq_stg_sampleattributes": {"database": "dbt", "schema": "main_main", "name": "eMERGEseq_stg_sampleattributes", "resource_type": "model", "package_name": "eMERGEseq", "path": "sampleattributes/eMERGEseq_stg_sampleattributes.sql", "original_file_path": "models/sampleattributes/eMERGEseq_stg_sampleattributes.sql", "unique_id": "model.eMERGEseq.eMERGEseq_stg_sampleattributes", "fqn": ["eMERGEseq", "sampleattributes", "eMERGEseq_stg_sampleattributes"], "alias": "eMERGEseq_stg_sampleattributes", "checksum": {"name": "sha256", "checksum": "b4103309592930313abe23feee4d7d5e238c0b5c96953e22151a718c5c3ad47d"}, "config": {"enabled": true, "alias": null, "schema": "main", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for eMERGEseq_stg_sampleattributes.", "columns": {"sample_id": {"name": "sample_id", "description": "None", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "analyte_type": {"name": "analyte_type", "description": "None", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "sequencing_center": {"name": "sequencing_center", "description": "None", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "eMERGEseq://models/sampleattributes/__models.yml", "build_path": null, "unrendered_config": {"schema": "main", "materialized": "table"}, "created_at": 1757448969.845547, "relation_name": "\"dbt\".\"main_main\".\"eMERGEseq_stg_sampleattributes\"", "raw_code": "{{ config(materialized='table') }}\n\n    with source as (\n        select \n        \"sample_id\"::text as \"sample_id\",\n       \"analyte_type\"::text as \"analyte_type\",\n       \"sequencing_center\"::text as \"sequencing_center\"\n        from {{ source('eMERGEseq','eMERGEseq_SampleAttributes_DS_20200925') }}\n    )\n\n    select \n        ROW_NUMBER() OVER () AS ftd_index\n        ,source.*\n        from source", "language": "sql", "refs": [], "sources": [["eMERGEseq", "eMERGEseq_SampleAttributes_DS_20200925"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.eMERGEseq.eMERGEseq.eMERGEseq_SampleAttributes_DS_20200925"]}, "compiled_path": "target/compiled/eMERGEseq/models/sampleattributes/eMERGEseq_stg_sampleattributes.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        \"sample_id\"::text as \"sample_id\",\n       \"analyte_type\"::text as \"analyte_type\",\n       \"sequencing_center\"::text as \"sequencing_center\"\n        from \"dbt\".\"main\".\"eMERGEseq_SampleAttributes_DS_20200925\"\n    )\n\n    select \n        ROW_NUMBER() OVER () AS ftd_index\n        ,source.*\n        from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.eMERGEseq.eMERGEseq_stg_subjectconsent": {"database": "dbt", "schema": "main_main", "name": "eMERGEseq_stg_subjectconsent", "resource_type": "model", "package_name": "eMERGEseq", "path": "subjectconsent/eMERGEseq_stg_subjectconsent.sql", "original_file_path": "models/subjectconsent/eMERGEseq_stg_subjectconsent.sql", "unique_id": "model.eMERGEseq.eMERGEseq_stg_subjectconsent", "fqn": ["eMERGEseq", "subjectconsent", "eMERGEseq_stg_subjectconsent"], "alias": "eMERGEseq_stg_subjectconsent", "checksum": {"name": "sha256", "checksum": "504cc2361de78484d501b6941bd780170a583edb61c26e032cd4739ad5460fd5"}, "config": {"enabled": true, "alias": null, "schema": "main", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for eMERGEseq_stg_subjectconsent.", "columns": {"subject_id": {"name": "subject_id", "description": "None", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "consent": {"name": "consent", "description": "None", "meta": {}, "data_type": "encoded value", "constraints": [], "quote": null, "tags": [], "granularity": null}, "subject_source": {"name": "subject_source", "description": "None", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "eMERGEseq://models/subjectconsent/__models.yml", "build_path": null, "unrendered_config": {"schema": "main", "materialized": "table"}, "created_at": 1757448969.8463275, "relation_name": "\"dbt\".\"main_main\".\"eMERGEseq_stg_subjectconsent\"", "raw_code": "{{ config(materialized='table') }}\n\n    with source as (\n        select \n        \"subject_id\"::text as \"subject_id\",\n       \"consent\"::text as \"consent\",\n       \"subject_source\"::text as \"subject_source\"\n        from {{ source('eMERGEseq','eMERGEseq_SubjectConsent_DS_20201020') }}\n    )\n\n    select \n        ROW_NUMBER() OVER () AS ftd_index\n        ,source.*\n        from source", "language": "sql", "refs": [], "sources": [["eMERGEseq", "eMERGEseq_SubjectConsent_DS_20201020"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.eMERGEseq.eMERGEseq.eMERGEseq_SubjectConsent_DS_20201020"]}, "compiled_path": "target/compiled/eMERGEseq/models/subjectconsent/eMERGEseq_stg_subjectconsent.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        \"subject_id\"::text as \"subject_id\",\n       \"consent\"::text as \"consent\",\n       \"subject_source\"::text as \"subject_source\"\n        from \"dbt\".\"main\".\"eMERGEseq_SubjectConsent_DS_20201020\"\n    )\n\n    select \n        ROW_NUMBER() OVER () AS ftd_index\n        ,source.*\n        from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.eMERGEseq.eMERGEseq_stg_phecode": {"database": "dbt", "schema": "main_main", "name": "eMERGEseq_stg_phecode", "resource_type": "model", "package_name": "eMERGEseq", "path": "phecode/eMERGEseq_stg_phecode.sql", "original_file_path": "models/phecode/eMERGEseq_stg_phecode.sql", "unique_id": "model.eMERGEseq.eMERGEseq_stg_phecode", "fqn": ["eMERGEseq", "phecode", "eMERGEseq_stg_phecode"], "alias": "eMERGEseq_stg_phecode", "checksum": {"name": "sha256", "checksum": "12d5cdbeadc5b3cd620753be654ae451071abb313841d4d5dea06d04498c1978"}, "config": {"enabled": true, "alias": null, "schema": "main", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for eMERGEseq_stg_phecode.", "columns": {"subject_id": {"name": "subject_id", "description": "None", "meta": {}, "data_type": "String", "constraints": [], "quote": null, "tags": [], "granularity": null}, "phe_401.1": {"name": "phe_401.1", "description": "None", "meta": {}, "data_type": "Integer, encoded value", "constraints": [], "quote": null, "tags": [], "granularity": null}, "phe_250.2": {"name": "phe_250.2", "description": "None", "meta": {}, "data_type": "Integer, encoded value", "constraints": [], "quote": null, "tags": [], "granularity": null}, "phe_272.1": {"name": "phe_272.1", "description": "None", "meta": {}, "data_type": "Integer, encoded value", "constraints": [], "quote": null, "tags": [], "granularity": null}, "phe_411.4": {"name": "phe_411.4", "description": "None", "meta": {}, "data_type": "Integer, encoded value", "constraints": [], "quote": null, "tags": [], "granularity": null}, "phe_495": {"name": "phe_495", "description": "None", "meta": {}, "data_type": "Integer, encoded value", "constraints": [], "quote": null, "tags": [], "granularity": null}, "phe_427.21": {"name": "phe_427.21", "description": "None", "meta": {}, "data_type": "Integer, encoded value", "constraints": [], "quote": null, "tags": [], "granularity": null}, "phe_530.11": {"name": "phe_530.11", "description": "None", "meta": {}, "data_type": "Integer, encoded value", "constraints": [], "quote": null, "tags": [], "granularity": null}, "phe_296.22": {"name": "phe_296.22", "description": "None", "meta": {}, "data_type": "Integer, encoded value", "constraints": [], "quote": null, "tags": [], "granularity": null}, "phe_313.1": {"name": "phe_313.1", "description": "None", "meta": {}, "data_type": "Integer, encoded value", "constraints": [], "quote": null, "tags": [], "granularity": null}, "phe_244.4": {"name": "phe_244.4", "description": "None", "meta": {}, "data_type": "Integer, encoded value", "constraints": [], "quote": null, "tags": [], "granularity": null}, "phe_476": {"name": "phe_476", "description": "None", "meta": {}, "data_type": "Integer, encoded value", "constraints": [], "quote": null, "tags": [], "granularity": null}, "phe_272.11": {"name": "phe_272.11", "description": "None", "meta": {}, "data_type": "Integer, encoded value", "constraints": [], "quote": null, "tags": [], "granularity": null}, "phe_278.1": {"name": "phe_278.1", "description": "None", "meta": {}, "data_type": "Integer, encoded value", "constraints": [], "quote": null, "tags": [], "granularity": null}, "phe_174.11": {"name": "phe_174.11", "description": "None", "meta": {}, "data_type": "Integer, encoded value", "constraints": [], "quote": null, "tags": [], "granularity": null}, "phe_296.2": {"name": "phe_296.2", "description": "None", "meta": {}, "data_type": "Integer, encoded value", "constraints": [], "quote": null, "tags": [], "granularity": null}, "phe_306": {"name": "phe_306", "description": "None", "meta": {}, "data_type": "Integer, encoded value", "constraints": [], "quote": null, "tags": [], "granularity": null}, "phe_327.32": {"name": "phe_327.32", "description": "None", "meta": {}, "data_type": "Integer, encoded value", "constraints": [], "quote": null, "tags": [], "granularity": null}, "phe_313.3": {"name": "phe_313.3", "description": "None", "meta": {}, "data_type": "Integer, encoded value", "constraints": [], "quote": null, "tags": [], "granularity": null}, "phe_278.11": {"name": "phe_278.11", "description": "None", "meta": {}, "data_type": "Integer, encoded value", "constraints": [], "quote": null, "tags": [], "granularity": null}, "phe_272.13": {"name": "phe_272.13", "description": "None", "meta": {}, "data_type": "Integer, encoded value", "constraints": [], "quote": null, "tags": [], "granularity": null}, "phe_587": {"name": "phe_587", "description": "None", "meta": {}, "data_type": "Integer, encoded value", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "eMERGEseq://models/phecode/__models.yml", "build_path": null, "unrendered_config": {"schema": "main", "materialized": "table"}, "created_at": 1757448969.8520088, "relation_name": "\"dbt\".\"main_main\".\"eMERGEseq_stg_phecode\"", "raw_code": "{{ config(materialized='table') }}\n\n    with source as (\n        select \n        \"subject_id\"::text as \"subject_id\",\n       \"PHE_401.1\"::text as \"phe_401.1\",\n       \"PHE_250.2\"::text as \"phe_250.2\",\n       \"PHE_272.1\"::text as \"phe_272.1\",\n       \"PHE_411.4\"::text as \"phe_411.4\",\n       \"PHE_495\"::text as \"phe_495\",\n       \"PHE_427.21\"::text as \"phe_427.21\",\n       \"PHE_530.11\"::text as \"phe_530.11\",\n       \"PHE_296.22\"::text as \"phe_296.22\",\n       \"PHE_313.1\"::text as \"phe_313.1\",\n       \"PHE_244.4\"::text as \"phe_244.4\",\n       \"PHE_476\"::text as \"phe_476\",\n       \"PHE_272.11\"::text as \"phe_272.11\",\n       \"PHE_278.1\"::text as \"phe_278.1\",\n       \"PHE_174.11\"::text as \"phe_174.11\",\n       \"PHE_296.2\"::text as \"phe_296.2\",\n       \"PHE_306\"::text as \"phe_306\",\n       \"PHE_327.32\"::text as \"phe_327.32\",\n       \"PHE_313.3\"::text as \"phe_313.3\",\n       \"PHE_278.11\"::text as \"phe_278.11\",\n       \"PHE_272.13\"::text as \"phe_272.13\",\n       \"PHE_587\"::text as \"phe_587\"\n        from {{ source('eMERGEseq','eMERGEseq_Phecode_DS_20200925') }}\n    )\n\n    select \n        ROW_NUMBER() OVER () AS ftd_index\n        ,source.*\n        from source", "language": "sql", "refs": [], "sources": [["eMERGEseq", "eMERGEseq_Phecode_DS_20200925"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.eMERGEseq.eMERGEseq.eMERGEseq_Phecode_DS_20200925"]}, "compiled_path": "target/compiled/eMERGEseq/models/phecode/eMERGEseq_stg_phecode.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        \"subject_id\"::text as \"subject_id\",\n       \"PHE_401.1\"::text as \"phe_401.1\",\n       \"PHE_250.2\"::text as \"phe_250.2\",\n       \"PHE_272.1\"::text as \"phe_272.1\",\n       \"PHE_411.4\"::text as \"phe_411.4\",\n       \"PHE_495\"::text as \"phe_495\",\n       \"PHE_427.21\"::text as \"phe_427.21\",\n       \"PHE_530.11\"::text as \"phe_530.11\",\n       \"PHE_296.22\"::text as \"phe_296.22\",\n       \"PHE_313.1\"::text as \"phe_313.1\",\n       \"PHE_244.4\"::text as \"phe_244.4\",\n       \"PHE_476\"::text as \"phe_476\",\n       \"PHE_272.11\"::text as \"phe_272.11\",\n       \"PHE_278.1\"::text as \"phe_278.1\",\n       \"PHE_174.11\"::text as \"phe_174.11\",\n       \"PHE_296.2\"::text as \"phe_296.2\",\n       \"PHE_306\"::text as \"phe_306\",\n       \"PHE_327.32\"::text as \"phe_327.32\",\n       \"PHE_313.3\"::text as \"phe_313.3\",\n       \"PHE_278.11\"::text as \"phe_278.11\",\n       \"PHE_272.13\"::text as \"phe_272.13\",\n       \"PHE_587\"::text as \"phe_587\"\n        from \"dbt\".\"main\".\"eMERGEseq_Phecode_DS_20200925\"\n    )\n\n    select \n        ROW_NUMBER() OVER () AS ftd_index\n        ,source.*\n        from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.eMERGEseq.eMERGEseq_stg_bmi": {"database": "dbt", "schema": "main_main", "name": "eMERGEseq_stg_bmi", "resource_type": "model", "package_name": "eMERGEseq", "path": "bmi/eMERGEseq_stg_bmi.sql", "original_file_path": "models/bmi/eMERGEseq_stg_bmi.sql", "unique_id": "model.eMERGEseq.eMERGEseq_stg_bmi", "fqn": ["eMERGEseq", "bmi", "eMERGEseq_stg_bmi"], "alias": "eMERGEseq_stg_bmi", "checksum": {"name": "sha256", "checksum": "4b2a9751e9dbae4a43627fe4350330472e4496a507984bc254195bdcb5b9de92"}, "config": {"enabled": true, "alias": null, "schema": "main", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for eMERGEseq_stg_bmi.", "columns": {"subject_id": {"name": "subject_id", "description": "None", "meta": {}, "data_type": "Integer", "constraints": [], "quote": null, "tags": [], "granularity": null}, "age_at_observation": {"name": "age_at_observation", "description": "None", "meta": {}, "data_type": "Decimal", "constraints": [], "quote": null, "tags": [], "granularity": null}, "weight": {"name": "weight", "description": "None", "meta": {}, "data_type": "Decimal", "constraints": [], "quote": null, "tags": [], "granularity": null}, "height": {"name": "height", "description": "None", "meta": {}, "data_type": "Decimal", "constraints": [], "quote": null, "tags": [], "granularity": null}, "body_mass_index": {"name": "body_mass_index", "description": "None", "meta": {}, "data_type": "Decimal", "constraints": [], "quote": null, "tags": [], "granularity": null}, "visit_number": {"name": "visit_number", "description": "None", "meta": {}, "data_type": "Integer", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "eMERGEseq://models/bmi/__models.yml", "build_path": null, "unrendered_config": {"schema": "main", "materialized": "table"}, "created_at": 1757448969.8526738, "relation_name": "\"dbt\".\"main_main\".\"eMERGEseq_stg_bmi\"", "raw_code": "{{ config(materialized='table') }}\n\n    with source as (\n        select \n        \"subject_id\"::text as \"subject_id\",\n       \"age_at_observation\"::text as \"age_at_observation\",\n       \"weight\"::text as \"weight\",\n       \"height\"::text as \"height\",\n       \"body_mass_index\"::text as \"body_mass_index\",\n       \"visit_number\"::text as \"visit_number\"\n        from {{ source('eMERGEseq','eMERGEseq_BMI_DS_20200925') }}\n    )\n\n    select \n        ROW_NUMBER() OVER () AS ftd_index\n        ,source.*\n        from source", "language": "sql", "refs": [], "sources": [["eMERGEseq", "eMERGEseq_BMI_DS_20200925"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.eMERGEseq.eMERGEseq.eMERGEseq_BMI_DS_20200925"]}, "compiled_path": "target/compiled/eMERGEseq/models/bmi/eMERGEseq_stg_bmi.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        \"subject_id\"::text as \"subject_id\",\n       \"age_at_observation\"::text as \"age_at_observation\",\n       \"weight\"::text as \"weight\",\n       \"height\"::text as \"height\",\n       \"body_mass_index\"::text as \"body_mass_index\",\n       \"visit_number\"::text as \"visit_number\"\n        from \"dbt\".\"main\".\"eMERGEseq_BMI_DS_20200925\"\n    )\n\n    select \n        ROW_NUMBER() OVER () AS ftd_index\n        ,source.*\n        from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.eMERGEseq.eMERGEseq_stg_pedigree": {"database": "dbt", "schema": "main_main", "name": "eMERGEseq_stg_pedigree", "resource_type": "model", "package_name": "eMERGEseq", "path": "pedigree/eMERGEseq_stg_pedigree.sql", "original_file_path": "models/pedigree/eMERGEseq_stg_pedigree.sql", "unique_id": "model.eMERGEseq.eMERGEseq_stg_pedigree", "fqn": ["eMERGEseq", "pedigree", "eMERGEseq_stg_pedigree"], "alias": "eMERGEseq_stg_pedigree", "checksum": {"name": "sha256", "checksum": "0c6c43c62e846403016c4c84ef80a21a22ab825c7a9f0e38988d6161dc31f77e"}, "config": {"enabled": true, "alias": null, "schema": "main", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for eMERGEseq_stg_pedigree.", "columns": {"family_id": {"name": "family_id", "description": "None", "meta": {}, "data_type": "integer", "constraints": [], "quote": null, "tags": [], "granularity": null}, "subject_id": {"name": "subject_id", "description": "None", "meta": {}, "data_type": "integer", "constraints": [], "quote": null, "tags": [], "granularity": null}, "mother": {"name": "mother", "description": "None", "meta": {}, "data_type": "integer", "constraints": [], "quote": null, "tags": [], "granularity": null}, "father": {"name": "father", "description": "None", "meta": {}, "data_type": "integer", "constraints": [], "quote": null, "tags": [], "granularity": null}, "sex": {"name": "sex", "description": "None", "meta": {}, "data_type": "encoded value", "constraints": [], "quote": null, "tags": [], "granularity": null}, "mz_twin_id": {"name": "mz_twin_id", "description": "None", "meta": {}, "data_type": "integer", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "eMERGEseq://models/pedigree/__models.yml", "build_path": null, "unrendered_config": {"schema": "main", "materialized": "table"}, "created_at": 1757448969.8532703, "relation_name": "\"dbt\".\"main_main\".\"eMERGEseq_stg_pedigree\"", "raw_code": "{{ config(materialized='table') }}\n\n    with source as (\n        select \n        CASE WHEN mother = 'NA' THEN NULL\n            ELSE mother\n        END as \"mother\",\n        CASE WHEN father = 'NA' THEN NULL\n            ELSE father\n        END as \"father\",\n        CASE WHEN mz_twin_id = 'NA' THEN NULL\n            ELSE mz_twin_id\n        END as \"mz_twin_id\",\n        \"family_id\"::text as \"family_id\",\n       \"subject_id\"::text as \"subject_id\",\n       \"sex\"::text as \"sex\",\n        from {{ source('eMERGEseq','eMERGEseq_Pedigree_DS_20200925') }}\n    )\n\n    select \n        ROW_NUMBER() OVER () AS ftd_index\n        ,source.*\n        from source", "language": "sql", "refs": [], "sources": [["eMERGEseq", "eMERGEseq_Pedigree_DS_20200925"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.eMERGEseq.eMERGEseq.eMERGEseq_Pedigree_DS_20200925"]}, "compiled_path": "target/compiled/eMERGEseq/models/pedigree/eMERGEseq_stg_pedigree.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        CASE WHEN mother = 'NA' THEN NULL\n            ELSE mother\n        END as \"mother\",\n        CASE WHEN father = 'NA' THEN NULL\n            ELSE father\n        END as \"father\",\n        CASE WHEN mz_twin_id = 'NA' THEN NULL\n            ELSE mz_twin_id\n        END as \"mz_twin_id\",\n        \"family_id\"::text as \"family_id\",\n       \"subject_id\"::text as \"subject_id\",\n       \"sex\"::text as \"sex\",\n        from \"dbt\".\"main\".\"eMERGEseq_Pedigree_DS_20200925\"\n    )\n\n    select \n        ROW_NUMBER() OVER () AS ftd_index\n        ,source.*\n        from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping": {"database": "dbt", "schema": "main_main", "name": "eMERGEseq_stg_samplesubjectmapping", "resource_type": "model", "package_name": "eMERGEseq", "path": "samplesubjectmapping/eMERGEseq_stg_samplesubjectmapping.sql", "original_file_path": "models/samplesubjectmapping/eMERGEseq_stg_samplesubjectmapping.sql", "unique_id": "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "fqn": ["eMERGEseq", "samplesubjectmapping", "eMERGEseq_stg_samplesubjectmapping"], "alias": "eMERGEseq_stg_samplesubjectmapping", "checksum": {"name": "sha256", "checksum": "cb0e8ff2bcefd2e62b375f5b5fd84e9171508a71194214025d9c670ff5972d46"}, "config": {"enabled": true, "alias": null, "schema": "main", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected"}, "tags": [], "description": "Model for eMERGEseq_stg_samplesubjectmapping.", "columns": {"subject_id": {"name": "subject_id", "description": "None", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "sample_id": {"name": "sample_id", "description": "None", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}, "sample_source": {"name": "sample_source", "description": "None", "meta": {}, "data_type": "string", "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "eMERGEseq://models/samplesubjectmapping/__models.yml", "build_path": null, "unrendered_config": {"schema": "main", "materialized": "table"}, "created_at": 1757448969.853829, "relation_name": "\"dbt\".\"main_main\".\"eMERGEseq_stg_samplesubjectmapping\"", "raw_code": "{{ config(materialized='table') }}\n\n    with source as (\n        select \n        \"subject_id\"::text as \"subject_id\",\n       \"sample_id\"::text as \"sample_id\",\n       \"sample_source\"::text as \"sample_source\"\n        from {{ source('eMERGEseq','eMERGEseq_SampleSubjectMapping_DS_20200925') }}\n    )\n\n    select \n        ROW_NUMBER() OVER () AS ftd_index\n        ,source.*\n        from source", "language": "sql", "refs": [], "sources": [["eMERGEseq", "eMERGEseq_SampleSubjectMapping_DS_20200925"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.eMERGEseq.eMERGEseq.eMERGEseq_SampleSubjectMapping_DS_20200925"]}, "compiled_path": "target/compiled/eMERGEseq/models/samplesubjectmapping/eMERGEseq_stg_samplesubjectmapping.sql", "compiled": true, "compiled_code": "\n\n    with source as (\n        select \n        \"subject_id\"::text as \"subject_id\",\n       \"sample_id\"::text as \"sample_id\",\n       \"sample_source\"::text as \"sample_source\"\n        from \"dbt\".\"main\".\"eMERGEseq_SampleSubjectMapping_DS_20200925\"\n    )\n\n    select \n        ROW_NUMBER() OVER () AS ftd_index\n        ,source.*\n        from source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_subjectassertion_id.379ed8a4d1": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GREGoR_R03_HMB_20250612_ftd_subjectassertion_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_GREGoR_R03_HMB_20250612_ftd_subjectassertion_id.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/__models.yml", "unique_id": "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_subjectassertion_id.379ed8a4d1", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "docs", "not_null_GREGoR_R03_HMB_20250612_ftd_subjectassertion_id"], "alias": "not_null_GREGoR_R03_HMB_20250612_ftd_subjectassertion_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.3472853, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_ftd_subjectassertion", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GREGoR_R03_HMB_20250612_ftd_subjectassertion"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/docs/__models.yml/not_null_GREGoR_R03_HMB_20250612_ftd_subjectassertion_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_subjectassertion\"\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "id", "file_key_name": "models.GREGoR_R03_HMB_20250612_ftd_subjectassertion", "attached_node": "model.ftd.GREGoR_R03_HMB_20250612_ftd_subjectassertion", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('GREGoR_R03_HMB_20250612_ftd_subjectassertion')) }}"}, "namespace": null}}, "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_subject_subject_type.e917fa8882": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GREGoR_R03_HMB_20250612_ftd_subject_subject_type", "resource_type": "test", "package_name": "ftd", "path": "not_null_GREGoR_R03_HMB_20250612_ftd_subject_subject_type.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/__models.yml", "unique_id": "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_subject_subject_type.e917fa8882", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "docs", "not_null_GREGoR_R03_HMB_20250612_ftd_subject_subject_type"], "alias": "not_null_GREGoR_R03_HMB_20250612_ftd_subject_subject_type", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.3486674, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_ftd_subject", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GREGoR_R03_HMB_20250612_ftd_subject"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/docs/__models.yml/not_null_GREGoR_R03_HMB_20250612_ftd_subject_subject_type.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect subject_type\nfrom \"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_subject\"\nwhere subject_type is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "subject_type", "file_key_name": "models.GREGoR_R03_HMB_20250612_ftd_subject", "attached_node": "model.ftd.GREGoR_R03_HMB_20250612_ftd_subject", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "subject_type", "model": "{{ get_where_subquery(ref('GREGoR_R03_HMB_20250612_ftd_subject')) }}"}, "namespace": null}}, "test.ftd.accepted_values_GREGoR_R03_HMB_20250612_ftd_subject_subject_type__participant__non_participant__cell_line__animal_model__group__other.299b107e1c": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "accepted_values_GREGoR_R03_HMB_20250612_ftd_subject_subject_type__participant__non_participant__cell_line__animal_model__group__other", "resource_type": "test", "package_name": "ftd", "path": "accepted_values_GREGoR_R03_HMB_e89fadb3b6683329cdefb72abe2fc857.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/__models.yml", "unique_id": "test.ftd.accepted_values_GREGoR_R03_HMB_20250612_ftd_subject_subject_type__participant__non_participant__cell_line__animal_model__group__other.299b107e1c", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "docs", "accepted_values_GREGoR_R03_HMB_20250612_ftd_subject_subject_type__participant__non_participant__cell_line__animal_model__group__other"], "alias": "accepted_values_GREGoR_R03_HMB_e89fadb3b6683329cdefb72abe2fc857", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_GREGoR_R03_HMB_e89fadb3b6683329cdefb72abe2fc857", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "accepted_values_GREGoR_R03_HMB_e89fadb3b6683329cdefb72abe2fc857"}, "created_at": 1757448969.3497164, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_GREGoR_R03_HMB_e89fadb3b6683329cdefb72abe2fc857\") }}", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_ftd_subject", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GREGoR_R03_HMB_20250612_ftd_subject"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/docs/__models.yml/accepted_values_GREGoR_R03_HMB_e89fadb3b6683329cdefb72abe2fc857.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        subject_type as value_field,\n        count(*) as n_records\n\n    from \"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_subject\"\n    group by subject_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'participant','non_participant','cell_line','animal_model','group','other'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "subject_type", "file_key_name": "models.GREGoR_R03_HMB_20250612_ftd_subject", "attached_node": "model.ftd.GREGoR_R03_HMB_20250612_ftd_subject", "test_metadata": {"name": "accepted_values", "kwargs": {"values": ["participant", "non_participant", "cell_line", "animal_model", "group", "other"], "column_name": "subject_type", "model": "{{ get_where_subquery(ref('GREGoR_R03_HMB_20250612_ftd_subject')) }}"}, "namespace": null}}, "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_subject_id.e6565b9e79": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GREGoR_R03_HMB_20250612_ftd_subject_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_GREGoR_R03_HMB_20250612_ftd_subject_id.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/__models.yml", "unique_id": "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_subject_id.e6565b9e79", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "docs", "not_null_GREGoR_R03_HMB_20250612_ftd_subject_id"], "alias": "not_null_GREGoR_R03_HMB_20250612_ftd_subject_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.3633778, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_ftd_subject", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GREGoR_R03_HMB_20250612_ftd_subject"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/docs/__models.yml/not_null_GREGoR_R03_HMB_20250612_ftd_subject_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_subject\"\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "id", "file_key_name": "models.GREGoR_R03_HMB_20250612_ftd_subject", "attached_node": "model.ftd.GREGoR_R03_HMB_20250612_ftd_subject", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('GREGoR_R03_HMB_20250612_ftd_subject')) }}"}, "namespace": null}}, "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_familyrelationship_family_member.ccd8099a36": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GREGoR_R03_HMB_20250612_ftd_familyrelationship_family_member", "resource_type": "test", "package_name": "ftd", "path": "not_null_GREGoR_R03_HMB_202506_bf8cb2105ea0a65e3830c572d9d0074b.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/__models.yml", "unique_id": "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_familyrelationship_family_member.ccd8099a36", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "docs", "not_null_GREGoR_R03_HMB_20250612_ftd_familyrelationship_family_member"], "alias": "not_null_GREGoR_R03_HMB_202506_bf8cb2105ea0a65e3830c572d9d0074b", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "not_null_GREGoR_R03_HMB_202506_bf8cb2105ea0a65e3830c572d9d0074b", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "not_null_GREGoR_R03_HMB_202506_bf8cb2105ea0a65e3830c572d9d0074b"}, "created_at": 1757448969.364476, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"not_null_GREGoR_R03_HMB_202506_bf8cb2105ea0a65e3830c572d9d0074b\") }}", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_ftd_familyrelationship", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GREGoR_R03_HMB_20250612_ftd_familyrelationship"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/docs/__models.yml/not_null_GREGoR_R03_HMB_202506_bf8cb2105ea0a65e3830c572d9d0074b.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect family_member\nfrom \"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_familyrelationship\"\nwhere family_member is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "family_member", "file_key_name": "models.GREGoR_R03_HMB_20250612_ftd_familyrelationship", "attached_node": "model.ftd.GREGoR_R03_HMB_20250612_ftd_familyrelationship", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "family_member", "model": "{{ get_where_subquery(ref('GREGoR_R03_HMB_20250612_ftd_familyrelationship')) }}"}, "namespace": null}}, "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_familyrelationship_other_family_member.fdfbcc65c5": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GREGoR_R03_HMB_20250612_ftd_familyrelationship_other_family_member", "resource_type": "test", "package_name": "ftd", "path": "not_null_GREGoR_R03_HMB_202506_448a45875841c7c323d5c9a6d2e6dbf6.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/__models.yml", "unique_id": "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_familyrelationship_other_family_member.fdfbcc65c5", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "docs", "not_null_GREGoR_R03_HMB_20250612_ftd_familyrelationship_other_family_member"], "alias": "not_null_GREGoR_R03_HMB_202506_448a45875841c7c323d5c9a6d2e6dbf6", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "not_null_GREGoR_R03_HMB_202506_448a45875841c7c323d5c9a6d2e6dbf6", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "not_null_GREGoR_R03_HMB_202506_448a45875841c7c323d5c9a6d2e6dbf6"}, "created_at": 1757448969.3654406, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"not_null_GREGoR_R03_HMB_202506_448a45875841c7c323d5c9a6d2e6dbf6\") }}", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_ftd_familyrelationship", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GREGoR_R03_HMB_20250612_ftd_familyrelationship"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/docs/__models.yml/not_null_GREGoR_R03_HMB_202506_448a45875841c7c323d5c9a6d2e6dbf6.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect other_family_member\nfrom \"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_familyrelationship\"\nwhere other_family_member is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "other_family_member", "file_key_name": "models.GREGoR_R03_HMB_20250612_ftd_familyrelationship", "attached_node": "model.ftd.GREGoR_R03_HMB_20250612_ftd_familyrelationship", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "other_family_member", "model": "{{ get_where_subquery(ref('GREGoR_R03_HMB_20250612_ftd_familyrelationship')) }}"}, "namespace": null}}, "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_familyrelationship_relationship_code.77cb743d53": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GREGoR_R03_HMB_20250612_ftd_familyrelationship_relationship_code", "resource_type": "test", "package_name": "ftd", "path": "not_null_GREGoR_R03_HMB_202506_6e8ace25a176d2fa51cec0df4448636e.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/__models.yml", "unique_id": "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_familyrelationship_relationship_code.77cb743d53", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "docs", "not_null_GREGoR_R03_HMB_20250612_ftd_familyrelationship_relationship_code"], "alias": "not_null_GREGoR_R03_HMB_202506_6e8ace25a176d2fa51cec0df4448636e", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "not_null_GREGoR_R03_HMB_202506_6e8ace25a176d2fa51cec0df4448636e", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "not_null_GREGoR_R03_HMB_202506_6e8ace25a176d2fa51cec0df4448636e"}, "created_at": 1757448969.3664, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"not_null_GREGoR_R03_HMB_202506_6e8ace25a176d2fa51cec0df4448636e\") }}", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_ftd_familyrelationship", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GREGoR_R03_HMB_20250612_ftd_familyrelationship"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/docs/__models.yml/not_null_GREGoR_R03_HMB_202506_6e8ace25a176d2fa51cec0df4448636e.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect relationship_code\nfrom \"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_familyrelationship\"\nwhere relationship_code is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "relationship_code", "file_key_name": "models.GREGoR_R03_HMB_20250612_ftd_familyrelationship", "attached_node": "model.ftd.GREGoR_R03_HMB_20250612_ftd_familyrelationship", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "relationship_code", "model": "{{ get_where_subquery(ref('GREGoR_R03_HMB_20250612_ftd_familyrelationship')) }}"}, "namespace": null}}, "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_familyrelationship_id.7973ae91d9": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GREGoR_R03_HMB_20250612_ftd_familyrelationship_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_GREGoR_R03_HMB_20250612_ftd_familyrelationship_id.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/__models.yml", "unique_id": "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_familyrelationship_id.7973ae91d9", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "docs", "not_null_GREGoR_R03_HMB_20250612_ftd_familyrelationship_id"], "alias": "not_null_GREGoR_R03_HMB_20250612_ftd_familyrelationship_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.367343, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_ftd_familyrelationship", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GREGoR_R03_HMB_20250612_ftd_familyrelationship"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/docs/__models.yml/not_null_GREGoR_R03_HMB_20250612_ftd_familyrelationship_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_familyrelationship\"\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "id", "file_key_name": "models.GREGoR_R03_HMB_20250612_ftd_familyrelationship", "attached_node": "model.ftd.GREGoR_R03_HMB_20250612_ftd_familyrelationship", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('GREGoR_R03_HMB_20250612_ftd_familyrelationship')) }}"}, "namespace": null}}, "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_demographics_sex.00ee4a6dbb": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GREGoR_R03_HMB_20250612_ftd_demographics_sex", "resource_type": "test", "package_name": "ftd", "path": "not_null_GREGoR_R03_HMB_20250612_ftd_demographics_sex.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/__models.yml", "unique_id": "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_demographics_sex.00ee4a6dbb", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "docs", "not_null_GREGoR_R03_HMB_20250612_ftd_demographics_sex"], "alias": "not_null_GREGoR_R03_HMB_20250612_ftd_demographics_sex", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.3684618, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_ftd_demographics", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GREGoR_R03_HMB_20250612_ftd_demographics"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/docs/__models.yml/not_null_GREGoR_R03_HMB_20250612_ftd_demographics_sex.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sex\nfrom \"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_demographics\"\nwhere sex is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "sex", "file_key_name": "models.GREGoR_R03_HMB_20250612_ftd_demographics", "attached_node": "model.ftd.GREGoR_R03_HMB_20250612_ftd_demographics", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "sex", "model": "{{ get_where_subquery(ref('GREGoR_R03_HMB_20250612_ftd_demographics')) }}"}, "namespace": null}}, "test.ftd.accepted_values_GREGoR_R03_HMB_20250612_ftd_demographics_sex__female__male__unknown__intersex.e929424ff9": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "accepted_values_GREGoR_R03_HMB_20250612_ftd_demographics_sex__female__male__unknown__intersex", "resource_type": "test", "package_name": "ftd", "path": "accepted_values_GREGoR_R03_HMB_0f18393d644be3dae97d997b45f6b561.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/__models.yml", "unique_id": "test.ftd.accepted_values_GREGoR_R03_HMB_20250612_ftd_demographics_sex__female__male__unknown__intersex.e929424ff9", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "docs", "accepted_values_GREGoR_R03_HMB_20250612_ftd_demographics_sex__female__male__unknown__intersex"], "alias": "accepted_values_GREGoR_R03_HMB_0f18393d644be3dae97d997b45f6b561", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_GREGoR_R03_HMB_0f18393d644be3dae97d997b45f6b561", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "accepted_values_GREGoR_R03_HMB_0f18393d644be3dae97d997b45f6b561"}, "created_at": 1757448969.3694189, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_GREGoR_R03_HMB_0f18393d644be3dae97d997b45f6b561\") }}", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_ftd_demographics", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GREGoR_R03_HMB_20250612_ftd_demographics"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/docs/__models.yml/accepted_values_GREGoR_R03_HMB_0f18393d644be3dae97d997b45f6b561.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        sex as value_field,\n        count(*) as n_records\n\n    from \"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_demographics\"\n    group by sex\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'female','male','unknown','intersex'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "sex", "file_key_name": "models.GREGoR_R03_HMB_20250612_ftd_demographics", "attached_node": "model.ftd.GREGoR_R03_HMB_20250612_ftd_demographics", "test_metadata": {"name": "accepted_values", "kwargs": {"values": ["female", "male", "unknown", "intersex"], "column_name": "sex", "model": "{{ get_where_subquery(ref('GREGoR_R03_HMB_20250612_ftd_demographics')) }}"}, "namespace": null}}, "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_demographics_sex_display.58fa9056fb": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GREGoR_R03_HMB_20250612_ftd_demographics_sex_display", "resource_type": "test", "package_name": "ftd", "path": "not_null_GREGoR_R03_HMB_20250612_ftd_demographics_sex_display.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/__models.yml", "unique_id": "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_demographics_sex_display.58fa9056fb", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "docs", "not_null_GREGoR_R03_HMB_20250612_ftd_demographics_sex_display"], "alias": "not_null_GREGoR_R03_HMB_20250612_ftd_demographics_sex_display", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.3732855, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_ftd_demographics", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GREGoR_R03_HMB_20250612_ftd_demographics"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/docs/__models.yml/not_null_GREGoR_R03_HMB_20250612_ftd_demographics_sex_display.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sex_display\nfrom \"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_demographics\"\nwhere sex_display is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "sex_display", "file_key_name": "models.GREGoR_R03_HMB_20250612_ftd_demographics", "attached_node": "model.ftd.GREGoR_R03_HMB_20250612_ftd_demographics", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "sex_display", "model": "{{ get_where_subquery(ref('GREGoR_R03_HMB_20250612_ftd_demographics')) }}"}, "namespace": null}}, "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_demographics_race_display.f403d1ff06": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GREGoR_R03_HMB_20250612_ftd_demographics_race_display", "resource_type": "test", "package_name": "ftd", "path": "not_null_GREGoR_R03_HMB_20250612_ftd_demographics_race_display.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/__models.yml", "unique_id": "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_demographics_race_display.f403d1ff06", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "docs", "not_null_GREGoR_R03_HMB_20250612_ftd_demographics_race_display"], "alias": "not_null_GREGoR_R03_HMB_20250612_ftd_demographics_race_display", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.3742783, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_ftd_demographics", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GREGoR_R03_HMB_20250612_ftd_demographics"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/docs/__models.yml/not_null_GREGoR_R03_HMB_20250612_ftd_demographics_race_display.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect race_display\nfrom \"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_demographics\"\nwhere race_display is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "race_display", "file_key_name": "models.GREGoR_R03_HMB_20250612_ftd_demographics", "attached_node": "model.ftd.GREGoR_R03_HMB_20250612_ftd_demographics", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "race_display", "model": "{{ get_where_subquery(ref('GREGoR_R03_HMB_20250612_ftd_demographics')) }}"}, "namespace": null}}, "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_demographics_ethnicity.f989c1888f": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GREGoR_R03_HMB_20250612_ftd_demographics_ethnicity", "resource_type": "test", "package_name": "ftd", "path": "not_null_GREGoR_R03_HMB_20250612_ftd_demographics_ethnicity.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/__models.yml", "unique_id": "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_demographics_ethnicity.f989c1888f", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "docs", "not_null_GREGoR_R03_HMB_20250612_ftd_demographics_ethnicity"], "alias": "not_null_GREGoR_R03_HMB_20250612_ftd_demographics_ethnicity", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.3752148, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_ftd_demographics", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GREGoR_R03_HMB_20250612_ftd_demographics"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/docs/__models.yml/not_null_GREGoR_R03_HMB_20250612_ftd_demographics_ethnicity.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ethnicity\nfrom \"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_demographics\"\nwhere ethnicity is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "ethnicity", "file_key_name": "models.GREGoR_R03_HMB_20250612_ftd_demographics", "attached_node": "model.ftd.GREGoR_R03_HMB_20250612_ftd_demographics", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "ethnicity", "model": "{{ get_where_subquery(ref('GREGoR_R03_HMB_20250612_ftd_demographics')) }}"}, "namespace": null}}, "test.ftd.accepted_values_GREGoR_R03_HMB_20250612_ftd_demographics_ethnicity__hispanic_or_latino__not_hispanic_or_latino__unknown__asked_but_unknown.697408c165": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "accepted_values_GREGoR_R03_HMB_20250612_ftd_demographics_ethnicity__hispanic_or_latino__not_hispanic_or_latino__unknown__asked_but_unknown", "resource_type": "test", "package_name": "ftd", "path": "accepted_values_GREGoR_R03_HMB_1d06b0dfc20f61b617d5d6f45ed7951c.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/__models.yml", "unique_id": "test.ftd.accepted_values_GREGoR_R03_HMB_20250612_ftd_demographics_ethnicity__hispanic_or_latino__not_hispanic_or_latino__unknown__asked_but_unknown.697408c165", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "docs", "accepted_values_GREGoR_R03_HMB_20250612_ftd_demographics_ethnicity__hispanic_or_latino__not_hispanic_or_latino__unknown__asked_but_unknown"], "alias": "accepted_values_GREGoR_R03_HMB_1d06b0dfc20f61b617d5d6f45ed7951c", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_GREGoR_R03_HMB_1d06b0dfc20f61b617d5d6f45ed7951c", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "accepted_values_GREGoR_R03_HMB_1d06b0dfc20f61b617d5d6f45ed7951c"}, "created_at": 1757448969.3763938, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_GREGoR_R03_HMB_1d06b0dfc20f61b617d5d6f45ed7951c\") }}", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_ftd_demographics", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GREGoR_R03_HMB_20250612_ftd_demographics"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/docs/__models.yml/accepted_values_GREGoR_R03_HMB_1d06b0dfc20f61b617d5d6f45ed7951c.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        ethnicity as value_field,\n        count(*) as n_records\n\n    from \"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_demographics\"\n    group by ethnicity\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'hispanic_or_latino','not_hispanic_or_latino','unknown','asked_but_unknown'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "ethnicity", "file_key_name": "models.GREGoR_R03_HMB_20250612_ftd_demographics", "attached_node": "model.ftd.GREGoR_R03_HMB_20250612_ftd_demographics", "test_metadata": {"name": "accepted_values", "kwargs": {"values": ["hispanic_or_latino", "not_hispanic_or_latino", "unknown", "asked_but_unknown"], "column_name": "ethnicity", "model": "{{ get_where_subquery(ref('GREGoR_R03_HMB_20250612_ftd_demographics')) }}"}, "namespace": null}}, "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_demographics_ethnicity_display.b70c72fe87": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GREGoR_R03_HMB_20250612_ftd_demographics_ethnicity_display", "resource_type": "test", "package_name": "ftd", "path": "not_null_GREGoR_R03_HMB_202506_f2bf30c307c150173654419bf5e61b68.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/__models.yml", "unique_id": "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_demographics_ethnicity_display.b70c72fe87", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "docs", "not_null_GREGoR_R03_HMB_20250612_ftd_demographics_ethnicity_display"], "alias": "not_null_GREGoR_R03_HMB_202506_f2bf30c307c150173654419bf5e61b68", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "not_null_GREGoR_R03_HMB_202506_f2bf30c307c150173654419bf5e61b68", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "not_null_GREGoR_R03_HMB_202506_f2bf30c307c150173654419bf5e61b68"}, "created_at": 1757448969.379862, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"not_null_GREGoR_R03_HMB_202506_f2bf30c307c150173654419bf5e61b68\") }}", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_ftd_demographics", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GREGoR_R03_HMB_20250612_ftd_demographics"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/docs/__models.yml/not_null_GREGoR_R03_HMB_202506_f2bf30c307c150173654419bf5e61b68.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ethnicity_display\nfrom \"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_demographics\"\nwhere ethnicity_display is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "ethnicity_display", "file_key_name": "models.GREGoR_R03_HMB_20250612_ftd_demographics", "attached_node": "model.ftd.GREGoR_R03_HMB_20250612_ftd_demographics", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "ethnicity_display", "model": "{{ get_where_subquery(ref('GREGoR_R03_HMB_20250612_ftd_demographics')) }}"}, "namespace": null}}, "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_demographics_id.5cde4c1112": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GREGoR_R03_HMB_20250612_ftd_demographics_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_GREGoR_R03_HMB_20250612_ftd_demographics_id.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/__models.yml", "unique_id": "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_demographics_id.5cde4c1112", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "docs", "not_null_GREGoR_R03_HMB_20250612_ftd_demographics_id"], "alias": "not_null_GREGoR_R03_HMB_20250612_ftd_demographics_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.3808913, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_ftd_demographics", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GREGoR_R03_HMB_20250612_ftd_demographics"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/docs/__models.yml/not_null_GREGoR_R03_HMB_20250612_ftd_demographics_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_demographics\"\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "id", "file_key_name": "models.GREGoR_R03_HMB_20250612_ftd_demographics", "attached_node": "model.ftd.GREGoR_R03_HMB_20250612_ftd_demographics", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('GREGoR_R03_HMB_20250612_ftd_demographics')) }}"}, "namespace": null}}, "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_accesspolicy_description.c8248b0467": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GREGoR_R03_HMB_20250612_ftd_accesspolicy_description", "resource_type": "test", "package_name": "ftd", "path": "not_null_GREGoR_R03_HMB_20250612_ftd_accesspolicy_description.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/__models.yml", "unique_id": "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_accesspolicy_description.c8248b0467", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "docs", "not_null_GREGoR_R03_HMB_20250612_ftd_accesspolicy_description"], "alias": "not_null_GREGoR_R03_HMB_20250612_ftd_accesspolicy_description", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.381855, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_ftd_accesspolicy", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GREGoR_R03_HMB_20250612_ftd_accesspolicy"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/docs/__models.yml/not_null_GREGoR_R03_HMB_20250612_ftd_accesspolicy_description.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect description\nfrom \"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_accesspolicy\"\nwhere description is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "description", "file_key_name": "models.GREGoR_R03_HMB_20250612_ftd_accesspolicy", "attached_node": "model.ftd.GREGoR_R03_HMB_20250612_ftd_accesspolicy", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "description", "model": "{{ get_where_subquery(ref('GREGoR_R03_HMB_20250612_ftd_accesspolicy')) }}"}, "namespace": null}}, "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_accesspolicy_id.a681409108": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GREGoR_R03_HMB_20250612_ftd_accesspolicy_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_GREGoR_R03_HMB_20250612_ftd_accesspolicy_id.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/__models.yml", "unique_id": "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_accesspolicy_id.a681409108", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "docs", "not_null_GREGoR_R03_HMB_20250612_ftd_accesspolicy_id"], "alias": "not_null_GREGoR_R03_HMB_20250612_ftd_accesspolicy_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.3828492, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_ftd_accesspolicy", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GREGoR_R03_HMB_20250612_ftd_accesspolicy"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/docs/__models.yml/not_null_GREGoR_R03_HMB_20250612_ftd_accesspolicy_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_accesspolicy\"\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "id", "file_key_name": "models.GREGoR_R03_HMB_20250612_ftd_accesspolicy", "attached_node": "model.ftd.GREGoR_R03_HMB_20250612_ftd_accesspolicy", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('GREGoR_R03_HMB_20250612_ftd_accesspolicy')) }}"}, "namespace": null}}, "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_study_study_title.a9c9843160": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GREGoR_R03_HMB_20250612_ftd_study_study_title", "resource_type": "test", "package_name": "ftd", "path": "not_null_GREGoR_R03_HMB_20250612_ftd_study_study_title.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/__models.yml", "unique_id": "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_study_study_title.a9c9843160", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "docs", "not_null_GREGoR_R03_HMB_20250612_ftd_study_study_title"], "alias": "not_null_GREGoR_R03_HMB_20250612_ftd_study_study_title", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.3839543, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_ftd_study", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GREGoR_R03_HMB_20250612_ftd_study"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/docs/__models.yml/not_null_GREGoR_R03_HMB_20250612_ftd_study_study_title.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect study_title\nfrom \"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_study\"\nwhere study_title is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "study_title", "file_key_name": "models.GREGoR_R03_HMB_20250612_ftd_study", "attached_node": "model.ftd.GREGoR_R03_HMB_20250612_ftd_study", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "study_title", "model": "{{ get_where_subquery(ref('GREGoR_R03_HMB_20250612_ftd_study')) }}"}, "namespace": null}}, "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_study_id.ba8b37c0b4": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GREGoR_R03_HMB_20250612_ftd_study_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_GREGoR_R03_HMB_20250612_ftd_study_id.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/__models.yml", "unique_id": "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_study_id.ba8b37c0b4", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "docs", "not_null_GREGoR_R03_HMB_20250612_ftd_study_id"], "alias": "not_null_GREGoR_R03_HMB_20250612_ftd_study_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.3849487, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_ftd_study", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GREGoR_R03_HMB_20250612_ftd_study"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/docs/__models.yml/not_null_GREGoR_R03_HMB_20250612_ftd_study_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_study\"\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "id", "file_key_name": "models.GREGoR_R03_HMB_20250612_ftd_study", "attached_node": "model.ftd.GREGoR_R03_HMB_20250612_ftd_study", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('GREGoR_R03_HMB_20250612_ftd_study')) }}"}, "namespace": null}}, "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_familymember_family_member.f24af3f62a": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GREGoR_R03_HMB_20250612_ftd_familymember_family_member", "resource_type": "test", "package_name": "ftd", "path": "not_null_GREGoR_R03_HMB_20250612_ftd_familymember_family_member.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/__models.yml", "unique_id": "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_familymember_family_member.f24af3f62a", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "docs", "not_null_GREGoR_R03_HMB_20250612_ftd_familymember_family_member"], "alias": "not_null_GREGoR_R03_HMB_20250612_ftd_familymember_family_member", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.3858814, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_ftd_familymember", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GREGoR_R03_HMB_20250612_ftd_familymember"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/docs/__models.yml/not_null_GREGoR_R03_HMB_20250612_ftd_familymember_family_member.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect family_member\nfrom \"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_familymember\"\nwhere family_member is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "family_member", "file_key_name": "models.GREGoR_R03_HMB_20250612_ftd_familymember", "attached_node": "model.ftd.GREGoR_R03_HMB_20250612_ftd_familymember", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "family_member", "model": "{{ get_where_subquery(ref('GREGoR_R03_HMB_20250612_ftd_familymember')) }}"}, "namespace": null}}, "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_familymember_id.e4ca78f1f6": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GREGoR_R03_HMB_20250612_ftd_familymember_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_GREGoR_R03_HMB_20250612_ftd_familymember_id.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/__models.yml", "unique_id": "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_familymember_id.e4ca78f1f6", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "docs", "not_null_GREGoR_R03_HMB_20250612_ftd_familymember_id"], "alias": "not_null_GREGoR_R03_HMB_20250612_ftd_familymember_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.3868608, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_ftd_familymember", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GREGoR_R03_HMB_20250612_ftd_familymember"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/docs/__models.yml/not_null_GREGoR_R03_HMB_20250612_ftd_familymember_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_familymember\"\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "id", "file_key_name": "models.GREGoR_R03_HMB_20250612_ftd_familymember", "attached_node": "model.ftd.GREGoR_R03_HMB_20250612_ftd_familymember", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('GREGoR_R03_HMB_20250612_ftd_familymember')) }}"}, "namespace": null}}, "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_demographics_race_demographics_id.b864e26814": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GREGoR_R03_HMB_20250612_ftd_demographics_race_demographics_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_GREGoR_R03_HMB_202506_63f078421a59db46c1572a1b1f581d5d.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/__models.yml", "unique_id": "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_demographics_race_demographics_id.b864e26814", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "docs", "not_null_GREGoR_R03_HMB_20250612_ftd_demographics_race_demographics_id"], "alias": "not_null_GREGoR_R03_HMB_202506_63f078421a59db46c1572a1b1f581d5d", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "not_null_GREGoR_R03_HMB_202506_63f078421a59db46c1572a1b1f581d5d", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "not_null_GREGoR_R03_HMB_202506_63f078421a59db46c1572a1b1f581d5d"}, "created_at": 1757448969.3877933, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"not_null_GREGoR_R03_HMB_202506_63f078421a59db46c1572a1b1f581d5d\") }}", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_ftd_demographics_race", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_race"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/docs/__models.yml/not_null_GREGoR_R03_HMB_202506_63f078421a59db46c1572a1b1f581d5d.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect demographics_id\nfrom \"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_demographics_race\"\nwhere demographics_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "demographics_id", "file_key_name": "models.GREGoR_R03_HMB_20250612_ftd_demographics_race", "attached_node": "model.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_race", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "demographics_id", "model": "{{ get_where_subquery(ref('GREGoR_R03_HMB_20250612_ftd_demographics_race')) }}"}, "namespace": null}}, "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_demographics_race_race.8241e83ef3": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GREGoR_R03_HMB_20250612_ftd_demographics_race_race", "resource_type": "test", "package_name": "ftd", "path": "not_null_GREGoR_R03_HMB_20250612_ftd_demographics_race_race.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/__models.yml", "unique_id": "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_demographics_race_race.8241e83ef3", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "docs", "not_null_GREGoR_R03_HMB_20250612_ftd_demographics_race_race"], "alias": "not_null_GREGoR_R03_HMB_20250612_ftd_demographics_race_race", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.388853, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_ftd_demographics_race", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_race"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/docs/__models.yml/not_null_GREGoR_R03_HMB_20250612_ftd_demographics_race_race.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect race\nfrom \"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_demographics_race\"\nwhere race is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "race", "file_key_name": "models.GREGoR_R03_HMB_20250612_ftd_demographics_race", "attached_node": "model.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_race", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "race", "model": "{{ get_where_subquery(ref('GREGoR_R03_HMB_20250612_ftd_demographics_race')) }}"}, "namespace": null}}, "test.ftd.accepted_values_GREGoR_R03_HMB_20250612_ftd_demographics_race_race__american_indian_or_alaskan_native__asian__black_or_african_american__native_hawaiian_or_pacific_islander__white__other_race__unknown__asked_but_unknown.fb8d1626ca": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "accepted_values_GREGoR_R03_HMB_20250612_ftd_demographics_race_race__american_indian_or_alaskan_native__asian__black_or_african_american__native_hawaiian_or_pacific_islander__white__other_race__unknown__asked_but_unknown", "resource_type": "test", "package_name": "ftd", "path": "accepted_values_GREGoR_R03_HMB_bcd06dee5cc6f34d419aa681ae128b34.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/__models.yml", "unique_id": "test.ftd.accepted_values_GREGoR_R03_HMB_20250612_ftd_demographics_race_race__american_indian_or_alaskan_native__asian__black_or_african_american__native_hawaiian_or_pacific_islander__white__other_race__unknown__asked_but_unknown.fb8d1626ca", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "docs", "accepted_values_GREGoR_R03_HMB_20250612_ftd_demographics_race_race__american_indian_or_alaskan_native__asian__black_or_african_american__native_hawaiian_or_pacific_islander__white__other_race__unknown__asked_but_unknown"], "alias": "accepted_values_GREGoR_R03_HMB_bcd06dee5cc6f34d419aa681ae128b34", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_GREGoR_R03_HMB_bcd06dee5cc6f34d419aa681ae128b34", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "accepted_values_GREGoR_R03_HMB_bcd06dee5cc6f34d419aa681ae128b34"}, "created_at": 1757448969.389844, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_GREGoR_R03_HMB_bcd06dee5cc6f34d419aa681ae128b34\") }}", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_ftd_demographics_race", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_race"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/docs/__models.yml/accepted_values_GREGoR_R03_HMB_bcd06dee5cc6f34d419aa681ae128b34.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        race as value_field,\n        count(*) as n_records\n\n    from \"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_demographics_race\"\n    group by race\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'american_indian_or_alaskan_native','asian','black_or_african_american','native_hawaiian_or_pacific_islander','white','other_race','unknown','asked_but_unknown'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "race", "file_key_name": "models.GREGoR_R03_HMB_20250612_ftd_demographics_race", "attached_node": "model.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_race", "test_metadata": {"name": "accepted_values", "kwargs": {"values": ["american_indian_or_alaskan_native", "asian", "black_or_african_american", "native_hawaiian_or_pacific_islander", "white", "other_race", "unknown", "asked_but_unknown"], "column_name": "race", "model": "{{ get_where_subquery(ref('GREGoR_R03_HMB_20250612_ftd_demographics_race')) }}"}, "namespace": null}}, "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code_accesspolicy_id.06a4b2baac": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code_accesspolicy_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_GREGoR_R03_HMB_202506_af5a84e1387fa8e448abd382dd12bd24.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/__models.yml", "unique_id": "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code_accesspolicy_id.06a4b2baac", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "docs", "not_null_GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code_accesspolicy_id"], "alias": "not_null_GREGoR_R03_HMB_202506_af5a84e1387fa8e448abd382dd12bd24", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "not_null_GREGoR_R03_HMB_202506_af5a84e1387fa8e448abd382dd12bd24", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "not_null_GREGoR_R03_HMB_202506_af5a84e1387fa8e448abd382dd12bd24"}, "created_at": 1757448969.3940136, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"not_null_GREGoR_R03_HMB_202506_af5a84e1387fa8e448abd382dd12bd24\") }}", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/docs/__models.yml/not_null_GREGoR_R03_HMB_202506_af5a84e1387fa8e448abd382dd12bd24.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect accesspolicy_id\nfrom \"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code\"\nwhere accesspolicy_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "accesspolicy_id", "file_key_name": "models.GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code", "attached_node": "model.ftd.GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "accesspolicy_id", "model": "{{ get_where_subquery(ref('GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code')) }}"}, "namespace": null}}, "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code_access_policy_code.8c07a541f9": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code_access_policy_code", "resource_type": "test", "package_name": "ftd", "path": "not_null_GREGoR_R03_HMB_202506_4e6d227830e21abc88627ac451978326.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/__models.yml", "unique_id": "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code_access_policy_code.8c07a541f9", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "docs", "not_null_GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code_access_policy_code"], "alias": "not_null_GREGoR_R03_HMB_202506_4e6d227830e21abc88627ac451978326", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "not_null_GREGoR_R03_HMB_202506_4e6d227830e21abc88627ac451978326", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "not_null_GREGoR_R03_HMB_202506_4e6d227830e21abc88627ac451978326"}, "created_at": 1757448969.394987, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"not_null_GREGoR_R03_HMB_202506_4e6d227830e21abc88627ac451978326\") }}", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/docs/__models.yml/not_null_GREGoR_R03_HMB_202506_4e6d227830e21abc88627ac451978326.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect access_policy_code\nfrom \"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code\"\nwhere access_policy_code is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "access_policy_code", "file_key_name": "models.GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code", "attached_node": "model.ftd.GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "access_policy_code", "model": "{{ get_where_subquery(ref('GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code')) }}"}, "namespace": null}}, "test.ftd.accepted_values_GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code_access_policy_code__gru__hmb__ds__irb__pub__col__npu__mds__gso__gsr.e95af42347": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "accepted_values_GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code_access_policy_code__gru__hmb__ds__irb__pub__col__npu__mds__gso__gsr", "resource_type": "test", "package_name": "ftd", "path": "accepted_values_GREGoR_R03_HMB_7036670d607b6ca0b34a799466f0e65e.sql", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/__models.yml", "unique_id": "test.ftd.accepted_values_GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code_access_policy_code__gru__hmb__ds__irb__pub__col__npu__mds__gso__gsr.e95af42347", "fqn": ["ftd", "GREGoR_R03_HMB_20250612", "docs", "accepted_values_GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code_access_policy_code__gru__hmb__ds__irb__pub__col__npu__mds__gso__gsr"], "alias": "accepted_values_GREGoR_R03_HMB_7036670d607b6ca0b34a799466f0e65e", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_GREGoR_R03_HMB_7036670d607b6ca0b34a799466f0e65e", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "accepted_values_GREGoR_R03_HMB_7036670d607b6ca0b34a799466f0e65e"}, "created_at": 1757448969.395921, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_GREGoR_R03_HMB_7036670d607b6ca0b34a799466f0e65e\") }}", "language": "sql", "refs": [{"name": "GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_HMB_20250612/docs/__models.yml/accepted_values_GREGoR_R03_HMB_7036670d607b6ca0b34a799466f0e65e.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        access_policy_code as value_field,\n        count(*) as n_records\n\n    from \"dbt\".\"main_GREGoR_R03_HMB_20250612_data\".\"GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code\"\n    group by access_policy_code\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'gru','hmb','ds','irb','pub','col','npu','mds','gso','gsr'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "access_policy_code", "file_key_name": "models.GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code", "attached_node": "model.ftd.GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code", "test_metadata": {"name": "accepted_values", "kwargs": {"values": ["gru", "hmb", "ds", "irb", "pub", "col", "npu", "mds", "gso", "gsr"], "column_name": "access_policy_code", "model": "{{ get_where_subquery(ref('GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code')) }}"}, "namespace": null}}, "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_subjectassertion_id.2c3b517da4": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GREGoR_R03_GRU_20250612_ftd_subjectassertion_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_GREGoR_R03_GRU_20250612_ftd_subjectassertion_id.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/__models.yml", "unique_id": "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_subjectassertion_id.2c3b517da4", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "docs", "not_null_GREGoR_R03_GRU_20250612_ftd_subjectassertion_id"], "alias": "not_null_GREGoR_R03_GRU_20250612_ftd_subjectassertion_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.4253962, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_ftd_subjectassertion", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GREGoR_R03_GRU_20250612_ftd_subjectassertion"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/docs/__models.yml/not_null_GREGoR_R03_GRU_20250612_ftd_subjectassertion_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_subjectassertion\"\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "id", "file_key_name": "models.GREGoR_R03_GRU_20250612_ftd_subjectassertion", "attached_node": "model.ftd.GREGoR_R03_GRU_20250612_ftd_subjectassertion", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('GREGoR_R03_GRU_20250612_ftd_subjectassertion')) }}"}, "namespace": null}}, "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_subject_subject_type.99880e3294": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GREGoR_R03_GRU_20250612_ftd_subject_subject_type", "resource_type": "test", "package_name": "ftd", "path": "not_null_GREGoR_R03_GRU_20250612_ftd_subject_subject_type.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/__models.yml", "unique_id": "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_subject_subject_type.99880e3294", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "docs", "not_null_GREGoR_R03_GRU_20250612_ftd_subject_subject_type"], "alias": "not_null_GREGoR_R03_GRU_20250612_ftd_subject_subject_type", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.4267719, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_ftd_subject", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GREGoR_R03_GRU_20250612_ftd_subject"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/docs/__models.yml/not_null_GREGoR_R03_GRU_20250612_ftd_subject_subject_type.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect subject_type\nfrom \"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_subject\"\nwhere subject_type is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "subject_type", "file_key_name": "models.GREGoR_R03_GRU_20250612_ftd_subject", "attached_node": "model.ftd.GREGoR_R03_GRU_20250612_ftd_subject", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "subject_type", "model": "{{ get_where_subquery(ref('GREGoR_R03_GRU_20250612_ftd_subject')) }}"}, "namespace": null}}, "test.ftd.accepted_values_GREGoR_R03_GRU_20250612_ftd_subject_subject_type__participant__non_participant__cell_line__animal_model__group__other.27b11b5d03": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "accepted_values_GREGoR_R03_GRU_20250612_ftd_subject_subject_type__participant__non_participant__cell_line__animal_model__group__other", "resource_type": "test", "package_name": "ftd", "path": "accepted_values_GREGoR_R03_GRU_cfd39b1cde1cc6528d2f510b1f8bdaff.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/__models.yml", "unique_id": "test.ftd.accepted_values_GREGoR_R03_GRU_20250612_ftd_subject_subject_type__participant__non_participant__cell_line__animal_model__group__other.27b11b5d03", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "docs", "accepted_values_GREGoR_R03_GRU_20250612_ftd_subject_subject_type__participant__non_participant__cell_line__animal_model__group__other"], "alias": "accepted_values_GREGoR_R03_GRU_cfd39b1cde1cc6528d2f510b1f8bdaff", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_GREGoR_R03_GRU_cfd39b1cde1cc6528d2f510b1f8bdaff", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "accepted_values_GREGoR_R03_GRU_cfd39b1cde1cc6528d2f510b1f8bdaff"}, "created_at": 1757448969.4277954, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_GREGoR_R03_GRU_cfd39b1cde1cc6528d2f510b1f8bdaff\") }}", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_ftd_subject", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GREGoR_R03_GRU_20250612_ftd_subject"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/docs/__models.yml/accepted_values_GREGoR_R03_GRU_cfd39b1cde1cc6528d2f510b1f8bdaff.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        subject_type as value_field,\n        count(*) as n_records\n\n    from \"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_subject\"\n    group by subject_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'participant','non_participant','cell_line','animal_model','group','other'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "subject_type", "file_key_name": "models.GREGoR_R03_GRU_20250612_ftd_subject", "attached_node": "model.ftd.GREGoR_R03_GRU_20250612_ftd_subject", "test_metadata": {"name": "accepted_values", "kwargs": {"values": ["participant", "non_participant", "cell_line", "animal_model", "group", "other"], "column_name": "subject_type", "model": "{{ get_where_subquery(ref('GREGoR_R03_GRU_20250612_ftd_subject')) }}"}, "namespace": null}}, "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_subject_id.46fdb12cae": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GREGoR_R03_GRU_20250612_ftd_subject_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_GREGoR_R03_GRU_20250612_ftd_subject_id.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/__models.yml", "unique_id": "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_subject_id.46fdb12cae", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "docs", "not_null_GREGoR_R03_GRU_20250612_ftd_subject_id"], "alias": "not_null_GREGoR_R03_GRU_20250612_ftd_subject_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.4305904, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_ftd_subject", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GREGoR_R03_GRU_20250612_ftd_subject"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/docs/__models.yml/not_null_GREGoR_R03_GRU_20250612_ftd_subject_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_subject\"\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "id", "file_key_name": "models.GREGoR_R03_GRU_20250612_ftd_subject", "attached_node": "model.ftd.GREGoR_R03_GRU_20250612_ftd_subject", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('GREGoR_R03_GRU_20250612_ftd_subject')) }}"}, "namespace": null}}, "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_familyrelationship_family_member.b191d0d329": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GREGoR_R03_GRU_20250612_ftd_familyrelationship_family_member", "resource_type": "test", "package_name": "ftd", "path": "not_null_GREGoR_R03_GRU_202506_3ca83a998e7b6907f334d7db3902612a.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/__models.yml", "unique_id": "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_familyrelationship_family_member.b191d0d329", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "docs", "not_null_GREGoR_R03_GRU_20250612_ftd_familyrelationship_family_member"], "alias": "not_null_GREGoR_R03_GRU_202506_3ca83a998e7b6907f334d7db3902612a", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "not_null_GREGoR_R03_GRU_202506_3ca83a998e7b6907f334d7db3902612a", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "not_null_GREGoR_R03_GRU_202506_3ca83a998e7b6907f334d7db3902612a"}, "created_at": 1757448969.4315767, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"not_null_GREGoR_R03_GRU_202506_3ca83a998e7b6907f334d7db3902612a\") }}", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_ftd_familyrelationship", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GREGoR_R03_GRU_20250612_ftd_familyrelationship"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/docs/__models.yml/not_null_GREGoR_R03_GRU_202506_3ca83a998e7b6907f334d7db3902612a.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect family_member\nfrom \"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_familyrelationship\"\nwhere family_member is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "family_member", "file_key_name": "models.GREGoR_R03_GRU_20250612_ftd_familyrelationship", "attached_node": "model.ftd.GREGoR_R03_GRU_20250612_ftd_familyrelationship", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "family_member", "model": "{{ get_where_subquery(ref('GREGoR_R03_GRU_20250612_ftd_familyrelationship')) }}"}, "namespace": null}}, "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_familyrelationship_other_family_member.ecc70eeb74": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GREGoR_R03_GRU_20250612_ftd_familyrelationship_other_family_member", "resource_type": "test", "package_name": "ftd", "path": "not_null_GREGoR_R03_GRU_202506_71d8d729806ddf50eca7e8db35504c63.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/__models.yml", "unique_id": "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_familyrelationship_other_family_member.ecc70eeb74", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "docs", "not_null_GREGoR_R03_GRU_20250612_ftd_familyrelationship_other_family_member"], "alias": "not_null_GREGoR_R03_GRU_202506_71d8d729806ddf50eca7e8db35504c63", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "not_null_GREGoR_R03_GRU_202506_71d8d729806ddf50eca7e8db35504c63", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "not_null_GREGoR_R03_GRU_202506_71d8d729806ddf50eca7e8db35504c63"}, "created_at": 1757448969.432753, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"not_null_GREGoR_R03_GRU_202506_71d8d729806ddf50eca7e8db35504c63\") }}", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_ftd_familyrelationship", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GREGoR_R03_GRU_20250612_ftd_familyrelationship"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/docs/__models.yml/not_null_GREGoR_R03_GRU_202506_71d8d729806ddf50eca7e8db35504c63.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect other_family_member\nfrom \"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_familyrelationship\"\nwhere other_family_member is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "other_family_member", "file_key_name": "models.GREGoR_R03_GRU_20250612_ftd_familyrelationship", "attached_node": "model.ftd.GREGoR_R03_GRU_20250612_ftd_familyrelationship", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "other_family_member", "model": "{{ get_where_subquery(ref('GREGoR_R03_GRU_20250612_ftd_familyrelationship')) }}"}, "namespace": null}}, "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_familyrelationship_relationship_code.84a248eda1": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GREGoR_R03_GRU_20250612_ftd_familyrelationship_relationship_code", "resource_type": "test", "package_name": "ftd", "path": "not_null_GREGoR_R03_GRU_202506_827e86a0bb2ba0da4468c063b421cdf4.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/__models.yml", "unique_id": "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_familyrelationship_relationship_code.84a248eda1", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "docs", "not_null_GREGoR_R03_GRU_20250612_ftd_familyrelationship_relationship_code"], "alias": "not_null_GREGoR_R03_GRU_202506_827e86a0bb2ba0da4468c063b421cdf4", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "not_null_GREGoR_R03_GRU_202506_827e86a0bb2ba0da4468c063b421cdf4", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "not_null_GREGoR_R03_GRU_202506_827e86a0bb2ba0da4468c063b421cdf4"}, "created_at": 1757448969.4336941, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"not_null_GREGoR_R03_GRU_202506_827e86a0bb2ba0da4468c063b421cdf4\") }}", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_ftd_familyrelationship", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GREGoR_R03_GRU_20250612_ftd_familyrelationship"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/docs/__models.yml/not_null_GREGoR_R03_GRU_202506_827e86a0bb2ba0da4468c063b421cdf4.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect relationship_code\nfrom \"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_familyrelationship\"\nwhere relationship_code is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "relationship_code", "file_key_name": "models.GREGoR_R03_GRU_20250612_ftd_familyrelationship", "attached_node": "model.ftd.GREGoR_R03_GRU_20250612_ftd_familyrelationship", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "relationship_code", "model": "{{ get_where_subquery(ref('GREGoR_R03_GRU_20250612_ftd_familyrelationship')) }}"}, "namespace": null}}, "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_familyrelationship_id.24f7d5a6e0": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GREGoR_R03_GRU_20250612_ftd_familyrelationship_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_GREGoR_R03_GRU_20250612_ftd_familyrelationship_id.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/__models.yml", "unique_id": "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_familyrelationship_id.24f7d5a6e0", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "docs", "not_null_GREGoR_R03_GRU_20250612_ftd_familyrelationship_id"], "alias": "not_null_GREGoR_R03_GRU_20250612_ftd_familyrelationship_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.4346573, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_ftd_familyrelationship", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GREGoR_R03_GRU_20250612_ftd_familyrelationship"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/docs/__models.yml/not_null_GREGoR_R03_GRU_20250612_ftd_familyrelationship_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_familyrelationship\"\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "id", "file_key_name": "models.GREGoR_R03_GRU_20250612_ftd_familyrelationship", "attached_node": "model.ftd.GREGoR_R03_GRU_20250612_ftd_familyrelationship", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('GREGoR_R03_GRU_20250612_ftd_familyrelationship')) }}"}, "namespace": null}}, "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_demographics_sex.abf7feab1a": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GREGoR_R03_GRU_20250612_ftd_demographics_sex", "resource_type": "test", "package_name": "ftd", "path": "not_null_GREGoR_R03_GRU_20250612_ftd_demographics_sex.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/__models.yml", "unique_id": "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_demographics_sex.abf7feab1a", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "docs", "not_null_GREGoR_R03_GRU_20250612_ftd_demographics_sex"], "alias": "not_null_GREGoR_R03_GRU_20250612_ftd_demographics_sex", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.4356017, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_ftd_demographics", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GREGoR_R03_GRU_20250612_ftd_demographics"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/docs/__models.yml/not_null_GREGoR_R03_GRU_20250612_ftd_demographics_sex.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sex\nfrom \"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_demographics\"\nwhere sex is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "sex", "file_key_name": "models.GREGoR_R03_GRU_20250612_ftd_demographics", "attached_node": "model.ftd.GREGoR_R03_GRU_20250612_ftd_demographics", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "sex", "model": "{{ get_where_subquery(ref('GREGoR_R03_GRU_20250612_ftd_demographics')) }}"}, "namespace": null}}, "test.ftd.accepted_values_GREGoR_R03_GRU_20250612_ftd_demographics_sex__female__male__unknown__intersex.86cbf8c35f": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "accepted_values_GREGoR_R03_GRU_20250612_ftd_demographics_sex__female__male__unknown__intersex", "resource_type": "test", "package_name": "ftd", "path": "accepted_values_GREGoR_R03_GRU_7fa001da5172506fca8856e2a73855e4.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/__models.yml", "unique_id": "test.ftd.accepted_values_GREGoR_R03_GRU_20250612_ftd_demographics_sex__female__male__unknown__intersex.86cbf8c35f", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "docs", "accepted_values_GREGoR_R03_GRU_20250612_ftd_demographics_sex__female__male__unknown__intersex"], "alias": "accepted_values_GREGoR_R03_GRU_7fa001da5172506fca8856e2a73855e4", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_GREGoR_R03_GRU_7fa001da5172506fca8856e2a73855e4", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "accepted_values_GREGoR_R03_GRU_7fa001da5172506fca8856e2a73855e4"}, "created_at": 1757448969.4366, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_GREGoR_R03_GRU_7fa001da5172506fca8856e2a73855e4\") }}", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_ftd_demographics", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GREGoR_R03_GRU_20250612_ftd_demographics"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/docs/__models.yml/accepted_values_GREGoR_R03_GRU_7fa001da5172506fca8856e2a73855e4.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        sex as value_field,\n        count(*) as n_records\n\n    from \"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_demographics\"\n    group by sex\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'female','male','unknown','intersex'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "sex", "file_key_name": "models.GREGoR_R03_GRU_20250612_ftd_demographics", "attached_node": "model.ftd.GREGoR_R03_GRU_20250612_ftd_demographics", "test_metadata": {"name": "accepted_values", "kwargs": {"values": ["female", "male", "unknown", "intersex"], "column_name": "sex", "model": "{{ get_where_subquery(ref('GREGoR_R03_GRU_20250612_ftd_demographics')) }}"}, "namespace": null}}, "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_demographics_sex_display.94dfa50305": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GREGoR_R03_GRU_20250612_ftd_demographics_sex_display", "resource_type": "test", "package_name": "ftd", "path": "not_null_GREGoR_R03_GRU_20250612_ftd_demographics_sex_display.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/__models.yml", "unique_id": "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_demographics_sex_display.94dfa50305", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "docs", "not_null_GREGoR_R03_GRU_20250612_ftd_demographics_sex_display"], "alias": "not_null_GREGoR_R03_GRU_20250612_ftd_demographics_sex_display", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.439251, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_ftd_demographics", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GREGoR_R03_GRU_20250612_ftd_demographics"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/docs/__models.yml/not_null_GREGoR_R03_GRU_20250612_ftd_demographics_sex_display.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sex_display\nfrom \"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_demographics\"\nwhere sex_display is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "sex_display", "file_key_name": "models.GREGoR_R03_GRU_20250612_ftd_demographics", "attached_node": "model.ftd.GREGoR_R03_GRU_20250612_ftd_demographics", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "sex_display", "model": "{{ get_where_subquery(ref('GREGoR_R03_GRU_20250612_ftd_demographics')) }}"}, "namespace": null}}, "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_demographics_race_display.5754e0d75a": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GREGoR_R03_GRU_20250612_ftd_demographics_race_display", "resource_type": "test", "package_name": "ftd", "path": "not_null_GREGoR_R03_GRU_20250612_ftd_demographics_race_display.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/__models.yml", "unique_id": "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_demographics_race_display.5754e0d75a", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "docs", "not_null_GREGoR_R03_GRU_20250612_ftd_demographics_race_display"], "alias": "not_null_GREGoR_R03_GRU_20250612_ftd_demographics_race_display", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.44021, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_ftd_demographics", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GREGoR_R03_GRU_20250612_ftd_demographics"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/docs/__models.yml/not_null_GREGoR_R03_GRU_20250612_ftd_demographics_race_display.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect race_display\nfrom \"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_demographics\"\nwhere race_display is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "race_display", "file_key_name": "models.GREGoR_R03_GRU_20250612_ftd_demographics", "attached_node": "model.ftd.GREGoR_R03_GRU_20250612_ftd_demographics", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "race_display", "model": "{{ get_where_subquery(ref('GREGoR_R03_GRU_20250612_ftd_demographics')) }}"}, "namespace": null}}, "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_demographics_ethnicity.60de0aa865": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GREGoR_R03_GRU_20250612_ftd_demographics_ethnicity", "resource_type": "test", "package_name": "ftd", "path": "not_null_GREGoR_R03_GRU_20250612_ftd_demographics_ethnicity.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/__models.yml", "unique_id": "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_demographics_ethnicity.60de0aa865", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "docs", "not_null_GREGoR_R03_GRU_20250612_ftd_demographics_ethnicity"], "alias": "not_null_GREGoR_R03_GRU_20250612_ftd_demographics_ethnicity", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.4411871, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_ftd_demographics", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GREGoR_R03_GRU_20250612_ftd_demographics"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/docs/__models.yml/not_null_GREGoR_R03_GRU_20250612_ftd_demographics_ethnicity.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ethnicity\nfrom \"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_demographics\"\nwhere ethnicity is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "ethnicity", "file_key_name": "models.GREGoR_R03_GRU_20250612_ftd_demographics", "attached_node": "model.ftd.GREGoR_R03_GRU_20250612_ftd_demographics", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "ethnicity", "model": "{{ get_where_subquery(ref('GREGoR_R03_GRU_20250612_ftd_demographics')) }}"}, "namespace": null}}, "test.ftd.accepted_values_GREGoR_R03_GRU_20250612_ftd_demographics_ethnicity__hispanic_or_latino__not_hispanic_or_latino__unknown__asked_but_unknown.ded60e9819": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "accepted_values_GREGoR_R03_GRU_20250612_ftd_demographics_ethnicity__hispanic_or_latino__not_hispanic_or_latino__unknown__asked_but_unknown", "resource_type": "test", "package_name": "ftd", "path": "accepted_values_GREGoR_R03_GRU_d0b431aa49e0da3148430db3d20dbc3c.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/__models.yml", "unique_id": "test.ftd.accepted_values_GREGoR_R03_GRU_20250612_ftd_demographics_ethnicity__hispanic_or_latino__not_hispanic_or_latino__unknown__asked_but_unknown.ded60e9819", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "docs", "accepted_values_GREGoR_R03_GRU_20250612_ftd_demographics_ethnicity__hispanic_or_latino__not_hispanic_or_latino__unknown__asked_but_unknown"], "alias": "accepted_values_GREGoR_R03_GRU_d0b431aa49e0da3148430db3d20dbc3c", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_GREGoR_R03_GRU_d0b431aa49e0da3148430db3d20dbc3c", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "accepted_values_GREGoR_R03_GRU_d0b431aa49e0da3148430db3d20dbc3c"}, "created_at": 1757448969.4423091, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_GREGoR_R03_GRU_d0b431aa49e0da3148430db3d20dbc3c\") }}", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_ftd_demographics", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GREGoR_R03_GRU_20250612_ftd_demographics"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/docs/__models.yml/accepted_values_GREGoR_R03_GRU_d0b431aa49e0da3148430db3d20dbc3c.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        ethnicity as value_field,\n        count(*) as n_records\n\n    from \"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_demographics\"\n    group by ethnicity\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'hispanic_or_latino','not_hispanic_or_latino','unknown','asked_but_unknown'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "ethnicity", "file_key_name": "models.GREGoR_R03_GRU_20250612_ftd_demographics", "attached_node": "model.ftd.GREGoR_R03_GRU_20250612_ftd_demographics", "test_metadata": {"name": "accepted_values", "kwargs": {"values": ["hispanic_or_latino", "not_hispanic_or_latino", "unknown", "asked_but_unknown"], "column_name": "ethnicity", "model": "{{ get_where_subquery(ref('GREGoR_R03_GRU_20250612_ftd_demographics')) }}"}, "namespace": null}}, "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_demographics_ethnicity_display.4fc23334ce": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GREGoR_R03_GRU_20250612_ftd_demographics_ethnicity_display", "resource_type": "test", "package_name": "ftd", "path": "not_null_GREGoR_R03_GRU_202506_4fa790df025a49a47be8ffff3961d5be.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/__models.yml", "unique_id": "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_demographics_ethnicity_display.4fc23334ce", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "docs", "not_null_GREGoR_R03_GRU_20250612_ftd_demographics_ethnicity_display"], "alias": "not_null_GREGoR_R03_GRU_202506_4fa790df025a49a47be8ffff3961d5be", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "not_null_GREGoR_R03_GRU_202506_4fa790df025a49a47be8ffff3961d5be", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "not_null_GREGoR_R03_GRU_202506_4fa790df025a49a47be8ffff3961d5be"}, "created_at": 1757448969.4448771, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"not_null_GREGoR_R03_GRU_202506_4fa790df025a49a47be8ffff3961d5be\") }}", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_ftd_demographics", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GREGoR_R03_GRU_20250612_ftd_demographics"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/docs/__models.yml/not_null_GREGoR_R03_GRU_202506_4fa790df025a49a47be8ffff3961d5be.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ethnicity_display\nfrom \"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_demographics\"\nwhere ethnicity_display is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "ethnicity_display", "file_key_name": "models.GREGoR_R03_GRU_20250612_ftd_demographics", "attached_node": "model.ftd.GREGoR_R03_GRU_20250612_ftd_demographics", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "ethnicity_display", "model": "{{ get_where_subquery(ref('GREGoR_R03_GRU_20250612_ftd_demographics')) }}"}, "namespace": null}}, "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_demographics_id.9176e5b77a": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GREGoR_R03_GRU_20250612_ftd_demographics_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_GREGoR_R03_GRU_20250612_ftd_demographics_id.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/__models.yml", "unique_id": "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_demographics_id.9176e5b77a", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "docs", "not_null_GREGoR_R03_GRU_20250612_ftd_demographics_id"], "alias": "not_null_GREGoR_R03_GRU_20250612_ftd_demographics_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.4459405, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_ftd_demographics", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GREGoR_R03_GRU_20250612_ftd_demographics"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/docs/__models.yml/not_null_GREGoR_R03_GRU_20250612_ftd_demographics_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_demographics\"\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "id", "file_key_name": "models.GREGoR_R03_GRU_20250612_ftd_demographics", "attached_node": "model.ftd.GREGoR_R03_GRU_20250612_ftd_demographics", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('GREGoR_R03_GRU_20250612_ftd_demographics')) }}"}, "namespace": null}}, "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_accesspolicy_description.884ba1fa9d": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GREGoR_R03_GRU_20250612_ftd_accesspolicy_description", "resource_type": "test", "package_name": "ftd", "path": "not_null_GREGoR_R03_GRU_20250612_ftd_accesspolicy_description.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/__models.yml", "unique_id": "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_accesspolicy_description.884ba1fa9d", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "docs", "not_null_GREGoR_R03_GRU_20250612_ftd_accesspolicy_description"], "alias": "not_null_GREGoR_R03_GRU_20250612_ftd_accesspolicy_description", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.4469512, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_ftd_accesspolicy", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GREGoR_R03_GRU_20250612_ftd_accesspolicy"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/docs/__models.yml/not_null_GREGoR_R03_GRU_20250612_ftd_accesspolicy_description.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect description\nfrom \"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_accesspolicy\"\nwhere description is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "description", "file_key_name": "models.GREGoR_R03_GRU_20250612_ftd_accesspolicy", "attached_node": "model.ftd.GREGoR_R03_GRU_20250612_ftd_accesspolicy", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "description", "model": "{{ get_where_subquery(ref('GREGoR_R03_GRU_20250612_ftd_accesspolicy')) }}"}, "namespace": null}}, "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_accesspolicy_id.f90ad9a4e4": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GREGoR_R03_GRU_20250612_ftd_accesspolicy_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_GREGoR_R03_GRU_20250612_ftd_accesspolicy_id.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/__models.yml", "unique_id": "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_accesspolicy_id.f90ad9a4e4", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "docs", "not_null_GREGoR_R03_GRU_20250612_ftd_accesspolicy_id"], "alias": "not_null_GREGoR_R03_GRU_20250612_ftd_accesspolicy_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.4480877, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_ftd_accesspolicy", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GREGoR_R03_GRU_20250612_ftd_accesspolicy"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/docs/__models.yml/not_null_GREGoR_R03_GRU_20250612_ftd_accesspolicy_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_accesspolicy\"\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "id", "file_key_name": "models.GREGoR_R03_GRU_20250612_ftd_accesspolicy", "attached_node": "model.ftd.GREGoR_R03_GRU_20250612_ftd_accesspolicy", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('GREGoR_R03_GRU_20250612_ftd_accesspolicy')) }}"}, "namespace": null}}, "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_study_study_title.89114aac72": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GREGoR_R03_GRU_20250612_ftd_study_study_title", "resource_type": "test", "package_name": "ftd", "path": "not_null_GREGoR_R03_GRU_20250612_ftd_study_study_title.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/__models.yml", "unique_id": "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_study_study_title.89114aac72", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "docs", "not_null_GREGoR_R03_GRU_20250612_ftd_study_study_title"], "alias": "not_null_GREGoR_R03_GRU_20250612_ftd_study_study_title", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.449064, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_ftd_study", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GREGoR_R03_GRU_20250612_ftd_study"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/docs/__models.yml/not_null_GREGoR_R03_GRU_20250612_ftd_study_study_title.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect study_title\nfrom \"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_study\"\nwhere study_title is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "study_title", "file_key_name": "models.GREGoR_R03_GRU_20250612_ftd_study", "attached_node": "model.ftd.GREGoR_R03_GRU_20250612_ftd_study", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "study_title", "model": "{{ get_where_subquery(ref('GREGoR_R03_GRU_20250612_ftd_study')) }}"}, "namespace": null}}, "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_study_id.d03639ac90": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GREGoR_R03_GRU_20250612_ftd_study_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_GREGoR_R03_GRU_20250612_ftd_study_id.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/__models.yml", "unique_id": "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_study_id.d03639ac90", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "docs", "not_null_GREGoR_R03_GRU_20250612_ftd_study_id"], "alias": "not_null_GREGoR_R03_GRU_20250612_ftd_study_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.4500053, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_ftd_study", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GREGoR_R03_GRU_20250612_ftd_study"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/docs/__models.yml/not_null_GREGoR_R03_GRU_20250612_ftd_study_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_study\"\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "id", "file_key_name": "models.GREGoR_R03_GRU_20250612_ftd_study", "attached_node": "model.ftd.GREGoR_R03_GRU_20250612_ftd_study", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('GREGoR_R03_GRU_20250612_ftd_study')) }}"}, "namespace": null}}, "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_familymember_family_member.bec516573c": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GREGoR_R03_GRU_20250612_ftd_familymember_family_member", "resource_type": "test", "package_name": "ftd", "path": "not_null_GREGoR_R03_GRU_20250612_ftd_familymember_family_member.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/__models.yml", "unique_id": "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_familymember_family_member.bec516573c", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "docs", "not_null_GREGoR_R03_GRU_20250612_ftd_familymember_family_member"], "alias": "not_null_GREGoR_R03_GRU_20250612_ftd_familymember_family_member", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.450944, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_ftd_familymember", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GREGoR_R03_GRU_20250612_ftd_familymember"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/docs/__models.yml/not_null_GREGoR_R03_GRU_20250612_ftd_familymember_family_member.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect family_member\nfrom \"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_familymember\"\nwhere family_member is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "family_member", "file_key_name": "models.GREGoR_R03_GRU_20250612_ftd_familymember", "attached_node": "model.ftd.GREGoR_R03_GRU_20250612_ftd_familymember", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "family_member", "model": "{{ get_where_subquery(ref('GREGoR_R03_GRU_20250612_ftd_familymember')) }}"}, "namespace": null}}, "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_familymember_id.31d5e77f00": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GREGoR_R03_GRU_20250612_ftd_familymember_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_GREGoR_R03_GRU_20250612_ftd_familymember_id.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/__models.yml", "unique_id": "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_familymember_id.31d5e77f00", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "docs", "not_null_GREGoR_R03_GRU_20250612_ftd_familymember_id"], "alias": "not_null_GREGoR_R03_GRU_20250612_ftd_familymember_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.4518862, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_ftd_familymember", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GREGoR_R03_GRU_20250612_ftd_familymember"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/docs/__models.yml/not_null_GREGoR_R03_GRU_20250612_ftd_familymember_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_familymember\"\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "id", "file_key_name": "models.GREGoR_R03_GRU_20250612_ftd_familymember", "attached_node": "model.ftd.GREGoR_R03_GRU_20250612_ftd_familymember", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('GREGoR_R03_GRU_20250612_ftd_familymember')) }}"}, "namespace": null}}, "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_demographics_race_demographics_id.4fba37007a": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GREGoR_R03_GRU_20250612_ftd_demographics_race_demographics_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_GREGoR_R03_GRU_202506_1e8a08e789c5225d78f7e93ae99463ed.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/__models.yml", "unique_id": "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_demographics_race_demographics_id.4fba37007a", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "docs", "not_null_GREGoR_R03_GRU_20250612_ftd_demographics_race_demographics_id"], "alias": "not_null_GREGoR_R03_GRU_202506_1e8a08e789c5225d78f7e93ae99463ed", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "not_null_GREGoR_R03_GRU_202506_1e8a08e789c5225d78f7e93ae99463ed", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "not_null_GREGoR_R03_GRU_202506_1e8a08e789c5225d78f7e93ae99463ed"}, "created_at": 1757448969.4529738, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"not_null_GREGoR_R03_GRU_202506_1e8a08e789c5225d78f7e93ae99463ed\") }}", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_ftd_demographics_race", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_race"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/docs/__models.yml/not_null_GREGoR_R03_GRU_202506_1e8a08e789c5225d78f7e93ae99463ed.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect demographics_id\nfrom \"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_demographics_race\"\nwhere demographics_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "demographics_id", "file_key_name": "models.GREGoR_R03_GRU_20250612_ftd_demographics_race", "attached_node": "model.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_race", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "demographics_id", "model": "{{ get_where_subquery(ref('GREGoR_R03_GRU_20250612_ftd_demographics_race')) }}"}, "namespace": null}}, "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_demographics_race_race.f66600d494": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GREGoR_R03_GRU_20250612_ftd_demographics_race_race", "resource_type": "test", "package_name": "ftd", "path": "not_null_GREGoR_R03_GRU_20250612_ftd_demographics_race_race.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/__models.yml", "unique_id": "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_demographics_race_race.f66600d494", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "docs", "not_null_GREGoR_R03_GRU_20250612_ftd_demographics_race_race"], "alias": "not_null_GREGoR_R03_GRU_20250612_ftd_demographics_race_race", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.4539032, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_ftd_demographics_race", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_race"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/docs/__models.yml/not_null_GREGoR_R03_GRU_20250612_ftd_demographics_race_race.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect race\nfrom \"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_demographics_race\"\nwhere race is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "race", "file_key_name": "models.GREGoR_R03_GRU_20250612_ftd_demographics_race", "attached_node": "model.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_race", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "race", "model": "{{ get_where_subquery(ref('GREGoR_R03_GRU_20250612_ftd_demographics_race')) }}"}, "namespace": null}}, "test.ftd.accepted_values_GREGoR_R03_GRU_20250612_ftd_demographics_race_race__american_indian_or_alaskan_native__asian__black_or_african_american__native_hawaiian_or_pacific_islander__white__other_race__unknown__asked_but_unknown.3ff8125da0": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "accepted_values_GREGoR_R03_GRU_20250612_ftd_demographics_race_race__american_indian_or_alaskan_native__asian__black_or_african_american__native_hawaiian_or_pacific_islander__white__other_race__unknown__asked_but_unknown", "resource_type": "test", "package_name": "ftd", "path": "accepted_values_GREGoR_R03_GRU_3b6b76b178f8e6d867609b5dd49f5637.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/__models.yml", "unique_id": "test.ftd.accepted_values_GREGoR_R03_GRU_20250612_ftd_demographics_race_race__american_indian_or_alaskan_native__asian__black_or_african_american__native_hawaiian_or_pacific_islander__white__other_race__unknown__asked_but_unknown.3ff8125da0", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "docs", "accepted_values_GREGoR_R03_GRU_20250612_ftd_demographics_race_race__american_indian_or_alaskan_native__asian__black_or_african_american__native_hawaiian_or_pacific_islander__white__other_race__unknown__asked_but_unknown"], "alias": "accepted_values_GREGoR_R03_GRU_3b6b76b178f8e6d867609b5dd49f5637", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_GREGoR_R03_GRU_3b6b76b178f8e6d867609b5dd49f5637", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "accepted_values_GREGoR_R03_GRU_3b6b76b178f8e6d867609b5dd49f5637"}, "created_at": 1757448969.4549181, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_GREGoR_R03_GRU_3b6b76b178f8e6d867609b5dd49f5637\") }}", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_ftd_demographics_race", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_race"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/docs/__models.yml/accepted_values_GREGoR_R03_GRU_3b6b76b178f8e6d867609b5dd49f5637.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        race as value_field,\n        count(*) as n_records\n\n    from \"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_demographics_race\"\n    group by race\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'american_indian_or_alaskan_native','asian','black_or_african_american','native_hawaiian_or_pacific_islander','white','other_race','unknown','asked_but_unknown'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "race", "file_key_name": "models.GREGoR_R03_GRU_20250612_ftd_demographics_race", "attached_node": "model.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_race", "test_metadata": {"name": "accepted_values", "kwargs": {"values": ["american_indian_or_alaskan_native", "asian", "black_or_african_american", "native_hawaiian_or_pacific_islander", "white", "other_race", "unknown", "asked_but_unknown"], "column_name": "race", "model": "{{ get_where_subquery(ref('GREGoR_R03_GRU_20250612_ftd_demographics_race')) }}"}, "namespace": null}}, "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code_accesspolicy_id.7aacfbdb22": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code_accesspolicy_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_GREGoR_R03_GRU_202506_2dccce120209d5bb6fe6a3d19ff85892.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/__models.yml", "unique_id": "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code_accesspolicy_id.7aacfbdb22", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "docs", "not_null_GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code_accesspolicy_id"], "alias": "not_null_GREGoR_R03_GRU_202506_2dccce120209d5bb6fe6a3d19ff85892", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "not_null_GREGoR_R03_GRU_202506_2dccce120209d5bb6fe6a3d19ff85892", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "not_null_GREGoR_R03_GRU_202506_2dccce120209d5bb6fe6a3d19ff85892"}, "created_at": 1757448969.4579148, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"not_null_GREGoR_R03_GRU_202506_2dccce120209d5bb6fe6a3d19ff85892\") }}", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/docs/__models.yml/not_null_GREGoR_R03_GRU_202506_2dccce120209d5bb6fe6a3d19ff85892.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect accesspolicy_id\nfrom \"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code\"\nwhere accesspolicy_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "accesspolicy_id", "file_key_name": "models.GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code", "attached_node": "model.ftd.GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "accesspolicy_id", "model": "{{ get_where_subquery(ref('GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code')) }}"}, "namespace": null}}, "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code_access_policy_code.726e37466c": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code_access_policy_code", "resource_type": "test", "package_name": "ftd", "path": "not_null_GREGoR_R03_GRU_202506_c2cea18b3c36f3b3da04f7750c6a7c04.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/__models.yml", "unique_id": "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code_access_policy_code.726e37466c", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "docs", "not_null_GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code_access_policy_code"], "alias": "not_null_GREGoR_R03_GRU_202506_c2cea18b3c36f3b3da04f7750c6a7c04", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "not_null_GREGoR_R03_GRU_202506_c2cea18b3c36f3b3da04f7750c6a7c04", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "not_null_GREGoR_R03_GRU_202506_c2cea18b3c36f3b3da04f7750c6a7c04"}, "created_at": 1757448969.4589279, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"not_null_GREGoR_R03_GRU_202506_c2cea18b3c36f3b3da04f7750c6a7c04\") }}", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/docs/__models.yml/not_null_GREGoR_R03_GRU_202506_c2cea18b3c36f3b3da04f7750c6a7c04.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect access_policy_code\nfrom \"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code\"\nwhere access_policy_code is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "access_policy_code", "file_key_name": "models.GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code", "attached_node": "model.ftd.GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "access_policy_code", "model": "{{ get_where_subquery(ref('GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code')) }}"}, "namespace": null}}, "test.ftd.accepted_values_GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code_access_policy_code__gru__hmb__ds__irb__pub__col__npu__mds__gso__gsr.5d7d564f71": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "accepted_values_GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code_access_policy_code__gru__hmb__ds__irb__pub__col__npu__mds__gso__gsr", "resource_type": "test", "package_name": "ftd", "path": "accepted_values_GREGoR_R03_GRU_24bee59566a4c560af3ef8535cda007d.sql", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/__models.yml", "unique_id": "test.ftd.accepted_values_GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code_access_policy_code__gru__hmb__ds__irb__pub__col__npu__mds__gso__gsr.5d7d564f71", "fqn": ["ftd", "GREGoR_R03_GRU_20250612", "docs", "accepted_values_GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code_access_policy_code__gru__hmb__ds__irb__pub__col__npu__mds__gso__gsr"], "alias": "accepted_values_GREGoR_R03_GRU_24bee59566a4c560af3ef8535cda007d", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_GREGoR_R03_GRU_24bee59566a4c560af3ef8535cda007d", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "accepted_values_GREGoR_R03_GRU_24bee59566a4c560af3ef8535cda007d"}, "created_at": 1757448969.4599042, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_GREGoR_R03_GRU_24bee59566a4c560af3ef8535cda007d\") }}", "language": "sql", "refs": [{"name": "GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code"]}, "compiled_path": "target/compiled/ftd/models/GREGoR_R03_GRU_20250612/docs/__models.yml/accepted_values_GREGoR_R03_GRU_24bee59566a4c560af3ef8535cda007d.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        access_policy_code as value_field,\n        count(*) as n_records\n\n    from \"dbt\".\"main_GREGoR_R03_GRU_20250612_data\".\"GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code\"\n    group by access_policy_code\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'gru','hmb','ds','irb','pub','col','npu','mds','gso','gsr'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "access_policy_code", "file_key_name": "models.GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code", "attached_node": "model.ftd.GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code", "test_metadata": {"name": "accepted_values", "kwargs": {"values": ["gru", "hmb", "ds", "irb", "pub", "col", "npu", "mds", "gso", "gsr"], "column_name": "access_policy_code", "model": "{{ get_where_subquery(ref('GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code')) }}"}, "namespace": null}}, "test.ftd.not_null_cmg_bh_ftd_subject_external_id_subject_id.c3f7eeebb8": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_cmg_bh_ftd_subject_external_id_subject_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_cmg_bh_ftd_subject_external_id_subject_id.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.not_null_cmg_bh_ftd_subject_external_id_subject_id.c3f7eeebb8", "fqn": ["ftd", "cmg_bh", "docs", "not_null_cmg_bh_ftd_subject_external_id_subject_id"], "alias": "not_null_cmg_bh_ftd_subject_external_id_subject_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.487061, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_subject_external_id", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_subject_external_id"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/not_null_cmg_bh_ftd_subject_external_id_subject_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect subject_id\nfrom \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_subject_external_id\"\nwhere subject_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "subject_id", "file_key_name": "models.cmg_bh_ftd_subject_external_id", "attached_node": "model.ftd.cmg_bh_ftd_subject_external_id", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "subject_id", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_subject_external_id')) }}"}, "namespace": null}}, "test.ftd.not_null_cmg_bh_ftd_file_sample_file_id.ff03de732b": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_cmg_bh_ftd_file_sample_file_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_cmg_bh_ftd_file_sample_file_id.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.not_null_cmg_bh_ftd_file_sample_file_id.ff03de732b", "fqn": ["ftd", "cmg_bh", "docs", "not_null_cmg_bh_ftd_file_sample_file_id"], "alias": "not_null_cmg_bh_ftd_file_sample_file_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.4882097, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_file_sample", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_file_sample"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/not_null_cmg_bh_ftd_file_sample_file_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect file_id\nfrom \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_file_sample\"\nwhere file_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "file_id", "file_key_name": "models.cmg_bh_ftd_file_sample", "attached_node": "model.ftd.cmg_bh_ftd_file_sample", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "file_id", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_file_sample')) }}"}, "namespace": null}}, "test.ftd.not_null_cmg_bh_ftd_file_sample_sample_id.40d3fad81f": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_cmg_bh_ftd_file_sample_sample_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_cmg_bh_ftd_file_sample_sample_id.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.not_null_cmg_bh_ftd_file_sample_sample_id.40d3fad81f", "fqn": ["ftd", "cmg_bh", "docs", "not_null_cmg_bh_ftd_file_sample_sample_id"], "alias": "not_null_cmg_bh_ftd_file_sample_sample_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.4893687, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_file_sample", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_file_sample"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/not_null_cmg_bh_ftd_file_sample_sample_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sample_id\nfrom \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_file_sample\"\nwhere sample_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "sample_id", "file_key_name": "models.cmg_bh_ftd_file_sample", "attached_node": "model.ftd.cmg_bh_ftd_file_sample", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "sample_id", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_file_sample')) }}"}, "namespace": null}}, "test.ftd.not_null_cmg_bh_ftd_filemetadata_id.a9d2052230": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_cmg_bh_ftd_filemetadata_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_cmg_bh_ftd_filemetadata_id.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.not_null_cmg_bh_ftd_filemetadata_id.a9d2052230", "fqn": ["ftd", "cmg_bh", "docs", "not_null_cmg_bh_ftd_filemetadata_id"], "alias": "not_null_cmg_bh_ftd_filemetadata_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.4904263, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_filemetadata", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_filemetadata"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/not_null_cmg_bh_ftd_filemetadata_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_filemetadata\"\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "id", "file_key_name": "models.cmg_bh_ftd_filemetadata", "attached_node": "model.ftd.cmg_bh_ftd_filemetadata", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_filemetadata')) }}"}, "namespace": null}}, "test.ftd.not_null_cmg_bh_ftd_sample_external_id_sample_id.57a42a1c3d": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_cmg_bh_ftd_sample_external_id_sample_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_cmg_bh_ftd_sample_external_id_sample_id.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.not_null_cmg_bh_ftd_sample_external_id_sample_id.57a42a1c3d", "fqn": ["ftd", "cmg_bh", "docs", "not_null_cmg_bh_ftd_sample_external_id_sample_id"], "alias": "not_null_cmg_bh_ftd_sample_external_id_sample_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.4914434, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_sample_external_id", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_sample_external_id"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/not_null_cmg_bh_ftd_sample_external_id_sample_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sample_id\nfrom \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_sample_external_id\"\nwhere sample_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "sample_id", "file_key_name": "models.cmg_bh_ftd_sample_external_id", "attached_node": "model.ftd.cmg_bh_ftd_sample_external_id", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "sample_id", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_sample_external_id')) }}"}, "namespace": null}}, "test.ftd.not_null_cmg_bh_ftd_file_id.994ce4e741": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_cmg_bh_ftd_file_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_cmg_bh_ftd_file_id.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.not_null_cmg_bh_ftd_file_id.994ce4e741", "fqn": ["ftd", "cmg_bh", "docs", "not_null_cmg_bh_ftd_file_id"], "alias": "not_null_cmg_bh_ftd_file_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.4924636, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_file", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_file"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/not_null_cmg_bh_ftd_file_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_file\"\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "id", "file_key_name": "models.cmg_bh_ftd_file", "attached_node": "model.ftd.cmg_bh_ftd_file", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_file')) }}"}, "namespace": null}}, "test.ftd.not_null_cmg_bh_ftd_familymember_family_member.25846a93af": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_cmg_bh_ftd_familymember_family_member", "resource_type": "test", "package_name": "ftd", "path": "not_null_cmg_bh_ftd_familymember_family_member.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.not_null_cmg_bh_ftd_familymember_family_member.25846a93af", "fqn": ["ftd", "cmg_bh", "docs", "not_null_cmg_bh_ftd_familymember_family_member"], "alias": "not_null_cmg_bh_ftd_familymember_family_member", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.49344, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_familymember", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_familymember"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/not_null_cmg_bh_ftd_familymember_family_member.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect family_member\nfrom \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_familymember\"\nwhere family_member is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "family_member", "file_key_name": "models.cmg_bh_ftd_familymember", "attached_node": "model.ftd.cmg_bh_ftd_familymember", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "family_member", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_familymember')) }}"}, "namespace": null}}, "test.ftd.not_null_cmg_bh_ftd_familymember_id.7d17665875": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_cmg_bh_ftd_familymember_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_cmg_bh_ftd_familymember_id.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.not_null_cmg_bh_ftd_familymember_id.7d17665875", "fqn": ["ftd", "cmg_bh", "docs", "not_null_cmg_bh_ftd_familymember_id"], "alias": "not_null_cmg_bh_ftd_familymember_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.4945014, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_familymember", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_familymember"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/not_null_cmg_bh_ftd_familymember_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_familymember\"\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "id", "file_key_name": "models.cmg_bh_ftd_familymember", "attached_node": "model.ftd.cmg_bh_ftd_familymember", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_familymember')) }}"}, "namespace": null}}, "test.ftd.not_null_cmg_bh_ftd_subjectassertion_source_data_subjectassertion_id.fb88110502": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_cmg_bh_ftd_subjectassertion_source_data_subjectassertion_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_cmg_bh_ftd_subjectass_8298b55047b83ad2a5fa3f5c67d18637.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.not_null_cmg_bh_ftd_subjectassertion_source_data_subjectassertion_id.fb88110502", "fqn": ["ftd", "cmg_bh", "docs", "not_null_cmg_bh_ftd_subjectassertion_source_data_subjectassertion_id"], "alias": "not_null_cmg_bh_ftd_subjectass_8298b55047b83ad2a5fa3f5c67d18637", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "not_null_cmg_bh_ftd_subjectass_8298b55047b83ad2a5fa3f5c67d18637", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "not_null_cmg_bh_ftd_subjectass_8298b55047b83ad2a5fa3f5c67d18637"}, "created_at": 1757448969.495471, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"not_null_cmg_bh_ftd_subjectass_8298b55047b83ad2a5fa3f5c67d18637\") }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_subjectassertion_source_data", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_subjectassertion_source_data"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/not_null_cmg_bh_ftd_subjectass_8298b55047b83ad2a5fa3f5c67d18637.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect subjectassertion_id\nfrom \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_subjectassertion_source_data\"\nwhere subjectassertion_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "subjectassertion_id", "file_key_name": "models.cmg_bh_ftd_subjectassertion_source_data", "attached_node": "model.ftd.cmg_bh_ftd_subjectassertion_source_data", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "subjectassertion_id", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_subjectassertion_source_data')) }}"}, "namespace": null}}, "test.ftd.not_null_cmg_bh_ftd_subjectassertion_source_data_source_data_id.8d1fc86b22": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_cmg_bh_ftd_subjectassertion_source_data_source_data_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_cmg_bh_ftd_subjectassertion_source_data_source_data_id.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.not_null_cmg_bh_ftd_subjectassertion_source_data_source_data_id.8d1fc86b22", "fqn": ["ftd", "cmg_bh", "docs", "not_null_cmg_bh_ftd_subjectassertion_source_data_source_data_id"], "alias": "not_null_cmg_bh_ftd_subjectassertion_source_data_source_data_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.4964592, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_subjectassertion_source_data", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_subjectassertion_source_data"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/not_null_cmg_bh_ftd_subjectassertion_source_data_source_data_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect source_data_id\nfrom \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_subjectassertion_source_data\"\nwhere source_data_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "source_data_id", "file_key_name": "models.cmg_bh_ftd_subjectassertion_source_data", "attached_node": "model.ftd.cmg_bh_ftd_subjectassertion_source_data", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "source_data_id", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_subjectassertion_source_data')) }}"}, "namespace": null}}, "test.ftd.not_null_cmg_bh_ftd_study_external_id_study_id.c38497e719": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_cmg_bh_ftd_study_external_id_study_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_cmg_bh_ftd_study_external_id_study_id.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.not_null_cmg_bh_ftd_study_external_id_study_id.c38497e719", "fqn": ["ftd", "cmg_bh", "docs", "not_null_cmg_bh_ftd_study_external_id_study_id"], "alias": "not_null_cmg_bh_ftd_study_external_id_study_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.4974093, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_study_external_id", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_study_external_id"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/not_null_cmg_bh_ftd_study_external_id_study_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect study_id\nfrom \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_study_external_id\"\nwhere study_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "study_id", "file_key_name": "models.cmg_bh_ftd_study_external_id", "attached_node": "model.ftd.cmg_bh_ftd_study_external_id", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "study_id", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_study_external_id')) }}"}, "namespace": null}}, "test.ftd.not_null_cmg_bh_ftd_sourcedata_external_id_sourcedata_id.3b1e11fa21": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_cmg_bh_ftd_sourcedata_external_id_sourcedata_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_cmg_bh_ftd_sourcedata_external_id_sourcedata_id.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.not_null_cmg_bh_ftd_sourcedata_external_id_sourcedata_id.3b1e11fa21", "fqn": ["ftd", "cmg_bh", "docs", "not_null_cmg_bh_ftd_sourcedata_external_id_sourcedata_id"], "alias": "not_null_cmg_bh_ftd_sourcedata_external_id_sourcedata_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.4984198, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_sourcedata_external_id", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_sourcedata_external_id"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/not_null_cmg_bh_ftd_sourcedata_external_id_sourcedata_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sourcedata_id\nfrom \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_sourcedata_external_id\"\nwhere sourcedata_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "sourcedata_id", "file_key_name": "models.cmg_bh_ftd_sourcedata_external_id", "attached_node": "model.ftd.cmg_bh_ftd_sourcedata_external_id", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "sourcedata_id", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_sourcedata_external_id')) }}"}, "namespace": null}}, "test.ftd.not_null_cmg_bh_ftd_sample_storage_method_sample_id.b358a9fe79": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_cmg_bh_ftd_sample_storage_method_sample_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_cmg_bh_ftd_sample_storage_method_sample_id.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.not_null_cmg_bh_ftd_sample_storage_method_sample_id.b358a9fe79", "fqn": ["ftd", "cmg_bh", "docs", "not_null_cmg_bh_ftd_sample_storage_method_sample_id"], "alias": "not_null_cmg_bh_ftd_sample_storage_method_sample_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.4994545, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_sample_storage_method", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_sample_storage_method"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/not_null_cmg_bh_ftd_sample_storage_method_sample_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sample_id\nfrom \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_sample_storage_method\"\nwhere sample_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "sample_id", "file_key_name": "models.cmg_bh_ftd_sample_storage_method", "attached_node": "model.ftd.cmg_bh_ftd_sample_storage_method", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "sample_id", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_sample_storage_method')) }}"}, "namespace": null}}, "test.ftd.not_null_cmg_bh_ftd_biospecimencollection_external_id_biospecimencollection_id.355ab64d59": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_cmg_bh_ftd_biospecimencollection_external_id_biospecimencollection_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_cmg_bh_ftd_biospecime_1aaf766ce188868f61ce1f44bc0c656e.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.not_null_cmg_bh_ftd_biospecimencollection_external_id_biospecimencollection_id.355ab64d59", "fqn": ["ftd", "cmg_bh", "docs", "not_null_cmg_bh_ftd_biospecimencollection_external_id_biospecimencollection_id"], "alias": "not_null_cmg_bh_ftd_biospecime_1aaf766ce188868f61ce1f44bc0c656e", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "not_null_cmg_bh_ftd_biospecime_1aaf766ce188868f61ce1f44bc0c656e", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "not_null_cmg_bh_ftd_biospecime_1aaf766ce188868f61ce1f44bc0c656e"}, "created_at": 1757448969.5004725, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"not_null_cmg_bh_ftd_biospecime_1aaf766ce188868f61ce1f44bc0c656e\") }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_biospecimencollection_external_id", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_biospecimencollection_external_id"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/not_null_cmg_bh_ftd_biospecime_1aaf766ce188868f61ce1f44bc0c656e.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect biospecimencollection_id\nfrom \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_biospecimencollection_external_id\"\nwhere biospecimencollection_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "biospecimencollection_id", "file_key_name": "models.cmg_bh_ftd_biospecimencollection_external_id", "attached_node": "model.ftd.cmg_bh_ftd_biospecimencollection_external_id", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "biospecimencollection_id", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_biospecimencollection_external_id')) }}"}, "namespace": null}}, "test.ftd.not_null_cmg_bh_ftd_sample_processing_sample_id.0dbcfa96e2": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_cmg_bh_ftd_sample_processing_sample_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_cmg_bh_ftd_sample_processing_sample_id.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.not_null_cmg_bh_ftd_sample_processing_sample_id.0dbcfa96e2", "fqn": ["ftd", "cmg_bh", "docs", "not_null_cmg_bh_ftd_sample_processing_sample_id"], "alias": "not_null_cmg_bh_ftd_sample_processing_sample_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.5014124, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_sample_processing", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_sample_processing"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/not_null_cmg_bh_ftd_sample_processing_sample_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sample_id\nfrom \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_sample_processing\"\nwhere sample_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "sample_id", "file_key_name": "models.cmg_bh_ftd_sample_processing", "attached_node": "model.ftd.cmg_bh_ftd_sample_processing", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "sample_id", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_sample_processing')) }}"}, "namespace": null}}, "test.ftd.not_null_cmg_bh_ftd_subject_subject_type.2ffb1cf192": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_cmg_bh_ftd_subject_subject_type", "resource_type": "test", "package_name": "ftd", "path": "not_null_cmg_bh_ftd_subject_subject_type.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.not_null_cmg_bh_ftd_subject_subject_type.2ffb1cf192", "fqn": ["ftd", "cmg_bh", "docs", "not_null_cmg_bh_ftd_subject_subject_type"], "alias": "not_null_cmg_bh_ftd_subject_subject_type", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.5025442, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_subject", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_subject"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/not_null_cmg_bh_ftd_subject_subject_type.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect subject_type\nfrom \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_subject\"\nwhere subject_type is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "subject_type", "file_key_name": "models.cmg_bh_ftd_subject", "attached_node": "model.ftd.cmg_bh_ftd_subject", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "subject_type", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_subject')) }}"}, "namespace": null}}, "test.ftd.accepted_values_cmg_bh_ftd_subject_subject_type__participant__non_participant__cell_line__animal_model__group__other.496ad5f1a3": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "accepted_values_cmg_bh_ftd_subject_subject_type__participant__non_participant__cell_line__animal_model__group__other", "resource_type": "test", "package_name": "ftd", "path": "accepted_values_cmg_bh_ftd_sub_8efbada8afc0c461c78a28b1c2abcf68.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.accepted_values_cmg_bh_ftd_subject_subject_type__participant__non_participant__cell_line__animal_model__group__other.496ad5f1a3", "fqn": ["ftd", "cmg_bh", "docs", "accepted_values_cmg_bh_ftd_subject_subject_type__participant__non_participant__cell_line__animal_model__group__other"], "alias": "accepted_values_cmg_bh_ftd_sub_8efbada8afc0c461c78a28b1c2abcf68", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_cmg_bh_ftd_sub_8efbada8afc0c461c78a28b1c2abcf68", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "accepted_values_cmg_bh_ftd_sub_8efbada8afc0c461c78a28b1c2abcf68"}, "created_at": 1757448969.50353, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_cmg_bh_ftd_sub_8efbada8afc0c461c78a28b1c2abcf68\") }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_subject", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_subject"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/accepted_values_cmg_bh_ftd_sub_8efbada8afc0c461c78a28b1c2abcf68.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        subject_type as value_field,\n        count(*) as n_records\n\n    from \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_subject\"\n    group by subject_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'participant','non_participant','cell_line','animal_model','group','other'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "subject_type", "file_key_name": "models.cmg_bh_ftd_subject", "attached_node": "model.ftd.cmg_bh_ftd_subject", "test_metadata": {"name": "accepted_values", "kwargs": {"values": ["participant", "non_participant", "cell_line", "animal_model", "group", "other"], "column_name": "subject_type", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_subject')) }}"}, "namespace": null}}, "test.ftd.not_null_cmg_bh_ftd_subject_id.70bf7d76ff": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_cmg_bh_ftd_subject_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_cmg_bh_ftd_subject_id.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.not_null_cmg_bh_ftd_subject_id.70bf7d76ff", "fqn": ["ftd", "cmg_bh", "docs", "not_null_cmg_bh_ftd_subject_id"], "alias": "not_null_cmg_bh_ftd_subject_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.5066864, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_subject", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_subject"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/not_null_cmg_bh_ftd_subject_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_subject\"\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "id", "file_key_name": "models.cmg_bh_ftd_subject", "attached_node": "model.ftd.cmg_bh_ftd_subject", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_subject')) }}"}, "namespace": null}}, "test.ftd.not_null_cmg_bh_ftd_accesspolicy_description.2fcab360bf": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_cmg_bh_ftd_accesspolicy_description", "resource_type": "test", "package_name": "ftd", "path": "not_null_cmg_bh_ftd_accesspolicy_description.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.not_null_cmg_bh_ftd_accesspolicy_description.2fcab360bf", "fqn": ["ftd", "cmg_bh", "docs", "not_null_cmg_bh_ftd_accesspolicy_description"], "alias": "not_null_cmg_bh_ftd_accesspolicy_description", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.5076394, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_accesspolicy", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_accesspolicy"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/not_null_cmg_bh_ftd_accesspolicy_description.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect description\nfrom \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_accesspolicy\"\nwhere description is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "description", "file_key_name": "models.cmg_bh_ftd_accesspolicy", "attached_node": "model.ftd.cmg_bh_ftd_accesspolicy", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "description", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_accesspolicy')) }}"}, "namespace": null}}, "test.ftd.not_null_cmg_bh_ftd_accesspolicy_id.37b43af455": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_cmg_bh_ftd_accesspolicy_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_cmg_bh_ftd_accesspolicy_id.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.not_null_cmg_bh_ftd_accesspolicy_id.37b43af455", "fqn": ["ftd", "cmg_bh", "docs", "not_null_cmg_bh_ftd_accesspolicy_id"], "alias": "not_null_cmg_bh_ftd_accesspolicy_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.5086138, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_accesspolicy", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_accesspolicy"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/not_null_cmg_bh_ftd_accesspolicy_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_accesspolicy\"\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "id", "file_key_name": "models.cmg_bh_ftd_accesspolicy", "attached_node": "model.ftd.cmg_bh_ftd_accesspolicy", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_accesspolicy')) }}"}, "namespace": null}}, "test.ftd.not_null_cmg_bh_ftd_accesspolicy_data_access_type_accesspolicy_id.f856e1348f": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_cmg_bh_ftd_accesspolicy_data_access_type_accesspolicy_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_cmg_bh_ftd_accesspoli_e29ba48b443a4a739f27fd538446fd37.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.not_null_cmg_bh_ftd_accesspolicy_data_access_type_accesspolicy_id.f856e1348f", "fqn": ["ftd", "cmg_bh", "docs", "not_null_cmg_bh_ftd_accesspolicy_data_access_type_accesspolicy_id"], "alias": "not_null_cmg_bh_ftd_accesspoli_e29ba48b443a4a739f27fd538446fd37", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "not_null_cmg_bh_ftd_accesspoli_e29ba48b443a4a739f27fd538446fd37", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "not_null_cmg_bh_ftd_accesspoli_e29ba48b443a4a739f27fd538446fd37"}, "created_at": 1757448969.5095572, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"not_null_cmg_bh_ftd_accesspoli_e29ba48b443a4a739f27fd538446fd37\") }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_accesspolicy_data_access_type", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_accesspolicy_data_access_type"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/not_null_cmg_bh_ftd_accesspoli_e29ba48b443a4a739f27fd538446fd37.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect accesspolicy_id\nfrom \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_accesspolicy_data_access_type\"\nwhere accesspolicy_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "accesspolicy_id", "file_key_name": "models.cmg_bh_ftd_accesspolicy_data_access_type", "attached_node": "model.ftd.cmg_bh_ftd_accesspolicy_data_access_type", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "accesspolicy_id", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_accesspolicy_data_access_type')) }}"}, "namespace": null}}, "test.ftd.not_null_cmg_bh_ftd_accesspolicy_data_access_type_data_access_type.daef374444": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_cmg_bh_ftd_accesspolicy_data_access_type_data_access_type", "resource_type": "test", "package_name": "ftd", "path": "not_null_cmg_bh_ftd_accesspoli_151d103ace92c913c2b28b2e2216ffb7.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.not_null_cmg_bh_ftd_accesspolicy_data_access_type_data_access_type.daef374444", "fqn": ["ftd", "cmg_bh", "docs", "not_null_cmg_bh_ftd_accesspolicy_data_access_type_data_access_type"], "alias": "not_null_cmg_bh_ftd_accesspoli_151d103ace92c913c2b28b2e2216ffb7", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "not_null_cmg_bh_ftd_accesspoli_151d103ace92c913c2b28b2e2216ffb7", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "not_null_cmg_bh_ftd_accesspoli_151d103ace92c913c2b28b2e2216ffb7"}, "created_at": 1757448969.510651, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"not_null_cmg_bh_ftd_accesspoli_151d103ace92c913c2b28b2e2216ffb7\") }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_accesspolicy_data_access_type", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_accesspolicy_data_access_type"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/not_null_cmg_bh_ftd_accesspoli_151d103ace92c913c2b28b2e2216ffb7.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect data_access_type\nfrom \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_accesspolicy_data_access_type\"\nwhere data_access_type is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "data_access_type", "file_key_name": "models.cmg_bh_ftd_accesspolicy_data_access_type", "attached_node": "model.ftd.cmg_bh_ftd_accesspolicy_data_access_type", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "data_access_type", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_accesspolicy_data_access_type')) }}"}, "namespace": null}}, "test.ftd.accepted_values_cmg_bh_ftd_accesspolicy_data_access_type_data_access_type__open__registered__controlled__gsr_restricted__gsr_allowed.752d3dfe87": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "accepted_values_cmg_bh_ftd_accesspolicy_data_access_type_data_access_type__open__registered__controlled__gsr_restricted__gsr_allowed", "resource_type": "test", "package_name": "ftd", "path": "accepted_values_cmg_bh_ftd_acc_b2fd8adc0cc2c35ac03aab0aa4dc4dda.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.accepted_values_cmg_bh_ftd_accesspolicy_data_access_type_data_access_type__open__registered__controlled__gsr_restricted__gsr_allowed.752d3dfe87", "fqn": ["ftd", "cmg_bh", "docs", "accepted_values_cmg_bh_ftd_accesspolicy_data_access_type_data_access_type__open__registered__controlled__gsr_restricted__gsr_allowed"], "alias": "accepted_values_cmg_bh_ftd_acc_b2fd8adc0cc2c35ac03aab0aa4dc4dda", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_cmg_bh_ftd_acc_b2fd8adc0cc2c35ac03aab0aa4dc4dda", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "accepted_values_cmg_bh_ftd_acc_b2fd8adc0cc2c35ac03aab0aa4dc4dda"}, "created_at": 1757448969.5116324, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_cmg_bh_ftd_acc_b2fd8adc0cc2c35ac03aab0aa4dc4dda\") }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_accesspolicy_data_access_type", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_accesspolicy_data_access_type"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/accepted_values_cmg_bh_ftd_acc_b2fd8adc0cc2c35ac03aab0aa4dc4dda.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        data_access_type as value_field,\n        count(*) as n_records\n\n    from \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_accesspolicy_data_access_type\"\n    group by data_access_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'open','registered','controlled','gsr_restricted','gsr_allowed'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "data_access_type", "file_key_name": "models.cmg_bh_ftd_accesspolicy_data_access_type", "attached_node": "model.ftd.cmg_bh_ftd_accesspolicy_data_access_type", "test_metadata": {"name": "accepted_values", "kwargs": {"values": ["open", "registered", "controlled", "gsr_restricted", "gsr_allowed"], "column_name": "data_access_type", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_accesspolicy_data_access_type')) }}"}, "namespace": null}}, "test.ftd.not_null_cmg_bh_ftd_demographics_source_data_demographics_id.4fc19441ed": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_cmg_bh_ftd_demographics_source_data_demographics_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_cmg_bh_ftd_demographics_source_data_demographics_id.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.not_null_cmg_bh_ftd_demographics_source_data_demographics_id.4fc19441ed", "fqn": ["ftd", "cmg_bh", "docs", "not_null_cmg_bh_ftd_demographics_source_data_demographics_id"], "alias": "not_null_cmg_bh_ftd_demographics_source_data_demographics_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.515938, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_demographics_source_data", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_demographics_source_data"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/not_null_cmg_bh_ftd_demographics_source_data_demographics_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect demographics_id\nfrom \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_demographics_source_data\"\nwhere demographics_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "demographics_id", "file_key_name": "models.cmg_bh_ftd_demographics_source_data", "attached_node": "model.ftd.cmg_bh_ftd_demographics_source_data", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "demographics_id", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_demographics_source_data')) }}"}, "namespace": null}}, "test.ftd.not_null_cmg_bh_ftd_demographics_source_data_source_data_id.8618ec6934": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_cmg_bh_ftd_demographics_source_data_source_data_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_cmg_bh_ftd_demographics_source_data_source_data_id.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.not_null_cmg_bh_ftd_demographics_source_data_source_data_id.8618ec6934", "fqn": ["ftd", "cmg_bh", "docs", "not_null_cmg_bh_ftd_demographics_source_data_source_data_id"], "alias": "not_null_cmg_bh_ftd_demographics_source_data_source_data_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.5169322, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_demographics_source_data", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_demographics_source_data"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/not_null_cmg_bh_ftd_demographics_source_data_source_data_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect source_data_id\nfrom \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_demographics_source_data\"\nwhere source_data_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "source_data_id", "file_key_name": "models.cmg_bh_ftd_demographics_source_data", "attached_node": "model.ftd.cmg_bh_ftd_demographics_source_data", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "source_data_id", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_demographics_source_data')) }}"}, "namespace": null}}, "test.ftd.not_null_cmg_bh_ftd_sample_sample_type.27593ac975": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_cmg_bh_ftd_sample_sample_type", "resource_type": "test", "package_name": "ftd", "path": "not_null_cmg_bh_ftd_sample_sample_type.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.not_null_cmg_bh_ftd_sample_sample_type.27593ac975", "fqn": ["ftd", "cmg_bh", "docs", "not_null_cmg_bh_ftd_sample_sample_type"], "alias": "not_null_cmg_bh_ftd_sample_sample_type", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.5179234, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_sample", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_sample"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/not_null_cmg_bh_ftd_sample_sample_type.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sample_type\nfrom \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_sample\"\nwhere sample_type is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "sample_type", "file_key_name": "models.cmg_bh_ftd_sample", "attached_node": "model.ftd.cmg_bh_ftd_sample", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "sample_type", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_sample')) }}"}, "namespace": null}}, "test.ftd.accepted_values_cmg_bh_ftd_sample_availablity_status__available__unavailable.8de64ff6ae": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "accepted_values_cmg_bh_ftd_sample_availablity_status__available__unavailable", "resource_type": "test", "package_name": "ftd", "path": "accepted_values_cmg_bh_ftd_sam_7259937d560ee22c3d934d5d4a4dd77f.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.accepted_values_cmg_bh_ftd_sample_availablity_status__available__unavailable.8de64ff6ae", "fqn": ["ftd", "cmg_bh", "docs", "accepted_values_cmg_bh_ftd_sample_availablity_status__available__unavailable"], "alias": "accepted_values_cmg_bh_ftd_sam_7259937d560ee22c3d934d5d4a4dd77f", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_cmg_bh_ftd_sam_7259937d560ee22c3d934d5d4a4dd77f", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "accepted_values_cmg_bh_ftd_sam_7259937d560ee22c3d934d5d4a4dd77f"}, "created_at": 1757448969.5188944, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_cmg_bh_ftd_sam_7259937d560ee22c3d934d5d4a4dd77f\") }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_sample", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_sample"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/accepted_values_cmg_bh_ftd_sam_7259937d560ee22c3d934d5d4a4dd77f.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        availablity_status as value_field,\n        count(*) as n_records\n\n    from \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_sample\"\n    group by availablity_status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'available','unavailable'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "availablity_status", "file_key_name": "models.cmg_bh_ftd_sample", "attached_node": "model.ftd.cmg_bh_ftd_sample", "test_metadata": {"name": "accepted_values", "kwargs": {"values": ["available", "unavailable"], "column_name": "availablity_status", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_sample')) }}"}, "namespace": null}}, "test.ftd.not_null_cmg_bh_ftd_sample_id.337bf1c937": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_cmg_bh_ftd_sample_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_cmg_bh_ftd_sample_id.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.not_null_cmg_bh_ftd_sample_id.337bf1c937", "fqn": ["ftd", "cmg_bh", "docs", "not_null_cmg_bh_ftd_sample_id"], "alias": "not_null_cmg_bh_ftd_sample_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.5223775, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_sample", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_sample"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/not_null_cmg_bh_ftd_sample_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_sample\"\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "id", "file_key_name": "models.cmg_bh_ftd_sample", "attached_node": "model.ftd.cmg_bh_ftd_sample", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_sample')) }}"}, "namespace": null}}, "test.ftd.not_null_cmg_bh_ftd_familyrelationship_family_member.78cb793210": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_cmg_bh_ftd_familyrelationship_family_member", "resource_type": "test", "package_name": "ftd", "path": "not_null_cmg_bh_ftd_familyrelationship_family_member.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.not_null_cmg_bh_ftd_familyrelationship_family_member.78cb793210", "fqn": ["ftd", "cmg_bh", "docs", "not_null_cmg_bh_ftd_familyrelationship_family_member"], "alias": "not_null_cmg_bh_ftd_familyrelationship_family_member", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.5233426, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_familyrelationship", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_familyrelationship"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/not_null_cmg_bh_ftd_familyrelationship_family_member.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect family_member\nfrom \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_familyrelationship\"\nwhere family_member is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "family_member", "file_key_name": "models.cmg_bh_ftd_familyrelationship", "attached_node": "model.ftd.cmg_bh_ftd_familyrelationship", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "family_member", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_familyrelationship')) }}"}, "namespace": null}}, "test.ftd.not_null_cmg_bh_ftd_familyrelationship_other_family_member.1f5245182f": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_cmg_bh_ftd_familyrelationship_other_family_member", "resource_type": "test", "package_name": "ftd", "path": "not_null_cmg_bh_ftd_familyrelationship_other_family_member.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.not_null_cmg_bh_ftd_familyrelationship_other_family_member.1f5245182f", "fqn": ["ftd", "cmg_bh", "docs", "not_null_cmg_bh_ftd_familyrelationship_other_family_member"], "alias": "not_null_cmg_bh_ftd_familyrelationship_other_family_member", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.5243359, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_familyrelationship", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_familyrelationship"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/not_null_cmg_bh_ftd_familyrelationship_other_family_member.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect other_family_member\nfrom \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_familyrelationship\"\nwhere other_family_member is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "other_family_member", "file_key_name": "models.cmg_bh_ftd_familyrelationship", "attached_node": "model.ftd.cmg_bh_ftd_familyrelationship", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "other_family_member", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_familyrelationship')) }}"}, "namespace": null}}, "test.ftd.not_null_cmg_bh_ftd_familyrelationship_relationship_code.f742ad5dc9": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_cmg_bh_ftd_familyrelationship_relationship_code", "resource_type": "test", "package_name": "ftd", "path": "not_null_cmg_bh_ftd_familyrelationship_relationship_code.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.not_null_cmg_bh_ftd_familyrelationship_relationship_code.f742ad5dc9", "fqn": ["ftd", "cmg_bh", "docs", "not_null_cmg_bh_ftd_familyrelationship_relationship_code"], "alias": "not_null_cmg_bh_ftd_familyrelationship_relationship_code", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.5253117, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_familyrelationship", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_familyrelationship"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/not_null_cmg_bh_ftd_familyrelationship_relationship_code.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect relationship_code\nfrom \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_familyrelationship\"\nwhere relationship_code is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "relationship_code", "file_key_name": "models.cmg_bh_ftd_familyrelationship", "attached_node": "model.ftd.cmg_bh_ftd_familyrelationship", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "relationship_code", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_familyrelationship')) }}"}, "namespace": null}}, "test.ftd.not_null_cmg_bh_ftd_familyrelationship_id.1f2dc9735e": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_cmg_bh_ftd_familyrelationship_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_cmg_bh_ftd_familyrelationship_id.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.not_null_cmg_bh_ftd_familyrelationship_id.1f2dc9735e", "fqn": ["ftd", "cmg_bh", "docs", "not_null_cmg_bh_ftd_familyrelationship_id"], "alias": "not_null_cmg_bh_ftd_familyrelationship_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.5264683, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_familyrelationship", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_familyrelationship"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/not_null_cmg_bh_ftd_familyrelationship_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_familyrelationship\"\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "id", "file_key_name": "models.cmg_bh_ftd_familyrelationship", "attached_node": "model.ftd.cmg_bh_ftd_familyrelationship", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_familyrelationship')) }}"}, "namespace": null}}, "test.ftd.not_null_cmg_bh_ftd_familymember_external_id_familymember_id.aad9421f88": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_cmg_bh_ftd_familymember_external_id_familymember_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_cmg_bh_ftd_familymember_external_id_familymember_id.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.not_null_cmg_bh_ftd_familymember_external_id_familymember_id.aad9421f88", "fqn": ["ftd", "cmg_bh", "docs", "not_null_cmg_bh_ftd_familymember_external_id_familymember_id"], "alias": "not_null_cmg_bh_ftd_familymember_external_id_familymember_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.5274248, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_familymember_external_id", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_familymember_external_id"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/not_null_cmg_bh_ftd_familymember_external_id_familymember_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect familymember_id\nfrom \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_familymember_external_id\"\nwhere familymember_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "familymember_id", "file_key_name": "models.cmg_bh_ftd_familymember_external_id", "attached_node": "model.ftd.cmg_bh_ftd_familymember_external_id", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "familymember_id", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_familymember_external_id')) }}"}, "namespace": null}}, "test.ftd.not_null_cmg_bh_ftd_family_family_relationships_family_id.98a4736bce": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_cmg_bh_ftd_family_family_relationships_family_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_cmg_bh_ftd_family_family_relationships_family_id.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.not_null_cmg_bh_ftd_family_family_relationships_family_id.98a4736bce", "fqn": ["ftd", "cmg_bh", "docs", "not_null_cmg_bh_ftd_family_family_relationships_family_id"], "alias": "not_null_cmg_bh_ftd_family_family_relationships_family_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.5283716, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_family_family_relationships", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_family_family_relationships"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/not_null_cmg_bh_ftd_family_family_relationships_family_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect family_id\nfrom \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_family_family_relationships\"\nwhere family_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "family_id", "file_key_name": "models.cmg_bh_ftd_family_family_relationships", "attached_node": "model.ftd.cmg_bh_ftd_family_family_relationships", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "family_id", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_family_family_relationships')) }}"}, "namespace": null}}, "test.ftd.not_null_cmg_bh_ftd_family_family_relationships_family_relationships_id.d0573bbee5": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_cmg_bh_ftd_family_family_relationships_family_relationships_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_cmg_bh_ftd_family_fam_2c2e3561e60074d04da0c396d8ee8172.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.not_null_cmg_bh_ftd_family_family_relationships_family_relationships_id.d0573bbee5", "fqn": ["ftd", "cmg_bh", "docs", "not_null_cmg_bh_ftd_family_family_relationships_family_relationships_id"], "alias": "not_null_cmg_bh_ftd_family_fam_2c2e3561e60074d04da0c396d8ee8172", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "not_null_cmg_bh_ftd_family_fam_2c2e3561e60074d04da0c396d8ee8172", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "not_null_cmg_bh_ftd_family_fam_2c2e3561e60074d04da0c396d8ee8172"}, "created_at": 1757448969.529342, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"not_null_cmg_bh_ftd_family_fam_2c2e3561e60074d04da0c396d8ee8172\") }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_family_family_relationships", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_family_family_relationships"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/not_null_cmg_bh_ftd_family_fam_2c2e3561e60074d04da0c396d8ee8172.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect family_relationships_id\nfrom \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_family_family_relationships\"\nwhere family_relationships_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "family_relationships_id", "file_key_name": "models.cmg_bh_ftd_family_family_relationships", "attached_node": "model.ftd.cmg_bh_ftd_family_family_relationships", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "family_relationships_id", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_family_family_relationships')) }}"}, "namespace": null}}, "test.ftd.not_null_cmg_bh_ftd_study_study_title.6ea8d071db": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_cmg_bh_ftd_study_study_title", "resource_type": "test", "package_name": "ftd", "path": "not_null_cmg_bh_ftd_study_study_title.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.not_null_cmg_bh_ftd_study_study_title.6ea8d071db", "fqn": ["ftd", "cmg_bh", "docs", "not_null_cmg_bh_ftd_study_study_title"], "alias": "not_null_cmg_bh_ftd_study_study_title", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.5302715, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_study", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_study"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/not_null_cmg_bh_ftd_study_study_title.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect study_title\nfrom \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_study\"\nwhere study_title is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "study_title", "file_key_name": "models.cmg_bh_ftd_study", "attached_node": "model.ftd.cmg_bh_ftd_study", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "study_title", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_study')) }}"}, "namespace": null}}, "test.ftd.not_null_cmg_bh_ftd_study_id.d0fcd7b4be": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_cmg_bh_ftd_study_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_cmg_bh_ftd_study_id.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.not_null_cmg_bh_ftd_study_id.d0fcd7b4be", "fqn": ["ftd", "cmg_bh", "docs", "not_null_cmg_bh_ftd_study_id"], "alias": "not_null_cmg_bh_ftd_study_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.5317228, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_study", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_study"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/not_null_cmg_bh_ftd_study_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_study\"\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "id", "file_key_name": "models.cmg_bh_ftd_study", "attached_node": "model.ftd.cmg_bh_ftd_study", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_study')) }}"}, "namespace": null}}, "test.ftd.not_null_cmg_bh_ftd_sourcedata_has_access_policy.fea82dd098": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_cmg_bh_ftd_sourcedata_has_access_policy", "resource_type": "test", "package_name": "ftd", "path": "not_null_cmg_bh_ftd_sourcedata_has_access_policy.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.not_null_cmg_bh_ftd_sourcedata_has_access_policy.fea82dd098", "fqn": ["ftd", "cmg_bh", "docs", "not_null_cmg_bh_ftd_sourcedata_has_access_policy"], "alias": "not_null_cmg_bh_ftd_sourcedata_has_access_policy", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.532737, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_sourcedata", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_sourcedata"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/not_null_cmg_bh_ftd_sourcedata_has_access_policy.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect has_access_policy\nfrom \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_sourcedata\"\nwhere has_access_policy is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "has_access_policy", "file_key_name": "models.cmg_bh_ftd_sourcedata", "attached_node": "model.ftd.cmg_bh_ftd_sourcedata", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "has_access_policy", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_sourcedata')) }}"}, "namespace": null}}, "test.ftd.not_null_cmg_bh_ftd_sourcedata_id.71529dd996": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_cmg_bh_ftd_sourcedata_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_cmg_bh_ftd_sourcedata_id.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.not_null_cmg_bh_ftd_sourcedata_id.71529dd996", "fqn": ["ftd", "cmg_bh", "docs", "not_null_cmg_bh_ftd_sourcedata_id"], "alias": "not_null_cmg_bh_ftd_sourcedata_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.5336576, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_sourcedata", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_sourcedata"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/not_null_cmg_bh_ftd_sourcedata_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_sourcedata\"\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "id", "file_key_name": "models.cmg_bh_ftd_sourcedata", "attached_node": "model.ftd.cmg_bh_ftd_sourcedata", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_sourcedata')) }}"}, "namespace": null}}, "test.ftd.not_null_cmg_bh_ftd_file_subject_file_id.9a8798f990": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_cmg_bh_ftd_file_subject_file_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_cmg_bh_ftd_file_subject_file_id.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.not_null_cmg_bh_ftd_file_subject_file_id.9a8798f990", "fqn": ["ftd", "cmg_bh", "docs", "not_null_cmg_bh_ftd_file_subject_file_id"], "alias": "not_null_cmg_bh_ftd_file_subject_file_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.534588, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_file_subject", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_file_subject"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/not_null_cmg_bh_ftd_file_subject_file_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect file_id\nfrom \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_file_subject\"\nwhere file_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "file_id", "file_key_name": "models.cmg_bh_ftd_file_subject", "attached_node": "model.ftd.cmg_bh_ftd_file_subject", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "file_id", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_file_subject')) }}"}, "namespace": null}}, "test.ftd.not_null_cmg_bh_ftd_file_subject_subject_id.94749261b4": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_cmg_bh_ftd_file_subject_subject_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_cmg_bh_ftd_file_subject_subject_id.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.not_null_cmg_bh_ftd_file_subject_subject_id.94749261b4", "fqn": ["ftd", "cmg_bh", "docs", "not_null_cmg_bh_ftd_file_subject_subject_id"], "alias": "not_null_cmg_bh_ftd_file_subject_subject_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.5355377, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_file_subject", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_file_subject"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/not_null_cmg_bh_ftd_file_subject_subject_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect subject_id\nfrom \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_file_subject\"\nwhere subject_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "subject_id", "file_key_name": "models.cmg_bh_ftd_file_subject", "attached_node": "model.ftd.cmg_bh_ftd_file_subject", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "subject_id", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_file_subject')) }}"}, "namespace": null}}, "test.ftd.not_null_cmg_bh_ftd_accesscontrolledrecord_has_access_policy.0bd719c157": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_cmg_bh_ftd_accesscontrolledrecord_has_access_policy", "resource_type": "test", "package_name": "ftd", "path": "not_null_cmg_bh_ftd_accesscontrolledrecord_has_access_policy.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.not_null_cmg_bh_ftd_accesscontrolledrecord_has_access_policy.0bd719c157", "fqn": ["ftd", "cmg_bh", "docs", "not_null_cmg_bh_ftd_accesscontrolledrecord_has_access_policy"], "alias": "not_null_cmg_bh_ftd_accesscontrolledrecord_has_access_policy", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.5365963, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_accesscontrolledrecord", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_accesscontrolledrecord"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/not_null_cmg_bh_ftd_accesscontrolledrecord_has_access_policy.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect has_access_policy\nfrom \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_accesscontrolledrecord\"\nwhere has_access_policy is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "has_access_policy", "file_key_name": "models.cmg_bh_ftd_accesscontrolledrecord", "attached_node": "model.ftd.cmg_bh_ftd_accesscontrolledrecord", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "has_access_policy", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_accesscontrolledrecord')) }}"}, "namespace": null}}, "test.ftd.not_null_cmg_bh_ftd_accesscontrolledrecord_id.ad62c67815": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_cmg_bh_ftd_accesscontrolledrecord_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_cmg_bh_ftd_accesscontrolledrecord_id.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.not_null_cmg_bh_ftd_accesscontrolledrecord_id.ad62c67815", "fqn": ["ftd", "cmg_bh", "docs", "not_null_cmg_bh_ftd_accesscontrolledrecord_id"], "alias": "not_null_cmg_bh_ftd_accesscontrolledrecord_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.5375242, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_accesscontrolledrecord", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_accesscontrolledrecord"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/not_null_cmg_bh_ftd_accesscontrolledrecord_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_accesscontrolledrecord\"\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "id", "file_key_name": "models.cmg_bh_ftd_accesscontrolledrecord", "attached_node": "model.ftd.cmg_bh_ftd_accesscontrolledrecord", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_accesscontrolledrecord')) }}"}, "namespace": null}}, "test.ftd.not_null_cmg_bh_ftd_demographics_race_demographics_id.9adec1b35e": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_cmg_bh_ftd_demographics_race_demographics_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_cmg_bh_ftd_demographics_race_demographics_id.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.not_null_cmg_bh_ftd_demographics_race_demographics_id.9adec1b35e", "fqn": ["ftd", "cmg_bh", "docs", "not_null_cmg_bh_ftd_demographics_race_demographics_id"], "alias": "not_null_cmg_bh_ftd_demographics_race_demographics_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.5384367, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_demographics_race", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_demographics_race"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/not_null_cmg_bh_ftd_demographics_race_demographics_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect demographics_id\nfrom \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_demographics_race\"\nwhere demographics_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "demographics_id", "file_key_name": "models.cmg_bh_ftd_demographics_race", "attached_node": "model.ftd.cmg_bh_ftd_demographics_race", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "demographics_id", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_demographics_race')) }}"}, "namespace": null}}, "test.ftd.not_null_cmg_bh_ftd_demographics_race_race.3b8ae979d3": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_cmg_bh_ftd_demographics_race_race", "resource_type": "test", "package_name": "ftd", "path": "not_null_cmg_bh_ftd_demographics_race_race.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.not_null_cmg_bh_ftd_demographics_race_race.3b8ae979d3", "fqn": ["ftd", "cmg_bh", "docs", "not_null_cmg_bh_ftd_demographics_race_race"], "alias": "not_null_cmg_bh_ftd_demographics_race_race", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.539377, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_demographics_race", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_demographics_race"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/not_null_cmg_bh_ftd_demographics_race_race.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect race\nfrom \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_demographics_race\"\nwhere race is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "race", "file_key_name": "models.cmg_bh_ftd_demographics_race", "attached_node": "model.ftd.cmg_bh_ftd_demographics_race", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "race", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_demographics_race')) }}"}, "namespace": null}}, "test.ftd.accepted_values_cmg_bh_ftd_demographics_race_race__american_indian_or_alaskan_native__asian__black_or_african_american__native_hawaiian_or_pacific_islander__white__other_race__unknown__asked_but_unknown.546f884c8b": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "accepted_values_cmg_bh_ftd_demographics_race_race__american_indian_or_alaskan_native__asian__black_or_african_american__native_hawaiian_or_pacific_islander__white__other_race__unknown__asked_but_unknown", "resource_type": "test", "package_name": "ftd", "path": "accepted_values_cmg_bh_ftd_dem_e8c68405f09bf9b138cec1537228c496.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.accepted_values_cmg_bh_ftd_demographics_race_race__american_indian_or_alaskan_native__asian__black_or_african_american__native_hawaiian_or_pacific_islander__white__other_race__unknown__asked_but_unknown.546f884c8b", "fqn": ["ftd", "cmg_bh", "docs", "accepted_values_cmg_bh_ftd_demographics_race_race__american_indian_or_alaskan_native__asian__black_or_african_american__native_hawaiian_or_pacific_islander__white__other_race__unknown__asked_but_unknown"], "alias": "accepted_values_cmg_bh_ftd_dem_e8c68405f09bf9b138cec1537228c496", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_cmg_bh_ftd_dem_e8c68405f09bf9b138cec1537228c496", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "accepted_values_cmg_bh_ftd_dem_e8c68405f09bf9b138cec1537228c496"}, "created_at": 1757448969.540376, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_cmg_bh_ftd_dem_e8c68405f09bf9b138cec1537228c496\") }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_demographics_race", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_demographics_race"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/accepted_values_cmg_bh_ftd_dem_e8c68405f09bf9b138cec1537228c496.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        race as value_field,\n        count(*) as n_records\n\n    from \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_demographics_race\"\n    group by race\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'american_indian_or_alaskan_native','asian','black_or_african_american','native_hawaiian_or_pacific_islander','white','other_race','unknown','asked_but_unknown'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "race", "file_key_name": "models.cmg_bh_ftd_demographics_race", "attached_node": "model.ftd.cmg_bh_ftd_demographics_race", "test_metadata": {"name": "accepted_values", "kwargs": {"values": ["american_indian_or_alaskan_native", "asian", "black_or_african_american", "native_hawaiian_or_pacific_islander", "white", "other_race", "unknown", "asked_but_unknown"], "column_name": "race", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_demographics_race')) }}"}, "namespace": null}}, "test.ftd.not_null_cmg_bh_ftd_family_external_id_family_id.ca1501942f": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_cmg_bh_ftd_family_external_id_family_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_cmg_bh_ftd_family_external_id_family_id.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.not_null_cmg_bh_ftd_family_external_id_family_id.ca1501942f", "fqn": ["ftd", "cmg_bh", "docs", "not_null_cmg_bh_ftd_family_external_id_family_id"], "alias": "not_null_cmg_bh_ftd_family_external_id_family_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.5432189, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_family_external_id", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_family_external_id"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/not_null_cmg_bh_ftd_family_external_id_family_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect family_id\nfrom \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_family_external_id\"\nwhere family_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "family_id", "file_key_name": "models.cmg_bh_ftd_family_external_id", "attached_node": "model.ftd.cmg_bh_ftd_family_external_id", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "family_id", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_family_external_id')) }}"}, "namespace": null}}, "test.ftd.accepted_values_cmg_bh_ftd_demographics_date_of_birth_type__exact__year_only__shifted__decade_only__other.dce0947fe3": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "accepted_values_cmg_bh_ftd_demographics_date_of_birth_type__exact__year_only__shifted__decade_only__other", "resource_type": "test", "package_name": "ftd", "path": "accepted_values_cmg_bh_ftd_dem_d2d3b0504f403264cbe241f713a9f764.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.accepted_values_cmg_bh_ftd_demographics_date_of_birth_type__exact__year_only__shifted__decade_only__other.dce0947fe3", "fqn": ["ftd", "cmg_bh", "docs", "accepted_values_cmg_bh_ftd_demographics_date_of_birth_type__exact__year_only__shifted__decade_only__other"], "alias": "accepted_values_cmg_bh_ftd_dem_d2d3b0504f403264cbe241f713a9f764", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_cmg_bh_ftd_dem_d2d3b0504f403264cbe241f713a9f764", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "accepted_values_cmg_bh_ftd_dem_d2d3b0504f403264cbe241f713a9f764"}, "created_at": 1757448969.5441902, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_cmg_bh_ftd_dem_d2d3b0504f403264cbe241f713a9f764\") }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_demographics", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_demographics"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/accepted_values_cmg_bh_ftd_dem_d2d3b0504f403264cbe241f713a9f764.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        date_of_birth_type as value_field,\n        count(*) as n_records\n\n    from \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_demographics\"\n    group by date_of_birth_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'exact','year_only','shifted','decade_only','other'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "date_of_birth_type", "file_key_name": "models.cmg_bh_ftd_demographics", "attached_node": "model.ftd.cmg_bh_ftd_demographics", "test_metadata": {"name": "accepted_values", "kwargs": {"values": ["exact", "year_only", "shifted", "decade_only", "other"], "column_name": "date_of_birth_type", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_demographics')) }}"}, "namespace": null}}, "test.ftd.not_null_cmg_bh_ftd_demographics_sex.abab379f38": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_cmg_bh_ftd_demographics_sex", "resource_type": "test", "package_name": "ftd", "path": "not_null_cmg_bh_ftd_demographics_sex.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.not_null_cmg_bh_ftd_demographics_sex.abab379f38", "fqn": ["ftd", "cmg_bh", "docs", "not_null_cmg_bh_ftd_demographics_sex"], "alias": "not_null_cmg_bh_ftd_demographics_sex", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.547882, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_demographics", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_demographics"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/not_null_cmg_bh_ftd_demographics_sex.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sex\nfrom \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_demographics\"\nwhere sex is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "sex", "file_key_name": "models.cmg_bh_ftd_demographics", "attached_node": "model.ftd.cmg_bh_ftd_demographics", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "sex", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_demographics')) }}"}, "namespace": null}}, "test.ftd.accepted_values_cmg_bh_ftd_demographics_sex__female__male__unknown__intersex.711185066b": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "accepted_values_cmg_bh_ftd_demographics_sex__female__male__unknown__intersex", "resource_type": "test", "package_name": "ftd", "path": "accepted_values_cmg_bh_ftd_dem_a79cc112fc5a458b285a3cc8421f3606.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.accepted_values_cmg_bh_ftd_demographics_sex__female__male__unknown__intersex.711185066b", "fqn": ["ftd", "cmg_bh", "docs", "accepted_values_cmg_bh_ftd_demographics_sex__female__male__unknown__intersex"], "alias": "accepted_values_cmg_bh_ftd_dem_a79cc112fc5a458b285a3cc8421f3606", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_cmg_bh_ftd_dem_a79cc112fc5a458b285a3cc8421f3606", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "accepted_values_cmg_bh_ftd_dem_a79cc112fc5a458b285a3cc8421f3606"}, "created_at": 1757448969.5491672, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_cmg_bh_ftd_dem_a79cc112fc5a458b285a3cc8421f3606\") }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_demographics", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_demographics"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/accepted_values_cmg_bh_ftd_dem_a79cc112fc5a458b285a3cc8421f3606.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        sex as value_field,\n        count(*) as n_records\n\n    from \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_demographics\"\n    group by sex\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'female','male','unknown','intersex'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "sex", "file_key_name": "models.cmg_bh_ftd_demographics", "attached_node": "model.ftd.cmg_bh_ftd_demographics", "test_metadata": {"name": "accepted_values", "kwargs": {"values": ["female", "male", "unknown", "intersex"], "column_name": "sex", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_demographics')) }}"}, "namespace": null}}, "test.ftd.not_null_cmg_bh_ftd_demographics_sex_display.8aa7898da0": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_cmg_bh_ftd_demographics_sex_display", "resource_type": "test", "package_name": "ftd", "path": "not_null_cmg_bh_ftd_demographics_sex_display.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.not_null_cmg_bh_ftd_demographics_sex_display.8aa7898da0", "fqn": ["ftd", "cmg_bh", "docs", "not_null_cmg_bh_ftd_demographics_sex_display"], "alias": "not_null_cmg_bh_ftd_demographics_sex_display", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.5518894, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_demographics", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_demographics"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/not_null_cmg_bh_ftd_demographics_sex_display.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sex_display\nfrom \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_demographics\"\nwhere sex_display is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "sex_display", "file_key_name": "models.cmg_bh_ftd_demographics", "attached_node": "model.ftd.cmg_bh_ftd_demographics", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "sex_display", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_demographics')) }}"}, "namespace": null}}, "test.ftd.not_null_cmg_bh_ftd_demographics_race_display.0547eb77d8": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_cmg_bh_ftd_demographics_race_display", "resource_type": "test", "package_name": "ftd", "path": "not_null_cmg_bh_ftd_demographics_race_display.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.not_null_cmg_bh_ftd_demographics_race_display.0547eb77d8", "fqn": ["ftd", "cmg_bh", "docs", "not_null_cmg_bh_ftd_demographics_race_display"], "alias": "not_null_cmg_bh_ftd_demographics_race_display", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.552894, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_demographics", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_demographics"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/not_null_cmg_bh_ftd_demographics_race_display.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect race_display\nfrom \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_demographics\"\nwhere race_display is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "race_display", "file_key_name": "models.cmg_bh_ftd_demographics", "attached_node": "model.ftd.cmg_bh_ftd_demographics", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "race_display", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_demographics')) }}"}, "namespace": null}}, "test.ftd.not_null_cmg_bh_ftd_demographics_ethnicity.088a8c650f": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_cmg_bh_ftd_demographics_ethnicity", "resource_type": "test", "package_name": "ftd", "path": "not_null_cmg_bh_ftd_demographics_ethnicity.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.not_null_cmg_bh_ftd_demographics_ethnicity.088a8c650f", "fqn": ["ftd", "cmg_bh", "docs", "not_null_cmg_bh_ftd_demographics_ethnicity"], "alias": "not_null_cmg_bh_ftd_demographics_ethnicity", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.5538085, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_demographics", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_demographics"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/not_null_cmg_bh_ftd_demographics_ethnicity.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ethnicity\nfrom \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_demographics\"\nwhere ethnicity is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "ethnicity", "file_key_name": "models.cmg_bh_ftd_demographics", "attached_node": "model.ftd.cmg_bh_ftd_demographics", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "ethnicity", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_demographics')) }}"}, "namespace": null}}, "test.ftd.accepted_values_cmg_bh_ftd_demographics_ethnicity__hispanic_or_latino__not_hispanic_or_latino__unknown__asked_but_unknown.6f74d0b39b": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "accepted_values_cmg_bh_ftd_demographics_ethnicity__hispanic_or_latino__not_hispanic_or_latino__unknown__asked_but_unknown", "resource_type": "test", "package_name": "ftd", "path": "accepted_values_cmg_bh_ftd_dem_b9ccb1f1d01ccf2281da2e9cef62221d.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.accepted_values_cmg_bh_ftd_demographics_ethnicity__hispanic_or_latino__not_hispanic_or_latino__unknown__asked_but_unknown.6f74d0b39b", "fqn": ["ftd", "cmg_bh", "docs", "accepted_values_cmg_bh_ftd_demographics_ethnicity__hispanic_or_latino__not_hispanic_or_latino__unknown__asked_but_unknown"], "alias": "accepted_values_cmg_bh_ftd_dem_b9ccb1f1d01ccf2281da2e9cef62221d", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_cmg_bh_ftd_dem_b9ccb1f1d01ccf2281da2e9cef62221d", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "accepted_values_cmg_bh_ftd_dem_b9ccb1f1d01ccf2281da2e9cef62221d"}, "created_at": 1757448969.5547643, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_cmg_bh_ftd_dem_b9ccb1f1d01ccf2281da2e9cef62221d\") }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_demographics", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_demographics"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/accepted_values_cmg_bh_ftd_dem_b9ccb1f1d01ccf2281da2e9cef62221d.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        ethnicity as value_field,\n        count(*) as n_records\n\n    from \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_demographics\"\n    group by ethnicity\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'hispanic_or_latino','not_hispanic_or_latino','unknown','asked_but_unknown'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "ethnicity", "file_key_name": "models.cmg_bh_ftd_demographics", "attached_node": "model.ftd.cmg_bh_ftd_demographics", "test_metadata": {"name": "accepted_values", "kwargs": {"values": ["hispanic_or_latino", "not_hispanic_or_latino", "unknown", "asked_but_unknown"], "column_name": "ethnicity", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_demographics')) }}"}, "namespace": null}}, "test.ftd.not_null_cmg_bh_ftd_demographics_ethnicity_display.4d203e924d": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_cmg_bh_ftd_demographics_ethnicity_display", "resource_type": "test", "package_name": "ftd", "path": "not_null_cmg_bh_ftd_demographics_ethnicity_display.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.not_null_cmg_bh_ftd_demographics_ethnicity_display.4d203e924d", "fqn": ["ftd", "cmg_bh", "docs", "not_null_cmg_bh_ftd_demographics_ethnicity_display"], "alias": "not_null_cmg_bh_ftd_demographics_ethnicity_display", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.5575993, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_demographics", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_demographics"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/not_null_cmg_bh_ftd_demographics_ethnicity_display.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ethnicity_display\nfrom \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_demographics\"\nwhere ethnicity_display is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "ethnicity_display", "file_key_name": "models.cmg_bh_ftd_demographics", "attached_node": "model.ftd.cmg_bh_ftd_demographics", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "ethnicity_display", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_demographics')) }}"}, "namespace": null}}, "test.ftd.not_null_cmg_bh_ftd_demographics_id.0043257405": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_cmg_bh_ftd_demographics_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_cmg_bh_ftd_demographics_id.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.not_null_cmg_bh_ftd_demographics_id.0043257405", "fqn": ["ftd", "cmg_bh", "docs", "not_null_cmg_bh_ftd_demographics_id"], "alias": "not_null_cmg_bh_ftd_demographics_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.5585437, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_demographics", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_demographics"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/not_null_cmg_bh_ftd_demographics_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_demographics\"\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "id", "file_key_name": "models.cmg_bh_ftd_demographics", "attached_node": "model.ftd.cmg_bh_ftd_demographics", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_demographics')) }}"}, "namespace": null}}, "test.ftd.not_null_cmg_bh_ftd_subjectassertion_external_id_subjectassertion_id.f4100852a7": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_cmg_bh_ftd_subjectassertion_external_id_subjectassertion_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_cmg_bh_ftd_subjectass_7663aac668f5a9d29edea6c2986f4034.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.not_null_cmg_bh_ftd_subjectassertion_external_id_subjectassertion_id.f4100852a7", "fqn": ["ftd", "cmg_bh", "docs", "not_null_cmg_bh_ftd_subjectassertion_external_id_subjectassertion_id"], "alias": "not_null_cmg_bh_ftd_subjectass_7663aac668f5a9d29edea6c2986f4034", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "not_null_cmg_bh_ftd_subjectass_7663aac668f5a9d29edea6c2986f4034", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "not_null_cmg_bh_ftd_subjectass_7663aac668f5a9d29edea6c2986f4034"}, "created_at": 1757448969.5595212, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"not_null_cmg_bh_ftd_subjectass_7663aac668f5a9d29edea6c2986f4034\") }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_subjectassertion_external_id", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_subjectassertion_external_id"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/not_null_cmg_bh_ftd_subjectass_7663aac668f5a9d29edea6c2986f4034.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect subjectassertion_id\nfrom \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_subjectassertion_external_id\"\nwhere subjectassertion_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "subjectassertion_id", "file_key_name": "models.cmg_bh_ftd_subjectassertion_external_id", "attached_node": "model.ftd.cmg_bh_ftd_subjectassertion_external_id", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "subjectassertion_id", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_subjectassertion_external_id')) }}"}, "namespace": null}}, "test.ftd.not_null_cmg_bh_ftd_study_principal_investigator_study_id.bbd4c7400e": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_cmg_bh_ftd_study_principal_investigator_study_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_cmg_bh_ftd_study_principal_investigator_study_id.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.not_null_cmg_bh_ftd_study_principal_investigator_study_id.bbd4c7400e", "fqn": ["ftd", "cmg_bh", "docs", "not_null_cmg_bh_ftd_study_principal_investigator_study_id"], "alias": "not_null_cmg_bh_ftd_study_principal_investigator_study_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.5604475, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_study_principal_investigator", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_study_principal_investigator"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/not_null_cmg_bh_ftd_study_principal_investigator_study_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect study_id\nfrom \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_study_principal_investigator\"\nwhere study_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "study_id", "file_key_name": "models.cmg_bh_ftd_study_principal_investigator", "attached_node": "model.ftd.cmg_bh_ftd_study_principal_investigator", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "study_id", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_study_principal_investigator')) }}"}, "namespace": null}}, "test.ftd.not_null_cmg_bh_ftd_accesspolicy_external_id_accesspolicy_id.77c672ae6e": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_cmg_bh_ftd_accesspolicy_external_id_accesspolicy_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_cmg_bh_ftd_accesspolicy_external_id_accesspolicy_id.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.not_null_cmg_bh_ftd_accesspolicy_external_id_accesspolicy_id.77c672ae6e", "fqn": ["ftd", "cmg_bh", "docs", "not_null_cmg_bh_ftd_accesspolicy_external_id_accesspolicy_id"], "alias": "not_null_cmg_bh_ftd_accesspolicy_external_id_accesspolicy_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.5614345, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_accesspolicy_external_id", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_accesspolicy_external_id"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/not_null_cmg_bh_ftd_accesspolicy_external_id_accesspolicy_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect accesspolicy_id\nfrom \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_accesspolicy_external_id\"\nwhere accesspolicy_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "accesspolicy_id", "file_key_name": "models.cmg_bh_ftd_accesspolicy_external_id", "attached_node": "model.ftd.cmg_bh_ftd_accesspolicy_external_id", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "accesspolicy_id", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_accesspolicy_external_id')) }}"}, "namespace": null}}, "test.ftd.not_null_cmg_bh_ftd_filemetadata_external_id_filemetadata_id.52ac4227c7": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_cmg_bh_ftd_filemetadata_external_id_filemetadata_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_cmg_bh_ftd_filemetadata_external_id_filemetadata_id.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.not_null_cmg_bh_ftd_filemetadata_external_id_filemetadata_id.52ac4227c7", "fqn": ["ftd", "cmg_bh", "docs", "not_null_cmg_bh_ftd_filemetadata_external_id_filemetadata_id"], "alias": "not_null_cmg_bh_ftd_filemetadata_external_id_filemetadata_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.5624542, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_filemetadata_external_id", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_filemetadata_external_id"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/not_null_cmg_bh_ftd_filemetadata_external_id_filemetadata_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect filemetadata_id\nfrom \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_filemetadata_external_id\"\nwhere filemetadata_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "filemetadata_id", "file_key_name": "models.cmg_bh_ftd_filemetadata_external_id", "attached_node": "model.ftd.cmg_bh_ftd_filemetadata_external_id", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "filemetadata_id", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_filemetadata_external_id')) }}"}, "namespace": null}}, "test.ftd.not_null_cmg_bh_ftd_familyrelationship_external_id_familyrelationship_id.ae12bde48f": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_cmg_bh_ftd_familyrelationship_external_id_familyrelationship_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_cmg_bh_ftd_familyrela_c6fc7ae5c3aa2ccebada69573b61bb4c.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.not_null_cmg_bh_ftd_familyrelationship_external_id_familyrelationship_id.ae12bde48f", "fqn": ["ftd", "cmg_bh", "docs", "not_null_cmg_bh_ftd_familyrelationship_external_id_familyrelationship_id"], "alias": "not_null_cmg_bh_ftd_familyrela_c6fc7ae5c3aa2ccebada69573b61bb4c", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "not_null_cmg_bh_ftd_familyrela_c6fc7ae5c3aa2ccebada69573b61bb4c", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "not_null_cmg_bh_ftd_familyrela_c6fc7ae5c3aa2ccebada69573b61bb4c"}, "created_at": 1757448969.5634165, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"not_null_cmg_bh_ftd_familyrela_c6fc7ae5c3aa2ccebada69573b61bb4c\") }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_familyrelationship_external_id", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_familyrelationship_external_id"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/not_null_cmg_bh_ftd_familyrela_c6fc7ae5c3aa2ccebada69573b61bb4c.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect familyrelationship_id\nfrom \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_familyrelationship_external_id\"\nwhere familyrelationship_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "familyrelationship_id", "file_key_name": "models.cmg_bh_ftd_familyrelationship_external_id", "attached_node": "model.ftd.cmg_bh_ftd_familyrelationship_external_id", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "familyrelationship_id", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_familyrelationship_external_id')) }}"}, "namespace": null}}, "test.ftd.not_null_cmg_bh_ftd_file_external_id_file_id.f1c19d8e1d": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_cmg_bh_ftd_file_external_id_file_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_cmg_bh_ftd_file_external_id_file_id.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.not_null_cmg_bh_ftd_file_external_id_file_id.f1c19d8e1d", "fqn": ["ftd", "cmg_bh", "docs", "not_null_cmg_bh_ftd_file_external_id_file_id"], "alias": "not_null_cmg_bh_ftd_file_external_id_file_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.5643382, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_file_external_id", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_file_external_id"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/not_null_cmg_bh_ftd_file_external_id_file_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect file_id\nfrom \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_file_external_id\"\nwhere file_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "file_id", "file_key_name": "models.cmg_bh_ftd_file_external_id", "attached_node": "model.ftd.cmg_bh_ftd_file_external_id", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "file_id", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_file_external_id')) }}"}, "namespace": null}}, "test.ftd.not_null_cmg_bh_ftd_accesscontrolledrecord_external_id_accesscontrolledrecord_id.c934007037": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_cmg_bh_ftd_accesscontrolledrecord_external_id_accesscontrolledrecord_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_cmg_bh_ftd_accesscont_6f3093c2c44f1ba0f752d9fae3f529d0.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.not_null_cmg_bh_ftd_accesscontrolledrecord_external_id_accesscontrolledrecord_id.c934007037", "fqn": ["ftd", "cmg_bh", "docs", "not_null_cmg_bh_ftd_accesscontrolledrecord_external_id_accesscontrolledrecord_id"], "alias": "not_null_cmg_bh_ftd_accesscont_6f3093c2c44f1ba0f752d9fae3f529d0", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "not_null_cmg_bh_ftd_accesscont_6f3093c2c44f1ba0f752d9fae3f529d0", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "not_null_cmg_bh_ftd_accesscont_6f3093c2c44f1ba0f752d9fae3f529d0"}, "created_at": 1757448969.5653508, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"not_null_cmg_bh_ftd_accesscont_6f3093c2c44f1ba0f752d9fae3f529d0\") }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_accesscontrolledrecord_external_id", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_accesscontrolledrecord_external_id"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/not_null_cmg_bh_ftd_accesscont_6f3093c2c44f1ba0f752d9fae3f529d0.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect accesscontrolledrecord_id\nfrom \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_accesscontrolledrecord_external_id\"\nwhere accesscontrolledrecord_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "accesscontrolledrecord_id", "file_key_name": "models.cmg_bh_ftd_accesscontrolledrecord_external_id", "attached_node": "model.ftd.cmg_bh_ftd_accesscontrolledrecord_external_id", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "accesscontrolledrecord_id", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_accesscontrolledrecord_external_id')) }}"}, "namespace": null}}, "test.ftd.not_null_cmg_bh_ftd_accesspolicy_access_policy_code_accesspolicy_id.03e151a874": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_cmg_bh_ftd_accesspolicy_access_policy_code_accesspolicy_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_cmg_bh_ftd_accesspoli_847e1c8b4665295a9f607efaff5d3839.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.not_null_cmg_bh_ftd_accesspolicy_access_policy_code_accesspolicy_id.03e151a874", "fqn": ["ftd", "cmg_bh", "docs", "not_null_cmg_bh_ftd_accesspolicy_access_policy_code_accesspolicy_id"], "alias": "not_null_cmg_bh_ftd_accesspoli_847e1c8b4665295a9f607efaff5d3839", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "not_null_cmg_bh_ftd_accesspoli_847e1c8b4665295a9f607efaff5d3839", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "not_null_cmg_bh_ftd_accesspoli_847e1c8b4665295a9f607efaff5d3839"}, "created_at": 1757448969.566284, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"not_null_cmg_bh_ftd_accesspoli_847e1c8b4665295a9f607efaff5d3839\") }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_accesspolicy_access_policy_code", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_accesspolicy_access_policy_code"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/not_null_cmg_bh_ftd_accesspoli_847e1c8b4665295a9f607efaff5d3839.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect accesspolicy_id\nfrom \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_accesspolicy_access_policy_code\"\nwhere accesspolicy_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "accesspolicy_id", "file_key_name": "models.cmg_bh_ftd_accesspolicy_access_policy_code", "attached_node": "model.ftd.cmg_bh_ftd_accesspolicy_access_policy_code", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "accesspolicy_id", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_accesspolicy_access_policy_code')) }}"}, "namespace": null}}, "test.ftd.not_null_cmg_bh_ftd_accesspolicy_access_policy_code_access_policy_code.2437b083b0": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_cmg_bh_ftd_accesspolicy_access_policy_code_access_policy_code", "resource_type": "test", "package_name": "ftd", "path": "not_null_cmg_bh_ftd_accesspoli_eb4a59736f02ee87c8f2830483c5cf38.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.not_null_cmg_bh_ftd_accesspolicy_access_policy_code_access_policy_code.2437b083b0", "fqn": ["ftd", "cmg_bh", "docs", "not_null_cmg_bh_ftd_accesspolicy_access_policy_code_access_policy_code"], "alias": "not_null_cmg_bh_ftd_accesspoli_eb4a59736f02ee87c8f2830483c5cf38", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "not_null_cmg_bh_ftd_accesspoli_eb4a59736f02ee87c8f2830483c5cf38", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "not_null_cmg_bh_ftd_accesspoli_eb4a59736f02ee87c8f2830483c5cf38"}, "created_at": 1757448969.5673301, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"not_null_cmg_bh_ftd_accesspoli_eb4a59736f02ee87c8f2830483c5cf38\") }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_accesspolicy_access_policy_code", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_accesspolicy_access_policy_code"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/not_null_cmg_bh_ftd_accesspoli_eb4a59736f02ee87c8f2830483c5cf38.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect access_policy_code\nfrom \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_accesspolicy_access_policy_code\"\nwhere access_policy_code is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "access_policy_code", "file_key_name": "models.cmg_bh_ftd_accesspolicy_access_policy_code", "attached_node": "model.ftd.cmg_bh_ftd_accesspolicy_access_policy_code", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "access_policy_code", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_accesspolicy_access_policy_code')) }}"}, "namespace": null}}, "test.ftd.accepted_values_cmg_bh_ftd_accesspolicy_access_policy_code_access_policy_code__gru__hmb__ds__irb__pub__col__npu__mds__gso__gsr.0eae20d9c7": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "accepted_values_cmg_bh_ftd_accesspolicy_access_policy_code_access_policy_code__gru__hmb__ds__irb__pub__col__npu__mds__gso__gsr", "resource_type": "test", "package_name": "ftd", "path": "accepted_values_cmg_bh_ftd_acc_d8139c66e15290a28c07778eb801487e.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.accepted_values_cmg_bh_ftd_accesspolicy_access_policy_code_access_policy_code__gru__hmb__ds__irb__pub__col__npu__mds__gso__gsr.0eae20d9c7", "fqn": ["ftd", "cmg_bh", "docs", "accepted_values_cmg_bh_ftd_accesspolicy_access_policy_code_access_policy_code__gru__hmb__ds__irb__pub__col__npu__mds__gso__gsr"], "alias": "accepted_values_cmg_bh_ftd_acc_d8139c66e15290a28c07778eb801487e", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_cmg_bh_ftd_acc_d8139c66e15290a28c07778eb801487e", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "accepted_values_cmg_bh_ftd_acc_d8139c66e15290a28c07778eb801487e"}, "created_at": 1757448969.568281, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_cmg_bh_ftd_acc_d8139c66e15290a28c07778eb801487e\") }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_accesspolicy_access_policy_code", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_accesspolicy_access_policy_code"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/accepted_values_cmg_bh_ftd_acc_d8139c66e15290a28c07778eb801487e.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        access_policy_code as value_field,\n        count(*) as n_records\n\n    from \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_accesspolicy_access_policy_code\"\n    group by access_policy_code\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'gru','hmb','ds','irb','pub','col','npu','mds','gso','gsr'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "access_policy_code", "file_key_name": "models.cmg_bh_ftd_accesspolicy_access_policy_code", "attached_node": "model.ftd.cmg_bh_ftd_accesspolicy_access_policy_code", "test_metadata": {"name": "accepted_values", "kwargs": {"values": ["gru", "hmb", "ds", "irb", "pub", "col", "npu", "mds", "gso", "gsr"], "column_name": "access_policy_code", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_accesspolicy_access_policy_code')) }}"}, "namespace": null}}, "test.ftd.not_null_cmg_bh_ftd_demographics_external_id_demographics_id.e258ff214c": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_cmg_bh_ftd_demographics_external_id_demographics_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_cmg_bh_ftd_demographics_external_id_demographics_id.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.not_null_cmg_bh_ftd_demographics_external_id_demographics_id.e258ff214c", "fqn": ["ftd", "cmg_bh", "docs", "not_null_cmg_bh_ftd_demographics_external_id_demographics_id"], "alias": "not_null_cmg_bh_ftd_demographics_external_id_demographics_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.5709891, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_demographics_external_id", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_demographics_external_id"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/not_null_cmg_bh_ftd_demographics_external_id_demographics_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect demographics_id\nfrom \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_demographics_external_id\"\nwhere demographics_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "demographics_id", "file_key_name": "models.cmg_bh_ftd_demographics_external_id", "attached_node": "model.ftd.cmg_bh_ftd_demographics_external_id", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "demographics_id", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_demographics_external_id')) }}"}, "namespace": null}}, "test.ftd.not_null_cmg_bh_ftd_aliquot_external_id_aliquot_id.99f903d593": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_cmg_bh_ftd_aliquot_external_id_aliquot_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_cmg_bh_ftd_aliquot_external_id_aliquot_id.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.not_null_cmg_bh_ftd_aliquot_external_id_aliquot_id.99f903d593", "fqn": ["ftd", "cmg_bh", "docs", "not_null_cmg_bh_ftd_aliquot_external_id_aliquot_id"], "alias": "not_null_cmg_bh_ftd_aliquot_external_id_aliquot_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.5720885, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_aliquot_external_id", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_aliquot_external_id"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/not_null_cmg_bh_ftd_aliquot_external_id_aliquot_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect aliquot_id\nfrom \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_aliquot_external_id\"\nwhere aliquot_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "aliquot_id", "file_key_name": "models.cmg_bh_ftd_aliquot_external_id", "attached_node": "model.ftd.cmg_bh_ftd_aliquot_external_id", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "aliquot_id", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_aliquot_external_id')) }}"}, "namespace": null}}, "test.ftd.accepted_values_cmg_bh_ftd_family_family_type__control_only__duo__proband_only__trio__trio_plus__other.0e3319ecb9": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "accepted_values_cmg_bh_ftd_family_family_type__control_only__duo__proband_only__trio__trio_plus__other", "resource_type": "test", "package_name": "ftd", "path": "accepted_values_cmg_bh_ftd_fam_1cf98b5463985bd6af55ff9dae9bf48d.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.accepted_values_cmg_bh_ftd_family_family_type__control_only__duo__proband_only__trio__trio_plus__other.0e3319ecb9", "fqn": ["ftd", "cmg_bh", "docs", "accepted_values_cmg_bh_ftd_family_family_type__control_only__duo__proband_only__trio__trio_plus__other"], "alias": "accepted_values_cmg_bh_ftd_fam_1cf98b5463985bd6af55ff9dae9bf48d", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_cmg_bh_ftd_fam_1cf98b5463985bd6af55ff9dae9bf48d", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "accepted_values_cmg_bh_ftd_fam_1cf98b5463985bd6af55ff9dae9bf48d"}, "created_at": 1757448969.5730932, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_cmg_bh_ftd_fam_1cf98b5463985bd6af55ff9dae9bf48d\") }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_family", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_family"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/accepted_values_cmg_bh_ftd_fam_1cf98b5463985bd6af55ff9dae9bf48d.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        family_type as value_field,\n        count(*) as n_records\n\n    from \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_family\"\n    group by family_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'control_only','duo','proband_only','trio','trio_plus','other'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "family_type", "file_key_name": "models.cmg_bh_ftd_family", "attached_node": "model.ftd.cmg_bh_ftd_family", "test_metadata": {"name": "accepted_values", "kwargs": {"values": ["control_only", "duo", "proband_only", "trio", "trio_plus", "other"], "column_name": "family_type", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_family')) }}"}, "namespace": null}}, "test.ftd.accepted_values_cmg_bh_ftd_family_consanguinity__not_suspected__suspected__known_present__unknown.e6ab074c22": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "accepted_values_cmg_bh_ftd_family_consanguinity__not_suspected__suspected__known_present__unknown", "resource_type": "test", "package_name": "ftd", "path": "accepted_values_cmg_bh_ftd_fam_c8340fc2a1bd0a1aae552e502d1e3b25.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.accepted_values_cmg_bh_ftd_family_consanguinity__not_suspected__suspected__known_present__unknown.e6ab074c22", "fqn": ["ftd", "cmg_bh", "docs", "accepted_values_cmg_bh_ftd_family_consanguinity__not_suspected__suspected__known_present__unknown"], "alias": "accepted_values_cmg_bh_ftd_fam_c8340fc2a1bd0a1aae552e502d1e3b25", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_cmg_bh_ftd_fam_c8340fc2a1bd0a1aae552e502d1e3b25", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "accepted_values_cmg_bh_ftd_fam_c8340fc2a1bd0a1aae552e502d1e3b25"}, "created_at": 1757448969.577215, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_cmg_bh_ftd_fam_c8340fc2a1bd0a1aae552e502d1e3b25\") }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_family", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_family"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/accepted_values_cmg_bh_ftd_fam_c8340fc2a1bd0a1aae552e502d1e3b25.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        consanguinity as value_field,\n        count(*) as n_records\n\n    from \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_family\"\n    group by consanguinity\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'not_suspected','suspected','known_present','unknown'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "consanguinity", "file_key_name": "models.cmg_bh_ftd_family", "attached_node": "model.ftd.cmg_bh_ftd_family", "test_metadata": {"name": "accepted_values", "kwargs": {"values": ["not_suspected", "suspected", "known_present", "unknown"], "column_name": "consanguinity", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_family')) }}"}, "namespace": null}}, "test.ftd.not_null_cmg_bh_ftd_family_id.171d428fd1": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_cmg_bh_ftd_family_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_cmg_bh_ftd_family_id.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.not_null_cmg_bh_ftd_family_id.171d428fd1", "fqn": ["ftd", "cmg_bh", "docs", "not_null_cmg_bh_ftd_family_id"], "alias": "not_null_cmg_bh_ftd_family_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.5806983, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_family", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_family"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/not_null_cmg_bh_ftd_family_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_family\"\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "id", "file_key_name": "models.cmg_bh_ftd_family", "attached_node": "model.ftd.cmg_bh_ftd_family", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_family')) }}"}, "namespace": null}}, "test.ftd.not_null_cmg_bh_ftd_study_funding_source_study_id.42d456a2d7": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_cmg_bh_ftd_study_funding_source_study_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_cmg_bh_ftd_study_funding_source_study_id.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.not_null_cmg_bh_ftd_study_funding_source_study_id.42d456a2d7", "fqn": ["ftd", "cmg_bh", "docs", "not_null_cmg_bh_ftd_study_funding_source_study_id"], "alias": "not_null_cmg_bh_ftd_study_funding_source_study_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.581808, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_study_funding_source", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_study_funding_source"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/not_null_cmg_bh_ftd_study_funding_source_study_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect study_id\nfrom \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_study_funding_source\"\nwhere study_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "study_id", "file_key_name": "models.cmg_bh_ftd_study_funding_source", "attached_node": "model.ftd.cmg_bh_ftd_study_funding_source", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "study_id", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_study_funding_source')) }}"}, "namespace": null}}, "test.ftd.accepted_values_cmg_bh_ftd_aliquot_availablity_status__available__unavailable.622cd860b5": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "accepted_values_cmg_bh_ftd_aliquot_availablity_status__available__unavailable", "resource_type": "test", "package_name": "ftd", "path": "accepted_values_cmg_bh_ftd_ali_e4f82385397b981b7b359ef6ce173d98.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.accepted_values_cmg_bh_ftd_aliquot_availablity_status__available__unavailable.622cd860b5", "fqn": ["ftd", "cmg_bh", "docs", "accepted_values_cmg_bh_ftd_aliquot_availablity_status__available__unavailable"], "alias": "accepted_values_cmg_bh_ftd_ali_e4f82385397b981b7b359ef6ce173d98", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_cmg_bh_ftd_ali_e4f82385397b981b7b359ef6ce173d98", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "accepted_values_cmg_bh_ftd_ali_e4f82385397b981b7b359ef6ce173d98"}, "created_at": 1757448969.5828073, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_cmg_bh_ftd_ali_e4f82385397b981b7b359ef6ce173d98\") }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_aliquot", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_aliquot"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/accepted_values_cmg_bh_ftd_ali_e4f82385397b981b7b359ef6ce173d98.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        availablity_status as value_field,\n        count(*) as n_records\n\n    from \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_aliquot\"\n    group by availablity_status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'available','unavailable'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "availablity_status", "file_key_name": "models.cmg_bh_ftd_aliquot", "attached_node": "model.ftd.cmg_bh_ftd_aliquot", "test_metadata": {"name": "accepted_values", "kwargs": {"values": ["available", "unavailable"], "column_name": "availablity_status", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_aliquot')) }}"}, "namespace": null}}, "test.ftd.not_null_cmg_bh_ftd_aliquot_id.e2464dd2fe": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_cmg_bh_ftd_aliquot_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_cmg_bh_ftd_aliquot_id.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.not_null_cmg_bh_ftd_aliquot_id.e2464dd2fe", "fqn": ["ftd", "cmg_bh", "docs", "not_null_cmg_bh_ftd_aliquot_id"], "alias": "not_null_cmg_bh_ftd_aliquot_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.5853972, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_aliquot", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_aliquot"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/not_null_cmg_bh_ftd_aliquot_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_aliquot\"\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "id", "file_key_name": "models.cmg_bh_ftd_aliquot", "attached_node": "model.ftd.cmg_bh_ftd_aliquot", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_aliquot')) }}"}, "namespace": null}}, "test.ftd.not_null_cmg_bh_ftd_subjectassertion_id.13cdc81eb9": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_cmg_bh_ftd_subjectassertion_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_cmg_bh_ftd_subjectassertion_id.sql", "original_file_path": "models/cmg_bh/docs/__models.yml", "unique_id": "test.ftd.not_null_cmg_bh_ftd_subjectassertion_id.13cdc81eb9", "fqn": ["ftd", "cmg_bh", "docs", "not_null_cmg_bh_ftd_subjectassertion_id"], "alias": "not_null_cmg_bh_ftd_subjectassertion_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.5864735, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "cmg_bh_ftd_subjectassertion", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.cmg_bh_ftd_subjectassertion"]}, "compiled_path": "target/compiled/ftd/models/cmg_bh/docs/__models.yml/not_null_cmg_bh_ftd_subjectassertion_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"dbt\".\"main_cmg_bh_data\".\"cmg_bh_ftd_subjectassertion\"\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "id", "file_key_name": "models.cmg_bh_ftd_subjectassertion", "attached_node": "model.ftd.cmg_bh_ftd_subjectassertion", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('cmg_bh_ftd_subjectassertion')) }}"}, "namespace": null}}, "test.ftd.not_null_GWAS_ftd_sample_sample_type.ba5edecc46": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GWAS_ftd_sample_sample_type", "resource_type": "test", "package_name": "ftd", "path": "not_null_GWAS_ftd_sample_sample_type.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.not_null_GWAS_ftd_sample_sample_type.ba5edecc46", "fqn": ["ftd", "GWAS", "docs", "not_null_GWAS_ftd_sample_sample_type"], "alias": "not_null_GWAS_ftd_sample_sample_type", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.6110396, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GWAS_ftd_sample", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_sample"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/not_null_GWAS_ftd_sample_sample_type.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sample_type\nfrom \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_sample\"\nwhere sample_type is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "sample_type", "file_key_name": "models.GWAS_ftd_sample", "attached_node": "model.ftd.GWAS_ftd_sample", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "sample_type", "model": "{{ get_where_subquery(ref('GWAS_ftd_sample')) }}"}, "namespace": null}}, "test.ftd.accepted_values_GWAS_ftd_sample_availablity_status__available__unavailable.60e6fae4ba": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "accepted_values_GWAS_ftd_sample_availablity_status__available__unavailable", "resource_type": "test", "package_name": "ftd", "path": "accepted_values_GWAS_ftd_sampl_b3b8cedb2a5ea45489062a2847e6f18e.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.accepted_values_GWAS_ftd_sample_availablity_status__available__unavailable.60e6fae4ba", "fqn": ["ftd", "GWAS", "docs", "accepted_values_GWAS_ftd_sample_availablity_status__available__unavailable"], "alias": "accepted_values_GWAS_ftd_sampl_b3b8cedb2a5ea45489062a2847e6f18e", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_GWAS_ftd_sampl_b3b8cedb2a5ea45489062a2847e6f18e", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": "availablity_status IS NOT NULL", "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"where": "availablity_status IS NOT NULL", "alias": "accepted_values_GWAS_ftd_sampl_b3b8cedb2a5ea45489062a2847e6f18e"}, "created_at": 1757448969.6124742, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(where=\"availablity_status IS NOT NULL\",alias=\"accepted_values_GWAS_ftd_sampl_b3b8cedb2a5ea45489062a2847e6f18e\") }}", "language": "sql", "refs": [{"name": "GWAS_ftd_sample", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_sample"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/accepted_values_GWAS_ftd_sampl_b3b8cedb2a5ea45489062a2847e6f18e.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        availablity_status as value_field,\n        count(*) as n_records\n\n    from (select * from \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_sample\" where availablity_status IS NOT NULL) dbt_subquery\n    group by availablity_status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'available','unavailable'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "availablity_status", "file_key_name": "models.GWAS_ftd_sample", "attached_node": "model.ftd.GWAS_ftd_sample", "test_metadata": {"name": "accepted_values", "kwargs": {"values": ["available", "unavailable"], "column_name": "availablity_status", "model": "{{ get_where_subquery(ref('GWAS_ftd_sample')) }}"}, "namespace": null}}, "test.ftd.not_null_GWAS_ftd_sample_id.f18de69e62": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GWAS_ftd_sample_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_GWAS_ftd_sample_id.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.not_null_GWAS_ftd_sample_id.f18de69e62", "fqn": ["ftd", "GWAS", "docs", "not_null_GWAS_ftd_sample_id"], "alias": "not_null_GWAS_ftd_sample_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.6154513, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GWAS_ftd_sample", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_sample"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/not_null_GWAS_ftd_sample_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_sample\"\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "id", "file_key_name": "models.GWAS_ftd_sample", "attached_node": "model.ftd.GWAS_ftd_sample", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('GWAS_ftd_sample')) }}"}, "namespace": null}}, "test.ftd.not_null_GWAS_ftd_demographics_source_data_demographics_id.0b26adbf81": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GWAS_ftd_demographics_source_data_demographics_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_GWAS_ftd_demographics_source_data_demographics_id.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.not_null_GWAS_ftd_demographics_source_data_demographics_id.0b26adbf81", "fqn": ["ftd", "GWAS", "docs", "not_null_GWAS_ftd_demographics_source_data_demographics_id"], "alias": "not_null_GWAS_ftd_demographics_source_data_demographics_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.6165473, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GWAS_ftd_demographics_source_data", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_demographics_source_data"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/not_null_GWAS_ftd_demographics_source_data_demographics_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect demographics_id\nfrom \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_demographics_source_data\"\nwhere demographics_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "demographics_id", "file_key_name": "models.GWAS_ftd_demographics_source_data", "attached_node": "model.ftd.GWAS_ftd_demographics_source_data", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "demographics_id", "model": "{{ get_where_subquery(ref('GWAS_ftd_demographics_source_data')) }}"}, "namespace": null}}, "test.ftd.not_null_GWAS_ftd_demographics_source_data_source_data_id.0967578e69": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GWAS_ftd_demographics_source_data_source_data_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_GWAS_ftd_demographics_source_data_source_data_id.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.not_null_GWAS_ftd_demographics_source_data_source_data_id.0967578e69", "fqn": ["ftd", "GWAS", "docs", "not_null_GWAS_ftd_demographics_source_data_source_data_id"], "alias": "not_null_GWAS_ftd_demographics_source_data_source_data_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.6175327, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GWAS_ftd_demographics_source_data", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_demographics_source_data"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/not_null_GWAS_ftd_demographics_source_data_source_data_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect source_data_id\nfrom \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_demographics_source_data\"\nwhere source_data_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "source_data_id", "file_key_name": "models.GWAS_ftd_demographics_source_data", "attached_node": "model.ftd.GWAS_ftd_demographics_source_data", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "source_data_id", "model": "{{ get_where_subquery(ref('GWAS_ftd_demographics_source_data')) }}"}, "namespace": null}}, "test.ftd.accepted_values_GWAS_ftd_family_family_type__control_only__duo__proband_only__trio__trio_plus__other.a35b15bf88": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "accepted_values_GWAS_ftd_family_family_type__control_only__duo__proband_only__trio__trio_plus__other", "resource_type": "test", "package_name": "ftd", "path": "accepted_values_GWAS_ftd_famil_8a381c0045d94f4c00d88bd498ebb4ec.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.accepted_values_GWAS_ftd_family_family_type__control_only__duo__proband_only__trio__trio_plus__other.a35b15bf88", "fqn": ["ftd", "GWAS", "docs", "accepted_values_GWAS_ftd_family_family_type__control_only__duo__proband_only__trio__trio_plus__other"], "alias": "accepted_values_GWAS_ftd_famil_8a381c0045d94f4c00d88bd498ebb4ec", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_GWAS_ftd_famil_8a381c0045d94f4c00d88bd498ebb4ec", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "accepted_values_GWAS_ftd_famil_8a381c0045d94f4c00d88bd498ebb4ec"}, "created_at": 1757448969.6185124, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_GWAS_ftd_famil_8a381c0045d94f4c00d88bd498ebb4ec\") }}", "language": "sql", "refs": [{"name": "GWAS_ftd_family", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_family"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/accepted_values_GWAS_ftd_famil_8a381c0045d94f4c00d88bd498ebb4ec.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        family_type as value_field,\n        count(*) as n_records\n\n    from \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_family\"\n    group by family_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'control_only','duo','proband_only','trio','trio_plus','other'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "family_type", "file_key_name": "models.GWAS_ftd_family", "attached_node": "model.ftd.GWAS_ftd_family", "test_metadata": {"name": "accepted_values", "kwargs": {"values": ["control_only", "duo", "proband_only", "trio", "trio_plus", "other"], "column_name": "family_type", "model": "{{ get_where_subquery(ref('GWAS_ftd_family')) }}"}, "namespace": null}}, "test.ftd.accepted_values_GWAS_ftd_family_consanguinity__not_suspected__suspected__known_present__unknown.4b84efae32": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "accepted_values_GWAS_ftd_family_consanguinity__not_suspected__suspected__known_present__unknown", "resource_type": "test", "package_name": "ftd", "path": "accepted_values_GWAS_ftd_famil_5a0dceecfbb1532d0fe67d1acbb3c356.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.accepted_values_GWAS_ftd_family_consanguinity__not_suspected__suspected__known_present__unknown.4b84efae32", "fqn": ["ftd", "GWAS", "docs", "accepted_values_GWAS_ftd_family_consanguinity__not_suspected__suspected__known_present__unknown"], "alias": "accepted_values_GWAS_ftd_famil_5a0dceecfbb1532d0fe67d1acbb3c356", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_GWAS_ftd_famil_5a0dceecfbb1532d0fe67d1acbb3c356", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "accepted_values_GWAS_ftd_famil_5a0dceecfbb1532d0fe67d1acbb3c356"}, "created_at": 1757448969.6212769, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_GWAS_ftd_famil_5a0dceecfbb1532d0fe67d1acbb3c356\") }}", "language": "sql", "refs": [{"name": "GWAS_ftd_family", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_family"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/accepted_values_GWAS_ftd_famil_5a0dceecfbb1532d0fe67d1acbb3c356.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        consanguinity as value_field,\n        count(*) as n_records\n\n    from \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_family\"\n    group by consanguinity\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'not_suspected','suspected','known_present','unknown'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "consanguinity", "file_key_name": "models.GWAS_ftd_family", "attached_node": "model.ftd.GWAS_ftd_family", "test_metadata": {"name": "accepted_values", "kwargs": {"values": ["not_suspected", "suspected", "known_present", "unknown"], "column_name": "consanguinity", "model": "{{ get_where_subquery(ref('GWAS_ftd_family')) }}"}, "namespace": null}}, "test.ftd.not_null_GWAS_ftd_family_id.170844bec6": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GWAS_ftd_family_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_GWAS_ftd_family_id.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.not_null_GWAS_ftd_family_id.170844bec6", "fqn": ["ftd", "GWAS", "docs", "not_null_GWAS_ftd_family_id"], "alias": "not_null_GWAS_ftd_family_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.6239688, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GWAS_ftd_family", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_family"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/not_null_GWAS_ftd_family_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_family\"\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "id", "file_key_name": "models.GWAS_ftd_family", "attached_node": "model.ftd.GWAS_ftd_family", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('GWAS_ftd_family')) }}"}, "namespace": null}}, "test.ftd.not_null_GWAS_ftd_accesscontrolledrecord_has_access_policy.2e0130413c": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GWAS_ftd_accesscontrolledrecord_has_access_policy", "resource_type": "test", "package_name": "ftd", "path": "not_null_GWAS_ftd_accesscontrolledrecord_has_access_policy.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.not_null_GWAS_ftd_accesscontrolledrecord_has_access_policy.2e0130413c", "fqn": ["ftd", "GWAS", "docs", "not_null_GWAS_ftd_accesscontrolledrecord_has_access_policy"], "alias": "not_null_GWAS_ftd_accesscontrolledrecord_has_access_policy", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.6249986, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GWAS_ftd_accesscontrolledrecord", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_accesscontrolledrecord"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/not_null_GWAS_ftd_accesscontrolledrecord_has_access_policy.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect has_access_policy\nfrom \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_accesscontrolledrecord\"\nwhere has_access_policy is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "has_access_policy", "file_key_name": "models.GWAS_ftd_accesscontrolledrecord", "attached_node": "model.ftd.GWAS_ftd_accesscontrolledrecord", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "has_access_policy", "model": "{{ get_where_subquery(ref('GWAS_ftd_accesscontrolledrecord')) }}"}, "namespace": null}}, "test.ftd.not_null_GWAS_ftd_accesscontrolledrecord_id.e26e3f9985": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GWAS_ftd_accesscontrolledrecord_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_GWAS_ftd_accesscontrolledrecord_id.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.not_null_GWAS_ftd_accesscontrolledrecord_id.e26e3f9985", "fqn": ["ftd", "GWAS", "docs", "not_null_GWAS_ftd_accesscontrolledrecord_id"], "alias": "not_null_GWAS_ftd_accesscontrolledrecord_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.6259496, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GWAS_ftd_accesscontrolledrecord", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_accesscontrolledrecord"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/not_null_GWAS_ftd_accesscontrolledrecord_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_accesscontrolledrecord\"\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "id", "file_key_name": "models.GWAS_ftd_accesscontrolledrecord", "attached_node": "model.ftd.GWAS_ftd_accesscontrolledrecord", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('GWAS_ftd_accesscontrolledrecord')) }}"}, "namespace": null}}, "test.ftd.not_null_GWAS_ftd_biospecimencollection_external_id_biospecimencollection_id.711ee44c3f": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GWAS_ftd_biospecimencollection_external_id_biospecimencollection_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_GWAS_ftd_biospecimenc_c04e2de5a385bd05d68e65d2e5fc8d81.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.not_null_GWAS_ftd_biospecimencollection_external_id_biospecimencollection_id.711ee44c3f", "fqn": ["ftd", "GWAS", "docs", "not_null_GWAS_ftd_biospecimencollection_external_id_biospecimencollection_id"], "alias": "not_null_GWAS_ftd_biospecimenc_c04e2de5a385bd05d68e65d2e5fc8d81", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "not_null_GWAS_ftd_biospecimenc_c04e2de5a385bd05d68e65d2e5fc8d81", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "not_null_GWAS_ftd_biospecimenc_c04e2de5a385bd05d68e65d2e5fc8d81"}, "created_at": 1757448969.6269186, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"not_null_GWAS_ftd_biospecimenc_c04e2de5a385bd05d68e65d2e5fc8d81\") }}", "language": "sql", "refs": [{"name": "GWAS_ftd_biospecimencollection_external_id", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_biospecimencollection_external_id"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/not_null_GWAS_ftd_biospecimenc_c04e2de5a385bd05d68e65d2e5fc8d81.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect biospecimencollection_id\nfrom \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_biospecimencollection_external_id\"\nwhere biospecimencollection_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "biospecimencollection_id", "file_key_name": "models.GWAS_ftd_biospecimencollection_external_id", "attached_node": "model.ftd.GWAS_ftd_biospecimencollection_external_id", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "biospecimencollection_id", "model": "{{ get_where_subquery(ref('GWAS_ftd_biospecimencollection_external_id')) }}"}, "namespace": null}}, "test.ftd.not_null_GWAS_ftd_subjectassertion_id.8d3cee52d4": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GWAS_ftd_subjectassertion_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_GWAS_ftd_subjectassertion_id.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.not_null_GWAS_ftd_subjectassertion_id.8d3cee52d4", "fqn": ["ftd", "GWAS", "docs", "not_null_GWAS_ftd_subjectassertion_id"], "alias": "not_null_GWAS_ftd_subjectassertion_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.6278691, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GWAS_ftd_subjectassertion", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_subjectassertion"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/not_null_GWAS_ftd_subjectassertion_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_subjectassertion\"\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "id", "file_key_name": "models.GWAS_ftd_subjectassertion", "attached_node": "model.ftd.GWAS_ftd_subjectassertion", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('GWAS_ftd_subjectassertion')) }}"}, "namespace": null}}, "test.ftd.not_null_GWAS_ftd_accesspolicy_description.662fc95fb3": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GWAS_ftd_accesspolicy_description", "resource_type": "test", "package_name": "ftd", "path": "not_null_GWAS_ftd_accesspolicy_description.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.not_null_GWAS_ftd_accesspolicy_description.662fc95fb3", "fqn": ["ftd", "GWAS", "docs", "not_null_GWAS_ftd_accesspolicy_description"], "alias": "not_null_GWAS_ftd_accesspolicy_description", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.6288676, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GWAS_ftd_accesspolicy", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_accesspolicy"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/not_null_GWAS_ftd_accesspolicy_description.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect description\nfrom \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_accesspolicy\"\nwhere description is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "description", "file_key_name": "models.GWAS_ftd_accesspolicy", "attached_node": "model.ftd.GWAS_ftd_accesspolicy", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "description", "model": "{{ get_where_subquery(ref('GWAS_ftd_accesspolicy')) }}"}, "namespace": null}}, "test.ftd.not_null_GWAS_ftd_accesspolicy_id.9bb01229e6": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GWAS_ftd_accesspolicy_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_GWAS_ftd_accesspolicy_id.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.not_null_GWAS_ftd_accesspolicy_id.9bb01229e6", "fqn": ["ftd", "GWAS", "docs", "not_null_GWAS_ftd_accesspolicy_id"], "alias": "not_null_GWAS_ftd_accesspolicy_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.6298661, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GWAS_ftd_accesspolicy", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_accesspolicy"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/not_null_GWAS_ftd_accesspolicy_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_accesspolicy\"\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "id", "file_key_name": "models.GWAS_ftd_accesspolicy", "attached_node": "model.ftd.GWAS_ftd_accesspolicy", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('GWAS_ftd_accesspolicy')) }}"}, "namespace": null}}, "test.ftd.not_null_GWAS_ftd_filemetadata_id.00cf19eaee": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GWAS_ftd_filemetadata_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_GWAS_ftd_filemetadata_id.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.not_null_GWAS_ftd_filemetadata_id.00cf19eaee", "fqn": ["ftd", "GWAS", "docs", "not_null_GWAS_ftd_filemetadata_id"], "alias": "not_null_GWAS_ftd_filemetadata_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.6308134, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GWAS_ftd_filemetadata", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_filemetadata"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/not_null_GWAS_ftd_filemetadata_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_filemetadata\"\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "id", "file_key_name": "models.GWAS_ftd_filemetadata", "attached_node": "model.ftd.GWAS_ftd_filemetadata", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('GWAS_ftd_filemetadata')) }}"}, "namespace": null}}, "test.ftd.not_null_GWAS_ftd_file_id.f7cd047ccc": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GWAS_ftd_file_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_GWAS_ftd_file_id.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.not_null_GWAS_ftd_file_id.f7cd047ccc", "fqn": ["ftd", "GWAS", "docs", "not_null_GWAS_ftd_file_id"], "alias": "not_null_GWAS_ftd_file_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.6317244, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GWAS_ftd_file", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_file"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/not_null_GWAS_ftd_file_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_file\"\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "id", "file_key_name": "models.GWAS_ftd_file", "attached_node": "model.ftd.GWAS_ftd_file", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('GWAS_ftd_file')) }}"}, "namespace": null}}, "test.ftd.not_null_GWAS_ftd_sample_processing_sample_id.d52e81cf7a": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GWAS_ftd_sample_processing_sample_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_GWAS_ftd_sample_processing_sample_id.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.not_null_GWAS_ftd_sample_processing_sample_id.d52e81cf7a", "fqn": ["ftd", "GWAS", "docs", "not_null_GWAS_ftd_sample_processing_sample_id"], "alias": "not_null_GWAS_ftd_sample_processing_sample_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.6326778, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GWAS_ftd_sample_processing", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_sample_processing"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/not_null_GWAS_ftd_sample_processing_sample_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sample_id\nfrom \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_sample_processing\"\nwhere sample_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "sample_id", "file_key_name": "models.GWAS_ftd_sample_processing", "attached_node": "model.ftd.GWAS_ftd_sample_processing", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "sample_id", "model": "{{ get_where_subquery(ref('GWAS_ftd_sample_processing')) }}"}, "namespace": null}}, "test.ftd.not_null_GWAS_ftd_file_sample_file_id.8f617f22f9": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GWAS_ftd_file_sample_file_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_GWAS_ftd_file_sample_file_id.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.not_null_GWAS_ftd_file_sample_file_id.8f617f22f9", "fqn": ["ftd", "GWAS", "docs", "not_null_GWAS_ftd_file_sample_file_id"], "alias": "not_null_GWAS_ftd_file_sample_file_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.6336129, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GWAS_ftd_file_sample", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_file_sample"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/not_null_GWAS_ftd_file_sample_file_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect file_id\nfrom \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_file_sample\"\nwhere file_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "file_id", "file_key_name": "models.GWAS_ftd_file_sample", "attached_node": "model.ftd.GWAS_ftd_file_sample", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "file_id", "model": "{{ get_where_subquery(ref('GWAS_ftd_file_sample')) }}"}, "namespace": null}}, "test.ftd.not_null_GWAS_ftd_file_sample_sample_id.5d2c3e7dea": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GWAS_ftd_file_sample_sample_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_GWAS_ftd_file_sample_sample_id.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.not_null_GWAS_ftd_file_sample_sample_id.5d2c3e7dea", "fqn": ["ftd", "GWAS", "docs", "not_null_GWAS_ftd_file_sample_sample_id"], "alias": "not_null_GWAS_ftd_file_sample_sample_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.6346006, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GWAS_ftd_file_sample", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_file_sample"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/not_null_GWAS_ftd_file_sample_sample_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sample_id\nfrom \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_file_sample\"\nwhere sample_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "sample_id", "file_key_name": "models.GWAS_ftd_file_sample", "attached_node": "model.ftd.GWAS_ftd_file_sample", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "sample_id", "model": "{{ get_where_subquery(ref('GWAS_ftd_file_sample')) }}"}, "namespace": null}}, "test.ftd.not_null_GWAS_ftd_filemetadata_external_id_filemetadata_id.e06fd398b3": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GWAS_ftd_filemetadata_external_id_filemetadata_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_GWAS_ftd_filemetadata_external_id_filemetadata_id.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.not_null_GWAS_ftd_filemetadata_external_id_filemetadata_id.e06fd398b3", "fqn": ["ftd", "GWAS", "docs", "not_null_GWAS_ftd_filemetadata_external_id_filemetadata_id"], "alias": "not_null_GWAS_ftd_filemetadata_external_id_filemetadata_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.6355505, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GWAS_ftd_filemetadata_external_id", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_filemetadata_external_id"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/not_null_GWAS_ftd_filemetadata_external_id_filemetadata_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect filemetadata_id\nfrom \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_filemetadata_external_id\"\nwhere filemetadata_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "filemetadata_id", "file_key_name": "models.GWAS_ftd_filemetadata_external_id", "attached_node": "model.ftd.GWAS_ftd_filemetadata_external_id", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "filemetadata_id", "model": "{{ get_where_subquery(ref('GWAS_ftd_filemetadata_external_id')) }}"}, "namespace": null}}, "test.ftd.not_null_GWAS_ftd_subject_subject_type.9afb6ee858": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GWAS_ftd_subject_subject_type", "resource_type": "test", "package_name": "ftd", "path": "not_null_GWAS_ftd_subject_subject_type.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.not_null_GWAS_ftd_subject_subject_type.9afb6ee858", "fqn": ["ftd", "GWAS", "docs", "not_null_GWAS_ftd_subject_subject_type"], "alias": "not_null_GWAS_ftd_subject_subject_type", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.6366024, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GWAS_ftd_subject", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_subject"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/not_null_GWAS_ftd_subject_subject_type.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect subject_type\nfrom \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_subject\"\nwhere subject_type is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "subject_type", "file_key_name": "models.GWAS_ftd_subject", "attached_node": "model.ftd.GWAS_ftd_subject", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "subject_type", "model": "{{ get_where_subquery(ref('GWAS_ftd_subject')) }}"}, "namespace": null}}, "test.ftd.accepted_values_GWAS_ftd_subject_subject_type__participant__non_participant__cell_line__animal_model__group__other.f1e7b6e71f": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "accepted_values_GWAS_ftd_subject_subject_type__participant__non_participant__cell_line__animal_model__group__other", "resource_type": "test", "package_name": "ftd", "path": "accepted_values_GWAS_ftd_subje_d31b0a0e6efa9b042708ad4b5983d235.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.accepted_values_GWAS_ftd_subject_subject_type__participant__non_participant__cell_line__animal_model__group__other.f1e7b6e71f", "fqn": ["ftd", "GWAS", "docs", "accepted_values_GWAS_ftd_subject_subject_type__participant__non_participant__cell_line__animal_model__group__other"], "alias": "accepted_values_GWAS_ftd_subje_d31b0a0e6efa9b042708ad4b5983d235", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_GWAS_ftd_subje_d31b0a0e6efa9b042708ad4b5983d235", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "accepted_values_GWAS_ftd_subje_d31b0a0e6efa9b042708ad4b5983d235"}, "created_at": 1757448969.6375844, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_GWAS_ftd_subje_d31b0a0e6efa9b042708ad4b5983d235\") }}", "language": "sql", "refs": [{"name": "GWAS_ftd_subject", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_subject"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/accepted_values_GWAS_ftd_subje_d31b0a0e6efa9b042708ad4b5983d235.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        subject_type as value_field,\n        count(*) as n_records\n\n    from \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_subject\"\n    group by subject_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'participant','non_participant','cell_line','animal_model','group','other'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "subject_type", "file_key_name": "models.GWAS_ftd_subject", "attached_node": "model.ftd.GWAS_ftd_subject", "test_metadata": {"name": "accepted_values", "kwargs": {"values": ["participant", "non_participant", "cell_line", "animal_model", "group", "other"], "column_name": "subject_type", "model": "{{ get_where_subquery(ref('GWAS_ftd_subject')) }}"}, "namespace": null}}, "test.ftd.not_null_GWAS_ftd_subject_id.9adf5ae8d2": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GWAS_ftd_subject_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_GWAS_ftd_subject_id.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.not_null_GWAS_ftd_subject_id.9adf5ae8d2", "fqn": ["ftd", "GWAS", "docs", "not_null_GWAS_ftd_subject_id"], "alias": "not_null_GWAS_ftd_subject_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.640385, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GWAS_ftd_subject", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_subject"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/not_null_GWAS_ftd_subject_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_subject\"\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "id", "file_key_name": "models.GWAS_ftd_subject", "attached_node": "model.ftd.GWAS_ftd_subject", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('GWAS_ftd_subject')) }}"}, "namespace": null}}, "test.ftd.not_null_GWAS_ftd_sample_storage_method_sample_id.95b7b1f3bd": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GWAS_ftd_sample_storage_method_sample_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_GWAS_ftd_sample_storage_method_sample_id.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.not_null_GWAS_ftd_sample_storage_method_sample_id.95b7b1f3bd", "fqn": ["ftd", "GWAS", "docs", "not_null_GWAS_ftd_sample_storage_method_sample_id"], "alias": "not_null_GWAS_ftd_sample_storage_method_sample_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.641354, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GWAS_ftd_sample_storage_method", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_sample_storage_method"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/not_null_GWAS_ftd_sample_storage_method_sample_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sample_id\nfrom \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_sample_storage_method\"\nwhere sample_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "sample_id", "file_key_name": "models.GWAS_ftd_sample_storage_method", "attached_node": "model.ftd.GWAS_ftd_sample_storage_method", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "sample_id", "model": "{{ get_where_subquery(ref('GWAS_ftd_sample_storage_method')) }}"}, "namespace": null}}, "test.ftd.not_null_GWAS_ftd_sample_external_id_sample_id.83c9e81cf6": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GWAS_ftd_sample_external_id_sample_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_GWAS_ftd_sample_external_id_sample_id.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.not_null_GWAS_ftd_sample_external_id_sample_id.83c9e81cf6", "fqn": ["ftd", "GWAS", "docs", "not_null_GWAS_ftd_sample_external_id_sample_id"], "alias": "not_null_GWAS_ftd_sample_external_id_sample_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.6423051, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GWAS_ftd_sample_external_id", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_sample_external_id"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/not_null_GWAS_ftd_sample_external_id_sample_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sample_id\nfrom \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_sample_external_id\"\nwhere sample_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "sample_id", "file_key_name": "models.GWAS_ftd_sample_external_id", "attached_node": "model.ftd.GWAS_ftd_sample_external_id", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "sample_id", "model": "{{ get_where_subquery(ref('GWAS_ftd_sample_external_id')) }}"}, "namespace": null}}, "test.ftd.not_null_GWAS_ftd_familyrelationship_external_id_familyrelationship_id.e420c7d651": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GWAS_ftd_familyrelationship_external_id_familyrelationship_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_GWAS_ftd_familyrelati_0a7f721dde7d3d1abc51b8889a896b4b.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.not_null_GWAS_ftd_familyrelationship_external_id_familyrelationship_id.e420c7d651", "fqn": ["ftd", "GWAS", "docs", "not_null_GWAS_ftd_familyrelationship_external_id_familyrelationship_id"], "alias": "not_null_GWAS_ftd_familyrelati_0a7f721dde7d3d1abc51b8889a896b4b", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "not_null_GWAS_ftd_familyrelati_0a7f721dde7d3d1abc51b8889a896b4b", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "not_null_GWAS_ftd_familyrelati_0a7f721dde7d3d1abc51b8889a896b4b"}, "created_at": 1757448969.6432574, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"not_null_GWAS_ftd_familyrelati_0a7f721dde7d3d1abc51b8889a896b4b\") }}", "language": "sql", "refs": [{"name": "GWAS_ftd_familyrelationship_external_id", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_familyrelationship_external_id"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/not_null_GWAS_ftd_familyrelati_0a7f721dde7d3d1abc51b8889a896b4b.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect familyrelationship_id\nfrom \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_familyrelationship_external_id\"\nwhere familyrelationship_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "familyrelationship_id", "file_key_name": "models.GWAS_ftd_familyrelationship_external_id", "attached_node": "model.ftd.GWAS_ftd_familyrelationship_external_id", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "familyrelationship_id", "model": "{{ get_where_subquery(ref('GWAS_ftd_familyrelationship_external_id')) }}"}, "namespace": null}}, "test.ftd.not_null_GWAS_ftd_family_family_relationships_family_id.8979eb8427": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GWAS_ftd_family_family_relationships_family_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_GWAS_ftd_family_family_relationships_family_id.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.not_null_GWAS_ftd_family_family_relationships_family_id.8979eb8427", "fqn": ["ftd", "GWAS", "docs", "not_null_GWAS_ftd_family_family_relationships_family_id"], "alias": "not_null_GWAS_ftd_family_family_relationships_family_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.6443024, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GWAS_ftd_family_family_relationships", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_family_family_relationships"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/not_null_GWAS_ftd_family_family_relationships_family_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect family_id\nfrom \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_family_family_relationships\"\nwhere family_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "family_id", "file_key_name": "models.GWAS_ftd_family_family_relationships", "attached_node": "model.ftd.GWAS_ftd_family_family_relationships", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "family_id", "model": "{{ get_where_subquery(ref('GWAS_ftd_family_family_relationships')) }}"}, "namespace": null}}, "test.ftd.not_null_GWAS_ftd_family_family_relationships_family_relationships_id.79d5ee7ab6": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GWAS_ftd_family_family_relationships_family_relationships_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_GWAS_ftd_family_famil_b9688caa088c9701bd27a4602f46c09c.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.not_null_GWAS_ftd_family_family_relationships_family_relationships_id.79d5ee7ab6", "fqn": ["ftd", "GWAS", "docs", "not_null_GWAS_ftd_family_family_relationships_family_relationships_id"], "alias": "not_null_GWAS_ftd_family_famil_b9688caa088c9701bd27a4602f46c09c", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "not_null_GWAS_ftd_family_famil_b9688caa088c9701bd27a4602f46c09c", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "not_null_GWAS_ftd_family_famil_b9688caa088c9701bd27a4602f46c09c"}, "created_at": 1757448969.645291, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"not_null_GWAS_ftd_family_famil_b9688caa088c9701bd27a4602f46c09c\") }}", "language": "sql", "refs": [{"name": "GWAS_ftd_family_family_relationships", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_family_family_relationships"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/not_null_GWAS_ftd_family_famil_b9688caa088c9701bd27a4602f46c09c.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect family_relationships_id\nfrom \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_family_family_relationships\"\nwhere family_relationships_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "family_relationships_id", "file_key_name": "models.GWAS_ftd_family_family_relationships", "attached_node": "model.ftd.GWAS_ftd_family_family_relationships", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "family_relationships_id", "model": "{{ get_where_subquery(ref('GWAS_ftd_family_family_relationships')) }}"}, "namespace": null}}, "test.ftd.not_null_GWAS_ftd_demographics_race_demographics_id.b4b0df45f7": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GWAS_ftd_demographics_race_demographics_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_GWAS_ftd_demographics_race_demographics_id.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.not_null_GWAS_ftd_demographics_race_demographics_id.b4b0df45f7", "fqn": ["ftd", "GWAS", "docs", "not_null_GWAS_ftd_demographics_race_demographics_id"], "alias": "not_null_GWAS_ftd_demographics_race_demographics_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.6462073, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GWAS_ftd_demographics_race", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_demographics_race"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/not_null_GWAS_ftd_demographics_race_demographics_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect demographics_id\nfrom \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_demographics_race\"\nwhere demographics_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "demographics_id", "file_key_name": "models.GWAS_ftd_demographics_race", "attached_node": "model.ftd.GWAS_ftd_demographics_race", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "demographics_id", "model": "{{ get_where_subquery(ref('GWAS_ftd_demographics_race')) }}"}, "namespace": null}}, "test.ftd.not_null_GWAS_ftd_demographics_race_race.b130263e3f": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GWAS_ftd_demographics_race_race", "resource_type": "test", "package_name": "ftd", "path": "not_null_GWAS_ftd_demographics_race_race.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.not_null_GWAS_ftd_demographics_race_race.b130263e3f", "fqn": ["ftd", "GWAS", "docs", "not_null_GWAS_ftd_demographics_race_race"], "alias": "not_null_GWAS_ftd_demographics_race_race", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.6471806, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GWAS_ftd_demographics_race", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_demographics_race"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/not_null_GWAS_ftd_demographics_race_race.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect race\nfrom \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_demographics_race\"\nwhere race is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "race", "file_key_name": "models.GWAS_ftd_demographics_race", "attached_node": "model.ftd.GWAS_ftd_demographics_race", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "race", "model": "{{ get_where_subquery(ref('GWAS_ftd_demographics_race')) }}"}, "namespace": null}}, "test.ftd.accepted_values_GWAS_ftd_demographics_race_race__american_indian_or_alaskan_native__asian__black_or_african_american__native_hawaiian_or_pacific_islander__white__other_race__unknown__asked_but_unknown.0e228bb450": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "accepted_values_GWAS_ftd_demographics_race_race__american_indian_or_alaskan_native__asian__black_or_african_american__native_hawaiian_or_pacific_islander__white__other_race__unknown__asked_but_unknown", "resource_type": "test", "package_name": "ftd", "path": "accepted_values_GWAS_ftd_demog_b18dca78bf2da9f779ab13af11d0ef70.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.accepted_values_GWAS_ftd_demographics_race_race__american_indian_or_alaskan_native__asian__black_or_african_american__native_hawaiian_or_pacific_islander__white__other_race__unknown__asked_but_unknown.0e228bb450", "fqn": ["ftd", "GWAS", "docs", "accepted_values_GWAS_ftd_demographics_race_race__american_indian_or_alaskan_native__asian__black_or_african_american__native_hawaiian_or_pacific_islander__white__other_race__unknown__asked_but_unknown"], "alias": "accepted_values_GWAS_ftd_demog_b18dca78bf2da9f779ab13af11d0ef70", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_GWAS_ftd_demog_b18dca78bf2da9f779ab13af11d0ef70", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "accepted_values_GWAS_ftd_demog_b18dca78bf2da9f779ab13af11d0ef70"}, "created_at": 1757448969.648131, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_GWAS_ftd_demog_b18dca78bf2da9f779ab13af11d0ef70\") }}", "language": "sql", "refs": [{"name": "GWAS_ftd_demographics_race", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_demographics_race"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/accepted_values_GWAS_ftd_demog_b18dca78bf2da9f779ab13af11d0ef70.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        race as value_field,\n        count(*) as n_records\n\n    from \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_demographics_race\"\n    group by race\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'american_indian_or_alaskan_native','asian','black_or_african_american','native_hawaiian_or_pacific_islander','white','other_race','unknown','asked_but_unknown'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "race", "file_key_name": "models.GWAS_ftd_demographics_race", "attached_node": "model.ftd.GWAS_ftd_demographics_race", "test_metadata": {"name": "accepted_values", "kwargs": {"values": ["american_indian_or_alaskan_native", "asian", "black_or_african_american", "native_hawaiian_or_pacific_islander", "white", "other_race", "unknown", "asked_but_unknown"], "column_name": "race", "model": "{{ get_where_subquery(ref('GWAS_ftd_demographics_race')) }}"}, "namespace": null}}, "test.ftd.not_null_GWAS_ftd_study_funding_source_study_id.1e79baded2": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GWAS_ftd_study_funding_source_study_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_GWAS_ftd_study_funding_source_study_id.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.not_null_GWAS_ftd_study_funding_source_study_id.1e79baded2", "fqn": ["ftd", "GWAS", "docs", "not_null_GWAS_ftd_study_funding_source_study_id"], "alias": "not_null_GWAS_ftd_study_funding_source_study_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.6509025, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GWAS_ftd_study_funding_source", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_study_funding_source"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/not_null_GWAS_ftd_study_funding_source_study_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect study_id\nfrom \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_study_funding_source\"\nwhere study_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "study_id", "file_key_name": "models.GWAS_ftd_study_funding_source", "attached_node": "model.ftd.GWAS_ftd_study_funding_source", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "study_id", "model": "{{ get_where_subquery(ref('GWAS_ftd_study_funding_source')) }}"}, "namespace": null}}, "test.ftd.not_null_GWAS_ftd_family_external_id_family_id.f629bd708e": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GWAS_ftd_family_external_id_family_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_GWAS_ftd_family_external_id_family_id.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.not_null_GWAS_ftd_family_external_id_family_id.f629bd708e", "fqn": ["ftd", "GWAS", "docs", "not_null_GWAS_ftd_family_external_id_family_id"], "alias": "not_null_GWAS_ftd_family_external_id_family_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.6518545, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GWAS_ftd_family_external_id", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_family_external_id"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/not_null_GWAS_ftd_family_external_id_family_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect family_id\nfrom \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_family_external_id\"\nwhere family_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "family_id", "file_key_name": "models.GWAS_ftd_family_external_id", "attached_node": "model.ftd.GWAS_ftd_family_external_id", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "family_id", "model": "{{ get_where_subquery(ref('GWAS_ftd_family_external_id')) }}"}, "namespace": null}}, "test.ftd.not_null_GWAS_ftd_accesspolicy_external_id_accesspolicy_id.66d916c183": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GWAS_ftd_accesspolicy_external_id_accesspolicy_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_GWAS_ftd_accesspolicy_external_id_accesspolicy_id.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.not_null_GWAS_ftd_accesspolicy_external_id_accesspolicy_id.66d916c183", "fqn": ["ftd", "GWAS", "docs", "not_null_GWAS_ftd_accesspolicy_external_id_accesspolicy_id"], "alias": "not_null_GWAS_ftd_accesspolicy_external_id_accesspolicy_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.652806, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GWAS_ftd_accesspolicy_external_id", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_accesspolicy_external_id"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/not_null_GWAS_ftd_accesspolicy_external_id_accesspolicy_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect accesspolicy_id\nfrom \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_accesspolicy_external_id\"\nwhere accesspolicy_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "accesspolicy_id", "file_key_name": "models.GWAS_ftd_accesspolicy_external_id", "attached_node": "model.ftd.GWAS_ftd_accesspolicy_external_id", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "accesspolicy_id", "model": "{{ get_where_subquery(ref('GWAS_ftd_accesspolicy_external_id')) }}"}, "namespace": null}}, "test.ftd.accepted_values_GWAS_ftd_aliquot_availablity_status__available__unavailable.240771e83f": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "accepted_values_GWAS_ftd_aliquot_availablity_status__available__unavailable", "resource_type": "test", "package_name": "ftd", "path": "accepted_values_GWAS_ftd_aliqu_f3cba8478c1b5f9d127b5980e3a649cc.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.accepted_values_GWAS_ftd_aliquot_availablity_status__available__unavailable.240771e83f", "fqn": ["ftd", "GWAS", "docs", "accepted_values_GWAS_ftd_aliquot_availablity_status__available__unavailable"], "alias": "accepted_values_GWAS_ftd_aliqu_f3cba8478c1b5f9d127b5980e3a649cc", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_GWAS_ftd_aliqu_f3cba8478c1b5f9d127b5980e3a649cc", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "accepted_values_GWAS_ftd_aliqu_f3cba8478c1b5f9d127b5980e3a649cc"}, "created_at": 1757448969.6537275, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_GWAS_ftd_aliqu_f3cba8478c1b5f9d127b5980e3a649cc\") }}", "language": "sql", "refs": [{"name": "GWAS_ftd_aliquot", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_aliquot"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/accepted_values_GWAS_ftd_aliqu_f3cba8478c1b5f9d127b5980e3a649cc.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        availablity_status as value_field,\n        count(*) as n_records\n\n    from \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_aliquot\"\n    group by availablity_status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'available','unavailable'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "availablity_status", "file_key_name": "models.GWAS_ftd_aliquot", "attached_node": "model.ftd.GWAS_ftd_aliquot", "test_metadata": {"name": "accepted_values", "kwargs": {"values": ["available", "unavailable"], "column_name": "availablity_status", "model": "{{ get_where_subquery(ref('GWAS_ftd_aliquot')) }}"}, "namespace": null}}, "test.ftd.not_null_GWAS_ftd_aliquot_id.8a637e633a": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GWAS_ftd_aliquot_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_GWAS_ftd_aliquot_id.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.not_null_GWAS_ftd_aliquot_id.8a637e633a", "fqn": ["ftd", "GWAS", "docs", "not_null_GWAS_ftd_aliquot_id"], "alias": "not_null_GWAS_ftd_aliquot_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.656908, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GWAS_ftd_aliquot", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_aliquot"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/not_null_GWAS_ftd_aliquot_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_aliquot\"\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "id", "file_key_name": "models.GWAS_ftd_aliquot", "attached_node": "model.ftd.GWAS_ftd_aliquot", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('GWAS_ftd_aliquot')) }}"}, "namespace": null}}, "test.ftd.accepted_values_GWAS_ftd_demographics_date_of_birth_type__exact__year_only__shifted__decade_only__other.c780486020": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "accepted_values_GWAS_ftd_demographics_date_of_birth_type__exact__year_only__shifted__decade_only__other", "resource_type": "test", "package_name": "ftd", "path": "accepted_values_GWAS_ftd_demog_ff1c501b6f775efecbb0492614b8b52f.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.accepted_values_GWAS_ftd_demographics_date_of_birth_type__exact__year_only__shifted__decade_only__other.c780486020", "fqn": ["ftd", "GWAS", "docs", "accepted_values_GWAS_ftd_demographics_date_of_birth_type__exact__year_only__shifted__decade_only__other"], "alias": "accepted_values_GWAS_ftd_demog_ff1c501b6f775efecbb0492614b8b52f", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_GWAS_ftd_demog_ff1c501b6f775efecbb0492614b8b52f", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "accepted_values_GWAS_ftd_demog_ff1c501b6f775efecbb0492614b8b52f"}, "created_at": 1757448969.6578712, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_GWAS_ftd_demog_ff1c501b6f775efecbb0492614b8b52f\") }}", "language": "sql", "refs": [{"name": "GWAS_ftd_demographics", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_demographics"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/accepted_values_GWAS_ftd_demog_ff1c501b6f775efecbb0492614b8b52f.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        date_of_birth_type as value_field,\n        count(*) as n_records\n\n    from \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_demographics\"\n    group by date_of_birth_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'exact','year_only','shifted','decade_only','other'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "date_of_birth_type", "file_key_name": "models.GWAS_ftd_demographics", "attached_node": "model.ftd.GWAS_ftd_demographics", "test_metadata": {"name": "accepted_values", "kwargs": {"values": ["exact", "year_only", "shifted", "decade_only", "other"], "column_name": "date_of_birth_type", "model": "{{ get_where_subquery(ref('GWAS_ftd_demographics')) }}"}, "namespace": null}}, "test.ftd.not_null_GWAS_ftd_demographics_sex.6450872514": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GWAS_ftd_demographics_sex", "resource_type": "test", "package_name": "ftd", "path": "not_null_GWAS_ftd_demographics_sex.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.not_null_GWAS_ftd_demographics_sex.6450872514", "fqn": ["ftd", "GWAS", "docs", "not_null_GWAS_ftd_demographics_sex"], "alias": "not_null_GWAS_ftd_demographics_sex", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.6606262, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GWAS_ftd_demographics", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_demographics"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/not_null_GWAS_ftd_demographics_sex.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sex\nfrom \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_demographics\"\nwhere sex is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "sex", "file_key_name": "models.GWAS_ftd_demographics", "attached_node": "model.ftd.GWAS_ftd_demographics", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "sex", "model": "{{ get_where_subquery(ref('GWAS_ftd_demographics')) }}"}, "namespace": null}}, "test.ftd.accepted_values_GWAS_ftd_demographics_sex__female__male__unknown__intersex.97c0c3d4d9": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "accepted_values_GWAS_ftd_demographics_sex__female__male__unknown__intersex", "resource_type": "test", "package_name": "ftd", "path": "accepted_values_GWAS_ftd_demog_3117e0dc932838f6ab2446860681a224.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.accepted_values_GWAS_ftd_demographics_sex__female__male__unknown__intersex.97c0c3d4d9", "fqn": ["ftd", "GWAS", "docs", "accepted_values_GWAS_ftd_demographics_sex__female__male__unknown__intersex"], "alias": "accepted_values_GWAS_ftd_demog_3117e0dc932838f6ab2446860681a224", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_GWAS_ftd_demog_3117e0dc932838f6ab2446860681a224", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "accepted_values_GWAS_ftd_demog_3117e0dc932838f6ab2446860681a224"}, "created_at": 1757448969.661622, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_GWAS_ftd_demog_3117e0dc932838f6ab2446860681a224\") }}", "language": "sql", "refs": [{"name": "GWAS_ftd_demographics", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_demographics"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/accepted_values_GWAS_ftd_demog_3117e0dc932838f6ab2446860681a224.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        sex as value_field,\n        count(*) as n_records\n\n    from \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_demographics\"\n    group by sex\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'female','male','unknown','intersex'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "sex", "file_key_name": "models.GWAS_ftd_demographics", "attached_node": "model.ftd.GWAS_ftd_demographics", "test_metadata": {"name": "accepted_values", "kwargs": {"values": ["female", "male", "unknown", "intersex"], "column_name": "sex", "model": "{{ get_where_subquery(ref('GWAS_ftd_demographics')) }}"}, "namespace": null}}, "test.ftd.not_null_GWAS_ftd_demographics_sex_display.2013c97889": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GWAS_ftd_demographics_sex_display", "resource_type": "test", "package_name": "ftd", "path": "not_null_GWAS_ftd_demographics_sex_display.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.not_null_GWAS_ftd_demographics_sex_display.2013c97889", "fqn": ["ftd", "GWAS", "docs", "not_null_GWAS_ftd_demographics_sex_display"], "alias": "not_null_GWAS_ftd_demographics_sex_display", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.6641371, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GWAS_ftd_demographics", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_demographics"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/not_null_GWAS_ftd_demographics_sex_display.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sex_display\nfrom \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_demographics\"\nwhere sex_display is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "sex_display", "file_key_name": "models.GWAS_ftd_demographics", "attached_node": "model.ftd.GWAS_ftd_demographics", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "sex_display", "model": "{{ get_where_subquery(ref('GWAS_ftd_demographics')) }}"}, "namespace": null}}, "test.ftd.not_null_GWAS_ftd_demographics_race_display.6337436a53": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GWAS_ftd_demographics_race_display", "resource_type": "test", "package_name": "ftd", "path": "not_null_GWAS_ftd_demographics_race_display.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.not_null_GWAS_ftd_demographics_race_display.6337436a53", "fqn": ["ftd", "GWAS", "docs", "not_null_GWAS_ftd_demographics_race_display"], "alias": "not_null_GWAS_ftd_demographics_race_display", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.6653018, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GWAS_ftd_demographics", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_demographics"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/not_null_GWAS_ftd_demographics_race_display.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect race_display\nfrom \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_demographics\"\nwhere race_display is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "race_display", "file_key_name": "models.GWAS_ftd_demographics", "attached_node": "model.ftd.GWAS_ftd_demographics", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "race_display", "model": "{{ get_where_subquery(ref('GWAS_ftd_demographics')) }}"}, "namespace": null}}, "test.ftd.not_null_GWAS_ftd_demographics_ethnicity.09313b1836": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GWAS_ftd_demographics_ethnicity", "resource_type": "test", "package_name": "ftd", "path": "not_null_GWAS_ftd_demographics_ethnicity.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.not_null_GWAS_ftd_demographics_ethnicity.09313b1836", "fqn": ["ftd", "GWAS", "docs", "not_null_GWAS_ftd_demographics_ethnicity"], "alias": "not_null_GWAS_ftd_demographics_ethnicity", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.6662617, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GWAS_ftd_demographics", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_demographics"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/not_null_GWAS_ftd_demographics_ethnicity.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ethnicity\nfrom \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_demographics\"\nwhere ethnicity is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "ethnicity", "file_key_name": "models.GWAS_ftd_demographics", "attached_node": "model.ftd.GWAS_ftd_demographics", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "ethnicity", "model": "{{ get_where_subquery(ref('GWAS_ftd_demographics')) }}"}, "namespace": null}}, "test.ftd.accepted_values_GWAS_ftd_demographics_ethnicity__hispanic_or_latino__not_hispanic_or_latino__unknown__asked_but_unknown.12ce6844a3": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "accepted_values_GWAS_ftd_demographics_ethnicity__hispanic_or_latino__not_hispanic_or_latino__unknown__asked_but_unknown", "resource_type": "test", "package_name": "ftd", "path": "accepted_values_GWAS_ftd_demog_8ef95e469eeb666978d59e78cc69a33f.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.accepted_values_GWAS_ftd_demographics_ethnicity__hispanic_or_latino__not_hispanic_or_latino__unknown__asked_but_unknown.12ce6844a3", "fqn": ["ftd", "GWAS", "docs", "accepted_values_GWAS_ftd_demographics_ethnicity__hispanic_or_latino__not_hispanic_or_latino__unknown__asked_but_unknown"], "alias": "accepted_values_GWAS_ftd_demog_8ef95e469eeb666978d59e78cc69a33f", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_GWAS_ftd_demog_8ef95e469eeb666978d59e78cc69a33f", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "accepted_values_GWAS_ftd_demog_8ef95e469eeb666978d59e78cc69a33f"}, "created_at": 1757448969.667231, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_GWAS_ftd_demog_8ef95e469eeb666978d59e78cc69a33f\") }}", "language": "sql", "refs": [{"name": "GWAS_ftd_demographics", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_demographics"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/accepted_values_GWAS_ftd_demog_8ef95e469eeb666978d59e78cc69a33f.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        ethnicity as value_field,\n        count(*) as n_records\n\n    from \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_demographics\"\n    group by ethnicity\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'hispanic_or_latino','not_hispanic_or_latino','unknown','asked_but_unknown'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "ethnicity", "file_key_name": "models.GWAS_ftd_demographics", "attached_node": "model.ftd.GWAS_ftd_demographics", "test_metadata": {"name": "accepted_values", "kwargs": {"values": ["hispanic_or_latino", "not_hispanic_or_latino", "unknown", "asked_but_unknown"], "column_name": "ethnicity", "model": "{{ get_where_subquery(ref('GWAS_ftd_demographics')) }}"}, "namespace": null}}, "test.ftd.not_null_GWAS_ftd_demographics_ethnicity_display.ed2f6f4c89": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GWAS_ftd_demographics_ethnicity_display", "resource_type": "test", "package_name": "ftd", "path": "not_null_GWAS_ftd_demographics_ethnicity_display.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.not_null_GWAS_ftd_demographics_ethnicity_display.ed2f6f4c89", "fqn": ["ftd", "GWAS", "docs", "not_null_GWAS_ftd_demographics_ethnicity_display"], "alias": "not_null_GWAS_ftd_demographics_ethnicity_display", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.6699176, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GWAS_ftd_demographics", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_demographics"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/not_null_GWAS_ftd_demographics_ethnicity_display.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ethnicity_display\nfrom \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_demographics\"\nwhere ethnicity_display is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "ethnicity_display", "file_key_name": "models.GWAS_ftd_demographics", "attached_node": "model.ftd.GWAS_ftd_demographics", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "ethnicity_display", "model": "{{ get_where_subquery(ref('GWAS_ftd_demographics')) }}"}, "namespace": null}}, "test.ftd.not_null_GWAS_ftd_demographics_id.71113fb2d0": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GWAS_ftd_demographics_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_GWAS_ftd_demographics_id.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.not_null_GWAS_ftd_demographics_id.71113fb2d0", "fqn": ["ftd", "GWAS", "docs", "not_null_GWAS_ftd_demographics_id"], "alias": "not_null_GWAS_ftd_demographics_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.6708727, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GWAS_ftd_demographics", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_demographics"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/not_null_GWAS_ftd_demographics_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_demographics\"\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "id", "file_key_name": "models.GWAS_ftd_demographics", "attached_node": "model.ftd.GWAS_ftd_demographics", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('GWAS_ftd_demographics')) }}"}, "namespace": null}}, "test.ftd.not_null_GWAS_ftd_familymember_external_id_familymember_id.36bf6e25fe": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GWAS_ftd_familymember_external_id_familymember_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_GWAS_ftd_familymember_external_id_familymember_id.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.not_null_GWAS_ftd_familymember_external_id_familymember_id.36bf6e25fe", "fqn": ["ftd", "GWAS", "docs", "not_null_GWAS_ftd_familymember_external_id_familymember_id"], "alias": "not_null_GWAS_ftd_familymember_external_id_familymember_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.6718228, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GWAS_ftd_familymember_external_id", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_familymember_external_id"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/not_null_GWAS_ftd_familymember_external_id_familymember_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect familymember_id\nfrom \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_familymember_external_id\"\nwhere familymember_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "familymember_id", "file_key_name": "models.GWAS_ftd_familymember_external_id", "attached_node": "model.ftd.GWAS_ftd_familymember_external_id", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "familymember_id", "model": "{{ get_where_subquery(ref('GWAS_ftd_familymember_external_id')) }}"}, "namespace": null}}, "test.ftd.not_null_GWAS_ftd_accesspolicy_access_policy_code_accesspolicy_id.22c45ebd4d": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GWAS_ftd_accesspolicy_access_policy_code_accesspolicy_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_GWAS_ftd_accesspolicy_7b4291424892bc34aba1aa21199af55b.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.not_null_GWAS_ftd_accesspolicy_access_policy_code_accesspolicy_id.22c45ebd4d", "fqn": ["ftd", "GWAS", "docs", "not_null_GWAS_ftd_accesspolicy_access_policy_code_accesspolicy_id"], "alias": "not_null_GWAS_ftd_accesspolicy_7b4291424892bc34aba1aa21199af55b", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "not_null_GWAS_ftd_accesspolicy_7b4291424892bc34aba1aa21199af55b", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "not_null_GWAS_ftd_accesspolicy_7b4291424892bc34aba1aa21199af55b"}, "created_at": 1757448969.672805, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"not_null_GWAS_ftd_accesspolicy_7b4291424892bc34aba1aa21199af55b\") }}", "language": "sql", "refs": [{"name": "GWAS_ftd_accesspolicy_access_policy_code", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_accesspolicy_access_policy_code"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/not_null_GWAS_ftd_accesspolicy_7b4291424892bc34aba1aa21199af55b.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect accesspolicy_id\nfrom \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_accesspolicy_access_policy_code\"\nwhere accesspolicy_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "accesspolicy_id", "file_key_name": "models.GWAS_ftd_accesspolicy_access_policy_code", "attached_node": "model.ftd.GWAS_ftd_accesspolicy_access_policy_code", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "accesspolicy_id", "model": "{{ get_where_subquery(ref('GWAS_ftd_accesspolicy_access_policy_code')) }}"}, "namespace": null}}, "test.ftd.not_null_GWAS_ftd_accesspolicy_access_policy_code_access_policy_code.ff6f3fd972": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GWAS_ftd_accesspolicy_access_policy_code_access_policy_code", "resource_type": "test", "package_name": "ftd", "path": "not_null_GWAS_ftd_accesspolicy_8b5186b6594183f8127d4d9dfc616629.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.not_null_GWAS_ftd_accesspolicy_access_policy_code_access_policy_code.ff6f3fd972", "fqn": ["ftd", "GWAS", "docs", "not_null_GWAS_ftd_accesspolicy_access_policy_code_access_policy_code"], "alias": "not_null_GWAS_ftd_accesspolicy_8b5186b6594183f8127d4d9dfc616629", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "not_null_GWAS_ftd_accesspolicy_8b5186b6594183f8127d4d9dfc616629", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "not_null_GWAS_ftd_accesspolicy_8b5186b6594183f8127d4d9dfc616629"}, "created_at": 1757448969.673751, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"not_null_GWAS_ftd_accesspolicy_8b5186b6594183f8127d4d9dfc616629\") }}", "language": "sql", "refs": [{"name": "GWAS_ftd_accesspolicy_access_policy_code", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_accesspolicy_access_policy_code"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/not_null_GWAS_ftd_accesspolicy_8b5186b6594183f8127d4d9dfc616629.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect access_policy_code\nfrom \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_accesspolicy_access_policy_code\"\nwhere access_policy_code is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "access_policy_code", "file_key_name": "models.GWAS_ftd_accesspolicy_access_policy_code", "attached_node": "model.ftd.GWAS_ftd_accesspolicy_access_policy_code", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "access_policy_code", "model": "{{ get_where_subquery(ref('GWAS_ftd_accesspolicy_access_policy_code')) }}"}, "namespace": null}}, "test.ftd.accepted_values_GWAS_ftd_accesspolicy_access_policy_code_access_policy_code__gru__hmb__ds__irb__pub__col__npu__mds__gso__gsr.3dbd2a1e67": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "accepted_values_GWAS_ftd_accesspolicy_access_policy_code_access_policy_code__gru__hmb__ds__irb__pub__col__npu__mds__gso__gsr", "resource_type": "test", "package_name": "ftd", "path": "accepted_values_GWAS_ftd_acces_5482dd0a5df051da9b91f75af7b5357e.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.accepted_values_GWAS_ftd_accesspolicy_access_policy_code_access_policy_code__gru__hmb__ds__irb__pub__col__npu__mds__gso__gsr.3dbd2a1e67", "fqn": ["ftd", "GWAS", "docs", "accepted_values_GWAS_ftd_accesspolicy_access_policy_code_access_policy_code__gru__hmb__ds__irb__pub__col__npu__mds__gso__gsr"], "alias": "accepted_values_GWAS_ftd_acces_5482dd0a5df051da9b91f75af7b5357e", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_GWAS_ftd_acces_5482dd0a5df051da9b91f75af7b5357e", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "accepted_values_GWAS_ftd_acces_5482dd0a5df051da9b91f75af7b5357e"}, "created_at": 1757448969.6749313, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_GWAS_ftd_acces_5482dd0a5df051da9b91f75af7b5357e\") }}", "language": "sql", "refs": [{"name": "GWAS_ftd_accesspolicy_access_policy_code", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_accesspolicy_access_policy_code"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/accepted_values_GWAS_ftd_acces_5482dd0a5df051da9b91f75af7b5357e.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        access_policy_code as value_field,\n        count(*) as n_records\n\n    from \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_accesspolicy_access_policy_code\"\n    group by access_policy_code\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'gru','hmb','ds','irb','pub','col','npu','mds','gso','gsr'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "access_policy_code", "file_key_name": "models.GWAS_ftd_accesspolicy_access_policy_code", "attached_node": "model.ftd.GWAS_ftd_accesspolicy_access_policy_code", "test_metadata": {"name": "accepted_values", "kwargs": {"values": ["gru", "hmb", "ds", "irb", "pub", "col", "npu", "mds", "gso", "gsr"], "column_name": "access_policy_code", "model": "{{ get_where_subquery(ref('GWAS_ftd_accesspolicy_access_policy_code')) }}"}, "namespace": null}}, "test.ftd.not_null_GWAS_ftd_study_study_title.2122518e64": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GWAS_ftd_study_study_title", "resource_type": "test", "package_name": "ftd", "path": "not_null_GWAS_ftd_study_study_title.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.not_null_GWAS_ftd_study_study_title.2122518e64", "fqn": ["ftd", "GWAS", "docs", "not_null_GWAS_ftd_study_study_title"], "alias": "not_null_GWAS_ftd_study_study_title", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.677793, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GWAS_ftd_study", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_study"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/not_null_GWAS_ftd_study_study_title.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect study_title\nfrom \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_study\"\nwhere study_title is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "study_title", "file_key_name": "models.GWAS_ftd_study", "attached_node": "model.ftd.GWAS_ftd_study", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "study_title", "model": "{{ get_where_subquery(ref('GWAS_ftd_study')) }}"}, "namespace": null}}, "test.ftd.not_null_GWAS_ftd_study_id.2622162919": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GWAS_ftd_study_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_GWAS_ftd_study_id.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.not_null_GWAS_ftd_study_id.2622162919", "fqn": ["ftd", "GWAS", "docs", "not_null_GWAS_ftd_study_id"], "alias": "not_null_GWAS_ftd_study_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.6787694, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GWAS_ftd_study", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_study"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/not_null_GWAS_ftd_study_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_study\"\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "id", "file_key_name": "models.GWAS_ftd_study", "attached_node": "model.ftd.GWAS_ftd_study", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('GWAS_ftd_study')) }}"}, "namespace": null}}, "test.ftd.not_null_GWAS_ftd_subjectassertion_external_id_subjectassertion_id.c1eeade9b3": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GWAS_ftd_subjectassertion_external_id_subjectassertion_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_GWAS_ftd_subjectasser_bbf590985c9ec063ed97b1e1fd828f6c.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.not_null_GWAS_ftd_subjectassertion_external_id_subjectassertion_id.c1eeade9b3", "fqn": ["ftd", "GWAS", "docs", "not_null_GWAS_ftd_subjectassertion_external_id_subjectassertion_id"], "alias": "not_null_GWAS_ftd_subjectasser_bbf590985c9ec063ed97b1e1fd828f6c", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "not_null_GWAS_ftd_subjectasser_bbf590985c9ec063ed97b1e1fd828f6c", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "not_null_GWAS_ftd_subjectasser_bbf590985c9ec063ed97b1e1fd828f6c"}, "created_at": 1757448969.6799288, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"not_null_GWAS_ftd_subjectasser_bbf590985c9ec063ed97b1e1fd828f6c\") }}", "language": "sql", "refs": [{"name": "GWAS_ftd_subjectassertion_external_id", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_subjectassertion_external_id"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/not_null_GWAS_ftd_subjectasser_bbf590985c9ec063ed97b1e1fd828f6c.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect subjectassertion_id\nfrom \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_subjectassertion_external_id\"\nwhere subjectassertion_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "subjectassertion_id", "file_key_name": "models.GWAS_ftd_subjectassertion_external_id", "attached_node": "model.ftd.GWAS_ftd_subjectassertion_external_id", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "subjectassertion_id", "model": "{{ get_where_subquery(ref('GWAS_ftd_subjectassertion_external_id')) }}"}, "namespace": null}}, "test.ftd.not_null_GWAS_ftd_familyrelationship_family_member.35695b16f5": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GWAS_ftd_familyrelationship_family_member", "resource_type": "test", "package_name": "ftd", "path": "not_null_GWAS_ftd_familyrelationship_family_member.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.not_null_GWAS_ftd_familyrelationship_family_member.35695b16f5", "fqn": ["ftd", "GWAS", "docs", "not_null_GWAS_ftd_familyrelationship_family_member"], "alias": "not_null_GWAS_ftd_familyrelationship_family_member", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.6809196, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GWAS_ftd_familyrelationship", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_familyrelationship"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/not_null_GWAS_ftd_familyrelationship_family_member.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect family_member\nfrom \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_familyrelationship\"\nwhere family_member is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "family_member", "file_key_name": "models.GWAS_ftd_familyrelationship", "attached_node": "model.ftd.GWAS_ftd_familyrelationship", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "family_member", "model": "{{ get_where_subquery(ref('GWAS_ftd_familyrelationship')) }}"}, "namespace": null}}, "test.ftd.not_null_GWAS_ftd_familyrelationship_other_family_member.22fdcbb16d": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GWAS_ftd_familyrelationship_other_family_member", "resource_type": "test", "package_name": "ftd", "path": "not_null_GWAS_ftd_familyrelationship_other_family_member.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.not_null_GWAS_ftd_familyrelationship_other_family_member.22fdcbb16d", "fqn": ["ftd", "GWAS", "docs", "not_null_GWAS_ftd_familyrelationship_other_family_member"], "alias": "not_null_GWAS_ftd_familyrelationship_other_family_member", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.681873, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GWAS_ftd_familyrelationship", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_familyrelationship"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/not_null_GWAS_ftd_familyrelationship_other_family_member.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect other_family_member\nfrom \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_familyrelationship\"\nwhere other_family_member is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "other_family_member", "file_key_name": "models.GWAS_ftd_familyrelationship", "attached_node": "model.ftd.GWAS_ftd_familyrelationship", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "other_family_member", "model": "{{ get_where_subquery(ref('GWAS_ftd_familyrelationship')) }}"}, "namespace": null}}, "test.ftd.not_null_GWAS_ftd_familyrelationship_relationship_code.1876cbd3ad": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GWAS_ftd_familyrelationship_relationship_code", "resource_type": "test", "package_name": "ftd", "path": "not_null_GWAS_ftd_familyrelationship_relationship_code.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.not_null_GWAS_ftd_familyrelationship_relationship_code.1876cbd3ad", "fqn": ["ftd", "GWAS", "docs", "not_null_GWAS_ftd_familyrelationship_relationship_code"], "alias": "not_null_GWAS_ftd_familyrelationship_relationship_code", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.6828022, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GWAS_ftd_familyrelationship", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_familyrelationship"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/not_null_GWAS_ftd_familyrelationship_relationship_code.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect relationship_code\nfrom \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_familyrelationship\"\nwhere relationship_code is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "relationship_code", "file_key_name": "models.GWAS_ftd_familyrelationship", "attached_node": "model.ftd.GWAS_ftd_familyrelationship", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "relationship_code", "model": "{{ get_where_subquery(ref('GWAS_ftd_familyrelationship')) }}"}, "namespace": null}}, "test.ftd.not_null_GWAS_ftd_familyrelationship_id.7ae427e5ce": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GWAS_ftd_familyrelationship_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_GWAS_ftd_familyrelationship_id.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.not_null_GWAS_ftd_familyrelationship_id.7ae427e5ce", "fqn": ["ftd", "GWAS", "docs", "not_null_GWAS_ftd_familyrelationship_id"], "alias": "not_null_GWAS_ftd_familyrelationship_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.6837602, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GWAS_ftd_familyrelationship", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_familyrelationship"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/not_null_GWAS_ftd_familyrelationship_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_familyrelationship\"\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "id", "file_key_name": "models.GWAS_ftd_familyrelationship", "attached_node": "model.ftd.GWAS_ftd_familyrelationship", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('GWAS_ftd_familyrelationship')) }}"}, "namespace": null}}, "test.ftd.not_null_GWAS_ftd_aliquot_external_id_aliquot_id.48052f5b7c": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GWAS_ftd_aliquot_external_id_aliquot_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_GWAS_ftd_aliquot_external_id_aliquot_id.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.not_null_GWAS_ftd_aliquot_external_id_aliquot_id.48052f5b7c", "fqn": ["ftd", "GWAS", "docs", "not_null_GWAS_ftd_aliquot_external_id_aliquot_id"], "alias": "not_null_GWAS_ftd_aliquot_external_id_aliquot_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.6846888, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GWAS_ftd_aliquot_external_id", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_aliquot_external_id"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/not_null_GWAS_ftd_aliquot_external_id_aliquot_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect aliquot_id\nfrom \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_aliquot_external_id\"\nwhere aliquot_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "aliquot_id", "file_key_name": "models.GWAS_ftd_aliquot_external_id", "attached_node": "model.ftd.GWAS_ftd_aliquot_external_id", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "aliquot_id", "model": "{{ get_where_subquery(ref('GWAS_ftd_aliquot_external_id')) }}"}, "namespace": null}}, "test.ftd.not_null_GWAS_ftd_familymember_family_member.518d9a9a67": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GWAS_ftd_familymember_family_member", "resource_type": "test", "package_name": "ftd", "path": "not_null_GWAS_ftd_familymember_family_member.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.not_null_GWAS_ftd_familymember_family_member.518d9a9a67", "fqn": ["ftd", "GWAS", "docs", "not_null_GWAS_ftd_familymember_family_member"], "alias": "not_null_GWAS_ftd_familymember_family_member", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.685746, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GWAS_ftd_familymember", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_familymember"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/not_null_GWAS_ftd_familymember_family_member.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect family_member\nfrom \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_familymember\"\nwhere family_member is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "family_member", "file_key_name": "models.GWAS_ftd_familymember", "attached_node": "model.ftd.GWAS_ftd_familymember", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "family_member", "model": "{{ get_where_subquery(ref('GWAS_ftd_familymember')) }}"}, "namespace": null}}, "test.ftd.not_null_GWAS_ftd_familymember_id.8ab5f592ad": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GWAS_ftd_familymember_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_GWAS_ftd_familymember_id.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.not_null_GWAS_ftd_familymember_id.8ab5f592ad", "fqn": ["ftd", "GWAS", "docs", "not_null_GWAS_ftd_familymember_id"], "alias": "not_null_GWAS_ftd_familymember_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.6867065, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GWAS_ftd_familymember", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_familymember"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/not_null_GWAS_ftd_familymember_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_familymember\"\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "id", "file_key_name": "models.GWAS_ftd_familymember", "attached_node": "model.ftd.GWAS_ftd_familymember", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('GWAS_ftd_familymember')) }}"}, "namespace": null}}, "test.ftd.not_null_GWAS_ftd_subject_external_id_subject_id.13ed703c6a": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GWAS_ftd_subject_external_id_subject_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_GWAS_ftd_subject_external_id_subject_id.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.not_null_GWAS_ftd_subject_external_id_subject_id.13ed703c6a", "fqn": ["ftd", "GWAS", "docs", "not_null_GWAS_ftd_subject_external_id_subject_id"], "alias": "not_null_GWAS_ftd_subject_external_id_subject_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.6876414, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GWAS_ftd_subject_external_id", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_subject_external_id"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/not_null_GWAS_ftd_subject_external_id_subject_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect subject_id\nfrom \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_subject_external_id\"\nwhere subject_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "subject_id", "file_key_name": "models.GWAS_ftd_subject_external_id", "attached_node": "model.ftd.GWAS_ftd_subject_external_id", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "subject_id", "model": "{{ get_where_subquery(ref('GWAS_ftd_subject_external_id')) }}"}, "namespace": null}}, "test.ftd.not_null_GWAS_ftd_file_external_id_file_id.1cee360518": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GWAS_ftd_file_external_id_file_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_GWAS_ftd_file_external_id_file_id.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.not_null_GWAS_ftd_file_external_id_file_id.1cee360518", "fqn": ["ftd", "GWAS", "docs", "not_null_GWAS_ftd_file_external_id_file_id"], "alias": "not_null_GWAS_ftd_file_external_id_file_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.688678, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GWAS_ftd_file_external_id", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_file_external_id"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/not_null_GWAS_ftd_file_external_id_file_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect file_id\nfrom \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_file_external_id\"\nwhere file_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "file_id", "file_key_name": "models.GWAS_ftd_file_external_id", "attached_node": "model.ftd.GWAS_ftd_file_external_id", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "file_id", "model": "{{ get_where_subquery(ref('GWAS_ftd_file_external_id')) }}"}, "namespace": null}}, "test.ftd.not_null_GWAS_ftd_demographics_external_id_demographics_id.b047347377": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GWAS_ftd_demographics_external_id_demographics_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_GWAS_ftd_demographics_external_id_demographics_id.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.not_null_GWAS_ftd_demographics_external_id_demographics_id.b047347377", "fqn": ["ftd", "GWAS", "docs", "not_null_GWAS_ftd_demographics_external_id_demographics_id"], "alias": "not_null_GWAS_ftd_demographics_external_id_demographics_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.6896355, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GWAS_ftd_demographics_external_id", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_demographics_external_id"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/not_null_GWAS_ftd_demographics_external_id_demographics_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect demographics_id\nfrom \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_demographics_external_id\"\nwhere demographics_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "demographics_id", "file_key_name": "models.GWAS_ftd_demographics_external_id", "attached_node": "model.ftd.GWAS_ftd_demographics_external_id", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "demographics_id", "model": "{{ get_where_subquery(ref('GWAS_ftd_demographics_external_id')) }}"}, "namespace": null}}, "test.ftd.not_null_GWAS_ftd_subjectassertion_source_data_subjectassertion_id.4e740389ab": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GWAS_ftd_subjectassertion_source_data_subjectassertion_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_GWAS_ftd_subjectasser_e246f6a51462270e45f650e2491a5a29.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.not_null_GWAS_ftd_subjectassertion_source_data_subjectassertion_id.4e740389ab", "fqn": ["ftd", "GWAS", "docs", "not_null_GWAS_ftd_subjectassertion_source_data_subjectassertion_id"], "alias": "not_null_GWAS_ftd_subjectasser_e246f6a51462270e45f650e2491a5a29", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "not_null_GWAS_ftd_subjectasser_e246f6a51462270e45f650e2491a5a29", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "not_null_GWAS_ftd_subjectasser_e246f6a51462270e45f650e2491a5a29"}, "created_at": 1757448969.6907463, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"not_null_GWAS_ftd_subjectasser_e246f6a51462270e45f650e2491a5a29\") }}", "language": "sql", "refs": [{"name": "GWAS_ftd_subjectassertion_source_data", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_subjectassertion_source_data"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/not_null_GWAS_ftd_subjectasser_e246f6a51462270e45f650e2491a5a29.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect subjectassertion_id\nfrom \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_subjectassertion_source_data\"\nwhere subjectassertion_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "subjectassertion_id", "file_key_name": "models.GWAS_ftd_subjectassertion_source_data", "attached_node": "model.ftd.GWAS_ftd_subjectassertion_source_data", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "subjectassertion_id", "model": "{{ get_where_subquery(ref('GWAS_ftd_subjectassertion_source_data')) }}"}, "namespace": null}}, "test.ftd.not_null_GWAS_ftd_subjectassertion_source_data_source_data_id.58cc3887bd": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GWAS_ftd_subjectassertion_source_data_source_data_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_GWAS_ftd_subjectassertion_source_data_source_data_id.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.not_null_GWAS_ftd_subjectassertion_source_data_source_data_id.58cc3887bd", "fqn": ["ftd", "GWAS", "docs", "not_null_GWAS_ftd_subjectassertion_source_data_source_data_id"], "alias": "not_null_GWAS_ftd_subjectassertion_source_data_source_data_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.691746, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GWAS_ftd_subjectassertion_source_data", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_subjectassertion_source_data"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/not_null_GWAS_ftd_subjectassertion_source_data_source_data_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect source_data_id\nfrom \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_subjectassertion_source_data\"\nwhere source_data_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "source_data_id", "file_key_name": "models.GWAS_ftd_subjectassertion_source_data", "attached_node": "model.ftd.GWAS_ftd_subjectassertion_source_data", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "source_data_id", "model": "{{ get_where_subquery(ref('GWAS_ftd_subjectassertion_source_data')) }}"}, "namespace": null}}, "test.ftd.not_null_GWAS_ftd_file_subject_file_id.6e2e48dc3c": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GWAS_ftd_file_subject_file_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_GWAS_ftd_file_subject_file_id.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.not_null_GWAS_ftd_file_subject_file_id.6e2e48dc3c", "fqn": ["ftd", "GWAS", "docs", "not_null_GWAS_ftd_file_subject_file_id"], "alias": "not_null_GWAS_ftd_file_subject_file_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.692956, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GWAS_ftd_file_subject", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_file_subject"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/not_null_GWAS_ftd_file_subject_file_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect file_id\nfrom \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_file_subject\"\nwhere file_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "file_id", "file_key_name": "models.GWAS_ftd_file_subject", "attached_node": "model.ftd.GWAS_ftd_file_subject", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "file_id", "model": "{{ get_where_subquery(ref('GWAS_ftd_file_subject')) }}"}, "namespace": null}}, "test.ftd.not_null_GWAS_ftd_file_subject_subject_id.ac2813176b": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GWAS_ftd_file_subject_subject_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_GWAS_ftd_file_subject_subject_id.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.not_null_GWAS_ftd_file_subject_subject_id.ac2813176b", "fqn": ["ftd", "GWAS", "docs", "not_null_GWAS_ftd_file_subject_subject_id"], "alias": "not_null_GWAS_ftd_file_subject_subject_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.6939394, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GWAS_ftd_file_subject", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_file_subject"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/not_null_GWAS_ftd_file_subject_subject_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect subject_id\nfrom \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_file_subject\"\nwhere subject_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "subject_id", "file_key_name": "models.GWAS_ftd_file_subject", "attached_node": "model.ftd.GWAS_ftd_file_subject", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "subject_id", "model": "{{ get_where_subquery(ref('GWAS_ftd_file_subject')) }}"}, "namespace": null}}, "test.ftd.not_null_GWAS_ftd_accesspolicy_data_access_type_accesspolicy_id.6c099412bd": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GWAS_ftd_accesspolicy_data_access_type_accesspolicy_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_GWAS_ftd_accesspolicy_data_access_type_accesspolicy_id.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.not_null_GWAS_ftd_accesspolicy_data_access_type_accesspolicy_id.6c099412bd", "fqn": ["ftd", "GWAS", "docs", "not_null_GWAS_ftd_accesspolicy_data_access_type_accesspolicy_id"], "alias": "not_null_GWAS_ftd_accesspolicy_data_access_type_accesspolicy_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.694923, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GWAS_ftd_accesspolicy_data_access_type", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_accesspolicy_data_access_type"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/not_null_GWAS_ftd_accesspolicy_data_access_type_accesspolicy_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect accesspolicy_id\nfrom \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_accesspolicy_data_access_type\"\nwhere accesspolicy_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "accesspolicy_id", "file_key_name": "models.GWAS_ftd_accesspolicy_data_access_type", "attached_node": "model.ftd.GWAS_ftd_accesspolicy_data_access_type", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "accesspolicy_id", "model": "{{ get_where_subquery(ref('GWAS_ftd_accesspolicy_data_access_type')) }}"}, "namespace": null}}, "test.ftd.not_null_GWAS_ftd_accesspolicy_data_access_type_data_access_type.290b7db882": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GWAS_ftd_accesspolicy_data_access_type_data_access_type", "resource_type": "test", "package_name": "ftd", "path": "not_null_GWAS_ftd_accesspolicy_f9af9bb6e86e7148ba0a8bf82cc949c2.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.not_null_GWAS_ftd_accesspolicy_data_access_type_data_access_type.290b7db882", "fqn": ["ftd", "GWAS", "docs", "not_null_GWAS_ftd_accesspolicy_data_access_type_data_access_type"], "alias": "not_null_GWAS_ftd_accesspolicy_f9af9bb6e86e7148ba0a8bf82cc949c2", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "not_null_GWAS_ftd_accesspolicy_f9af9bb6e86e7148ba0a8bf82cc949c2", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "not_null_GWAS_ftd_accesspolicy_f9af9bb6e86e7148ba0a8bf82cc949c2"}, "created_at": 1757448969.6960256, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"not_null_GWAS_ftd_accesspolicy_f9af9bb6e86e7148ba0a8bf82cc949c2\") }}", "language": "sql", "refs": [{"name": "GWAS_ftd_accesspolicy_data_access_type", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_accesspolicy_data_access_type"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/not_null_GWAS_ftd_accesspolicy_f9af9bb6e86e7148ba0a8bf82cc949c2.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect data_access_type\nfrom \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_accesspolicy_data_access_type\"\nwhere data_access_type is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "data_access_type", "file_key_name": "models.GWAS_ftd_accesspolicy_data_access_type", "attached_node": "model.ftd.GWAS_ftd_accesspolicy_data_access_type", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "data_access_type", "model": "{{ get_where_subquery(ref('GWAS_ftd_accesspolicy_data_access_type')) }}"}, "namespace": null}}, "test.ftd.accepted_values_GWAS_ftd_accesspolicy_data_access_type_data_access_type__open__registered__controlled__gsr_restricted__gsr_allowed.5ea1731895": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "accepted_values_GWAS_ftd_accesspolicy_data_access_type_data_access_type__open__registered__controlled__gsr_restricted__gsr_allowed", "resource_type": "test", "package_name": "ftd", "path": "accepted_values_GWAS_ftd_acces_522f9e360eaed32ae7fd1211183ea75f.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.accepted_values_GWAS_ftd_accesspolicy_data_access_type_data_access_type__open__registered__controlled__gsr_restricted__gsr_allowed.5ea1731895", "fqn": ["ftd", "GWAS", "docs", "accepted_values_GWAS_ftd_accesspolicy_data_access_type_data_access_type__open__registered__controlled__gsr_restricted__gsr_allowed"], "alias": "accepted_values_GWAS_ftd_acces_522f9e360eaed32ae7fd1211183ea75f", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_GWAS_ftd_acces_522f9e360eaed32ae7fd1211183ea75f", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "accepted_values_GWAS_ftd_acces_522f9e360eaed32ae7fd1211183ea75f"}, "created_at": 1757448969.6969748, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_GWAS_ftd_acces_522f9e360eaed32ae7fd1211183ea75f\") }}", "language": "sql", "refs": [{"name": "GWAS_ftd_accesspolicy_data_access_type", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_accesspolicy_data_access_type"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/accepted_values_GWAS_ftd_acces_522f9e360eaed32ae7fd1211183ea75f.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        data_access_type as value_field,\n        count(*) as n_records\n\n    from \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_accesspolicy_data_access_type\"\n    group by data_access_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'open','registered','controlled','gsr_restricted','gsr_allowed'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "data_access_type", "file_key_name": "models.GWAS_ftd_accesspolicy_data_access_type", "attached_node": "model.ftd.GWAS_ftd_accesspolicy_data_access_type", "test_metadata": {"name": "accepted_values", "kwargs": {"values": ["open", "registered", "controlled", "gsr_restricted", "gsr_allowed"], "column_name": "data_access_type", "model": "{{ get_where_subquery(ref('GWAS_ftd_accesspolicy_data_access_type')) }}"}, "namespace": null}}, "test.ftd.not_null_GWAS_ftd_accesscontrolledrecord_external_id_accesscontrolledrecord_id.87088acdd6": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GWAS_ftd_accesscontrolledrecord_external_id_accesscontrolledrecord_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_GWAS_ftd_accesscontro_c7ff05bfe02418fd8e5c1d8483e7ff45.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.not_null_GWAS_ftd_accesscontrolledrecord_external_id_accesscontrolledrecord_id.87088acdd6", "fqn": ["ftd", "GWAS", "docs", "not_null_GWAS_ftd_accesscontrolledrecord_external_id_accesscontrolledrecord_id"], "alias": "not_null_GWAS_ftd_accesscontro_c7ff05bfe02418fd8e5c1d8483e7ff45", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "not_null_GWAS_ftd_accesscontro_c7ff05bfe02418fd8e5c1d8483e7ff45", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "not_null_GWAS_ftd_accesscontro_c7ff05bfe02418fd8e5c1d8483e7ff45"}, "created_at": 1757448969.6999202, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"not_null_GWAS_ftd_accesscontro_c7ff05bfe02418fd8e5c1d8483e7ff45\") }}", "language": "sql", "refs": [{"name": "GWAS_ftd_accesscontrolledrecord_external_id", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_accesscontrolledrecord_external_id"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/not_null_GWAS_ftd_accesscontro_c7ff05bfe02418fd8e5c1d8483e7ff45.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect accesscontrolledrecord_id\nfrom \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_accesscontrolledrecord_external_id\"\nwhere accesscontrolledrecord_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "accesscontrolledrecord_id", "file_key_name": "models.GWAS_ftd_accesscontrolledrecord_external_id", "attached_node": "model.ftd.GWAS_ftd_accesscontrolledrecord_external_id", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "accesscontrolledrecord_id", "model": "{{ get_where_subquery(ref('GWAS_ftd_accesscontrolledrecord_external_id')) }}"}, "namespace": null}}, "test.ftd.not_null_GWAS_ftd_sourcedata_has_access_policy.95bf38120e": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GWAS_ftd_sourcedata_has_access_policy", "resource_type": "test", "package_name": "ftd", "path": "not_null_GWAS_ftd_sourcedata_has_access_policy.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.not_null_GWAS_ftd_sourcedata_has_access_policy.95bf38120e", "fqn": ["ftd", "GWAS", "docs", "not_null_GWAS_ftd_sourcedata_has_access_policy"], "alias": "not_null_GWAS_ftd_sourcedata_has_access_policy", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.7010505, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GWAS_ftd_sourcedata", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_sourcedata"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/not_null_GWAS_ftd_sourcedata_has_access_policy.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect has_access_policy\nfrom \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_sourcedata\"\nwhere has_access_policy is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "has_access_policy", "file_key_name": "models.GWAS_ftd_sourcedata", "attached_node": "model.ftd.GWAS_ftd_sourcedata", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "has_access_policy", "model": "{{ get_where_subquery(ref('GWAS_ftd_sourcedata')) }}"}, "namespace": null}}, "test.ftd.not_null_GWAS_ftd_sourcedata_id.37521e6812": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GWAS_ftd_sourcedata_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_GWAS_ftd_sourcedata_id.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.not_null_GWAS_ftd_sourcedata_id.37521e6812", "fqn": ["ftd", "GWAS", "docs", "not_null_GWAS_ftd_sourcedata_id"], "alias": "not_null_GWAS_ftd_sourcedata_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.7020268, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GWAS_ftd_sourcedata", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_sourcedata"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/not_null_GWAS_ftd_sourcedata_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_sourcedata\"\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "id", "file_key_name": "models.GWAS_ftd_sourcedata", "attached_node": "model.ftd.GWAS_ftd_sourcedata", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('GWAS_ftd_sourcedata')) }}"}, "namespace": null}}, "test.ftd.not_null_GWAS_ftd_sourcedata_external_id_sourcedata_id.1af559b571": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GWAS_ftd_sourcedata_external_id_sourcedata_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_GWAS_ftd_sourcedata_external_id_sourcedata_id.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.not_null_GWAS_ftd_sourcedata_external_id_sourcedata_id.1af559b571", "fqn": ["ftd", "GWAS", "docs", "not_null_GWAS_ftd_sourcedata_external_id_sourcedata_id"], "alias": "not_null_GWAS_ftd_sourcedata_external_id_sourcedata_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.702967, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GWAS_ftd_sourcedata_external_id", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_sourcedata_external_id"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/not_null_GWAS_ftd_sourcedata_external_id_sourcedata_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sourcedata_id\nfrom \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_sourcedata_external_id\"\nwhere sourcedata_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "sourcedata_id", "file_key_name": "models.GWAS_ftd_sourcedata_external_id", "attached_node": "model.ftd.GWAS_ftd_sourcedata_external_id", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "sourcedata_id", "model": "{{ get_where_subquery(ref('GWAS_ftd_sourcedata_external_id')) }}"}, "namespace": null}}, "test.ftd.not_null_GWAS_ftd_study_principal_investigator_study_id.1adcffcfec": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GWAS_ftd_study_principal_investigator_study_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_GWAS_ftd_study_principal_investigator_study_id.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.not_null_GWAS_ftd_study_principal_investigator_study_id.1adcffcfec", "fqn": ["ftd", "GWAS", "docs", "not_null_GWAS_ftd_study_principal_investigator_study_id"], "alias": "not_null_GWAS_ftd_study_principal_investigator_study_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.7039688, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GWAS_ftd_study_principal_investigator", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_study_principal_investigator"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/not_null_GWAS_ftd_study_principal_investigator_study_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect study_id\nfrom \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_study_principal_investigator\"\nwhere study_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "study_id", "file_key_name": "models.GWAS_ftd_study_principal_investigator", "attached_node": "model.ftd.GWAS_ftd_study_principal_investigator", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "study_id", "model": "{{ get_where_subquery(ref('GWAS_ftd_study_principal_investigator')) }}"}, "namespace": null}}, "test.ftd.not_null_GWAS_ftd_study_external_id_study_id.7335490492": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_GWAS_ftd_study_external_id_study_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_GWAS_ftd_study_external_id_study_id.sql", "original_file_path": "models/GWAS/docs/__models.yml", "unique_id": "test.ftd.not_null_GWAS_ftd_study_external_id_study_id.7335490492", "fqn": ["ftd", "GWAS", "docs", "not_null_GWAS_ftd_study_external_id_study_id"], "alias": "not_null_GWAS_ftd_study_external_id_study_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.704909, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "GWAS_ftd_study_external_id", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.GWAS_ftd_study_external_id"]}, "compiled_path": "target/compiled/ftd/models/GWAS/docs/__models.yml/not_null_GWAS_ftd_study_external_id_study_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect study_id\nfrom \"dbt\".\"main_GWAS_data\".\"GWAS_ftd_study_external_id\"\nwhere study_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "study_id", "file_key_name": "models.GWAS_ftd_study_external_id", "attached_node": "model.ftd.GWAS_ftd_study_external_id", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "study_id", "model": "{{ get_where_subquery(ref('GWAS_ftd_study_external_id')) }}"}, "namespace": null}}, "test.ftd.not_null_gregor_synthetic_ftd_familyrelationship_family_member.3bc97b392a": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_gregor_synthetic_ftd_familyrelationship_family_member", "resource_type": "test", "package_name": "ftd", "path": "not_null_gregor_synthetic_ftd_familyrelationship_family_member.sql", "original_file_path": "models/gregor_synthetic/docs/__models.yml", "unique_id": "test.ftd.not_null_gregor_synthetic_ftd_familyrelationship_family_member.3bc97b392a", "fqn": ["ftd", "gregor_synthetic", "docs", "not_null_gregor_synthetic_ftd_familyrelationship_family_member"], "alias": "not_null_gregor_synthetic_ftd_familyrelationship_family_member", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.7282114, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "gregor_synthetic_ftd_familyrelationship", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.gregor_synthetic_ftd_familyrelationship"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/docs/__models.yml/not_null_gregor_synthetic_ftd_familyrelationship_family_member.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect family_member\nfrom \"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_familyrelationship\"\nwhere family_member is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "family_member", "file_key_name": "models.gregor_synthetic_ftd_familyrelationship", "attached_node": "model.ftd.gregor_synthetic_ftd_familyrelationship", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "family_member", "model": "{{ get_where_subquery(ref('gregor_synthetic_ftd_familyrelationship')) }}"}, "namespace": null}}, "test.ftd.not_null_gregor_synthetic_ftd_familyrelationship_other_family_member.26151a74f8": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_gregor_synthetic_ftd_familyrelationship_other_family_member", "resource_type": "test", "package_name": "ftd", "path": "not_null_gregor_synthetic_ftd__f4f02a9868859ed183ce0b566d2d7c85.sql", "original_file_path": "models/gregor_synthetic/docs/__models.yml", "unique_id": "test.ftd.not_null_gregor_synthetic_ftd_familyrelationship_other_family_member.26151a74f8", "fqn": ["ftd", "gregor_synthetic", "docs", "not_null_gregor_synthetic_ftd_familyrelationship_other_family_member"], "alias": "not_null_gregor_synthetic_ftd__f4f02a9868859ed183ce0b566d2d7c85", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "not_null_gregor_synthetic_ftd__f4f02a9868859ed183ce0b566d2d7c85", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "not_null_gregor_synthetic_ftd__f4f02a9868859ed183ce0b566d2d7c85"}, "created_at": 1757448969.7292898, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"not_null_gregor_synthetic_ftd__f4f02a9868859ed183ce0b566d2d7c85\") }}", "language": "sql", "refs": [{"name": "gregor_synthetic_ftd_familyrelationship", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.gregor_synthetic_ftd_familyrelationship"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/docs/__models.yml/not_null_gregor_synthetic_ftd__f4f02a9868859ed183ce0b566d2d7c85.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect other_family_member\nfrom \"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_familyrelationship\"\nwhere other_family_member is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "other_family_member", "file_key_name": "models.gregor_synthetic_ftd_familyrelationship", "attached_node": "model.ftd.gregor_synthetic_ftd_familyrelationship", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "other_family_member", "model": "{{ get_where_subquery(ref('gregor_synthetic_ftd_familyrelationship')) }}"}, "namespace": null}}, "test.ftd.not_null_gregor_synthetic_ftd_familyrelationship_relationship_code.0e3f4707af": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_gregor_synthetic_ftd_familyrelationship_relationship_code", "resource_type": "test", "package_name": "ftd", "path": "not_null_gregor_synthetic_ftd__13f4c6fa6d3e38bac086e9c69320d77f.sql", "original_file_path": "models/gregor_synthetic/docs/__models.yml", "unique_id": "test.ftd.not_null_gregor_synthetic_ftd_familyrelationship_relationship_code.0e3f4707af", "fqn": ["ftd", "gregor_synthetic", "docs", "not_null_gregor_synthetic_ftd_familyrelationship_relationship_code"], "alias": "not_null_gregor_synthetic_ftd__13f4c6fa6d3e38bac086e9c69320d77f", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "not_null_gregor_synthetic_ftd__13f4c6fa6d3e38bac086e9c69320d77f", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "not_null_gregor_synthetic_ftd__13f4c6fa6d3e38bac086e9c69320d77f"}, "created_at": 1757448969.7303357, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"not_null_gregor_synthetic_ftd__13f4c6fa6d3e38bac086e9c69320d77f\") }}", "language": "sql", "refs": [{"name": "gregor_synthetic_ftd_familyrelationship", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.gregor_synthetic_ftd_familyrelationship"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/docs/__models.yml/not_null_gregor_synthetic_ftd__13f4c6fa6d3e38bac086e9c69320d77f.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect relationship_code\nfrom \"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_familyrelationship\"\nwhere relationship_code is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "relationship_code", "file_key_name": "models.gregor_synthetic_ftd_familyrelationship", "attached_node": "model.ftd.gregor_synthetic_ftd_familyrelationship", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "relationship_code", "model": "{{ get_where_subquery(ref('gregor_synthetic_ftd_familyrelationship')) }}"}, "namespace": null}}, "test.ftd.not_null_gregor_synthetic_ftd_familyrelationship_id.5fb3043b5a": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_gregor_synthetic_ftd_familyrelationship_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_gregor_synthetic_ftd_familyrelationship_id.sql", "original_file_path": "models/gregor_synthetic/docs/__models.yml", "unique_id": "test.ftd.not_null_gregor_synthetic_ftd_familyrelationship_id.5fb3043b5a", "fqn": ["ftd", "gregor_synthetic", "docs", "not_null_gregor_synthetic_ftd_familyrelationship_id"], "alias": "not_null_gregor_synthetic_ftd_familyrelationship_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.7314107, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "gregor_synthetic_ftd_familyrelationship", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.gregor_synthetic_ftd_familyrelationship"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/docs/__models.yml/not_null_gregor_synthetic_ftd_familyrelationship_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_familyrelationship\"\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "id", "file_key_name": "models.gregor_synthetic_ftd_familyrelationship", "attached_node": "model.ftd.gregor_synthetic_ftd_familyrelationship", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('gregor_synthetic_ftd_familyrelationship')) }}"}, "namespace": null}}, "test.ftd.not_null_gregor_synthetic_ftd_subject_subject_type.d3528733f1": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_gregor_synthetic_ftd_subject_subject_type", "resource_type": "test", "package_name": "ftd", "path": "not_null_gregor_synthetic_ftd_subject_subject_type.sql", "original_file_path": "models/gregor_synthetic/docs/__models.yml", "unique_id": "test.ftd.not_null_gregor_synthetic_ftd_subject_subject_type.d3528733f1", "fqn": ["ftd", "gregor_synthetic", "docs", "not_null_gregor_synthetic_ftd_subject_subject_type"], "alias": "not_null_gregor_synthetic_ftd_subject_subject_type", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.7324274, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "gregor_synthetic_ftd_subject", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.gregor_synthetic_ftd_subject"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/docs/__models.yml/not_null_gregor_synthetic_ftd_subject_subject_type.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect subject_type\nfrom \"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_subject\"\nwhere subject_type is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "subject_type", "file_key_name": "models.gregor_synthetic_ftd_subject", "attached_node": "model.ftd.gregor_synthetic_ftd_subject", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "subject_type", "model": "{{ get_where_subquery(ref('gregor_synthetic_ftd_subject')) }}"}, "namespace": null}}, "test.ftd.accepted_values_gregor_synthetic_ftd_subject_subject_type__participant__non_participant__cell_line__animal_model__group__other.d07b3549ca": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "accepted_values_gregor_synthetic_ftd_subject_subject_type__participant__non_participant__cell_line__animal_model__group__other", "resource_type": "test", "package_name": "ftd", "path": "accepted_values_gregor_synthet_099104b813e1a6cae309a9f821f35749.sql", "original_file_path": "models/gregor_synthetic/docs/__models.yml", "unique_id": "test.ftd.accepted_values_gregor_synthetic_ftd_subject_subject_type__participant__non_participant__cell_line__animal_model__group__other.d07b3549ca", "fqn": ["ftd", "gregor_synthetic", "docs", "accepted_values_gregor_synthetic_ftd_subject_subject_type__participant__non_participant__cell_line__animal_model__group__other"], "alias": "accepted_values_gregor_synthet_099104b813e1a6cae309a9f821f35749", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_gregor_synthet_099104b813e1a6cae309a9f821f35749", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "accepted_values_gregor_synthet_099104b813e1a6cae309a9f821f35749"}, "created_at": 1757448969.7333863, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_gregor_synthet_099104b813e1a6cae309a9f821f35749\") }}", "language": "sql", "refs": [{"name": "gregor_synthetic_ftd_subject", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.gregor_synthetic_ftd_subject"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/docs/__models.yml/accepted_values_gregor_synthet_099104b813e1a6cae309a9f821f35749.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        subject_type as value_field,\n        count(*) as n_records\n\n    from \"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_subject\"\n    group by subject_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'participant','non_participant','cell_line','animal_model','group','other'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "subject_type", "file_key_name": "models.gregor_synthetic_ftd_subject", "attached_node": "model.ftd.gregor_synthetic_ftd_subject", "test_metadata": {"name": "accepted_values", "kwargs": {"values": ["participant", "non_participant", "cell_line", "animal_model", "group", "other"], "column_name": "subject_type", "model": "{{ get_where_subquery(ref('gregor_synthetic_ftd_subject')) }}"}, "namespace": null}}, "test.ftd.not_null_gregor_synthetic_ftd_subject_id.912db9b8aa": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_gregor_synthetic_ftd_subject_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_gregor_synthetic_ftd_subject_id.sql", "original_file_path": "models/gregor_synthetic/docs/__models.yml", "unique_id": "test.ftd.not_null_gregor_synthetic_ftd_subject_id.912db9b8aa", "fqn": ["ftd", "gregor_synthetic", "docs", "not_null_gregor_synthetic_ftd_subject_id"], "alias": "not_null_gregor_synthetic_ftd_subject_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.736366, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "gregor_synthetic_ftd_subject", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.gregor_synthetic_ftd_subject"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/docs/__models.yml/not_null_gregor_synthetic_ftd_subject_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_subject\"\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "id", "file_key_name": "models.gregor_synthetic_ftd_subject", "attached_node": "model.ftd.gregor_synthetic_ftd_subject", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('gregor_synthetic_ftd_subject')) }}"}, "namespace": null}}, "test.ftd.not_null_gregor_synthetic_ftd_demographics_race_demographics_id.9557406221": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_gregor_synthetic_ftd_demographics_race_demographics_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_gregor_synthetic_ftd_demographics_race_demographics_id.sql", "original_file_path": "models/gregor_synthetic/docs/__models.yml", "unique_id": "test.ftd.not_null_gregor_synthetic_ftd_demographics_race_demographics_id.9557406221", "fqn": ["ftd", "gregor_synthetic", "docs", "not_null_gregor_synthetic_ftd_demographics_race_demographics_id"], "alias": "not_null_gregor_synthetic_ftd_demographics_race_demographics_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.7374303, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "gregor_synthetic_ftd_demographics_race", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.gregor_synthetic_ftd_demographics_race"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/docs/__models.yml/not_null_gregor_synthetic_ftd_demographics_race_demographics_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect demographics_id\nfrom \"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_demographics_race\"\nwhere demographics_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "demographics_id", "file_key_name": "models.gregor_synthetic_ftd_demographics_race", "attached_node": "model.ftd.gregor_synthetic_ftd_demographics_race", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "demographics_id", "model": "{{ get_where_subquery(ref('gregor_synthetic_ftd_demographics_race')) }}"}, "namespace": null}}, "test.ftd.not_null_gregor_synthetic_ftd_demographics_race_race.a6dc4eefb1": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_gregor_synthetic_ftd_demographics_race_race", "resource_type": "test", "package_name": "ftd", "path": "not_null_gregor_synthetic_ftd_demographics_race_race.sql", "original_file_path": "models/gregor_synthetic/docs/__models.yml", "unique_id": "test.ftd.not_null_gregor_synthetic_ftd_demographics_race_race.a6dc4eefb1", "fqn": ["ftd", "gregor_synthetic", "docs", "not_null_gregor_synthetic_ftd_demographics_race_race"], "alias": "not_null_gregor_synthetic_ftd_demographics_race_race", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.73839, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "gregor_synthetic_ftd_demographics_race", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.gregor_synthetic_ftd_demographics_race"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/docs/__models.yml/not_null_gregor_synthetic_ftd_demographics_race_race.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect race\nfrom \"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_demographics_race\"\nwhere race is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "race", "file_key_name": "models.gregor_synthetic_ftd_demographics_race", "attached_node": "model.ftd.gregor_synthetic_ftd_demographics_race", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "race", "model": "{{ get_where_subquery(ref('gregor_synthetic_ftd_demographics_race')) }}"}, "namespace": null}}, "test.ftd.accepted_values_gregor_synthetic_ftd_demographics_race_race__american_indian_or_alaskan_native__asian__black_or_african_american__native_hawaiian_or_pacific_islander__white__other_race__unknown__asked_but_unknown.298b671dbd": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "accepted_values_gregor_synthetic_ftd_demographics_race_race__american_indian_or_alaskan_native__asian__black_or_african_american__native_hawaiian_or_pacific_islander__white__other_race__unknown__asked_but_unknown", "resource_type": "test", "package_name": "ftd", "path": "accepted_values_gregor_synthet_f5ccbac43e0ee6f0ed5694dfa3678dd7.sql", "original_file_path": "models/gregor_synthetic/docs/__models.yml", "unique_id": "test.ftd.accepted_values_gregor_synthetic_ftd_demographics_race_race__american_indian_or_alaskan_native__asian__black_or_african_american__native_hawaiian_or_pacific_islander__white__other_race__unknown__asked_but_unknown.298b671dbd", "fqn": ["ftd", "gregor_synthetic", "docs", "accepted_values_gregor_synthetic_ftd_demographics_race_race__american_indian_or_alaskan_native__asian__black_or_african_american__native_hawaiian_or_pacific_islander__white__other_race__unknown__asked_but_unknown"], "alias": "accepted_values_gregor_synthet_f5ccbac43e0ee6f0ed5694dfa3678dd7", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_gregor_synthet_f5ccbac43e0ee6f0ed5694dfa3678dd7", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "accepted_values_gregor_synthet_f5ccbac43e0ee6f0ed5694dfa3678dd7"}, "created_at": 1757448969.7393274, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_gregor_synthet_f5ccbac43e0ee6f0ed5694dfa3678dd7\") }}", "language": "sql", "refs": [{"name": "gregor_synthetic_ftd_demographics_race", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.gregor_synthetic_ftd_demographics_race"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/docs/__models.yml/accepted_values_gregor_synthet_f5ccbac43e0ee6f0ed5694dfa3678dd7.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        race as value_field,\n        count(*) as n_records\n\n    from \"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_demographics_race\"\n    group by race\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'american_indian_or_alaskan_native','asian','black_or_african_american','native_hawaiian_or_pacific_islander','white','other_race','unknown','asked_but_unknown'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "race", "file_key_name": "models.gregor_synthetic_ftd_demographics_race", "attached_node": "model.ftd.gregor_synthetic_ftd_demographics_race", "test_metadata": {"name": "accepted_values", "kwargs": {"values": ["american_indian_or_alaskan_native", "asian", "black_or_african_american", "native_hawaiian_or_pacific_islander", "white", "other_race", "unknown", "asked_but_unknown"], "column_name": "race", "model": "{{ get_where_subquery(ref('gregor_synthetic_ftd_demographics_race')) }}"}, "namespace": null}}, "test.ftd.not_null_gregor_synthetic_ftd_accesspolicy_access_policy_code_accesspolicy_id.e09c1fc820": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_gregor_synthetic_ftd_accesspolicy_access_policy_code_accesspolicy_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_gregor_synthetic_ftd__492112d821fa0aff9009b9c482bf2b66.sql", "original_file_path": "models/gregor_synthetic/docs/__models.yml", "unique_id": "test.ftd.not_null_gregor_synthetic_ftd_accesspolicy_access_policy_code_accesspolicy_id.e09c1fc820", "fqn": ["ftd", "gregor_synthetic", "docs", "not_null_gregor_synthetic_ftd_accesspolicy_access_policy_code_accesspolicy_id"], "alias": "not_null_gregor_synthetic_ftd__492112d821fa0aff9009b9c482bf2b66", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "not_null_gregor_synthetic_ftd__492112d821fa0aff9009b9c482bf2b66", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "not_null_gregor_synthetic_ftd__492112d821fa0aff9009b9c482bf2b66"}, "created_at": 1757448969.7421932, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"not_null_gregor_synthetic_ftd__492112d821fa0aff9009b9c482bf2b66\") }}", "language": "sql", "refs": [{"name": "gregor_synthetic_ftd_accesspolicy_access_policy_code", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.gregor_synthetic_ftd_accesspolicy_access_policy_code"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/docs/__models.yml/not_null_gregor_synthetic_ftd__492112d821fa0aff9009b9c482bf2b66.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect accesspolicy_id\nfrom \"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_accesspolicy_access_policy_code\"\nwhere accesspolicy_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "accesspolicy_id", "file_key_name": "models.gregor_synthetic_ftd_accesspolicy_access_policy_code", "attached_node": "model.ftd.gregor_synthetic_ftd_accesspolicy_access_policy_code", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "accesspolicy_id", "model": "{{ get_where_subquery(ref('gregor_synthetic_ftd_accesspolicy_access_policy_code')) }}"}, "namespace": null}}, "test.ftd.not_null_gregor_synthetic_ftd_accesspolicy_access_policy_code_access_policy_code.b33aeb2f05": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_gregor_synthetic_ftd_accesspolicy_access_policy_code_access_policy_code", "resource_type": "test", "package_name": "ftd", "path": "not_null_gregor_synthetic_ftd__299b4b4e5616493c44d845eb35df46c1.sql", "original_file_path": "models/gregor_synthetic/docs/__models.yml", "unique_id": "test.ftd.not_null_gregor_synthetic_ftd_accesspolicy_access_policy_code_access_policy_code.b33aeb2f05", "fqn": ["ftd", "gregor_synthetic", "docs", "not_null_gregor_synthetic_ftd_accesspolicy_access_policy_code_access_policy_code"], "alias": "not_null_gregor_synthetic_ftd__299b4b4e5616493c44d845eb35df46c1", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "not_null_gregor_synthetic_ftd__299b4b4e5616493c44d845eb35df46c1", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "not_null_gregor_synthetic_ftd__299b4b4e5616493c44d845eb35df46c1"}, "created_at": 1757448969.7431633, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"not_null_gregor_synthetic_ftd__299b4b4e5616493c44d845eb35df46c1\") }}", "language": "sql", "refs": [{"name": "gregor_synthetic_ftd_accesspolicy_access_policy_code", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.gregor_synthetic_ftd_accesspolicy_access_policy_code"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/docs/__models.yml/not_null_gregor_synthetic_ftd__299b4b4e5616493c44d845eb35df46c1.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect access_policy_code\nfrom \"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_accesspolicy_access_policy_code\"\nwhere access_policy_code is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "access_policy_code", "file_key_name": "models.gregor_synthetic_ftd_accesspolicy_access_policy_code", "attached_node": "model.ftd.gregor_synthetic_ftd_accesspolicy_access_policy_code", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "access_policy_code", "model": "{{ get_where_subquery(ref('gregor_synthetic_ftd_accesspolicy_access_policy_code')) }}"}, "namespace": null}}, "test.ftd.accepted_values_gregor_synthetic_ftd_accesspolicy_access_policy_code_access_policy_code__gru__hmb__ds__irb__pub__col__npu__mds__gso__gsr.3264af3d7d": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "accepted_values_gregor_synthetic_ftd_accesspolicy_access_policy_code_access_policy_code__gru__hmb__ds__irb__pub__col__npu__mds__gso__gsr", "resource_type": "test", "package_name": "ftd", "path": "accepted_values_gregor_synthet_5fd19e39ebe55def3c3be12f1481680f.sql", "original_file_path": "models/gregor_synthetic/docs/__models.yml", "unique_id": "test.ftd.accepted_values_gregor_synthetic_ftd_accesspolicy_access_policy_code_access_policy_code__gru__hmb__ds__irb__pub__col__npu__mds__gso__gsr.3264af3d7d", "fqn": ["ftd", "gregor_synthetic", "docs", "accepted_values_gregor_synthetic_ftd_accesspolicy_access_policy_code_access_policy_code__gru__hmb__ds__irb__pub__col__npu__mds__gso__gsr"], "alias": "accepted_values_gregor_synthet_5fd19e39ebe55def3c3be12f1481680f", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_gregor_synthet_5fd19e39ebe55def3c3be12f1481680f", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "accepted_values_gregor_synthet_5fd19e39ebe55def3c3be12f1481680f"}, "created_at": 1757448969.7442644, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_gregor_synthet_5fd19e39ebe55def3c3be12f1481680f\") }}", "language": "sql", "refs": [{"name": "gregor_synthetic_ftd_accesspolicy_access_policy_code", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.gregor_synthetic_ftd_accesspolicy_access_policy_code"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/docs/__models.yml/accepted_values_gregor_synthet_5fd19e39ebe55def3c3be12f1481680f.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        access_policy_code as value_field,\n        count(*) as n_records\n\n    from \"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_accesspolicy_access_policy_code\"\n    group by access_policy_code\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'gru','hmb','ds','irb','pub','col','npu','mds','gso','gsr'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "access_policy_code", "file_key_name": "models.gregor_synthetic_ftd_accesspolicy_access_policy_code", "attached_node": "model.ftd.gregor_synthetic_ftd_accesspolicy_access_policy_code", "test_metadata": {"name": "accepted_values", "kwargs": {"values": ["gru", "hmb", "ds", "irb", "pub", "col", "npu", "mds", "gso", "gsr"], "column_name": "access_policy_code", "model": "{{ get_where_subquery(ref('gregor_synthetic_ftd_accesspolicy_access_policy_code')) }}"}, "namespace": null}}, "test.ftd.not_null_gregor_synthetic_ftd_demographics_sex.6a57903a47": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_gregor_synthetic_ftd_demographics_sex", "resource_type": "test", "package_name": "ftd", "path": "not_null_gregor_synthetic_ftd_demographics_sex.sql", "original_file_path": "models/gregor_synthetic/docs/__models.yml", "unique_id": "test.ftd.not_null_gregor_synthetic_ftd_demographics_sex.6a57903a47", "fqn": ["ftd", "gregor_synthetic", "docs", "not_null_gregor_synthetic_ftd_demographics_sex"], "alias": "not_null_gregor_synthetic_ftd_demographics_sex", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.746961, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "gregor_synthetic_ftd_demographics", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.gregor_synthetic_ftd_demographics"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/docs/__models.yml/not_null_gregor_synthetic_ftd_demographics_sex.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sex\nfrom \"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_demographics\"\nwhere sex is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "sex", "file_key_name": "models.gregor_synthetic_ftd_demographics", "attached_node": "model.ftd.gregor_synthetic_ftd_demographics", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "sex", "model": "{{ get_where_subquery(ref('gregor_synthetic_ftd_demographics')) }}"}, "namespace": null}}, "test.ftd.accepted_values_gregor_synthetic_ftd_demographics_sex__female__male__unknown__intersex.2ca432fb0a": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "accepted_values_gregor_synthetic_ftd_demographics_sex__female__male__unknown__intersex", "resource_type": "test", "package_name": "ftd", "path": "accepted_values_gregor_synthet_42e4a9c30bc8df63b382d1461edcf64d.sql", "original_file_path": "models/gregor_synthetic/docs/__models.yml", "unique_id": "test.ftd.accepted_values_gregor_synthetic_ftd_demographics_sex__female__male__unknown__intersex.2ca432fb0a", "fqn": ["ftd", "gregor_synthetic", "docs", "accepted_values_gregor_synthetic_ftd_demographics_sex__female__male__unknown__intersex"], "alias": "accepted_values_gregor_synthet_42e4a9c30bc8df63b382d1461edcf64d", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_gregor_synthet_42e4a9c30bc8df63b382d1461edcf64d", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "accepted_values_gregor_synthet_42e4a9c30bc8df63b382d1461edcf64d"}, "created_at": 1757448969.7479718, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_gregor_synthet_42e4a9c30bc8df63b382d1461edcf64d\") }}", "language": "sql", "refs": [{"name": "gregor_synthetic_ftd_demographics", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.gregor_synthetic_ftd_demographics"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/docs/__models.yml/accepted_values_gregor_synthet_42e4a9c30bc8df63b382d1461edcf64d.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        sex as value_field,\n        count(*) as n_records\n\n    from \"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_demographics\"\n    group by sex\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'female','male','unknown','intersex'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "sex", "file_key_name": "models.gregor_synthetic_ftd_demographics", "attached_node": "model.ftd.gregor_synthetic_ftd_demographics", "test_metadata": {"name": "accepted_values", "kwargs": {"values": ["female", "male", "unknown", "intersex"], "column_name": "sex", "model": "{{ get_where_subquery(ref('gregor_synthetic_ftd_demographics')) }}"}, "namespace": null}}, "test.ftd.not_null_gregor_synthetic_ftd_demographics_sex_display.d995333553": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_gregor_synthetic_ftd_demographics_sex_display", "resource_type": "test", "package_name": "ftd", "path": "not_null_gregor_synthetic_ftd_demographics_sex_display.sql", "original_file_path": "models/gregor_synthetic/docs/__models.yml", "unique_id": "test.ftd.not_null_gregor_synthetic_ftd_demographics_sex_display.d995333553", "fqn": ["ftd", "gregor_synthetic", "docs", "not_null_gregor_synthetic_ftd_demographics_sex_display"], "alias": "not_null_gregor_synthetic_ftd_demographics_sex_display", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.7505262, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "gregor_synthetic_ftd_demographics", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.gregor_synthetic_ftd_demographics"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/docs/__models.yml/not_null_gregor_synthetic_ftd_demographics_sex_display.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sex_display\nfrom \"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_demographics\"\nwhere sex_display is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "sex_display", "file_key_name": "models.gregor_synthetic_ftd_demographics", "attached_node": "model.ftd.gregor_synthetic_ftd_demographics", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "sex_display", "model": "{{ get_where_subquery(ref('gregor_synthetic_ftd_demographics')) }}"}, "namespace": null}}, "test.ftd.not_null_gregor_synthetic_ftd_demographics_race_display.330040d994": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_gregor_synthetic_ftd_demographics_race_display", "resource_type": "test", "package_name": "ftd", "path": "not_null_gregor_synthetic_ftd_demographics_race_display.sql", "original_file_path": "models/gregor_synthetic/docs/__models.yml", "unique_id": "test.ftd.not_null_gregor_synthetic_ftd_demographics_race_display.330040d994", "fqn": ["ftd", "gregor_synthetic", "docs", "not_null_gregor_synthetic_ftd_demographics_race_display"], "alias": "not_null_gregor_synthetic_ftd_demographics_race_display", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.751697, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "gregor_synthetic_ftd_demographics", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.gregor_synthetic_ftd_demographics"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/docs/__models.yml/not_null_gregor_synthetic_ftd_demographics_race_display.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect race_display\nfrom \"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_demographics\"\nwhere race_display is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "race_display", "file_key_name": "models.gregor_synthetic_ftd_demographics", "attached_node": "model.ftd.gregor_synthetic_ftd_demographics", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "race_display", "model": "{{ get_where_subquery(ref('gregor_synthetic_ftd_demographics')) }}"}, "namespace": null}}, "test.ftd.not_null_gregor_synthetic_ftd_demographics_ethnicity.de41fba281": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_gregor_synthetic_ftd_demographics_ethnicity", "resource_type": "test", "package_name": "ftd", "path": "not_null_gregor_synthetic_ftd_demographics_ethnicity.sql", "original_file_path": "models/gregor_synthetic/docs/__models.yml", "unique_id": "test.ftd.not_null_gregor_synthetic_ftd_demographics_ethnicity.de41fba281", "fqn": ["ftd", "gregor_synthetic", "docs", "not_null_gregor_synthetic_ftd_demographics_ethnicity"], "alias": "not_null_gregor_synthetic_ftd_demographics_ethnicity", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.75282, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "gregor_synthetic_ftd_demographics", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.gregor_synthetic_ftd_demographics"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/docs/__models.yml/not_null_gregor_synthetic_ftd_demographics_ethnicity.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ethnicity\nfrom \"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_demographics\"\nwhere ethnicity is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "ethnicity", "file_key_name": "models.gregor_synthetic_ftd_demographics", "attached_node": "model.ftd.gregor_synthetic_ftd_demographics", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "ethnicity", "model": "{{ get_where_subquery(ref('gregor_synthetic_ftd_demographics')) }}"}, "namespace": null}}, "test.ftd.accepted_values_gregor_synthetic_ftd_demographics_ethnicity__hispanic_or_latino__not_hispanic_or_latino__unknown__asked_but_unknown.7fb426336d": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "accepted_values_gregor_synthetic_ftd_demographics_ethnicity__hispanic_or_latino__not_hispanic_or_latino__unknown__asked_but_unknown", "resource_type": "test", "package_name": "ftd", "path": "accepted_values_gregor_synthet_c90d4acb1de80c60b921999877551b13.sql", "original_file_path": "models/gregor_synthetic/docs/__models.yml", "unique_id": "test.ftd.accepted_values_gregor_synthetic_ftd_demographics_ethnicity__hispanic_or_latino__not_hispanic_or_latino__unknown__asked_but_unknown.7fb426336d", "fqn": ["ftd", "gregor_synthetic", "docs", "accepted_values_gregor_synthetic_ftd_demographics_ethnicity__hispanic_or_latino__not_hispanic_or_latino__unknown__asked_but_unknown"], "alias": "accepted_values_gregor_synthet_c90d4acb1de80c60b921999877551b13", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_gregor_synthet_c90d4acb1de80c60b921999877551b13", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "accepted_values_gregor_synthet_c90d4acb1de80c60b921999877551b13"}, "created_at": 1757448969.753797, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_gregor_synthet_c90d4acb1de80c60b921999877551b13\") }}", "language": "sql", "refs": [{"name": "gregor_synthetic_ftd_demographics", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.gregor_synthetic_ftd_demographics"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/docs/__models.yml/accepted_values_gregor_synthet_c90d4acb1de80c60b921999877551b13.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        ethnicity as value_field,\n        count(*) as n_records\n\n    from \"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_demographics\"\n    group by ethnicity\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'hispanic_or_latino','not_hispanic_or_latino','unknown','asked_but_unknown'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "ethnicity", "file_key_name": "models.gregor_synthetic_ftd_demographics", "attached_node": "model.ftd.gregor_synthetic_ftd_demographics", "test_metadata": {"name": "accepted_values", "kwargs": {"values": ["hispanic_or_latino", "not_hispanic_or_latino", "unknown", "asked_but_unknown"], "column_name": "ethnicity", "model": "{{ get_where_subquery(ref('gregor_synthetic_ftd_demographics')) }}"}, "namespace": null}}, "test.ftd.not_null_gregor_synthetic_ftd_demographics_ethnicity_display.3541da5b62": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_gregor_synthetic_ftd_demographics_ethnicity_display", "resource_type": "test", "package_name": "ftd", "path": "not_null_gregor_synthetic_ftd_demographics_ethnicity_display.sql", "original_file_path": "models/gregor_synthetic/docs/__models.yml", "unique_id": "test.ftd.not_null_gregor_synthetic_ftd_demographics_ethnicity_display.3541da5b62", "fqn": ["ftd", "gregor_synthetic", "docs", "not_null_gregor_synthetic_ftd_demographics_ethnicity_display"], "alias": "not_null_gregor_synthetic_ftd_demographics_ethnicity_display", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.7565258, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "gregor_synthetic_ftd_demographics", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.gregor_synthetic_ftd_demographics"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/docs/__models.yml/not_null_gregor_synthetic_ftd_demographics_ethnicity_display.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ethnicity_display\nfrom \"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_demographics\"\nwhere ethnicity_display is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "ethnicity_display", "file_key_name": "models.gregor_synthetic_ftd_demographics", "attached_node": "model.ftd.gregor_synthetic_ftd_demographics", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "ethnicity_display", "model": "{{ get_where_subquery(ref('gregor_synthetic_ftd_demographics')) }}"}, "namespace": null}}, "test.ftd.not_null_gregor_synthetic_ftd_demographics_id.f76247f12d": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_gregor_synthetic_ftd_demographics_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_gregor_synthetic_ftd_demographics_id.sql", "original_file_path": "models/gregor_synthetic/docs/__models.yml", "unique_id": "test.ftd.not_null_gregor_synthetic_ftd_demographics_id.f76247f12d", "fqn": ["ftd", "gregor_synthetic", "docs", "not_null_gregor_synthetic_ftd_demographics_id"], "alias": "not_null_gregor_synthetic_ftd_demographics_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.757476, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "gregor_synthetic_ftd_demographics", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.gregor_synthetic_ftd_demographics"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/docs/__models.yml/not_null_gregor_synthetic_ftd_demographics_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_demographics\"\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "id", "file_key_name": "models.gregor_synthetic_ftd_demographics", "attached_node": "model.ftd.gregor_synthetic_ftd_demographics", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('gregor_synthetic_ftd_demographics')) }}"}, "namespace": null}}, "test.ftd.not_null_gregor_synthetic_ftd_subjectassertion_id.0eb5e4594a": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_gregor_synthetic_ftd_subjectassertion_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_gregor_synthetic_ftd_subjectassertion_id.sql", "original_file_path": "models/gregor_synthetic/docs/__models.yml", "unique_id": "test.ftd.not_null_gregor_synthetic_ftd_subjectassertion_id.0eb5e4594a", "fqn": ["ftd", "gregor_synthetic", "docs", "not_null_gregor_synthetic_ftd_subjectassertion_id"], "alias": "not_null_gregor_synthetic_ftd_subjectassertion_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.7584438, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "gregor_synthetic_ftd_subjectassertion", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.gregor_synthetic_ftd_subjectassertion"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/docs/__models.yml/not_null_gregor_synthetic_ftd_subjectassertion_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_subjectassertion\"\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "id", "file_key_name": "models.gregor_synthetic_ftd_subjectassertion", "attached_node": "model.ftd.gregor_synthetic_ftd_subjectassertion", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('gregor_synthetic_ftd_subjectassertion')) }}"}, "namespace": null}}, "test.ftd.not_null_gregor_synthetic_ftd_accesspolicy_description.d59f1c94d4": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_gregor_synthetic_ftd_accesspolicy_description", "resource_type": "test", "package_name": "ftd", "path": "not_null_gregor_synthetic_ftd_accesspolicy_description.sql", "original_file_path": "models/gregor_synthetic/docs/__models.yml", "unique_id": "test.ftd.not_null_gregor_synthetic_ftd_accesspolicy_description.d59f1c94d4", "fqn": ["ftd", "gregor_synthetic", "docs", "not_null_gregor_synthetic_ftd_accesspolicy_description"], "alias": "not_null_gregor_synthetic_ftd_accesspolicy_description", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.7594442, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "gregor_synthetic_ftd_accesspolicy", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.gregor_synthetic_ftd_accesspolicy"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/docs/__models.yml/not_null_gregor_synthetic_ftd_accesspolicy_description.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect description\nfrom \"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_accesspolicy\"\nwhere description is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "description", "file_key_name": "models.gregor_synthetic_ftd_accesspolicy", "attached_node": "model.ftd.gregor_synthetic_ftd_accesspolicy", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "description", "model": "{{ get_where_subquery(ref('gregor_synthetic_ftd_accesspolicy')) }}"}, "namespace": null}}, "test.ftd.not_null_gregor_synthetic_ftd_accesspolicy_id.1bc2aee0e5": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_gregor_synthetic_ftd_accesspolicy_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_gregor_synthetic_ftd_accesspolicy_id.sql", "original_file_path": "models/gregor_synthetic/docs/__models.yml", "unique_id": "test.ftd.not_null_gregor_synthetic_ftd_accesspolicy_id.1bc2aee0e5", "fqn": ["ftd", "gregor_synthetic", "docs", "not_null_gregor_synthetic_ftd_accesspolicy_id"], "alias": "not_null_gregor_synthetic_ftd_accesspolicy_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.7604575, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "gregor_synthetic_ftd_accesspolicy", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.gregor_synthetic_ftd_accesspolicy"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/docs/__models.yml/not_null_gregor_synthetic_ftd_accesspolicy_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_accesspolicy\"\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "id", "file_key_name": "models.gregor_synthetic_ftd_accesspolicy", "attached_node": "model.ftd.gregor_synthetic_ftd_accesspolicy", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('gregor_synthetic_ftd_accesspolicy')) }}"}, "namespace": null}}, "test.ftd.not_null_gregor_synthetic_ftd_familymember_family_member.93e3a6234f": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_gregor_synthetic_ftd_familymember_family_member", "resource_type": "test", "package_name": "ftd", "path": "not_null_gregor_synthetic_ftd_familymember_family_member.sql", "original_file_path": "models/gregor_synthetic/docs/__models.yml", "unique_id": "test.ftd.not_null_gregor_synthetic_ftd_familymember_family_member.93e3a6234f", "fqn": ["ftd", "gregor_synthetic", "docs", "not_null_gregor_synthetic_ftd_familymember_family_member"], "alias": "not_null_gregor_synthetic_ftd_familymember_family_member", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.761393, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "gregor_synthetic_ftd_familymember", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.gregor_synthetic_ftd_familymember"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/docs/__models.yml/not_null_gregor_synthetic_ftd_familymember_family_member.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect family_member\nfrom \"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_familymember\"\nwhere family_member is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "family_member", "file_key_name": "models.gregor_synthetic_ftd_familymember", "attached_node": "model.ftd.gregor_synthetic_ftd_familymember", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "family_member", "model": "{{ get_where_subquery(ref('gregor_synthetic_ftd_familymember')) }}"}, "namespace": null}}, "test.ftd.not_null_gregor_synthetic_ftd_familymember_id.78a55538e4": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_gregor_synthetic_ftd_familymember_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_gregor_synthetic_ftd_familymember_id.sql", "original_file_path": "models/gregor_synthetic/docs/__models.yml", "unique_id": "test.ftd.not_null_gregor_synthetic_ftd_familymember_id.78a55538e4", "fqn": ["ftd", "gregor_synthetic", "docs", "not_null_gregor_synthetic_ftd_familymember_id"], "alias": "not_null_gregor_synthetic_ftd_familymember_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.7624347, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "gregor_synthetic_ftd_familymember", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.gregor_synthetic_ftd_familymember"]}, "compiled_path": "target/compiled/ftd/models/gregor_synthetic/docs/__models.yml/not_null_gregor_synthetic_ftd_familymember_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"dbt\".\"main_gregor_synthetic_data\".\"gregor_synthetic_ftd_familymember\"\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "id", "file_key_name": "models.gregor_synthetic_ftd_familymember", "attached_node": "model.ftd.gregor_synthetic_ftd_familymember", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('gregor_synthetic_ftd_familymember')) }}"}, "namespace": null}}, "test.ftd.not_null_eMERGEseq_ftd_sample_sample_type.9cef01bfcb": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_eMERGEseq_ftd_sample_sample_type", "resource_type": "test", "package_name": "ftd", "path": "not_null_eMERGEseq_ftd_sample_sample_type.sql", "original_file_path": "models/eMERGEseq/docs/__models.yml", "unique_id": "test.ftd.not_null_eMERGEseq_ftd_sample_sample_type.9cef01bfcb", "fqn": ["ftd", "eMERGEseq", "docs", "not_null_eMERGEseq_ftd_sample_sample_type"], "alias": "not_null_eMERGEseq_ftd_sample_sample_type", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.7861185, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "eMERGEseq_ftd_sample", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.eMERGEseq_ftd_sample"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/docs/__models.yml/not_null_eMERGEseq_ftd_sample_sample_type.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sample_type\nfrom \"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_sample\"\nwhere sample_type is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "sample_type", "file_key_name": "models.eMERGEseq_ftd_sample", "attached_node": "model.ftd.eMERGEseq_ftd_sample", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "sample_type", "model": "{{ get_where_subquery(ref('eMERGEseq_ftd_sample')) }}"}, "namespace": null}}, "test.ftd.not_null_eMERGEseq_ftd_sample_id.b49a2bea2f": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_eMERGEseq_ftd_sample_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_eMERGEseq_ftd_sample_id.sql", "original_file_path": "models/eMERGEseq/docs/__models.yml", "unique_id": "test.ftd.not_null_eMERGEseq_ftd_sample_id.b49a2bea2f", "fqn": ["ftd", "eMERGEseq", "docs", "not_null_eMERGEseq_ftd_sample_id"], "alias": "not_null_eMERGEseq_ftd_sample_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.7871935, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "eMERGEseq_ftd_sample", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.eMERGEseq_ftd_sample"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/docs/__models.yml/not_null_eMERGEseq_ftd_sample_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_sample\"\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "id", "file_key_name": "models.eMERGEseq_ftd_sample", "attached_node": "model.ftd.eMERGEseq_ftd_sample", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('eMERGEseq_ftd_sample')) }}"}, "namespace": null}}, "test.ftd.not_null_eMERGEseq_ftd_subjectassertion_id.1a7afe0878": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_eMERGEseq_ftd_subjectassertion_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_eMERGEseq_ftd_subjectassertion_id.sql", "original_file_path": "models/eMERGEseq/docs/__models.yml", "unique_id": "test.ftd.not_null_eMERGEseq_ftd_subjectassertion_id.1a7afe0878", "fqn": ["ftd", "eMERGEseq", "docs", "not_null_eMERGEseq_ftd_subjectassertion_id"], "alias": "not_null_eMERGEseq_ftd_subjectassertion_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.7882273, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "eMERGEseq_ftd_subjectassertion", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.eMERGEseq_ftd_subjectassertion"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/docs/__models.yml/not_null_eMERGEseq_ftd_subjectassertion_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_subjectassertion\"\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "id", "file_key_name": "models.eMERGEseq_ftd_subjectassertion", "attached_node": "model.ftd.eMERGEseq_ftd_subjectassertion", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('eMERGEseq_ftd_subjectassertion')) }}"}, "namespace": null}}, "test.ftd.not_null_eMERGEseq_ftd_accesspolicy_description.afa1581812": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_eMERGEseq_ftd_accesspolicy_description", "resource_type": "test", "package_name": "ftd", "path": "not_null_eMERGEseq_ftd_accesspolicy_description.sql", "original_file_path": "models/eMERGEseq/docs/__models.yml", "unique_id": "test.ftd.not_null_eMERGEseq_ftd_accesspolicy_description.afa1581812", "fqn": ["ftd", "eMERGEseq", "docs", "not_null_eMERGEseq_ftd_accesspolicy_description"], "alias": "not_null_eMERGEseq_ftd_accesspolicy_description", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.789369, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "eMERGEseq_ftd_accesspolicy", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.eMERGEseq_ftd_accesspolicy"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/docs/__models.yml/not_null_eMERGEseq_ftd_accesspolicy_description.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect description\nfrom \"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_accesspolicy\"\nwhere description is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "description", "file_key_name": "models.eMERGEseq_ftd_accesspolicy", "attached_node": "model.ftd.eMERGEseq_ftd_accesspolicy", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "description", "model": "{{ get_where_subquery(ref('eMERGEseq_ftd_accesspolicy')) }}"}, "namespace": null}}, "test.ftd.not_null_eMERGEseq_ftd_accesspolicy_id.434dc2d565": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_eMERGEseq_ftd_accesspolicy_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_eMERGEseq_ftd_accesspolicy_id.sql", "original_file_path": "models/eMERGEseq/docs/__models.yml", "unique_id": "test.ftd.not_null_eMERGEseq_ftd_accesspolicy_id.434dc2d565", "fqn": ["ftd", "eMERGEseq", "docs", "not_null_eMERGEseq_ftd_accesspolicy_id"], "alias": "not_null_eMERGEseq_ftd_accesspolicy_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.7903903, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "eMERGEseq_ftd_accesspolicy", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.eMERGEseq_ftd_accesspolicy"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/docs/__models.yml/not_null_eMERGEseq_ftd_accesspolicy_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_accesspolicy\"\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "id", "file_key_name": "models.eMERGEseq_ftd_accesspolicy", "attached_node": "model.ftd.eMERGEseq_ftd_accesspolicy", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('eMERGEseq_ftd_accesspolicy')) }}"}, "namespace": null}}, "test.ftd.not_null_eMERGEseq_ftd_subject_subject_type.a7edad184a": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_eMERGEseq_ftd_subject_subject_type", "resource_type": "test", "package_name": "ftd", "path": "not_null_eMERGEseq_ftd_subject_subject_type.sql", "original_file_path": "models/eMERGEseq/docs/__models.yml", "unique_id": "test.ftd.not_null_eMERGEseq_ftd_subject_subject_type.a7edad184a", "fqn": ["ftd", "eMERGEseq", "docs", "not_null_eMERGEseq_ftd_subject_subject_type"], "alias": "not_null_eMERGEseq_ftd_subject_subject_type", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.7913473, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "eMERGEseq_ftd_subject", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.eMERGEseq_ftd_subject"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/docs/__models.yml/not_null_eMERGEseq_ftd_subject_subject_type.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect subject_type\nfrom \"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_subject\"\nwhere subject_type is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "subject_type", "file_key_name": "models.eMERGEseq_ftd_subject", "attached_node": "model.ftd.eMERGEseq_ftd_subject", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "subject_type", "model": "{{ get_where_subquery(ref('eMERGEseq_ftd_subject')) }}"}, "namespace": null}}, "test.ftd.accepted_values_eMERGEseq_ftd_subject_subject_type__participant__non_participant__cell_line__animal_model__group__other.b1b5b5d5bf": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "accepted_values_eMERGEseq_ftd_subject_subject_type__participant__non_participant__cell_line__animal_model__group__other", "resource_type": "test", "package_name": "ftd", "path": "accepted_values_eMERGEseq_ftd__cc70175ccc8ebaf14626063875670675.sql", "original_file_path": "models/eMERGEseq/docs/__models.yml", "unique_id": "test.ftd.accepted_values_eMERGEseq_ftd_subject_subject_type__participant__non_participant__cell_line__animal_model__group__other.b1b5b5d5bf", "fqn": ["ftd", "eMERGEseq", "docs", "accepted_values_eMERGEseq_ftd_subject_subject_type__participant__non_participant__cell_line__animal_model__group__other"], "alias": "accepted_values_eMERGEseq_ftd__cc70175ccc8ebaf14626063875670675", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_eMERGEseq_ftd__cc70175ccc8ebaf14626063875670675", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "accepted_values_eMERGEseq_ftd__cc70175ccc8ebaf14626063875670675"}, "created_at": 1757448969.792358, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_eMERGEseq_ftd__cc70175ccc8ebaf14626063875670675\") }}", "language": "sql", "refs": [{"name": "eMERGEseq_ftd_subject", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.eMERGEseq_ftd_subject"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/docs/__models.yml/accepted_values_eMERGEseq_ftd__cc70175ccc8ebaf14626063875670675.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        subject_type as value_field,\n        count(*) as n_records\n\n    from \"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_subject\"\n    group by subject_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'participant','non_participant','cell_line','animal_model','group','other'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "subject_type", "file_key_name": "models.eMERGEseq_ftd_subject", "attached_node": "model.ftd.eMERGEseq_ftd_subject", "test_metadata": {"name": "accepted_values", "kwargs": {"values": ["participant", "non_participant", "cell_line", "animal_model", "group", "other"], "column_name": "subject_type", "model": "{{ get_where_subquery(ref('eMERGEseq_ftd_subject')) }}"}, "namespace": null}}, "test.ftd.not_null_eMERGEseq_ftd_subject_id.57198c89b1": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_eMERGEseq_ftd_subject_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_eMERGEseq_ftd_subject_id.sql", "original_file_path": "models/eMERGEseq/docs/__models.yml", "unique_id": "test.ftd.not_null_eMERGEseq_ftd_subject_id.57198c89b1", "fqn": ["ftd", "eMERGEseq", "docs", "not_null_eMERGEseq_ftd_subject_id"], "alias": "not_null_eMERGEseq_ftd_subject_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.7953846, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "eMERGEseq_ftd_subject", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.eMERGEseq_ftd_subject"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/docs/__models.yml/not_null_eMERGEseq_ftd_subject_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_subject\"\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "id", "file_key_name": "models.eMERGEseq_ftd_subject", "attached_node": "model.ftd.eMERGEseq_ftd_subject", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('eMERGEseq_ftd_subject')) }}"}, "namespace": null}}, "test.ftd.not_null_eMERGEseq_ftd_demographics_race_demographics_id.48d1d5797c": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_eMERGEseq_ftd_demographics_race_demographics_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_eMERGEseq_ftd_demographics_race_demographics_id.sql", "original_file_path": "models/eMERGEseq/docs/__models.yml", "unique_id": "test.ftd.not_null_eMERGEseq_ftd_demographics_race_demographics_id.48d1d5797c", "fqn": ["ftd", "eMERGEseq", "docs", "not_null_eMERGEseq_ftd_demographics_race_demographics_id"], "alias": "not_null_eMERGEseq_ftd_demographics_race_demographics_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.7963994, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "eMERGEseq_ftd_demographics_race", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.eMERGEseq_ftd_demographics_race"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/docs/__models.yml/not_null_eMERGEseq_ftd_demographics_race_demographics_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect demographics_id\nfrom \"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_demographics_race\"\nwhere demographics_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "demographics_id", "file_key_name": "models.eMERGEseq_ftd_demographics_race", "attached_node": "model.ftd.eMERGEseq_ftd_demographics_race", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "demographics_id", "model": "{{ get_where_subquery(ref('eMERGEseq_ftd_demographics_race')) }}"}, "namespace": null}}, "test.ftd.not_null_eMERGEseq_ftd_demographics_race_race.a6f363d7df": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_eMERGEseq_ftd_demographics_race_race", "resource_type": "test", "package_name": "ftd", "path": "not_null_eMERGEseq_ftd_demographics_race_race.sql", "original_file_path": "models/eMERGEseq/docs/__models.yml", "unique_id": "test.ftd.not_null_eMERGEseq_ftd_demographics_race_race.a6f363d7df", "fqn": ["ftd", "eMERGEseq", "docs", "not_null_eMERGEseq_ftd_demographics_race_race"], "alias": "not_null_eMERGEseq_ftd_demographics_race_race", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.797351, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "eMERGEseq_ftd_demographics_race", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.eMERGEseq_ftd_demographics_race"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/docs/__models.yml/not_null_eMERGEseq_ftd_demographics_race_race.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect race\nfrom \"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_demographics_race\"\nwhere race is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "race", "file_key_name": "models.eMERGEseq_ftd_demographics_race", "attached_node": "model.ftd.eMERGEseq_ftd_demographics_race", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "race", "model": "{{ get_where_subquery(ref('eMERGEseq_ftd_demographics_race')) }}"}, "namespace": null}}, "test.ftd.accepted_values_eMERGEseq_ftd_demographics_race_race__american_indian_or_alaskan_native__asian__black_or_african_american__native_hawaiian_or_pacific_islander__white__other_race__unknown__asked_but_unknown.115877dcc2": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "accepted_values_eMERGEseq_ftd_demographics_race_race__american_indian_or_alaskan_native__asian__black_or_african_american__native_hawaiian_or_pacific_islander__white__other_race__unknown__asked_but_unknown", "resource_type": "test", "package_name": "ftd", "path": "accepted_values_eMERGEseq_ftd__d40ce470cb56b1354dd7d8575488c5fe.sql", "original_file_path": "models/eMERGEseq/docs/__models.yml", "unique_id": "test.ftd.accepted_values_eMERGEseq_ftd_demographics_race_race__american_indian_or_alaskan_native__asian__black_or_african_american__native_hawaiian_or_pacific_islander__white__other_race__unknown__asked_but_unknown.115877dcc2", "fqn": ["ftd", "eMERGEseq", "docs", "accepted_values_eMERGEseq_ftd_demographics_race_race__american_indian_or_alaskan_native__asian__black_or_african_american__native_hawaiian_or_pacific_islander__white__other_race__unknown__asked_but_unknown"], "alias": "accepted_values_eMERGEseq_ftd__d40ce470cb56b1354dd7d8575488c5fe", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_eMERGEseq_ftd__d40ce470cb56b1354dd7d8575488c5fe", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "accepted_values_eMERGEseq_ftd__d40ce470cb56b1354dd7d8575488c5fe"}, "created_at": 1757448969.7983608, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_eMERGEseq_ftd__d40ce470cb56b1354dd7d8575488c5fe\") }}", "language": "sql", "refs": [{"name": "eMERGEseq_ftd_demographics_race", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.eMERGEseq_ftd_demographics_race"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/docs/__models.yml/accepted_values_eMERGEseq_ftd__d40ce470cb56b1354dd7d8575488c5fe.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        race as value_field,\n        count(*) as n_records\n\n    from \"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_demographics_race\"\n    group by race\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'american_indian_or_alaskan_native','asian','black_or_african_american','native_hawaiian_or_pacific_islander','white','other_race','unknown','asked_but_unknown'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "race", "file_key_name": "models.eMERGEseq_ftd_demographics_race", "attached_node": "model.ftd.eMERGEseq_ftd_demographics_race", "test_metadata": {"name": "accepted_values", "kwargs": {"values": ["american_indian_or_alaskan_native", "asian", "black_or_african_american", "native_hawaiian_or_pacific_islander", "white", "other_race", "unknown", "asked_but_unknown"], "column_name": "race", "model": "{{ get_where_subquery(ref('eMERGEseq_ftd_demographics_race')) }}"}, "namespace": null}}, "test.ftd.not_null_eMERGEseq_ftd_demographics_sex.00a71bdb6f": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_eMERGEseq_ftd_demographics_sex", "resource_type": "test", "package_name": "ftd", "path": "not_null_eMERGEseq_ftd_demographics_sex.sql", "original_file_path": "models/eMERGEseq/docs/__models.yml", "unique_id": "test.ftd.not_null_eMERGEseq_ftd_demographics_sex.00a71bdb6f", "fqn": ["ftd", "eMERGEseq", "docs", "not_null_eMERGEseq_ftd_demographics_sex"], "alias": "not_null_eMERGEseq_ftd_demographics_sex", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.8012419, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "eMERGEseq_ftd_demographics", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.eMERGEseq_ftd_demographics"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/docs/__models.yml/not_null_eMERGEseq_ftd_demographics_sex.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sex\nfrom \"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_demographics\"\nwhere sex is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "sex", "file_key_name": "models.eMERGEseq_ftd_demographics", "attached_node": "model.ftd.eMERGEseq_ftd_demographics", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "sex", "model": "{{ get_where_subquery(ref('eMERGEseq_ftd_demographics')) }}"}, "namespace": null}}, "test.ftd.accepted_values_eMERGEseq_ftd_demographics_sex__female__male__unknown__intersex.8404a8d8f7": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "accepted_values_eMERGEseq_ftd_demographics_sex__female__male__unknown__intersex", "resource_type": "test", "package_name": "ftd", "path": "accepted_values_eMERGEseq_ftd__a724b62ac2c7aeba38846f7be9e8bce8.sql", "original_file_path": "models/eMERGEseq/docs/__models.yml", "unique_id": "test.ftd.accepted_values_eMERGEseq_ftd_demographics_sex__female__male__unknown__intersex.8404a8d8f7", "fqn": ["ftd", "eMERGEseq", "docs", "accepted_values_eMERGEseq_ftd_demographics_sex__female__male__unknown__intersex"], "alias": "accepted_values_eMERGEseq_ftd__a724b62ac2c7aeba38846f7be9e8bce8", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_eMERGEseq_ftd__a724b62ac2c7aeba38846f7be9e8bce8", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "accepted_values_eMERGEseq_ftd__a724b62ac2c7aeba38846f7be9e8bce8"}, "created_at": 1757448969.8022418, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_eMERGEseq_ftd__a724b62ac2c7aeba38846f7be9e8bce8\") }}", "language": "sql", "refs": [{"name": "eMERGEseq_ftd_demographics", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.eMERGEseq_ftd_demographics"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/docs/__models.yml/accepted_values_eMERGEseq_ftd__a724b62ac2c7aeba38846f7be9e8bce8.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        sex as value_field,\n        count(*) as n_records\n\n    from \"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_demographics\"\n    group by sex\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'female','male','unknown','intersex'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "sex", "file_key_name": "models.eMERGEseq_ftd_demographics", "attached_node": "model.ftd.eMERGEseq_ftd_demographics", "test_metadata": {"name": "accepted_values", "kwargs": {"values": ["female", "male", "unknown", "intersex"], "column_name": "sex", "model": "{{ get_where_subquery(ref('eMERGEseq_ftd_demographics')) }}"}, "namespace": null}}, "test.ftd.not_null_eMERGEseq_ftd_demographics_sex_display.850a17a02c": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_eMERGEseq_ftd_demographics_sex_display", "resource_type": "test", "package_name": "ftd", "path": "not_null_eMERGEseq_ftd_demographics_sex_display.sql", "original_file_path": "models/eMERGEseq/docs/__models.yml", "unique_id": "test.ftd.not_null_eMERGEseq_ftd_demographics_sex_display.850a17a02c", "fqn": ["ftd", "eMERGEseq", "docs", "not_null_eMERGEseq_ftd_demographics_sex_display"], "alias": "not_null_eMERGEseq_ftd_demographics_sex_display", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.8049657, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "eMERGEseq_ftd_demographics", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.eMERGEseq_ftd_demographics"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/docs/__models.yml/not_null_eMERGEseq_ftd_demographics_sex_display.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sex_display\nfrom \"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_demographics\"\nwhere sex_display is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "sex_display", "file_key_name": "models.eMERGEseq_ftd_demographics", "attached_node": "model.ftd.eMERGEseq_ftd_demographics", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "sex_display", "model": "{{ get_where_subquery(ref('eMERGEseq_ftd_demographics')) }}"}, "namespace": null}}, "test.ftd.not_null_eMERGEseq_ftd_demographics_race_display.1eb46b5734": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_eMERGEseq_ftd_demographics_race_display", "resource_type": "test", "package_name": "ftd", "path": "not_null_eMERGEseq_ftd_demographics_race_display.sql", "original_file_path": "models/eMERGEseq/docs/__models.yml", "unique_id": "test.ftd.not_null_eMERGEseq_ftd_demographics_race_display.1eb46b5734", "fqn": ["ftd", "eMERGEseq", "docs", "not_null_eMERGEseq_ftd_demographics_race_display"], "alias": "not_null_eMERGEseq_ftd_demographics_race_display", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.8059993, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "eMERGEseq_ftd_demographics", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.eMERGEseq_ftd_demographics"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/docs/__models.yml/not_null_eMERGEseq_ftd_demographics_race_display.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect race_display\nfrom \"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_demographics\"\nwhere race_display is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "race_display", "file_key_name": "models.eMERGEseq_ftd_demographics", "attached_node": "model.ftd.eMERGEseq_ftd_demographics", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "race_display", "model": "{{ get_where_subquery(ref('eMERGEseq_ftd_demographics')) }}"}, "namespace": null}}, "test.ftd.not_null_eMERGEseq_ftd_demographics_ethnicity.d54b112b05": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_eMERGEseq_ftd_demographics_ethnicity", "resource_type": "test", "package_name": "ftd", "path": "not_null_eMERGEseq_ftd_demographics_ethnicity.sql", "original_file_path": "models/eMERGEseq/docs/__models.yml", "unique_id": "test.ftd.not_null_eMERGEseq_ftd_demographics_ethnicity.d54b112b05", "fqn": ["ftd", "eMERGEseq", "docs", "not_null_eMERGEseq_ftd_demographics_ethnicity"], "alias": "not_null_eMERGEseq_ftd_demographics_ethnicity", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.806968, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "eMERGEseq_ftd_demographics", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.eMERGEseq_ftd_demographics"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/docs/__models.yml/not_null_eMERGEseq_ftd_demographics_ethnicity.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ethnicity\nfrom \"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_demographics\"\nwhere ethnicity is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "ethnicity", "file_key_name": "models.eMERGEseq_ftd_demographics", "attached_node": "model.ftd.eMERGEseq_ftd_demographics", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "ethnicity", "model": "{{ get_where_subquery(ref('eMERGEseq_ftd_demographics')) }}"}, "namespace": null}}, "test.ftd.accepted_values_eMERGEseq_ftd_demographics_ethnicity__hispanic_or_latino__not_hispanic_or_latino__unknown__asked_but_unknown.dd3e975827": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "accepted_values_eMERGEseq_ftd_demographics_ethnicity__hispanic_or_latino__not_hispanic_or_latino__unknown__asked_but_unknown", "resource_type": "test", "package_name": "ftd", "path": "accepted_values_eMERGEseq_ftd__43a0d4aedf6412c41fdd05b771764340.sql", "original_file_path": "models/eMERGEseq/docs/__models.yml", "unique_id": "test.ftd.accepted_values_eMERGEseq_ftd_demographics_ethnicity__hispanic_or_latino__not_hispanic_or_latino__unknown__asked_but_unknown.dd3e975827", "fqn": ["ftd", "eMERGEseq", "docs", "accepted_values_eMERGEseq_ftd_demographics_ethnicity__hispanic_or_latino__not_hispanic_or_latino__unknown__asked_but_unknown"], "alias": "accepted_values_eMERGEseq_ftd__43a0d4aedf6412c41fdd05b771764340", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_eMERGEseq_ftd__43a0d4aedf6412c41fdd05b771764340", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "accepted_values_eMERGEseq_ftd__43a0d4aedf6412c41fdd05b771764340"}, "created_at": 1757448969.8079808, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_eMERGEseq_ftd__43a0d4aedf6412c41fdd05b771764340\") }}", "language": "sql", "refs": [{"name": "eMERGEseq_ftd_demographics", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.eMERGEseq_ftd_demographics"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/docs/__models.yml/accepted_values_eMERGEseq_ftd__43a0d4aedf6412c41fdd05b771764340.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        ethnicity as value_field,\n        count(*) as n_records\n\n    from \"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_demographics\"\n    group by ethnicity\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'hispanic_or_latino','not_hispanic_or_latino','unknown','asked_but_unknown'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "ethnicity", "file_key_name": "models.eMERGEseq_ftd_demographics", "attached_node": "model.ftd.eMERGEseq_ftd_demographics", "test_metadata": {"name": "accepted_values", "kwargs": {"values": ["hispanic_or_latino", "not_hispanic_or_latino", "unknown", "asked_but_unknown"], "column_name": "ethnicity", "model": "{{ get_where_subquery(ref('eMERGEseq_ftd_demographics')) }}"}, "namespace": null}}, "test.ftd.not_null_eMERGEseq_ftd_demographics_ethnicity_display.9ffec6a3a3": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_eMERGEseq_ftd_demographics_ethnicity_display", "resource_type": "test", "package_name": "ftd", "path": "not_null_eMERGEseq_ftd_demographics_ethnicity_display.sql", "original_file_path": "models/eMERGEseq/docs/__models.yml", "unique_id": "test.ftd.not_null_eMERGEseq_ftd_demographics_ethnicity_display.9ffec6a3a3", "fqn": ["ftd", "eMERGEseq", "docs", "not_null_eMERGEseq_ftd_demographics_ethnicity_display"], "alias": "not_null_eMERGEseq_ftd_demographics_ethnicity_display", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.8107407, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "eMERGEseq_ftd_demographics", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.eMERGEseq_ftd_demographics"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/docs/__models.yml/not_null_eMERGEseq_ftd_demographics_ethnicity_display.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ethnicity_display\nfrom \"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_demographics\"\nwhere ethnicity_display is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "ethnicity_display", "file_key_name": "models.eMERGEseq_ftd_demographics", "attached_node": "model.ftd.eMERGEseq_ftd_demographics", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "ethnicity_display", "model": "{{ get_where_subquery(ref('eMERGEseq_ftd_demographics')) }}"}, "namespace": null}}, "test.ftd.not_null_eMERGEseq_ftd_demographics_id.a486d2592b": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_eMERGEseq_ftd_demographics_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_eMERGEseq_ftd_demographics_id.sql", "original_file_path": "models/eMERGEseq/docs/__models.yml", "unique_id": "test.ftd.not_null_eMERGEseq_ftd_demographics_id.a486d2592b", "fqn": ["ftd", "eMERGEseq", "docs", "not_null_eMERGEseq_ftd_demographics_id"], "alias": "not_null_eMERGEseq_ftd_demographics_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.8116639, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "eMERGEseq_ftd_demographics", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.eMERGEseq_ftd_demographics"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/docs/__models.yml/not_null_eMERGEseq_ftd_demographics_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_demographics\"\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "id", "file_key_name": "models.eMERGEseq_ftd_demographics", "attached_node": "model.ftd.eMERGEseq_ftd_demographics", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('eMERGEseq_ftd_demographics')) }}"}, "namespace": null}}, "test.ftd.not_null_eMERGEseq_ftd_accesspolicy_access_policy_code_accesspolicy_id.feeb0849ac": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_eMERGEseq_ftd_accesspolicy_access_policy_code_accesspolicy_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_eMERGEseq_ftd_accessp_e62de31ae2b83e5467caed13388e3d95.sql", "original_file_path": "models/eMERGEseq/docs/__models.yml", "unique_id": "test.ftd.not_null_eMERGEseq_ftd_accesspolicy_access_policy_code_accesspolicy_id.feeb0849ac", "fqn": ["ftd", "eMERGEseq", "docs", "not_null_eMERGEseq_ftd_accesspolicy_access_policy_code_accesspolicy_id"], "alias": "not_null_eMERGEseq_ftd_accessp_e62de31ae2b83e5467caed13388e3d95", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "not_null_eMERGEseq_ftd_accessp_e62de31ae2b83e5467caed13388e3d95", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "not_null_eMERGEseq_ftd_accessp_e62de31ae2b83e5467caed13388e3d95"}, "created_at": 1757448969.812645, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"not_null_eMERGEseq_ftd_accessp_e62de31ae2b83e5467caed13388e3d95\") }}", "language": "sql", "refs": [{"name": "eMERGEseq_ftd_accesspolicy_access_policy_code", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.eMERGEseq_ftd_accesspolicy_access_policy_code"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/docs/__models.yml/not_null_eMERGEseq_ftd_accessp_e62de31ae2b83e5467caed13388e3d95.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect accesspolicy_id\nfrom \"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_accesspolicy_access_policy_code\"\nwhere accesspolicy_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "accesspolicy_id", "file_key_name": "models.eMERGEseq_ftd_accesspolicy_access_policy_code", "attached_node": "model.ftd.eMERGEseq_ftd_accesspolicy_access_policy_code", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "accesspolicy_id", "model": "{{ get_where_subquery(ref('eMERGEseq_ftd_accesspolicy_access_policy_code')) }}"}, "namespace": null}}, "test.ftd.not_null_eMERGEseq_ftd_accesspolicy_access_policy_code_access_policy_code.fe962d3ccf": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_eMERGEseq_ftd_accesspolicy_access_policy_code_access_policy_code", "resource_type": "test", "package_name": "ftd", "path": "not_null_eMERGEseq_ftd_accessp_f7737c87bde6be5ad5274e118e4ed4a0.sql", "original_file_path": "models/eMERGEseq/docs/__models.yml", "unique_id": "test.ftd.not_null_eMERGEseq_ftd_accesspolicy_access_policy_code_access_policy_code.fe962d3ccf", "fqn": ["ftd", "eMERGEseq", "docs", "not_null_eMERGEseq_ftd_accesspolicy_access_policy_code_access_policy_code"], "alias": "not_null_eMERGEseq_ftd_accessp_f7737c87bde6be5ad5274e118e4ed4a0", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "not_null_eMERGEseq_ftd_accessp_f7737c87bde6be5ad5274e118e4ed4a0", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "not_null_eMERGEseq_ftd_accessp_f7737c87bde6be5ad5274e118e4ed4a0"}, "created_at": 1757448969.8135962, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"not_null_eMERGEseq_ftd_accessp_f7737c87bde6be5ad5274e118e4ed4a0\") }}", "language": "sql", "refs": [{"name": "eMERGEseq_ftd_accesspolicy_access_policy_code", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.eMERGEseq_ftd_accesspolicy_access_policy_code"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/docs/__models.yml/not_null_eMERGEseq_ftd_accessp_f7737c87bde6be5ad5274e118e4ed4a0.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect access_policy_code\nfrom \"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_accesspolicy_access_policy_code\"\nwhere access_policy_code is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "access_policy_code", "file_key_name": "models.eMERGEseq_ftd_accesspolicy_access_policy_code", "attached_node": "model.ftd.eMERGEseq_ftd_accesspolicy_access_policy_code", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "access_policy_code", "model": "{{ get_where_subquery(ref('eMERGEseq_ftd_accesspolicy_access_policy_code')) }}"}, "namespace": null}}, "test.ftd.accepted_values_eMERGEseq_ftd_accesspolicy_access_policy_code_access_policy_code__gru__hmb__ds__irb__pub__col__npu__mds__gso__gsr.ea570f7beb": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "accepted_values_eMERGEseq_ftd_accesspolicy_access_policy_code_access_policy_code__gru__hmb__ds__irb__pub__col__npu__mds__gso__gsr", "resource_type": "test", "package_name": "ftd", "path": "accepted_values_eMERGEseq_ftd__49d6e17dd6b6f613656a328ba3998cb3.sql", "original_file_path": "models/eMERGEseq/docs/__models.yml", "unique_id": "test.ftd.accepted_values_eMERGEseq_ftd_accesspolicy_access_policy_code_access_policy_code__gru__hmb__ds__irb__pub__col__npu__mds__gso__gsr.ea570f7beb", "fqn": ["ftd", "eMERGEseq", "docs", "accepted_values_eMERGEseq_ftd_accesspolicy_access_policy_code_access_policy_code__gru__hmb__ds__irb__pub__col__npu__mds__gso__gsr"], "alias": "accepted_values_eMERGEseq_ftd__49d6e17dd6b6f613656a328ba3998cb3", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_eMERGEseq_ftd__49d6e17dd6b6f613656a328ba3998cb3", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "accepted_values_eMERGEseq_ftd__49d6e17dd6b6f613656a328ba3998cb3"}, "created_at": 1757448969.8148184, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_eMERGEseq_ftd__49d6e17dd6b6f613656a328ba3998cb3\") }}", "language": "sql", "refs": [{"name": "eMERGEseq_ftd_accesspolicy_access_policy_code", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.eMERGEseq_ftd_accesspolicy_access_policy_code"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/docs/__models.yml/accepted_values_eMERGEseq_ftd__49d6e17dd6b6f613656a328ba3998cb3.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        access_policy_code as value_field,\n        count(*) as n_records\n\n    from \"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_accesspolicy_access_policy_code\"\n    group by access_policy_code\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'gru','hmb','ds','irb','pub','col','npu','mds','gso','gsr'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "access_policy_code", "file_key_name": "models.eMERGEseq_ftd_accesspolicy_access_policy_code", "attached_node": "model.ftd.eMERGEseq_ftd_accesspolicy_access_policy_code", "test_metadata": {"name": "accepted_values", "kwargs": {"values": ["gru", "hmb", "ds", "irb", "pub", "col", "npu", "mds", "gso", "gsr"], "column_name": "access_policy_code", "model": "{{ get_where_subquery(ref('eMERGEseq_ftd_accesspolicy_access_policy_code')) }}"}, "namespace": null}}, "test.ftd.not_null_eMERGEseq_ftd_familyrelationship_family_member.c82a948a1d": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_eMERGEseq_ftd_familyrelationship_family_member", "resource_type": "test", "package_name": "ftd", "path": "not_null_eMERGEseq_ftd_familyrelationship_family_member.sql", "original_file_path": "models/eMERGEseq/docs/__models.yml", "unique_id": "test.ftd.not_null_eMERGEseq_ftd_familyrelationship_family_member.c82a948a1d", "fqn": ["ftd", "eMERGEseq", "docs", "not_null_eMERGEseq_ftd_familyrelationship_family_member"], "alias": "not_null_eMERGEseq_ftd_familyrelationship_family_member", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.8174512, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "eMERGEseq_ftd_familyrelationship", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.eMERGEseq_ftd_familyrelationship"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/docs/__models.yml/not_null_eMERGEseq_ftd_familyrelationship_family_member.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect family_member\nfrom \"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_familyrelationship\"\nwhere family_member is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "family_member", "file_key_name": "models.eMERGEseq_ftd_familyrelationship", "attached_node": "model.ftd.eMERGEseq_ftd_familyrelationship", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "family_member", "model": "{{ get_where_subquery(ref('eMERGEseq_ftd_familyrelationship')) }}"}, "namespace": null}}, "test.ftd.not_null_eMERGEseq_ftd_familyrelationship_other_family_member.d11c1f9823": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_eMERGEseq_ftd_familyrelationship_other_family_member", "resource_type": "test", "package_name": "ftd", "path": "not_null_eMERGEseq_ftd_familyrelationship_other_family_member.sql", "original_file_path": "models/eMERGEseq/docs/__models.yml", "unique_id": "test.ftd.not_null_eMERGEseq_ftd_familyrelationship_other_family_member.d11c1f9823", "fqn": ["ftd", "eMERGEseq", "docs", "not_null_eMERGEseq_ftd_familyrelationship_other_family_member"], "alias": "not_null_eMERGEseq_ftd_familyrelationship_other_family_member", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.8184373, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "eMERGEseq_ftd_familyrelationship", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.eMERGEseq_ftd_familyrelationship"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/docs/__models.yml/not_null_eMERGEseq_ftd_familyrelationship_other_family_member.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect other_family_member\nfrom \"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_familyrelationship\"\nwhere other_family_member is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "other_family_member", "file_key_name": "models.eMERGEseq_ftd_familyrelationship", "attached_node": "model.ftd.eMERGEseq_ftd_familyrelationship", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "other_family_member", "model": "{{ get_where_subquery(ref('eMERGEseq_ftd_familyrelationship')) }}"}, "namespace": null}}, "test.ftd.not_null_eMERGEseq_ftd_familyrelationship_relationship_code.b64265b2b7": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_eMERGEseq_ftd_familyrelationship_relationship_code", "resource_type": "test", "package_name": "ftd", "path": "not_null_eMERGEseq_ftd_familyrelationship_relationship_code.sql", "original_file_path": "models/eMERGEseq/docs/__models.yml", "unique_id": "test.ftd.not_null_eMERGEseq_ftd_familyrelationship_relationship_code.b64265b2b7", "fqn": ["ftd", "eMERGEseq", "docs", "not_null_eMERGEseq_ftd_familyrelationship_relationship_code"], "alias": "not_null_eMERGEseq_ftd_familyrelationship_relationship_code", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.819529, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "eMERGEseq_ftd_familyrelationship", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.eMERGEseq_ftd_familyrelationship"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/docs/__models.yml/not_null_eMERGEseq_ftd_familyrelationship_relationship_code.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect relationship_code\nfrom \"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_familyrelationship\"\nwhere relationship_code is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "relationship_code", "file_key_name": "models.eMERGEseq_ftd_familyrelationship", "attached_node": "model.ftd.eMERGEseq_ftd_familyrelationship", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "relationship_code", "model": "{{ get_where_subquery(ref('eMERGEseq_ftd_familyrelationship')) }}"}, "namespace": null}}, "test.ftd.not_null_eMERGEseq_ftd_familyrelationship_id.76e0c8aa11": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_eMERGEseq_ftd_familyrelationship_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_eMERGEseq_ftd_familyrelationship_id.sql", "original_file_path": "models/eMERGEseq/docs/__models.yml", "unique_id": "test.ftd.not_null_eMERGEseq_ftd_familyrelationship_id.76e0c8aa11", "fqn": ["ftd", "eMERGEseq", "docs", "not_null_eMERGEseq_ftd_familyrelationship_id"], "alias": "not_null_eMERGEseq_ftd_familyrelationship_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.8206325, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "eMERGEseq_ftd_familyrelationship", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.eMERGEseq_ftd_familyrelationship"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/docs/__models.yml/not_null_eMERGEseq_ftd_familyrelationship_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_familyrelationship\"\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "id", "file_key_name": "models.eMERGEseq_ftd_familyrelationship", "attached_node": "model.ftd.eMERGEseq_ftd_familyrelationship", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('eMERGEseq_ftd_familyrelationship')) }}"}, "namespace": null}}, "test.ftd.not_null_eMERGEseq_ftd_familymember_family_member.d920988b9c": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_eMERGEseq_ftd_familymember_family_member", "resource_type": "test", "package_name": "ftd", "path": "not_null_eMERGEseq_ftd_familymember_family_member.sql", "original_file_path": "models/eMERGEseq/docs/__models.yml", "unique_id": "test.ftd.not_null_eMERGEseq_ftd_familymember_family_member.d920988b9c", "fqn": ["ftd", "eMERGEseq", "docs", "not_null_eMERGEseq_ftd_familymember_family_member"], "alias": "not_null_eMERGEseq_ftd_familymember_family_member", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.821597, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "eMERGEseq_ftd_familymember", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.eMERGEseq_ftd_familymember"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/docs/__models.yml/not_null_eMERGEseq_ftd_familymember_family_member.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect family_member\nfrom \"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_familymember\"\nwhere family_member is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "family_member", "file_key_name": "models.eMERGEseq_ftd_familymember", "attached_node": "model.ftd.eMERGEseq_ftd_familymember", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "family_member", "model": "{{ get_where_subquery(ref('eMERGEseq_ftd_familymember')) }}"}, "namespace": null}}, "test.ftd.not_null_eMERGEseq_ftd_familymember_id.f354eac9f2": {"database": "dbt", "schema": "main_dbt_test__audit", "name": "not_null_eMERGEseq_ftd_familymember_id", "resource_type": "test", "package_name": "ftd", "path": "not_null_eMERGEseq_ftd_familymember_id.sql", "original_file_path": "models/eMERGEseq/docs/__models.yml", "unique_id": "test.ftd.not_null_eMERGEseq_ftd_familymember_id.f354eac9f2", "fqn": ["ftd", "eMERGEseq", "docs", "not_null_eMERGEseq_ftd_familymember_id"], "alias": "not_null_eMERGEseq_ftd_familymember_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1757448969.82257, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "eMERGEseq_ftd_familymember", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ftd.eMERGEseq_ftd_familymember"]}, "compiled_path": "target/compiled/ftd/models/eMERGEseq/docs/__models.yml/not_null_eMERGEseq_ftd_familymember_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"dbt\".\"main_eMERGEseq_data\".\"eMERGEseq_ftd_familymember\"\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "id", "file_key_name": "models.eMERGEseq_ftd_familymember", "attached_node": "model.ftd.eMERGEseq_ftd_familymember", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('eMERGEseq_ftd_familymember')) }}"}, "namespace": null}}}, "sources": {"source.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_participant": {"database": "dbt", "schema": "main", "name": "GREGoR_R03_HMB_20250612_participant", "resource_type": "source", "package_name": "GREGoR_R03_HMB_20250612", "path": "models/sources.yml", "original_file_path": "models/sources.yml", "unique_id": "source.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_participant", "fqn": ["GREGoR_R03_HMB_20250612", "GREGoR_R03_HMB_20250612", "GREGoR_R03_HMB_20250612_participant"], "source_name": "GREGoR_R03_HMB_20250612", "source_description": "", "loader": "", "identifier": "GREGoR_R03_HMB_20250612_participant", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Source table for GREGoR_R03_HMB_20250612_participant.", "columns": {"participant_id": {"name": "participant_id", "description": "Unique participant identifier", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "affected_status": {"name": "affected_status", "description": "Affected status of the participant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "age_at_enrollment": {"name": "age_at_enrollment", "description": "Age at enrollment in years", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "age_at_last_observation": {"name": "age_at_last_observation", "description": "Age at the last known observation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "ancestry_detail": {"name": "ancestry_detail", "description": "Detailed ancestry description", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "consent_code": {"name": "consent_code", "description": "Consent group or code for data use", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "family_id": {"name": "family_id", "description": "Family identifier", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "gregor_center": {"name": "gregor_center", "description": "GREGOR project center identifier", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "internal_project_id": {"name": "internal_project_id", "description": "Internal project identifier", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "maternal_id": {"name": "maternal_id", "description": "Maternal ID (0 if unknown)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "missing_variant_case": {"name": "missing_variant_case", "description": "Indicates if the participant is a missing variant case", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "paternal_id": {"name": "paternal_id", "description": "Paternal ID (0 if unknown)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "phenotype_description": {"name": "phenotype_description", "description": "Description of phenotype", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "pmid_id": {"name": "pmid_id", "description": "PMID of a related publication or report", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "prior_testing": {"name": "prior_testing", "description": "Indicates whether prior genetic testing was conducted", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "proband_relationship": {"name": "proband_relationship", "description": "Relationship to self (usually 'Self')", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "proband_relationship_detail": {"name": "proband_relationship_detail", "description": "Further detail on relationship to self", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "reported_ethnicity": {"name": "reported_ethnicity", "description": "Ethnicity reported by participant or caregiver", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "reported_race": {"name": "reported_race", "description": "Race reported by participant or caregiver", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "sex": {"name": "sex", "description": "Reported biological sex", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "sex_detail": {"name": "sex_detail", "description": "Additional detail about sex or gender", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "solve_status": {"name": "solve_status", "description": "Status of diagnostic resolution", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "twin_id": {"name": "twin_id", "description": "Identifier for twin if applicable", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"dbt\".\"main\".\"GREGoR_R03_HMB_20250612_participant\"", "created_at": 1757448969.8582287, "unrendered_database": null, "unrendered_schema": "main"}, "source.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_phenotype": {"database": "dbt", "schema": "main", "name": "GREGoR_R03_HMB_20250612_phenotype", "resource_type": "source", "package_name": "GREGoR_R03_HMB_20250612", "path": "models/sources.yml", "original_file_path": "models/sources.yml", "unique_id": "source.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_phenotype", "fqn": ["GREGoR_R03_HMB_20250612", "GREGoR_R03_HMB_20250612", "GREGoR_R03_HMB_20250612_phenotype"], "source_name": "GREGoR_R03_HMB_20250612", "source_description": "", "loader": "", "identifier": "GREGoR_R03_HMB_20250612_phenotype", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Source table for GREGoR_R03_HMB_20250612_phenotype.", "columns": {"phenotype_id": {"name": "phenotype_id", "description": "Unique identifier for the phenotype record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "additional_details": {"name": "additional_details", "description": "Free text field for extra phenotype information", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "additional_modifiers": {"name": "additional_modifiers", "description": "Modifiers that qualify the phenotype term", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "onset_age_range": {"name": "onset_age_range", "description": "Age range when the phenotype was observed", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "ontology": {"name": "ontology", "description": "Ontology used for the phenotype term", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "participant_id": {"name": "participant_id", "description": "Participant ID associated with the phenotype record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "presence": {"name": "presence", "description": "Indicates if the phenotype is present or absent", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "term_id": {"name": "term_id", "description": "Ontology identifier for the phenotype term", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"dbt\".\"main\".\"GREGoR_R03_HMB_20250612_phenotype\"", "created_at": 1757448969.859106, "unrendered_database": null, "unrendered_schema": "main"}, "source.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_experiment": {"database": "dbt", "schema": "main", "name": "GREGoR_R03_HMB_20250612_experiment", "resource_type": "source", "package_name": "GREGoR_R03_HMB_20250612", "path": "models/sources.yml", "original_file_path": "models/sources.yml", "unique_id": "source.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_experiment", "fqn": ["GREGoR_R03_HMB_20250612", "GREGoR_R03_HMB_20250612", "GREGoR_R03_HMB_20250612_experiment"], "source_name": "GREGoR_R03_HMB_20250612", "source_description": "", "loader": "", "identifier": "GREGoR_R03_HMB_20250612_experiment", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Source table for GREGoR_R03_HMB_20250612_experiment.", "columns": {"experiment_id": {"name": "experiment_id", "description": "table_name.experiment_id_in_table", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "id_in_table": {"name": "id_in_table", "description": "nan", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "participant_id": {"name": "participant_id", "description": "participant.participant_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "table_name": {"name": "table_name", "description": "nan", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "ingest_provenance": {"name": "ingest_provenance", "description": "nan", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"dbt\".\"main\".\"GREGoR_R03_HMB_20250612_experiment\"", "created_at": 1757448969.8592658, "unrendered_database": null, "unrendered_schema": "main"}, "source.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_anvil_project": {"database": "dbt", "schema": "main", "name": "GREGoR_R03_HMB_20250612_anvil_project", "resource_type": "source", "package_name": "GREGoR_R03_HMB_20250612", "path": "models/sources.yml", "original_file_path": "models/sources.yml", "unique_id": "source.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_anvil_project", "fqn": ["GREGoR_R03_HMB_20250612", "GREGoR_R03_HMB_20250612", "GREGoR_R03_HMB_20250612_anvil_project"], "source_name": "GREGoR_R03_HMB_20250612", "source_description": "", "loader": "", "identifier": "GREGoR_R03_HMB_20250612_anvil_project", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Source table for GREGoR_R03_HMB_20250612_anvil_project.", "columns": {"project_id": {"name": "project_id", "description": "nan", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "funded_by": {"name": "funded_by", "description": "nan", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "generated_dataset_id": {"name": "generated_dataset_id", "description": "nan", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "principal_investigator": {"name": "principal_investigator", "description": "nan", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "title": {"name": "title", "description": "nan", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "registered_identifier": {"name": "registered_identifier", "description": "nan", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "source_datarepo_row_ids": {"name": "source_datarepo_row_ids", "description": "nan", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"dbt\".\"main\".\"GREGoR_R03_HMB_20250612_anvil_project\"", "created_at": 1757448969.8594055, "unrendered_database": null, "unrendered_schema": "main"}, "source.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_participant": {"database": "dbt", "schema": "main", "name": "GREGoR_R03_GRU_20250612_participant", "resource_type": "source", "package_name": "GREGoR_R03_GRU_20250612", "path": "models/sources.yml", "original_file_path": "models/sources.yml", "unique_id": "source.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_participant", "fqn": ["GREGoR_R03_GRU_20250612", "GREGoR_R03_GRU_20250612", "GREGoR_R03_GRU_20250612_participant"], "source_name": "GREGoR_R03_GRU_20250612", "source_description": "", "loader": "", "identifier": "GREGoR_R03_GRU_20250612_participant", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Source table for GREGoR_R03_GRU_20250612_participant.", "columns": {"participant_id": {"name": "participant_id", "description": "Unique participant identifier", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "affected_status": {"name": "affected_status", "description": "Affected status of the participant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "age_at_enrollment": {"name": "age_at_enrollment", "description": "Age at enrollment in years", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "age_at_last_observation": {"name": "age_at_last_observation", "description": "Age at the last known observation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "ancestry_detail": {"name": "ancestry_detail", "description": "Detailed ancestry description", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "consent_code": {"name": "consent_code", "description": "Consent group or code for data use", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "family_id": {"name": "family_id", "description": "Family identifier", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "gregor_center": {"name": "gregor_center", "description": "GREGOR project center identifier", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "internal_project_id": {"name": "internal_project_id", "description": "Internal project identifier", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "maternal_id": {"name": "maternal_id", "description": "Maternal ID (0 if unknown)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "missing_variant_case": {"name": "missing_variant_case", "description": "Indicates if the participant is a missing variant case", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "paternal_id": {"name": "paternal_id", "description": "Paternal ID (0 if unknown)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "phenotype_description": {"name": "phenotype_description", "description": "Description of phenotype", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "pmid_id": {"name": "pmid_id", "description": "PMID of a related publication or report", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "prior_testing": {"name": "prior_testing", "description": "Indicates whether prior genetic testing was conducted", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "proband_relationship": {"name": "proband_relationship", "description": "Relationship to self (usually 'Self')", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "proband_relationship_detail": {"name": "proband_relationship_detail", "description": "Further detail on relationship to self", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "reported_ethnicity": {"name": "reported_ethnicity", "description": "Ethnicity reported by participant or caregiver", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "reported_race": {"name": "reported_race", "description": "Race reported by participant or caregiver", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "sex": {"name": "sex", "description": "Reported biological sex", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "sex_detail": {"name": "sex_detail", "description": "Additional detail about sex or gender", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "solve_status": {"name": "solve_status", "description": "Status of diagnostic resolution", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "twin_id": {"name": "twin_id", "description": "Identifier for twin if applicable", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"dbt\".\"main\".\"GREGoR_R03_GRU_20250612_participant\"", "created_at": 1757448969.8595858, "unrendered_database": null, "unrendered_schema": "main"}, "source.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_phenotype": {"database": "dbt", "schema": "main", "name": "GREGoR_R03_GRU_20250612_phenotype", "resource_type": "source", "package_name": "GREGoR_R03_GRU_20250612", "path": "models/sources.yml", "original_file_path": "models/sources.yml", "unique_id": "source.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_phenotype", "fqn": ["GREGoR_R03_GRU_20250612", "GREGoR_R03_GRU_20250612", "GREGoR_R03_GRU_20250612_phenotype"], "source_name": "GREGoR_R03_GRU_20250612", "source_description": "", "loader": "", "identifier": "GREGoR_R03_GRU_20250612_phenotype", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Source table for GREGoR_R03_GRU_20250612_phenotype.", "columns": {"phenotype_id": {"name": "phenotype_id", "description": "Unique identifier for the phenotype record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "additional_details": {"name": "additional_details", "description": "Free text field for extra phenotype information", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "additional_modifiers": {"name": "additional_modifiers", "description": "Modifiers that qualify the phenotype term", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "onset_age_range": {"name": "onset_age_range", "description": "Age range when the phenotype was observed", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "ontology": {"name": "ontology", "description": "Ontology used for the phenotype term", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "participant_id": {"name": "participant_id", "description": "Participant ID associated with the phenotype record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "presence": {"name": "presence", "description": "Indicates if the phenotype is present or absent", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "term_id": {"name": "term_id", "description": "Ontology identifier for the phenotype term", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"dbt\".\"main\".\"GREGoR_R03_GRU_20250612_phenotype\"", "created_at": 1757448969.8597276, "unrendered_database": null, "unrendered_schema": "main"}, "source.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_experiment": {"database": "dbt", "schema": "main", "name": "GREGoR_R03_GRU_20250612_experiment", "resource_type": "source", "package_name": "GREGoR_R03_GRU_20250612", "path": "models/sources.yml", "original_file_path": "models/sources.yml", "unique_id": "source.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_experiment", "fqn": ["GREGoR_R03_GRU_20250612", "GREGoR_R03_GRU_20250612", "GREGoR_R03_GRU_20250612_experiment"], "source_name": "GREGoR_R03_GRU_20250612", "source_description": "", "loader": "", "identifier": "GREGoR_R03_GRU_20250612_experiment", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Source table for GREGoR_R03_GRU_20250612_experiment.", "columns": {"experiment_id": {"name": "experiment_id", "description": "table_name.experiment_id_in_table", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "id_in_table": {"name": "id_in_table", "description": "nan", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "participant_id": {"name": "participant_id", "description": "participant.participant_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "table_name": {"name": "table_name", "description": "nan", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "ingest_provenance": {"name": "ingest_provenance", "description": "nan", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"dbt\".\"main\".\"GREGoR_R03_GRU_20250612_experiment\"", "created_at": 1757448969.8598602, "unrendered_database": null, "unrendered_schema": "main"}, "source.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_anvil_project": {"database": "dbt", "schema": "main", "name": "GREGoR_R03_GRU_20250612_anvil_project", "resource_type": "source", "package_name": "GREGoR_R03_GRU_20250612", "path": "models/sources.yml", "original_file_path": "models/sources.yml", "unique_id": "source.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_anvil_project", "fqn": ["GREGoR_R03_GRU_20250612", "GREGoR_R03_GRU_20250612", "GREGoR_R03_GRU_20250612_anvil_project"], "source_name": "GREGoR_R03_GRU_20250612", "source_description": "", "loader": "", "identifier": "GREGoR_R03_GRU_20250612_anvil_project", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Source table for GREGoR_R03_GRU_20250612_anvil_project.", "columns": {"project_id": {"name": "project_id", "description": "nan", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "funded_by": {"name": "funded_by", "description": "nan", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "generated_dataset_id": {"name": "generated_dataset_id", "description": "nan", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "principal_investigator": {"name": "principal_investigator", "description": "nan", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "title": {"name": "title", "description": "nan", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "registered_identifier": {"name": "registered_identifier", "description": "nan", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "source_datarepo_row_ids": {"name": "source_datarepo_row_ids", "description": "nan", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"dbt\".\"main\".\"GREGoR_R03_GRU_20250612_anvil_project\"", "created_at": 1757448969.8599865, "unrendered_database": null, "unrendered_schema": "main"}, "source.cmg_bh.cmg_bh.sample": {"database": "dbt", "schema": "main", "name": "sample", "resource_type": "source", "package_name": "cmg_bh", "path": "models/sources.yml", "original_file_path": "models/sources.yml", "unique_id": "source.cmg_bh.cmg_bh.sample", "fqn": ["cmg_bh", "cmg_bh", "sample"], "source_name": "cmg_bh", "source_description": "", "loader": "", "identifier": "sample", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Source table for sample.", "columns": {"sample_id": {"name": "sample_id", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "bai": {"name": "bai", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "bai_md5": {"name": "bai_md5", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "bam": {"name": "bam", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "bam_md5": {"name": "bam_md5", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "subject_id": {"name": "subject_id", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "crai": {"name": "crai", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "cram_md5": {"name": "cram_md5", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "ingest_provenance": {"name": "ingest_provenance", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "Submission_Batch": {"name": "Submission_Batch", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "dbgap_sample_id": {"name": "dbgap_sample_id", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "sample_provider": {"name": "sample_provider", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "sample_source": {"name": "sample_source", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "tissue_affected_status": {"name": "tissue_affected_status", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"dbt\".\"main\".\"sample\"", "created_at": 1757448969.8601162, "unrendered_database": null, "unrendered_schema": "main"}, "source.cmg_bh.cmg_bh.subject": {"database": "dbt", "schema": "main", "name": "subject", "resource_type": "source", "package_name": "cmg_bh", "path": "models/sources.yml", "original_file_path": "models/sources.yml", "unique_id": "source.cmg_bh.cmg_bh.subject", "fqn": ["cmg_bh", "cmg_bh", "subject"], "source_name": "cmg_bh", "source_description": "", "loader": "", "identifier": "subject", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Source table for subject.", "columns": {"subject_id": {"name": "subject_id", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "submission_batch": {"name": "submission_batch", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "affected_status": {"name": "affected_status", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "ancestry": {"name": "ancestry", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "dbgap_study_id": {"name": "dbgap_study_id", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "dbgap_submission": {"name": "dbgap_submission", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "family_id": {"name": "family_id", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "family_relationship": {"name": "family_relationship", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "hpo_present": {"name": "hpo_present", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "maternal_id": {"name": "maternal_id", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "multiple_datasets": {"name": "multiple_datasets", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "paternal_id": {"name": "paternal_id", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "phenotype_description": {"name": "phenotype_description", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "phenotype_group": {"name": "phenotype_group", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "project_investigator": {"name": "project_investigator", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "sex": {"name": "sex", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "solve_state": {"name": "solve_state", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "disease_id": {"name": "disease_id", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "ancestry_detail": {"name": "ancestry_detail", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "hpo_absent": {"name": "hpo_absent", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "twin_id": {"name": "twin_id", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "ingest_provenance": {"name": "ingest_provenance", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"dbt\".\"main\".\"subject\"", "created_at": 1757448969.8602514, "unrendered_database": null, "unrendered_schema": "main"}, "source.GWAS.GWAS.GWAS_BMI_DS_20201028": {"database": "dbt", "schema": "main", "name": "GWAS_BMI_DS_20201028", "resource_type": "source", "package_name": "GWAS", "path": "models/sources.yml", "original_file_path": "models/sources.yml", "unique_id": "source.GWAS.GWAS.GWAS_BMI_DS_20201028", "fqn": ["GWAS", "GWAS", "GWAS_BMI_DS_20201028"], "source_name": "GWAS", "source_description": "", "loader": "", "identifier": "GWAS_BMI_DS_20201028", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Source table for GWAS_BMI_DS_20201028.", "columns": {"subject_id": {"name": "subject_id", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "bmi_observation_age": {"name": "bmi_observation_age", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "weight": {"name": "weight", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "height": {"name": "height", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "body_mass_index": {"name": "body_mass_index", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "visit_number": {"name": "visit_number", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"dbt\".\"main\".\"GWAS_BMI_DS_20201028\"", "created_at": 1757448969.8603642, "unrendered_database": null, "unrendered_schema": "main"}, "source.GWAS.GWAS.GWAS_Demographics_DS_20201109": {"database": "dbt", "schema": "main", "name": "GWAS_Demographics_DS_20201109", "resource_type": "source", "package_name": "GWAS", "path": "models/sources.yml", "original_file_path": "models/sources.yml", "unique_id": "source.GWAS.GWAS.GWAS_Demographics_DS_20201109", "fqn": ["GWAS", "GWAS", "GWAS_Demographics_DS_20201109"], "source_name": "GWAS", "source_description": "", "loader": "", "identifier": "GWAS_Demographics_DS_20201109", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Source table for GWAS_Demographics_DS_20201109.", "columns": {"subject_id": {"name": "subject_id", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "decade_birth": {"name": "decade_birth", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "year_birth": {"name": "year_birth", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "sex": {"name": "sex", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "race": {"name": "race", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "ethnicity": {"name": "ethnicity", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"dbt\".\"main\".\"GWAS_Demographics_DS_20201109\"", "created_at": 1757448969.8604834, "unrendered_database": null, "unrendered_schema": "main"}, "source.GWAS.GWAS.GWAS_Pedigree_DS_20200512": {"database": "dbt", "schema": "main", "name": "GWAS_Pedigree_DS_20200512", "resource_type": "source", "package_name": "GWAS", "path": "models/sources.yml", "original_file_path": "models/sources.yml", "unique_id": "source.GWAS.GWAS.GWAS_Pedigree_DS_20200512", "fqn": ["GWAS", "GWAS", "GWAS_Pedigree_DS_20200512"], "source_name": "GWAS", "source_description": "", "loader": "", "identifier": "GWAS_Pedigree_DS_20200512", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Source table for GWAS_Pedigree_DS_20200512.", "columns": {"family_id": {"name": "family_id", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "subject_id": {"name": "subject_id", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "mother": {"name": "mother", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "father": {"name": "father", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "sex": {"name": "sex", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "mz_twin_id": {"name": "mz_twin_id", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"dbt\".\"main\".\"GWAS_Pedigree_DS_20200512\"", "created_at": 1757448969.860597, "unrendered_database": null, "unrendered_schema": "main"}, "source.GWAS.GWAS.GWAS_Phecode_DS_20201027": {"database": "dbt", "schema": "main", "name": "GWAS_Phecode_DS_20201027", "resource_type": "source", "package_name": "GWAS", "path": "models/sources.yml", "original_file_path": "models/sources.yml", "unique_id": "source.GWAS.GWAS.GWAS_Phecode_DS_20201027", "fqn": ["GWAS", "GWAS", "GWAS_Phecode_DS_20201027"], "source_name": "GWAS", "source_description": "", "loader": "", "identifier": "GWAS_Phecode_DS_20201027", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Source table for GWAS_Phecode_DS_20201027.", "columns": {"subject_id": {"name": "subject_id", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "age_at_observation": {"name": "age_at_observation", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "icd_code": {"name": "icd_code", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "icd_flag": {"name": "icd_flag", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "phecode": {"name": "phecode", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"dbt\".\"main\".\"GWAS_Phecode_DS_20201027\"", "created_at": 1757448969.8607018, "unrendered_database": null, "unrendered_schema": "main"}, "source.GWAS.GWAS.GWAS_SampleAttributes_DS_20201027": {"database": "dbt", "schema": "main", "name": "GWAS_SampleAttributes_DS_20201027", "resource_type": "source", "package_name": "GWAS", "path": "models/sources.yml", "original_file_path": "models/sources.yml", "unique_id": "source.GWAS.GWAS.GWAS_SampleAttributes_DS_20201027", "fqn": ["GWAS", "GWAS", "GWAS_SampleAttributes_DS_20201027"], "source_name": "GWAS", "source_description": "", "loader": "", "identifier": "GWAS_SampleAttributes_DS_20201027", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Source table for GWAS_SampleAttributes_DS_20201027.", "columns": {"sample_id": {"name": "sample_id", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "analyte_type": {"name": "analyte_type", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"dbt\".\"main\".\"GWAS_SampleAttributes_DS_20201027\"", "created_at": 1757448969.8608031, "unrendered_database": null, "unrendered_schema": "main"}, "source.GWAS.GWAS.GWAS_SampleSubjectMapping_DS_20201027": {"database": "dbt", "schema": "main", "name": "GWAS_SampleSubjectMapping_DS_20201027", "resource_type": "source", "package_name": "GWAS", "path": "models/sources.yml", "original_file_path": "models/sources.yml", "unique_id": "source.GWAS.GWAS.GWAS_SampleSubjectMapping_DS_20201027", "fqn": ["GWAS", "GWAS", "GWAS_SampleSubjectMapping_DS_20201027"], "source_name": "GWAS", "source_description": "", "loader": "", "identifier": "GWAS_SampleSubjectMapping_DS_20201027", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Source table for GWAS_SampleSubjectMapping_DS_20201027.", "columns": {"subject_id": {"name": "subject_id", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "sample_id": {"name": "sample_id", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "samp_source": {"name": "samp_source", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "source_sampid": {"name": "source_sampid", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"dbt\".\"main\".\"GWAS_SampleSubjectMapping_DS_20201027\"", "created_at": 1757448969.8609066, "unrendered_database": null, "unrendered_schema": "main"}, "source.GWAS.GWAS.GWAS_SubjectConsent_DS_20190813": {"database": "dbt", "schema": "main", "name": "GWAS_SubjectConsent_DS_20190813", "resource_type": "source", "package_name": "GWAS", "path": "models/sources.yml", "original_file_path": "models/sources.yml", "unique_id": "source.GWAS.GWAS.GWAS_SubjectConsent_DS_20190813", "fqn": ["GWAS", "GWAS", "GWAS_SubjectConsent_DS_20190813"], "source_name": "GWAS", "source_description": "", "loader": "", "identifier": "GWAS_SubjectConsent_DS_20190813", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Source table for GWAS_SubjectConsent_DS_20190813.", "columns": {"subject_id": {"name": "subject_id", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "consent": {"name": "consent", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "subject_source": {"name": "subject_source", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "source_subject_id": {"name": "source_subject_id", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"dbt\".\"main\".\"GWAS_SubjectConsent_DS_20190813\"", "created_at": 1757448969.8610098, "unrendered_database": null, "unrendered_schema": "main"}, "source.gregor_synthetic.gregor_synthetic.GREGoR_synthetic_participant_revised07Aug2024": {"database": "dbt", "schema": "main", "name": "GREGoR_synthetic_participant_revised07Aug2024", "resource_type": "source", "package_name": "gregor_synthetic", "path": "models/sources.yml", "original_file_path": "models/sources.yml", "unique_id": "source.gregor_synthetic.gregor_synthetic.GREGoR_synthetic_participant_revised07Aug2024", "fqn": ["gregor_synthetic", "gregor_synthetic", "GREGoR_synthetic_participant_revised07Aug2024"], "source_name": "gregor_synthetic", "source_description": "", "loader": "", "identifier": "GREGoR_synthetic_participant_revised07Aug2024", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Source table for GREGoR_synthetic_participant_revised07Aug2024.", "columns": {"participant_id": {"name": "participant_id", "description": "Unique participant identifier", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "affected_status": {"name": "affected_status", "description": "Affected status of the participant", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "age_at_enrollment": {"name": "age_at_enrollment", "description": "Age at enrollment in years", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "age_at_last_observation": {"name": "age_at_last_observation", "description": "Age at the last known observation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "ancestry_detail": {"name": "ancestry_detail", "description": "Detailed ancestry description", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "consent_code": {"name": "consent_code", "description": "Consent group or code for data use", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "family_id": {"name": "family_id", "description": "Family identifier", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "gregor_center": {"name": "gregor_center", "description": "GREGOR project center identifier", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "internal_project_id": {"name": "internal_project_id", "description": "Internal project identifier", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "maternal_id": {"name": "maternal_id", "description": "Maternal ID (0 if unknown)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "missing_variant_case": {"name": "missing_variant_case", "description": "Indicates if the participant is a missing variant case", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "paternal_id": {"name": "paternal_id", "description": "Paternal ID (0 if unknown)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "phenotype_description": {"name": "phenotype_description", "description": "Description of phenotype", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "pmid_id": {"name": "pmid_id", "description": "PMID of a related publication or report", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "prior_testing": {"name": "prior_testing", "description": "Indicates whether prior genetic testing was conducted", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "proband_relationship": {"name": "proband_relationship", "description": "Relationship to self (usually 'Self')", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "proband_relationship_detail": {"name": "proband_relationship_detail", "description": "Further detail on relationship to self", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "reported_ethnicity": {"name": "reported_ethnicity", "description": "Ethnicity reported by participant or caregiver", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "reported_race": {"name": "reported_race", "description": "Race reported by participant or caregiver", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "sex": {"name": "sex", "description": "Reported biological sex", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "sex_detail": {"name": "sex_detail", "description": "Additional detail about sex or gender", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "solve_status": {"name": "solve_status", "description": "Status of diagnostic resolution", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "twin_id": {"name": "twin_id", "description": "Identifier for twin if applicable", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"dbt\".\"main\".\"GREGoR_synthetic_participant_revised07Aug2024\"", "created_at": 1757448969.8611438, "unrendered_database": null, "unrendered_schema": "main"}, "source.gregor_synthetic.gregor_synthetic.GREGoR_synthetic_phenotype": {"database": "dbt", "schema": "main", "name": "GREGoR_synthetic_phenotype", "resource_type": "source", "package_name": "gregor_synthetic", "path": "models/sources.yml", "original_file_path": "models/sources.yml", "unique_id": "source.gregor_synthetic.gregor_synthetic.GREGoR_synthetic_phenotype", "fqn": ["gregor_synthetic", "gregor_synthetic", "GREGoR_synthetic_phenotype"], "source_name": "gregor_synthetic", "source_description": "", "loader": "", "identifier": "GREGoR_synthetic_phenotype", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Source table for GREGoR_synthetic_phenotype.", "columns": {"phenotype_id": {"name": "phenotype_id", "description": "Unique identifier for the phenotype record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "additional_details": {"name": "additional_details", "description": "Free text field for extra phenotype information", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "additional_modifiers": {"name": "additional_modifiers", "description": "Modifiers that qualify the phenotype term", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "onset_age_range": {"name": "onset_age_range", "description": "Age range when the phenotype was observed", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "ontology": {"name": "ontology", "description": "Ontology used for the phenotype term", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "participant_id": {"name": "participant_id", "description": "Participant ID associated with the phenotype record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "presence": {"name": "presence", "description": "Indicates if the phenotype is present or absent", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "term_id": {"name": "term_id", "description": "Ontology identifier for the phenotype term", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"dbt\".\"main\".\"GREGoR_synthetic_phenotype\"", "created_at": 1757448969.861248, "unrendered_database": null, "unrendered_schema": "main"}, "source.eMERGEseq.eMERGEseq.eMERGEseq_Demographics_DS_20200925": {"database": "dbt", "schema": "main", "name": "eMERGEseq_Demographics_DS_20200925", "resource_type": "source", "package_name": "eMERGEseq", "path": "models/sources.yml", "original_file_path": "models/sources.yml", "unique_id": "source.eMERGEseq.eMERGEseq.eMERGEseq_Demographics_DS_20200925", "fqn": ["eMERGEseq", "eMERGEseq", "eMERGEseq_Demographics_DS_20200925"], "source_name": "eMERGEseq", "source_description": "", "loader": "", "identifier": "eMERGEseq_Demographics_DS_20200925", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Source table for eMERGEseq_Demographics_DS_20200925.", "columns": {"subject_id": {"name": "subject_id", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "sex": {"name": "sex", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "decade_birth": {"name": "decade_birth", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "year_birth": {"name": "year_birth", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "ethnicity": {"name": "ethnicity", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "race": {"name": "race", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"dbt\".\"main\".\"eMERGEseq_Demographics_DS_20200925\"", "created_at": 1757448969.86135, "unrendered_database": null, "unrendered_schema": "main"}, "source.eMERGEseq.eMERGEseq.eMERGEseq_Phecode_DS_20200925": {"database": "dbt", "schema": "main", "name": "eMERGEseq_Phecode_DS_20200925", "resource_type": "source", "package_name": "eMERGEseq", "path": "models/sources.yml", "original_file_path": "models/sources.yml", "unique_id": "source.eMERGEseq.eMERGEseq.eMERGEseq_Phecode_DS_20200925", "fqn": ["eMERGEseq", "eMERGEseq", "eMERGEseq_Phecode_DS_20200925"], "source_name": "eMERGEseq", "source_description": "", "loader": "", "identifier": "eMERGEseq_Phecode_DS_20200925", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Source table for eMERGEseq_Phecode_DS_20200925.", "columns": {"subject_id": {"name": "subject_id", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "PHE_401.1": {"name": "PHE_401.1", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "PHE_250.2": {"name": "PHE_250.2", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "PHE_272.1": {"name": "PHE_272.1", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "PHE_411.4": {"name": "PHE_411.4", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "PHE_495": {"name": "PHE_495", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "PHE_427.21": {"name": "PHE_427.21", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "PHE_530.11": {"name": "PHE_530.11", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "PHE_296.22": {"name": "PHE_296.22", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "PHE_313.1": {"name": "PHE_313.1", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "PHE_244.4": {"name": "PHE_244.4", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "PHE_476": {"name": "PHE_476", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "PHE_272.11": {"name": "PHE_272.11", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "PHE_278.1": {"name": "PHE_278.1", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "PHE_174.11": {"name": "PHE_174.11", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "PHE_296.2": {"name": "PHE_296.2", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "PHE_306": {"name": "PHE_306", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "PHE_327.32": {"name": "PHE_327.32", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "PHE_313.3": {"name": "PHE_313.3", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "PHE_278.11": {"name": "PHE_278.11", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "PHE_272.13": {"name": "PHE_272.13", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "PHE_587": {"name": "PHE_587", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"dbt\".\"main\".\"eMERGEseq_Phecode_DS_20200925\"", "created_at": 1757448969.8614674, "unrendered_database": null, "unrendered_schema": "main"}, "source.eMERGEseq.eMERGEseq.eMERGEseq_SampleAttributes_DS_20200925": {"database": "dbt", "schema": "main", "name": "eMERGEseq_SampleAttributes_DS_20200925", "resource_type": "source", "package_name": "eMERGEseq", "path": "models/sources.yml", "original_file_path": "models/sources.yml", "unique_id": "source.eMERGEseq.eMERGEseq.eMERGEseq_SampleAttributes_DS_20200925", "fqn": ["eMERGEseq", "eMERGEseq", "eMERGEseq_SampleAttributes_DS_20200925"], "source_name": "eMERGEseq", "source_description": "", "loader": "", "identifier": "eMERGEseq_SampleAttributes_DS_20200925", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Source table for eMERGEseq_SampleAttributes_DS_20200925.", "columns": {"sample_id": {"name": "sample_id", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "analyte_type": {"name": "analyte_type", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "sequencing_center": {"name": "sequencing_center", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"dbt\".\"main\".\"eMERGEseq_SampleAttributes_DS_20200925\"", "created_at": 1757448969.8615801, "unrendered_database": null, "unrendered_schema": "main"}, "source.eMERGEseq.eMERGEseq.eMERGEseq_SampleSubjectMapping_DS_20200925": {"database": "dbt", "schema": "main", "name": "eMERGEseq_SampleSubjectMapping_DS_20200925", "resource_type": "source", "package_name": "eMERGEseq", "path": "models/sources.yml", "original_file_path": "models/sources.yml", "unique_id": "source.eMERGEseq.eMERGEseq.eMERGEseq_SampleSubjectMapping_DS_20200925", "fqn": ["eMERGEseq", "eMERGEseq", "eMERGEseq_SampleSubjectMapping_DS_20200925"], "source_name": "eMERGEseq", "source_description": "", "loader": "", "identifier": "eMERGEseq_SampleSubjectMapping_DS_20200925", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Source table for eMERGEseq_SampleSubjectMapping_DS_20200925.", "columns": {"subject_id": {"name": "subject_id", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "sample_id": {"name": "sample_id", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "sample_source": {"name": "sample_source", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"dbt\".\"main\".\"eMERGEseq_SampleSubjectMapping_DS_20200925\"", "created_at": 1757448969.8616765, "unrendered_database": null, "unrendered_schema": "main"}, "source.eMERGEseq.eMERGEseq.eMERGEseq_SubjectConsent_DS_20201020": {"database": "dbt", "schema": "main", "name": "eMERGEseq_SubjectConsent_DS_20201020", "resource_type": "source", "package_name": "eMERGEseq", "path": "models/sources.yml", "original_file_path": "models/sources.yml", "unique_id": "source.eMERGEseq.eMERGEseq.eMERGEseq_SubjectConsent_DS_20201020", "fqn": ["eMERGEseq", "eMERGEseq", "eMERGEseq_SubjectConsent_DS_20201020"], "source_name": "eMERGEseq", "source_description": "", "loader": "", "identifier": "eMERGEseq_SubjectConsent_DS_20201020", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Source table for eMERGEseq_SubjectConsent_DS_20201020.", "columns": {"subject_id": {"name": "subject_id", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "consent": {"name": "consent", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "subject_source": {"name": "subject_source", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"dbt\".\"main\".\"eMERGEseq_SubjectConsent_DS_20201020\"", "created_at": 1757448969.8617952, "unrendered_database": null, "unrendered_schema": "main"}, "source.eMERGEseq.eMERGEseq.eMERGEseq_BMI_DS_20200925": {"database": "dbt", "schema": "main", "name": "eMERGEseq_BMI_DS_20200925", "resource_type": "source", "package_name": "eMERGEseq", "path": "models/sources.yml", "original_file_path": "models/sources.yml", "unique_id": "source.eMERGEseq.eMERGEseq.eMERGEseq_BMI_DS_20200925", "fqn": ["eMERGEseq", "eMERGEseq", "eMERGEseq_BMI_DS_20200925"], "source_name": "eMERGEseq", "source_description": "", "loader": "", "identifier": "eMERGEseq_BMI_DS_20200925", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Source table for eMERGEseq_BMI_DS_20200925.", "columns": {"subject_id": {"name": "subject_id", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "age_at_observation": {"name": "age_at_observation", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "weight": {"name": "weight", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "height": {"name": "height", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "body_mass_index": {"name": "body_mass_index", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "visit_number": {"name": "visit_number", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"dbt\".\"main\".\"eMERGEseq_BMI_DS_20200925\"", "created_at": 1757448969.8639376, "unrendered_database": null, "unrendered_schema": "main"}, "source.eMERGEseq.eMERGEseq.eMERGEseq_Pedigree_DS_20200925": {"database": "dbt", "schema": "main", "name": "eMERGEseq_Pedigree_DS_20200925", "resource_type": "source", "package_name": "eMERGEseq", "path": "models/sources.yml", "original_file_path": "models/sources.yml", "unique_id": "source.eMERGEseq.eMERGEseq.eMERGEseq_Pedigree_DS_20200925", "fqn": ["eMERGEseq", "eMERGEseq", "eMERGEseq_Pedigree_DS_20200925"], "source_name": "eMERGEseq", "source_description": "", "loader": "", "identifier": "eMERGEseq_Pedigree_DS_20200925", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Source table for eMERGEseq_Pedigree_DS_20200925.", "columns": {"family_id": {"name": "family_id", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "subject_id": {"name": "subject_id", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "mother": {"name": "mother", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "father": {"name": "father", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "sex": {"name": "sex", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}, "mz_twin_id": {"name": "mz_twin_id", "description": "None", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": [], "granularity": null}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"dbt\".\"main\".\"eMERGEseq_Pedigree_DS_20200925\"", "created_at": 1757448969.864265, "unrendered_database": null, "unrendered_schema": "main"}}, "macros": {"macro.base.generate_uuid_key": {"name": "generate_uuid_key", "resource_type": "macro", "package_name": "base", "path": "macros/generate_uuid_key.sql", "original_file_path": "macros/generate_uuid_key.sql", "unique_id": "macro.base.generate_uuid_key", "macro_sql": "{% macro generate_uuid_key(prefix='') %}\n    /* \n        This macro generates the sql required to create a primary or foreign key\n        by the uuid method, similar to the process used in locutus.\n\n        Example usage, lacking double brackets:\n            generate_uuid_key(\"p\")\n        generates the following sql\n            lower(substr(encode(md5(uuid()), 'hex'), 1, 21))\n        results in an id with the following format\n            p-92d21b1e2e0bb57c8409b\n            p-{nanoid like id: URL-safe, encoded, random hex string, limited to 21 char)\n    */\n\n    {{\n        \"'\" ~ prefix ~ \"-' || lower(\" ~\n        \"replace(replace(replace(substr(to_base64(from_hex(md5(uuid()::text))), 1, 21), '/', '_'), '+', '-'), '=', '')\" ~\n        \")\"\n    }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.6671116, "supported_languages": null}, "macro.base.table_delete_from_db": {"name": "table_delete_from_db", "resource_type": "macro", "package_name": "base", "path": "macros/table_delete_from_db.sql", "original_file_path": "macros/table_delete_from_db.sql", "unique_id": "macro.base.table_delete_from_db", "macro_sql": "{% macro table_delete_from_db(fq_drop_list=[]) %}\n  {% for obj in fq_drop_list %}\n    {% do log(\"Dropping: \" ~ obj, info=True) %}\n    {% do adapter.execute(\"DROP TABLE IF EXISTS \" ~ obj ~ \" CASCADE\") %}\n  {% endfor %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.6676624, "supported_languages": null}, "macro.base.run_sql": {"name": "run_sql", "resource_type": "macro", "package_name": "base", "path": "macros/run_sql.sql", "original_file_path": "macros/run_sql.sql", "unique_id": "macro.base.run_sql", "macro_sql": "{% macro run_sql(sql) %}\n    {% do run_query(sql) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.6678703, "supported_languages": null}, "macro.base.get_columns": {"name": "get_columns", "resource_type": "macro", "package_name": "base", "path": "macros/get_columns.sql", "original_file_path": "macros/get_columns.sql", "unique_id": "macro.base.get_columns", "macro_sql": "{% macro get_columns(relation, exclude=[]) %}\n  {{ return(dbt_utils.get_filtered_columns_in_relation(\n    from=relation,\n    except=exclude\n  )) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.get_filtered_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.668223, "supported_languages": null}, "macro.base.register_external_sources": {"name": "register_external_sources", "resource_type": "macro", "package_name": "base", "path": "macros/register_external_sources.sql", "original_file_path": "macros/register_external_sources.sql", "unique_id": "macro.base.register_external_sources", "macro_sql": "{% macro register_external_sources(fq_tablename, csv_path) %}\n    {% do adapter.execute(\"CREATE SCHEMA IF NOT EXISTS \" ~ fq_tablename ~ \";\") %}\n    {% do adapter.execute(\"CREATE OR REPLACE VIEW \" ~ fq_tablename ~ \" AS SELECT * FROM read_csv_auto('\" ~ csv_path ~ \"');\") %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.6685772, "supported_languages": null}, "macro.base.generate_global_id": {"name": "generate_global_id", "resource_type": "macro", "package_name": "base", "path": "macros/generate_global_id.sql", "original_file_path": "macros/generate_global_id.sql", "unique_id": "macro.base.generate_global_id", "macro_sql": "{%- macro generate_global_id(prefix='', descriptor=[], study_id='') -%}\n    {%- set formatted_columns = [] -%}\n    {%- for col in descriptor -%}\n        {%- do formatted_columns.append(\"'\" ~ study_id ~ \"'\") -%}\n        {%- do formatted_columns.append(\"cast(coalesce(\" ~ col ~ \", '') as text)\") -%}\n    {%- endfor -%}\n{{\n    \"'\" ~ prefix ~ \"' || '_' || md5(\" ~ formatted_columns | join(\" || '|' || \") ~ \")\"\n}}\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.669143, "supported_languages": null}, "macro.base.clean_codes": {"name": "clean_codes", "resource_type": "macro", "package_name": "base", "path": "macros/clean_codes.sql", "original_file_path": "macros/clean_codes.sql", "unique_id": "macro.base.clean_codes", "macro_sql": "{%- macro clean_codes(column_name, expected_prefixes, sp_chars) -%}\n  {%- set ns = namespace(expr=column_name) -%}\n  {%- for prefix in expected_prefixes -%}\n    {%- set ns.expr = \"replace(\" ~ ns.expr ~ \", '\" ~ prefix ~ \"', '|\" ~ prefix ~ \"')\" -%}\n  {%- endfor -%}\n  {%- set chars_to_remove = sp_chars | join('') -%}\n(\n    select string_agg(distinct trim(code), '|' order by trim(code))\n    from (\n        select unnest(string_to_array(trim(both '|' \n        from translate({{ ns.expr }}, '{{ chars_to_remove }}', '')),'|')) as code\n        ) as split_codes\n    where code is not null and length(trim(code)) > 0\n)\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.6697536, "supported_languages": null}, "macro.base.view_delete_from_db": {"name": "view_delete_from_db", "resource_type": "macro", "package_name": "base", "path": "macros/view_delete_from_db copy.sql", "original_file_path": "macros/view_delete_from_db copy.sql", "unique_id": "macro.base.view_delete_from_db", "macro_sql": "{% macro view_delete_from_db(fq_drop_list=[]) %}\n  {% for obj in fq_drop_list %}\n    {% do log(\"Dropping: \" ~ obj, info=True) %}\n    {% do adapter.execute(\"DROP VIEW IF EXISTS \" ~ obj ~ \" CASCADE\") %}\n  {% endfor %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.670142, "supported_languages": null}, "macro.dbt_duckdb.duckdb__alter_relation_add_remove_columns": {"name": "duckdb__alter_relation_add_remove_columns", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/columns.sql", "original_file_path": "macros/columns.sql", "unique_id": "macro.dbt_duckdb.duckdb__alter_relation_add_remove_columns", "macro_sql": "{% macro duckdb__alter_relation_add_remove_columns(relation, add_columns, remove_columns) %}\n\n  {% if add_columns %}\n    {% for column in add_columns %}\n      {% set sql -%}\n         alter {{ relation.type }} {{ relation }} add column\n           {{ column.name }} {{ column.data_type }}\n      {%- endset -%}\n      {% do run_query(sql) %}\n    {% endfor %}\n  {% endif %}\n\n  {% if remove_columns %}\n    {% for column in remove_columns %}\n      {% set sql -%}\n        alter {{ relation.type }} {{ relation }} drop column\n          {{ column.name }}\n      {%- endset -%}\n      {% do run_query(sql) %}\n    {% endfor %}\n  {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.6709936, "supported_languages": null}, "macro.dbt_duckdb.duckdb__get_delete_insert_merge_sql": {"name": "duckdb__get_delete_insert_merge_sql", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/incremental_helper.sql", "original_file_path": "macros/incremental_helper.sql", "unique_id": "macro.dbt_duckdb.duckdb__get_delete_insert_merge_sql", "macro_sql": "{% macro duckdb__get_delete_insert_merge_sql(target, source, unique_key, dest_columns, incremental_predicates) -%}\n\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n\n    {% if unique_key %}\n        {% if unique_key is sequence and unique_key is not string %}\n            delete from {{target }} as DBT_INCREMENTAL_TARGET\n            using {{ source }}\n            where (\n                {% for key in unique_key %}\n                    {{ source }}.{{ key }} = DBT_INCREMENTAL_TARGET.{{ key }}\n                    {{ \"and \" if not loop.last}}\n                {% endfor %}\n                {% if incremental_predicates %}\n                    {% for predicate in incremental_predicates %}\n                        and {{ predicate }}\n                    {% endfor %}\n                {% endif %}\n            );\n        {% else %}\n            delete from {{ target }}\n            where (\n                {{ unique_key }}) in (\n                select ({{ unique_key }})\n                from {{ source }}\n            )\n            {%- if incremental_predicates %}\n                {% for predicate in incremental_predicates %}\n                    and {{ predicate }}\n                {% endfor %}\n            {%- endif -%};\n\n        {% endif %}\n    {% endif %}\n\n    insert into {{ target }} ({{ dest_cols_csv }})\n    (\n        select {{ dest_cols_csv }}\n        from {{ source }}\n    )\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.672274, "supported_languages": null}, "macro.dbt_duckdb.duckdb__get_catalog": {"name": "duckdb__get_catalog", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/catalog.sql", "original_file_path": "macros/catalog.sql", "unique_id": "macro.dbt_duckdb.duckdb__get_catalog", "macro_sql": "{% macro duckdb__get_catalog(information_schema, schemas) -%}\n  {%- call statement('catalog', fetch_result=True) -%}\n    with relations AS (\n      select\n        t.table_name\n        , t.database_name\n        , t.schema_name\n        , 'BASE TABLE' as table_type\n        , {{ adapter.catalog_comment('t') }} as table_comment\n      from duckdb_tables() t\n      WHERE t.database_name = '{{ database }}'\n      UNION ALL\n      SELECT v.view_name as table_name\n      , v.database_name\n      , v.schema_name\n      , 'VIEW' as table_type\n      , {{ adapter.catalog_comment('v') }} as table_comment\n      from duckdb_views() v\n      WHERE v.database_name = '{{ database }}'\n    )\n    select\n        '{{ database }}' as table_database,\n        r.schema_name as table_schema,\n        r.table_name,\n        r.table_type,\n        r.table_comment,\n        c.column_name,\n        c.column_index as column_index,\n        c.data_type as column_type,\n        {{ adapter.catalog_comment('c') }} as column_comment,\n        '' as table_owner\n    FROM relations r JOIN duckdb_columns() c ON r.schema_name = c.schema_name AND r.table_name = c.table_name\n    WHERE (\n        {%- for schema in schemas -%}\n          upper(r.schema_name) = upper('{{ schema }}'){%- if not loop.last %} or {% endif -%}\n        {%- endfor -%}\n    )\n    ORDER BY\n        r.schema_name,\n        r.table_name,\n        c.column_index\n  {%- endcall -%}\n  {{ return(load_result('catalog').table) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.6731713, "supported_languages": null}, "macro.dbt_duckdb.duckdb__get_binding_char": {"name": "duckdb__get_binding_char", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/seed.sql", "original_file_path": "macros/seed.sql", "unique_id": "macro.dbt_duckdb.duckdb__get_binding_char", "macro_sql": "{% macro duckdb__get_binding_char() %}\n  {{ return(adapter.get_binding_char()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.6738002, "supported_languages": null}, "macro.dbt_duckdb.duckdb__get_batch_size": {"name": "duckdb__get_batch_size", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/seed.sql", "original_file_path": "macros/seed.sql", "unique_id": "macro.dbt_duckdb.duckdb__get_batch_size", "macro_sql": "{% macro duckdb__get_batch_size() %}\n  {{ return(10000) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.6739295, "supported_languages": null}, "macro.dbt_duckdb.duckdb__load_csv_rows": {"name": "duckdb__load_csv_rows", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/seed.sql", "original_file_path": "macros/seed.sql", "unique_id": "macro.dbt_duckdb.duckdb__load_csv_rows", "macro_sql": "{% macro duckdb__load_csv_rows(model, agate_table) %}\n    {% if config.get('fast', true) %}\n        {% set seed_file_path = adapter.get_seed_file_path(model) %}\n        {% set delimiter = config.get('delimiter', ',') %}\n        {% set sql %}\n          COPY {{ this.render() }} FROM '{{ seed_file_path }}' (FORMAT CSV, HEADER TRUE, DELIMITER '{{ delimiter }}')\n        {% endset %}\n        {% do adapter.add_query(sql, abridge_sql_log=True) %}\n        {{ return(sql) }}\n    {% endif %}\n\n    {% set batch_size = get_batch_size() %}\n    {% set agate_table = adapter.convert_datetimes_to_strs(agate_table) %}\n    {% set cols_sql = get_seed_column_quoted_csv(model, agate_table.column_names) %}\n    {% set bindings = [] %}\n\n    {% set statements = [] %}\n\n    {% for chunk in agate_table.rows | batch(batch_size) %}\n        {% set bindings = [] %}\n\n        {% for row in chunk %}\n            {% do bindings.extend(row) %}\n        {% endfor %}\n\n        {% set sql %}\n            insert into {{ this.render() }} ({{ cols_sql }}) values\n            {% for row in chunk -%}\n                ({%- for column in agate_table.column_names -%}\n                    {{ get_binding_char() }}\n                    {%- if not loop.last%},{%- endif %}\n                {%- endfor -%})\n                {%- if not loop.last%},{%- endif %}\n            {%- endfor %}\n        {% endset %}\n\n        {% do adapter.add_query(sql, bindings=bindings, abridge_sql_log=True) %}\n\n        {% if loop.index0 == 0 %}\n            {% do statements.append(sql) %}\n        {% endif %}\n    {% endfor %}\n\n    {# Return SQL so we can render it out into the compiled files #}\n    {{ return(statements[0]) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_batch_size", "macro.dbt.get_seed_column_quoted_csv", "macro.dbt.get_binding_char"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.67569, "supported_languages": null}, "macro.dbt_duckdb.duckdb__snapshot_merge_sql": {"name": "duckdb__snapshot_merge_sql", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/snapshot_helper.sql", "original_file_path": "macros/snapshot_helper.sql", "unique_id": "macro.dbt_duckdb.duckdb__snapshot_merge_sql", "macro_sql": "{% macro duckdb__snapshot_merge_sql(target, source, insert_cols) -%}\n    {%- set insert_cols_csv = insert_cols | join(', ') -%}\n\n    {%- set columns = config.get(\"snapshot_table_column_names\") or get_snapshot_table_column_names() -%}\n\n    update {{ target }} as DBT_INTERNAL_TARGET\n    set {{ columns.dbt_valid_to }} = DBT_INTERNAL_SOURCE.{{ columns.dbt_valid_to }}\n    from {{ source }} as DBT_INTERNAL_SOURCE\n    where DBT_INTERNAL_SOURCE.{{ columns.dbt_scd_id }}::text = DBT_INTERNAL_TARGET.{{ columns.dbt_scd_id }}::text\n      and DBT_INTERNAL_SOURCE.dbt_change_type::text in ('update'::text, 'delete'::text)\n      {% if config.get(\"dbt_valid_to_current\") %}\n        and (DBT_INTERNAL_TARGET.{{ columns.dbt_valid_to }} = {{ config.get('dbt_valid_to_current') }} or DBT_INTERNAL_TARGET.{{ columns.dbt_valid_to }} is null);\n      {% else %}\n        and DBT_INTERNAL_TARGET.{{ columns.dbt_valid_to }} is null;\n      {% endif %}\n\n    insert into {{ target }} ({{ insert_cols_csv }})\n    select {% for column in insert_cols -%}\n        DBT_INTERNAL_SOURCE.{{ column }} {%- if not loop.last %}, {%- endif %}\n    {%- endfor %}\n    from {{ source }} as DBT_INTERNAL_SOURCE\n    where DBT_INTERNAL_SOURCE.dbt_change_type::text = 'insert'::text;\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_snapshot_table_column_names"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.6770601, "supported_languages": null}, "macro.dbt_duckdb.build_snapshot_staging_table": {"name": "build_snapshot_staging_table", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/snapshot_helper.sql", "original_file_path": "macros/snapshot_helper.sql", "unique_id": "macro.dbt_duckdb.build_snapshot_staging_table", "macro_sql": "{% macro build_snapshot_staging_table(strategy, sql, target_relation) %}\n    {% set temp_relation = make_temp_relation(target_relation) %}\n\n    {% set select = snapshot_staging_table(strategy, sql, target_relation) %}\n\n    {% call statement('build_snapshot_staging_relation') %}\n        {{ create_table_as(False, temp_relation, select) }}\n    {% endcall %}\n\n    {% do return(temp_relation) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.make_temp_relation", "macro.dbt.snapshot_staging_table", "macro.dbt.statement", "macro.dbt.create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.6774738, "supported_languages": null}, "macro.dbt_duckdb.duckdb__post_snapshot": {"name": "duckdb__post_snapshot", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/snapshot_helper.sql", "original_file_path": "macros/snapshot_helper.sql", "unique_id": "macro.dbt_duckdb.duckdb__post_snapshot", "macro_sql": "{% macro duckdb__post_snapshot(staging_relation) %}\n    {% do return(drop_relation(staging_relation)) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.drop_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.6776443, "supported_languages": null}, "macro.dbt_duckdb.duckdb__create_schema": {"name": "duckdb__create_schema", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_duckdb.duckdb__create_schema", "macro_sql": "{% macro duckdb__create_schema(relation) -%}\n  {%- call statement('create_schema') -%}\n    {% set sql %}\n        select type from duckdb_databases()\n        where lower(database_name)='{{ relation.database | lower }}'\n        and type='sqlite'\n    {% endset %}\n    {% set results = run_query(sql) %}\n    {% if results|length == 0 %}\n        create schema if not exists {{ relation.without_identifier() }}\n    {% else %}\n        {% if relation.schema!='main' %}\n            {{ exceptions.raise_compiler_error(\n                \"Schema must be 'main' when writing to sqlite \"\n                ~ \"instead got \" ~ relation.schema\n            )}}\n        {% endif %}\n    {% endif %}\n  {%- endcall -%}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.6794953, "supported_languages": null}, "macro.dbt_duckdb.duckdb__drop_schema": {"name": "duckdb__drop_schema", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_duckdb.duckdb__drop_schema", "macro_sql": "{% macro duckdb__drop_schema(relation) -%}\n  {%- call statement('drop_schema') -%}\n    drop schema if exists {{ relation.without_identifier() }} cascade\n  {%- endcall -%}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.6796992, "supported_languages": null}, "macro.dbt_duckdb.duckdb__list_schemas": {"name": "duckdb__list_schemas", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_duckdb.duckdb__list_schemas", "macro_sql": "{% macro duckdb__list_schemas(database) -%}\n  {% set sql %}\n    select schema_name\n    from system.information_schema.schemata\n    {% if database is not none %}\n    where lower(catalog_name) = '{{ database | lower }}'\n    {% endif %}\n  {% endset %}\n  {{ return(run_query(sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.6800196, "supported_languages": null}, "macro.dbt_duckdb.duckdb__check_schema_exists": {"name": "duckdb__check_schema_exists", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_duckdb.duckdb__check_schema_exists", "macro_sql": "{% macro duckdb__check_schema_exists(information_schema, schema) -%}\n  {% set sql -%}\n        select count(*)\n        from system.information_schema.schemata\n        where lower(schema_name) = '{{ schema | lower }}'\n        and lower(catalog_name) = '{{ information_schema.database | lower }}'\n  {%- endset %}\n  {{ return(run_query(sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.6803074, "supported_languages": null}, "macro.dbt_duckdb.get_column_names": {"name": "get_column_names", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_duckdb.get_column_names", "macro_sql": "{% macro get_column_names() %}\n  {# loop through user_provided_columns to get column names #}\n    {%- set user_provided_columns = model['columns'] -%}\n    (\n    {% for i in user_provided_columns %}\n      {% set col = user_provided_columns[i] %}\n      {{ col['name'] }} {{ \",\" if not loop.last }}\n    {% endfor %}\n  )\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.6806638, "supported_languages": null}, "macro.dbt_duckdb.duckdb__create_table_as": {"name": "duckdb__create_table_as", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_duckdb.duckdb__create_table_as", "macro_sql": "{% macro duckdb__create_table_as(temporary, relation, compiled_code, language='sql') -%}\n  {%- if language == 'sql' -%}\n    {% set contract_config = config.get('contract') %}\n    {% if contract_config.enforced %}\n      {{ get_assert_columns_equivalent(compiled_code) }}\n    {% endif %}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {{ sql_header if sql_header is not none }}\n\n    create {% if temporary: -%}temporary{%- endif %} table\n      {{ relation.include(database=(not temporary), schema=(not temporary)) }}\n  {% if contract_config.enforced and not temporary %}\n    {#-- DuckDB doesnt support constraints on temp tables --#}\n    {{ get_table_columns_and_constraints() }} ;\n    insert into {{ relation }} {{ get_column_names() }} (\n      {{ get_select_subquery(compiled_code) }}\n    );\n  {% else %}\n    as (\n      {{ compiled_code }}\n    );\n  {% endif %}\n  {%- elif language == 'python' -%}\n    {{ py_write_table(temporary=temporary, relation=relation, compiled_code=compiled_code) }}\n  {%- else -%}\n      {% do exceptions.raise_compiler_error(\"duckdb__create_table_as macro didn't get supported language, it got %s\" % language) %}\n  {%- endif -%}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_assert_columns_equivalent", "macro.dbt.get_table_columns_and_constraints", "macro.dbt_duckdb.get_column_names", "macro.dbt.get_select_subquery", "macro.dbt_duckdb.py_write_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.6816604, "supported_languages": null}, "macro.dbt_duckdb.py_write_table": {"name": "py_write_table", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_duckdb.py_write_table", "macro_sql": "{% macro py_write_table(temporary, relation, compiled_code) -%}\n{{ compiled_code }}\n\ndef materialize(df, con):\n    try:\n        import pyarrow\n        pyarrow_available = True\n    except ImportError:\n        pyarrow_available = False\n    finally:\n        if pyarrow_available and isinstance(df, pyarrow.Table):\n            # https://github.com/duckdb/duckdb/issues/6584\n            import pyarrow.dataset\n    tmp_name = '__dbt_python_model_df_' + '{{ relation.identifier }}'\n    con.register(tmp_name, df)\n    con.execute('create table {{ relation }} as select * from ' + tmp_name)\n    con.unregister(tmp_name)\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.6818686, "supported_languages": null}, "macro.dbt_duckdb.duckdb__create_view_as": {"name": "duckdb__create_view_as", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_duckdb.duckdb__create_view_as", "macro_sql": "{% macro duckdb__create_view_as(relation, sql) -%}\n  {% set contract_config = config.get('contract') %}\n  {% if contract_config.enforced %}\n    {{ get_assert_columns_equivalent(sql) }}\n  {%- endif %}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n  create view {{ relation }} as (\n    {{ sql }}\n  );\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_assert_columns_equivalent"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.6822577, "supported_languages": null}, "macro.dbt_duckdb.duckdb__get_columns_in_relation": {"name": "duckdb__get_columns_in_relation", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_duckdb.duckdb__get_columns_in_relation", "macro_sql": "{% macro duckdb__get_columns_in_relation(relation) -%}\n  {% call statement('get_columns_in_relation', fetch_result=True) %}\n      select\n          column_name,\n          data_type,\n          character_maximum_length,\n          numeric_precision,\n          numeric_scale\n\n      from system.information_schema.columns\n      where table_name = '{{ relation.identifier }}'\n      {% if relation.schema %}\n      and lower(table_schema) = '{{ relation.schema | lower }}'\n      {% endif %}\n      {% if relation.database %}\n      and lower(table_catalog) = '{{ relation.database | lower }}'\n      {% endif %}\n      order by ordinal_position\n\n  {% endcall %}\n  {% set table = load_result('get_columns_in_relation').table %}\n  {{ return(sql_convert_columns_in_relation(table)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.sql_convert_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.6827395, "supported_languages": null}, "macro.dbt_duckdb.duckdb__list_relations_without_caching": {"name": "duckdb__list_relations_without_caching", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_duckdb.duckdb__list_relations_without_caching", "macro_sql": "{% macro duckdb__list_relations_without_caching(schema_relation) %}\n  {% call statement('list_relations_without_caching', fetch_result=True) -%}\n    select\n      '{{ schema_relation.database }}' as database,\n      table_name as name,\n      table_schema as schema,\n      CASE table_type\n        WHEN 'BASE TABLE' THEN 'table'\n        WHEN 'VIEW' THEN 'view'\n        WHEN 'LOCAL TEMPORARY' THEN 'table'\n        END as type\n    from system.information_schema.tables\n    where lower(table_schema) = '{{ schema_relation.schema | lower }}'\n    and lower(table_catalog) = '{{ schema_relation.database | lower }}'\n  {% endcall %}\n  {{ return(load_result('list_relations_without_caching').table) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.6830842, "supported_languages": null}, "macro.dbt_duckdb.duckdb__drop_relation": {"name": "duckdb__drop_relation", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_duckdb.duckdb__drop_relation", "macro_sql": "{% macro duckdb__drop_relation(relation) -%}\n  {% call statement('drop_relation', auto_begin=False) -%}\n    drop {{ relation.type }} if exists {{ relation }} cascade\n  {%- endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.6833265, "supported_languages": null}, "macro.dbt_duckdb.duckdb__rename_relation": {"name": "duckdb__rename_relation", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_duckdb.duckdb__rename_relation", "macro_sql": "{% macro duckdb__rename_relation(from_relation, to_relation) -%}\n  {% set target_name = adapter.quote_as_configured(to_relation.identifier, 'identifier') %}\n  {% call statement('rename_relation') -%}\n    alter {{ to_relation.type }} {{ from_relation }} rename to {{ target_name }}\n  {%- endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.683616, "supported_languages": null}, "macro.dbt_duckdb.duckdb__make_temp_relation": {"name": "duckdb__make_temp_relation", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_duckdb.duckdb__make_temp_relation", "macro_sql": "{% macro duckdb__make_temp_relation(base_relation, suffix) %}\n    {% set tmp_identifier = base_relation.identifier ~ suffix ~ py_current_timestring() %}\n    {% do return(base_relation.incorporate(\n                                  path={\n                                    \"identifier\": tmp_identifier,\n                                    \"schema\": none,\n                                    \"database\": none\n                                  })) -%}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.py_current_timestring"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.6839542, "supported_languages": null}, "macro.dbt_duckdb.duckdb__current_timestamp": {"name": "duckdb__current_timestamp", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_duckdb.duckdb__current_timestamp", "macro_sql": "{% macro duckdb__current_timestamp() -%}\n  now()\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.6840448, "supported_languages": null}, "macro.dbt_duckdb.duckdb__snapshot_string_as_time": {"name": "duckdb__snapshot_string_as_time", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_duckdb.duckdb__snapshot_string_as_time", "macro_sql": "{% macro duckdb__snapshot_string_as_time(timestamp) -%}\n    {%- set result = \"'\" ~ timestamp ~ \"'::timestamp\" -%}\n    {{ return(result) }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.6842182, "supported_languages": null}, "macro.dbt_duckdb.duckdb__snapshot_get_time": {"name": "duckdb__snapshot_get_time", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_duckdb.duckdb__snapshot_get_time", "macro_sql": "{% macro duckdb__snapshot_get_time() -%}\n  {{ current_timestamp() }}::timestamp\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.684345, "supported_languages": null}, "macro.dbt_duckdb.duckdb__get_incremental_default_sql": {"name": "duckdb__get_incremental_default_sql", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_duckdb.duckdb__get_incremental_default_sql", "macro_sql": "{% macro duckdb__get_incremental_default_sql(arg_dict) %}\n  {% do return(get_incremental_delete_insert_sql(arg_dict)) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_incremental_delete_insert_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.6844938, "supported_languages": null}, "macro.dbt_duckdb.location_exists": {"name": "location_exists", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_duckdb.location_exists", "macro_sql": "{% macro location_exists(location) -%}\n  {% do return(adapter.location_exists(location)) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.6846387, "supported_languages": null}, "macro.dbt_duckdb.write_to_file": {"name": "write_to_file", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_duckdb.write_to_file", "macro_sql": "{% macro write_to_file(relation, location, options) -%}\n  {% call statement('write_to_file') -%}\n    copy {{ relation }} to '{{ location }}' ({{ options }})\n  {%- endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.6848478, "supported_languages": null}, "macro.dbt_duckdb.store_relation": {"name": "store_relation", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_duckdb.store_relation", "macro_sql": "{% macro store_relation(plugin, relation, location, format, config) -%}\n  {%- set column_list = adapter.get_columns_in_relation(relation) -%}\n  {% do adapter.store_relation(plugin, relation, column_list, location, format, config) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.6851032, "supported_languages": null}, "macro.dbt_duckdb.render_write_options": {"name": "render_write_options", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_duckdb.render_write_options", "macro_sql": "{% macro render_write_options(config) -%}\n  {% set options = config.get('options', {}) %}\n  {% if options is not mapping %}\n    {% do exceptions.raise_compiler_error(\"The options argument must be a dictionary\") %}\n  {% endif %}\n\n  {% for k in options %}\n    {% set _ = options.update({k: render(options[k])}) %}\n  {% endfor %}\n\n  {# legacy top-level write options #}\n  {% if config.get('format') %}\n    {% set _ = options.update({'format': render(config.get('format'))}) %}\n  {% endif %}\n  {% if config.get('delimiter') %}\n    {% set _ = options.update({'delimiter': render(config.get('delimiter'))}) %}\n  {% endif %}\n\n  {% do return(options) %}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.6862476, "supported_languages": null}, "macro.dbt_duckdb.duckdb__apply_grants": {"name": "duckdb__apply_grants", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_duckdb.duckdb__apply_grants", "macro_sql": "{% macro duckdb__apply_grants(relation, grant_config, should_revoke=True) %}\n    {#-- If grant_config is {} or None, this is a no-op --#}\n    {% if grant_config %}\n      {{ adapter.warn_once('Grants for relations are not supported by DuckDB') }}\n    {% endif %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.6864934, "supported_languages": null}, "macro.dbt_duckdb.duckdb_escape_comment": {"name": "duckdb_escape_comment", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/persist_docs.sql", "original_file_path": "macros/persist_docs.sql", "unique_id": "macro.dbt_duckdb.duckdb_escape_comment", "macro_sql": "{% macro duckdb_escape_comment(comment) -%}\n  {% if comment is not string %}\n    {% do exceptions.raise_compiler_error('cannot escape a non-string: ' ~ comment) %}\n  {% endif %}\n  {%- set magic = '$dbt_comment_literal_block$' -%}\n  {%- if magic in comment -%}\n    {%- do exceptions.raise_compiler_error('The string ' ~ magic ~ ' is not allowed in comments.') -%}\n  {%- endif -%}\n  {{ magic }}{{ comment }}{{ magic }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.6872044, "supported_languages": null}, "macro.dbt_duckdb.duckdb__alter_relation_comment": {"name": "duckdb__alter_relation_comment", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/persist_docs.sql", "original_file_path": "macros/persist_docs.sql", "unique_id": "macro.dbt_duckdb.duckdb__alter_relation_comment", "macro_sql": "{% macro duckdb__alter_relation_comment(relation, comment) %}\n  {% set escaped_comment = duckdb_escape_comment(comment) %}\n  comment on {{ relation.type }} {{ relation }} is {{ escaped_comment }};\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_duckdb.duckdb_escape_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.687431, "supported_languages": null}, "macro.dbt_duckdb.duckdb__alter_column_comment": {"name": "duckdb__alter_column_comment", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/persist_docs.sql", "original_file_path": "macros/persist_docs.sql", "unique_id": "macro.dbt_duckdb.duckdb__alter_column_comment", "macro_sql": "{% macro duckdb__alter_column_comment(relation, column_dict) %}\n  {% set existing_columns = adapter.get_columns_in_relation(relation) | map(attribute=\"name\") | list %}\n  {% for column_name in column_dict if (column_name in existing_columns) %}\n    {% set comment = column_dict[column_name]['description'] %}\n    {% set escaped_comment = duckdb_escape_comment(comment) %}\n    comment on column {{ relation }}.{{ adapter.quote(column_name) if column_dict[column_name]['quote'] else column_name }} is {{ escaped_comment }};\n  {% endfor %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_duckdb.duckdb_escape_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.6880453, "supported_languages": null}, "macro.dbt_duckdb.external_location": {"name": "external_location", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/utils/external_location.sql", "original_file_path": "macros/utils/external_location.sql", "unique_id": "macro.dbt_duckdb.external_location", "macro_sql": "{%- macro external_location(relation, config) -%}\n  {%- if config.get('options', {}).get('partition_by') is none -%}\n    {%- set format = config.get('format', 'parquet') -%}\n    {{- adapter.external_root() }}/{{ relation.identifier }}.{{ format }}\n  {%- else -%}\n    {{- adapter.external_root() }}/{{ relation.identifier }}\n  {%- endif -%}\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.688591, "supported_languages": null}, "macro.dbt_duckdb.duckdb__listagg": {"name": "duckdb__listagg", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/utils/listagg.sql", "original_file_path": "macros/utils/listagg.sql", "unique_id": "macro.dbt_duckdb.duckdb__listagg", "macro_sql": "{% macro duckdb__listagg(measure, delimiter_text, order_by_clause, limit_num) -%}\n    {% if limit_num -%}\n    list_aggr(\n        (array_agg(\n            {{ measure }}\n            {% if order_by_clause -%}\n            {{ order_by_clause }}\n            {%- endif %}\n        ))[1:{{ limit_num }}],\n        'string_agg',\n        {{ delimiter_text }}\n        )\n    {%- else %}\n    string_agg(\n        {{ measure }},\n        {{ delimiter_text }}\n        {% if order_by_clause -%}\n        {{ order_by_clause }}\n        {%- endif %}\n        )\n    {%- endif %}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.6892738, "supported_languages": null}, "macro.dbt_duckdb.duckdb__datediff": {"name": "duckdb__datediff", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/utils/datediff.sql", "original_file_path": "macros/utils/datediff.sql", "unique_id": "macro.dbt_duckdb.duckdb__datediff", "macro_sql": "{% macro duckdb__datediff(first_date, second_date, datepart) -%}\n    {% if datepart == 'week' %}\n            ({{ datediff(first_date, second_date, 'day') }} // 7 + case\n            when date_part('dow', ({{first_date}})::timestamp) <= date_part('dow', ({{second_date}})::timestamp) then\n                case when {{first_date}} <= {{second_date}} then 0 else -1 end\n            else\n                case when {{first_date}} <= {{second_date}} then 1 else 0 end\n        end)\n    {% else %}\n        (date_diff('{{ datepart }}', {{ first_date }}::timestamp, {{ second_date}}::timestamp ))\n    {% endif %}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.datediff"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.6898217, "supported_languages": null}, "macro.dbt_duckdb.duckdb__dateadd": {"name": "duckdb__dateadd", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/utils/dateadd.sql", "original_file_path": "macros/utils/dateadd.sql", "unique_id": "macro.dbt_duckdb.duckdb__dateadd", "macro_sql": "{% macro duckdb__dateadd(datepart, interval, from_date_or_timestamp) %}\n\n    date_add({{ from_date_or_timestamp }}, interval ({{ interval }}) {{ datepart }})\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.6900446, "supported_languages": null}, "macro.dbt_duckdb.duckdb__last_day": {"name": "duckdb__last_day", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/utils/lastday.sql", "original_file_path": "macros/utils/lastday.sql", "unique_id": "macro.dbt_duckdb.duckdb__last_day", "macro_sql": "{% macro duckdb__last_day(date, datepart) -%}\n\n    {%- if datepart == 'quarter' -%}\n    -- duckdb dateadd does not support quarter interval.\n    cast(\n        {{dbt.dateadd('day', '-1',\n        dbt.dateadd('month', '3', dbt.date_trunc(datepart, date))\n        )}}\n        as date)\n    {%- else -%}\n    {{dbt.default_last_day(date, datepart)}}\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.dateadd", "macro.dbt.date_trunc", "macro.dbt.default_last_day"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.690526, "supported_languages": null}, "macro.dbt_duckdb.duckdb__any_value": {"name": "duckdb__any_value", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/utils/any_value.sql", "original_file_path": "macros/utils/any_value.sql", "unique_id": "macro.dbt_duckdb.duckdb__any_value", "macro_sql": "{% macro duckdb__any_value(expression) -%}\n\n    arbitrary({{ expression }})\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.6907074, "supported_languages": null}, "macro.dbt_duckdb.duckdb__split_part": {"name": "duckdb__split_part", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/utils/splitpart.sql", "original_file_path": "macros/utils/splitpart.sql", "unique_id": "macro.dbt_duckdb.duckdb__split_part", "macro_sql": "{% macro duckdb__split_part(string_text, delimiter_text, part_number) %}\n    string_split({{ string_text }}, {{ delimiter_text }})[ {{ part_number }} ]\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.6909318, "supported_languages": null}, "macro.dbt_duckdb.register_upstream_external_models": {"name": "register_upstream_external_models", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/utils/upstream.sql", "original_file_path": "macros/utils/upstream.sql", "unique_id": "macro.dbt_duckdb.register_upstream_external_models", "macro_sql": "{%- macro register_upstream_external_models() -%}\n{% if execute %}\n{% set upstream_nodes = {} %}\n{% set upstream_schemas = {} %}\n{% for node in selected_resources %}\n  {% if node not in graph['nodes'] %}{% continue %}{% endif %}\n  {% for upstream_node in graph['nodes'][node]['depends_on']['nodes'] %}\n    {% if upstream_node not in upstream_nodes and upstream_node not in selected_resources %}\n      {% do upstream_nodes.update({upstream_node: None}) %}\n      {% set upstream = graph['nodes'].get(upstream_node) %}\n      {% if upstream\n         and upstream.resource_type in ('model', 'seed')\n         and upstream.config.materialized=='external'\n      %}\n        {%- set upstream_rel = api.Relation.create(\n          database=upstream['database'],\n          schema=upstream['schema'],\n          identifier=upstream['alias']\n        ) -%}\n        {%- set location = upstream.config.get('location', external_location(upstream_rel, upstream.config)) -%}\n        {%- set rendered_options = render_write_options(upstream.config) -%}\n        {%- set upstream_location = adapter.external_read_location(location, rendered_options) -%}\n        {% if upstream_rel.schema not in upstream_schemas %}\n          {% call statement('main', language='sql') -%}\n            create schema if not exists {{ upstream_rel.schema }}\n          {%- endcall %}\n          {% do upstream_schemas.update({upstream_rel.schema: None}) %}\n        {% endif %}\n        {% call statement('main', language='sql') -%}\n          create or replace view {{ upstream_rel }} as (\n            select * from '{{ upstream_location }}'\n          );\n        {%- endcall %}\n      {%- endif %}\n    {% endif %}\n  {% endfor %}\n{% endfor %}\n{% do adapter.commit() %}\n{% endif %}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_duckdb.external_location", "macro.dbt_duckdb.render_write_options", "macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.6929789, "supported_languages": null}, "macro.dbt_duckdb.materialization_table_function_duckdb": {"name": "materialization_table_function_duckdb", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/materializations/table_function.sql", "original_file_path": "macros/materializations/table_function.sql", "unique_id": "macro.dbt_duckdb.materialization_table_function_duckdb", "macro_sql": "{% materialization table_function, adapter='duckdb' %}\n  -- This materialization uses DuckDB's Table Function / Table Macro feature to provide parameterized views.\n  -- Why use this?\n  --     Late binding of functions means that the underlying table can change (have new columns added), and\n  --       the function does not need to be recreated. (With a view, the create view statement would need to be re-run).\n  --       This allows for skipping parts of the dbt DAG, even if the underlying table changed.\n  --     Parameters can force filter pushdown\n  --     Functions can provide advanced features like dynamic SQL (the query and query_table functions)\n\n  -- For usage examples, see the tests at /dbt-duckdb/tests/functional/adapter/test_table_function.py\n  --     (Don't forget parentheses when you pull from a table_function!)\n\n  -- Using Redshift as an example:\n  -- https://github.com/dbt-labs/dbt-adapters/blob/main/dbt-redshift/src/dbt/include/redshift/macros/materializations/table.sql\n  {%- set identifier = model['alias'] -%}\n  {%- set target_relation = api.Relation.create(\n      identifier=identifier,\n      schema=schema,\n      database=database,\n      type='view') -%}\n  {%- set backup_relation = none -%}\n\n  -- The parameters config is used to pass in the names of the parameters that will be used within the table function.\n  -- parameters can be a single string value (with or without commas), or a list of strings.\n  {%- set parameters=config.get('parameters') -%}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- Create or replace the function (macro)\n  -- By using create or replace (and a transaction), we do not need an old version and new version.\n  {% call statement('main') -%}\n    create or replace function {{ target_relation.render() }}(\n        {% if not parameters %}\n        {% elif parameters is string or parameters is number %}\n          {{ parameters if parameters }}\n        {% else  %}\n          {{ parameters|join(', ') }}\n        {% endif %}\n      ) as table (\n        {{ sql }});\n  {%- endcall %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {% do persist_docs(target_relation, model) %}\n\n  -- `COMMIT` happens here:\n  {{ adapter.commit() }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt_duckdb.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.6943798, "supported_languages": ["sql"]}, "macro.dbt_duckdb.materialization_incremental_duckdb": {"name": "materialization_incremental_duckdb", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/materializations/incremental.sql", "original_file_path": "macros/materializations/incremental.sql", "unique_id": "macro.dbt_duckdb.materialization_incremental_duckdb", "macro_sql": "{% materialization incremental, adapter=\"duckdb\", supported_languages=['sql', 'python'] -%}\n\n  {%- set language = model['language'] -%}\n  -- only create temp tables if using local duckdb, as it is not currently supported for remote databases\n  {%- set temporary = not adapter.is_motherduck() -%}\n\n  -- relations\n  {%- set existing_relation = load_cached_relation(this) -%}\n  {%- set target_relation = this.incorporate(type='table') -%}\n  {%- set temp_relation = make_temp_relation(target_relation)-%}\n  {%- set intermediate_relation = make_intermediate_relation(target_relation)-%}\n  {%- set backup_relation_type = 'table' if existing_relation is none else existing_relation.type -%}\n  {%- set backup_relation = make_backup_relation(target_relation, backup_relation_type) -%}\n\n  -- configs\n  {%- set unique_key = config.get('unique_key') -%}\n  {%- set full_refresh_mode = (should_full_refresh()  or existing_relation.is_view) -%}\n  {%- set on_schema_change = incremental_validate_on_schema_change(config.get('on_schema_change'), default='ignore') -%}\n\n  -- the temp_ and backup_ relations should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation. This has to happen before\n  -- BEGIN, in a separate transaction\n  {%- set preexisting_intermediate_relation = load_cached_relation(intermediate_relation)-%}\n  {%- set preexisting_backup_relation = load_cached_relation(backup_relation) -%}\n   -- grab current tables grants config for comparision later on\n  {% set grant_config = config.get('grants') %}\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {% set to_drop = [] %}\n\n  {% if existing_relation is none %}\n    {% set build_sql = create_table_as(False, target_relation, compiled_code, language) %}\n  {% elif full_refresh_mode %}\n    {% set build_sql = create_table_as(False, intermediate_relation, compiled_code, language) %}\n    {% set need_swap = true %}\n  {% else %}\n    {% if not temporary %}\n      -- if not using a temporary table we will update the temp relation to use a different temp schema (\"dbt_temp\" by default)\n      {% set temp_relation = temp_relation.incorporate(path=adapter.get_temp_relation_path(this)) %}\n      {% do run_query(create_schema(temp_relation)) %}\n      -- then drop the temp relation after we insert the incremental data into the target relation\n      {% do to_drop.append(temp_relation) %}\n    {% endif %}\n    {% if language == 'python' %}\n      {% set build_python = create_table_as(False, temp_relation, compiled_code, language) %}\n      {% call statement(\"pre\", language=language) %}\n        {{- build_python }}\n      {% endcall %}\n    {% else %} {# SQL #}\n      {% do run_query(create_table_as(temporary, temp_relation, compiled_code, language)) %}\n    {% endif %}\n    {% do adapter.expand_target_column_types(\n             from_relation=temp_relation,\n             to_relation=target_relation) %}\n    {#-- Process schema changes. Returns dict of changes if successful. Use source columns for upserting/merging --#}\n    {% set dest_columns = process_schema_changes(on_schema_change, temp_relation, existing_relation) %}\n    {% if not dest_columns %}\n      {% set dest_columns = adapter.get_columns_in_relation(existing_relation) %}\n    {% endif %}\n\n    {#-- Get the incremental_strategy, the macro to use for the strategy, and build the sql --#}\n    {% set incremental_strategy = config.get('incremental_strategy') or 'default' %}\n    {% set incremental_predicates = config.get('predicates', none) or config.get('incremental_predicates', none) %}\n    {% set strategy_sql_macro_func = adapter.get_incremental_strategy_macro(context, incremental_strategy) %}\n    {% set strategy_arg_dict = ({'target_relation': target_relation, 'temp_relation': temp_relation, 'unique_key': unique_key, 'dest_columns': dest_columns, 'incremental_predicates': incremental_predicates }) %}\n    {% set build_sql = strategy_sql_macro_func(strategy_arg_dict) %}\n    {% set language = \"sql\" %}\n\n  {% endif %}\n\n  {% call statement(\"main\", language=language) %}\n      {{- build_sql }}\n  {% endcall %}\n\n  {% if need_swap %}\n      {% do adapter.rename_relation(target_relation, backup_relation) %}\n      {% do adapter.rename_relation(intermediate_relation, target_relation) %}\n      {% do to_drop.append(backup_relation) %}\n  {% endif %}\n\n  {% set should_revoke = should_revoke(existing_relation, full_refresh_mode) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if existing_relation is none or existing_relation.is_view or should_full_refresh() %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {% do adapter.commit() %}\n\n  {% for rel in to_drop %}\n      {% do adapter.drop_relation(rel) %}\n  {% endfor %}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization %}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.make_temp_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.should_full_refresh", "macro.dbt.incremental_validate_on_schema_change", "macro.dbt.drop_relation_if_exists", "macro.dbt_duckdb.run_hooks", "macro.dbt.create_table_as", "macro.dbt.run_query", "macro.dbt.create_schema", "macro.dbt.statement", "macro.dbt.process_schema_changes", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs", "macro.dbt.create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.6995049, "supported_languages": ["sql", "python"]}, "macro.dbt_duckdb.materialization_table_duckdb": {"name": "materialization_table_duckdb", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/materializations/table.sql", "original_file_path": "macros/materializations/table.sql", "unique_id": "macro.dbt_duckdb.materialization_table_duckdb", "macro_sql": "{% materialization table, adapter=\"duckdb\", supported_languages=['sql', 'python'] %}\n\n  {%- set language = model['language'] -%}\n\n  {%- set existing_relation = load_cached_relation(this) -%}\n  {%- set target_relation = this.incorporate(type='table') %}\n  {%- set intermediate_relation =  make_intermediate_relation(target_relation) -%}\n  -- the intermediate_relation should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation\n  {%- set preexisting_intermediate_relation = load_cached_relation(intermediate_relation) -%}\n  /*\n      See ../view/view.sql for more information about this relation.\n  */\n  {%- set backup_relation_type = 'table' if existing_relation is none else existing_relation.type -%}\n  {%- set backup_relation = make_backup_relation(target_relation, backup_relation_type) -%}\n  -- as above, the backup_relation should not already exist\n  {%- set preexisting_backup_relation = load_cached_relation(backup_relation) -%}\n  -- grab current tables grants config for comparision later on\n  {% set grant_config = config.get('grants') %}\n\n  -- drop the temp relations if they exist already in the database\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% call statement('main', language=language) -%}\n    {{- create_table_as(False, intermediate_relation, compiled_code, language) }}\n  {%- endcall %}\n\n  -- cleanup\n  {% if existing_relation is not none %}\n      {{ adapter.rename_relation(existing_relation, backup_relation) }}\n  {% endif %}\n\n  {{ adapter.rename_relation(intermediate_relation, target_relation) }}\n\n  {% do create_indexes(target_relation) %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {% set should_revoke = should_revoke(existing_relation, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  -- finally, drop the existing/backup relation after the commit\n  {{ drop_relation_if_exists(backup_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.drop_relation_if_exists", "macro.dbt_duckdb.run_hooks", "macro.dbt.statement", "macro.dbt.create_table_as", "macro.dbt.create_indexes", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7016263, "supported_languages": ["sql", "python"]}, "macro.dbt_duckdb.materialization_external_duckdb": {"name": "materialization_external_duckdb", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/materializations/external.sql", "original_file_path": "macros/materializations/external.sql", "unique_id": "macro.dbt_duckdb.materialization_external_duckdb", "macro_sql": "{% materialization external, adapter=\"duckdb\", supported_languages=['sql', 'python'] %}\n\n  {%- set location = render(config.get('location', default=external_location(this, config))) -%})\n  {%- set rendered_options = render_write_options(config) -%}\n\n  {%- set format = config.get('format') -%}\n  {%- set allowed_formats = ['csv', 'parquet', 'json'] -%}\n  {%- if format -%}\n      {%- if format not in allowed_formats -%}\n          {{ exceptions.raise_compiler_error(\"Invalid format: \" ~ format ~ \". Allowed formats are: \" ~ allowed_formats | join(', ')) }}\n      {%- endif -%}\n  {%- else -%}\n    {%- set format = location.split('.')[-1].lower() if '.' in location else 'parquet' -%}\n    {%- set format = format if format in allowed_formats else 'parquet' -%}\n  {%- endif -%}\n\n  {%- set write_options = adapter.external_write_options(location, rendered_options) -%}\n  {%- set read_location = adapter.external_read_location(location, rendered_options) -%}\n  {%- set parquet_read_options = config.get('parquet_read_options', {'union_by_name': False}) -%}\n  {%- set json_read_options = config.get('json_read_options', {'auto_detect': True}) -%}\n  {%- set csv_read_options = config.get('csv_read_options', {'auto_detect': True}) -%}\n\n  -- set language - python or sql\n  {%- set language = model['language'] -%}\n\n  {%- set target_relation = this.incorporate(type='view') %}\n\n  -- Continue as normal materialization\n  {%- set existing_relation = load_cached_relation(this) -%}\n  {%- set temp_relation =  make_intermediate_relation(this.incorporate(type='table'), suffix='__dbt_tmp') -%}\n  {%- set intermediate_relation =  make_intermediate_relation(target_relation, suffix='__dbt_int') -%}\n  -- the intermediate_relation should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation\n  {%- set preexisting_temp_relation = load_cached_relation(temp_relation) -%}\n  {%- set preexisting_intermediate_relation = load_cached_relation(intermediate_relation) -%}\n  /*\n      See ../view/view.sql for more information about this relation.\n  */\n  {%- set backup_relation_type = 'table' if existing_relation is none else existing_relation.type -%}\n  {%- set backup_relation = make_backup_relation(target_relation, backup_relation_type) -%}\n  -- as above, the backup_relation should not already exist\n  {%- set preexisting_backup_relation = load_cached_relation(backup_relation) -%}\n  -- grab current tables grants config for comparision later on\n  {% set grant_config = config.get('grants') %}\n\n  -- drop the temp relations if they exist already in the database\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_temp_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% call statement('create_table', language=language) -%}\n    {{- create_table_as(False, temp_relation, compiled_code, language) }}\n  {%- endcall %}\n\n  -- check if relation is empty\n  {%- set count_query -%}\n    select count(*) as row_count from {{ temp_relation }}\n  {%- endset -%}\n  {%- set row_count = run_query(count_query) -%}\n\n  -- if relation is empty, write a non-empty table with column names and null values\n  {% call statement('main', language='sql') -%}\n    {% if row_count[0][0] == 0 %}\n    insert into {{ temp_relation }} values (\n      {%- for col in get_columns_in_relation(temp_relation) -%}\n      NULL,\n      {%- endfor -%}\n    )\n    {% endif %}\n  {%- endcall %}\n\n  -- write a temp relation into file\n  {{ write_to_file(temp_relation, location, write_options) }}\n\n-- create a view on top of the location\n  {% call statement('main', language='sql') -%}\n    {% if format == 'json' %}\n      create or replace view {{ intermediate_relation }} as (\n        select * from read_json('{{ read_location }}'\n        {%- for key, value in json_read_options.items() -%}\n          , {{ key }}=\n          {%- if value is string -%}\n            '{{ value }}'\n          {%- else -%}\n            {{ value }}\n          {%- endif -%}\n        {%- endfor -%}\n        )\n        -- if relation is empty, filter by all columns having null values\n        {% if row_count[0][0] == 0 %}\n          where 1\n          {%- for col in get_columns_in_relation(temp_relation) -%}\n            {{ '' }} AND {{ col.column }} is not NULL\n          {%- endfor -%}\n        {% endif %}\n      );\n    {% elif format == 'parquet' %}\n      create or replace view {{ intermediate_relation }} as (\n        select * from read_parquet('{{ read_location }}'\n        {%- for key, value in parquet_read_options.items() -%}\n          , {{ key }}=\n          {%- if value is string -%}\n            '{{ value }}'\n          {%- else -%}\n            {{ value }}\n          {%- endif -%}\n        {%- endfor -%}\n        )\n        -- if relation is empty, filter by all columns having null values\n        {% if row_count[0][0] == 0 %}\n          where 1\n          {%- for col in get_columns_in_relation(temp_relation) -%}\n            {{ '' }} AND {{ col.column }} is not NULL\n          {%- endfor -%}\n        {% endif %}\n      );\n    {% elif format == 'csv' %}\n    create or replace view {{ intermediate_relation }} as (\n      select * from read_csv('{{ read_location }}'\n      {%- for key, value in csv_read_options.items() -%}\n        , {{ key }}=\n        {%- if value is string -%}\n          '{{ value }}'\n        {%- else -%}\n          {{ value }}\n        {%- endif -%}\n      {%- endfor -%}\n      )\n      -- if relation is empty, filter by all columns having null values\n      {% if row_count[0][0] == 0 %}\n        where 1\n        {%- for col in get_columns_in_relation(temp_relation) -%}\n          {{ '' }} AND {{ col.column }} is not NULL\n        {%- endfor -%}\n      {% endif %}\n    );\n    {% endif %}\n  {%- endcall %}\n\n  -- cleanup\n  {% if existing_relation is not none %}\n      {{ adapter.rename_relation(existing_relation, backup_relation) }}\n  {% endif %}\n\n  {{ adapter.rename_relation(intermediate_relation, target_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {% set should_revoke = should_revoke(existing_relation, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  -- finally, drop the existing/backup relation after the commit\n  {{ drop_relation_if_exists(backup_relation) }}\n  {{ drop_relation_if_exists(temp_relation) }}\n\n  -- register table into glue\n  {%- set plugin_name = config.get('plugin') -%}\n  {%- set glue_register = config.get('glue_register', default=false) -%}\n  {%- set partition_columns = config.get('partition_columns', []) -%}\n  {% if plugin_name is not none or glue_register is true %}\n    {% if glue_register %}\n      {# legacy hack to set the glue database name, deprecate this #}\n      {%- set plugin_name = 'glue|' ~ config.get('glue_database', 'default') -%}\n    {% endif %}\n    {% do store_relation(plugin_name, target_relation, location, format, config) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt_duckdb.external_location", "macro.dbt_duckdb.render_write_options", "macro.dbt.load_cached_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.drop_relation_if_exists", "macro.dbt_duckdb.run_hooks", "macro.dbt.statement", "macro.dbt.create_table_as", "macro.dbt.run_query", "macro.dbt.get_columns_in_relation", "macro.dbt_duckdb.write_to_file", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs", "macro.dbt_duckdb.store_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7082753, "supported_languages": ["sql", "python"]}, "macro.dbt_duckdb.run_hooks": {"name": "run_hooks", "resource_type": "macro", "package_name": "dbt_duckdb", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "unique_id": "macro.dbt_duckdb.run_hooks", "macro_sql": "{% macro run_hooks(hooks, inside_transaction=True) %}\n  {% for hook in hooks | selectattr('transaction', 'equalto', inside_transaction)  %}\n    {% set rendered = render(hook.get('sql')) | trim %}\n    {% if (rendered | length) > 0 %}\n      {% call statement(auto_begin=inside_transaction) %}\n        {{ rendered }}\n      {% endcall %}\n    {% endif %}\n  {% endfor %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7089157, "supported_languages": null}, "macro.dbt.default__test_unique": {"name": "default__test_unique", "resource_type": "macro", "package_name": "dbt", "path": "macros/generic_test_sql/unique.sql", "original_file_path": "macros/generic_test_sql/unique.sql", "unique_id": "macro.dbt.default__test_unique", "macro_sql": "{% macro default__test_unique(model, column_name) %}\n\nselect\n    {{ column_name }} as unique_field,\n    count(*) as n_records\n\nfrom {{ model }}\nwhere {{ column_name }} is not null\ngroup by {{ column_name }}\nhaving count(*) > 1\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7091703, "supported_languages": null}, "macro.dbt.default__test_accepted_values": {"name": "default__test_accepted_values", "resource_type": "macro", "package_name": "dbt", "path": "macros/generic_test_sql/accepted_values.sql", "original_file_path": "macros/generic_test_sql/accepted_values.sql", "unique_id": "macro.dbt.default__test_accepted_values", "macro_sql": "{% macro default__test_accepted_values(model, column_name, values, quote=True) %}\n\nwith all_values as (\n\n    select\n        {{ column_name }} as value_field,\n        count(*) as n_records\n\n    from {{ model }}\n    group by {{ column_name }}\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    {% for value in values -%}\n        {% if quote -%}\n        '{{ value }}'\n        {%- else -%}\n        {{ value }}\n        {%- endif -%}\n        {%- if not loop.last -%},{%- endif %}\n    {%- endfor %}\n)\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7097075, "supported_languages": null}, "macro.dbt.default__test_relationships": {"name": "default__test_relationships", "resource_type": "macro", "package_name": "dbt", "path": "macros/generic_test_sql/relationships.sql", "original_file_path": "macros/generic_test_sql/relationships.sql", "unique_id": "macro.dbt.default__test_relationships", "macro_sql": "{% macro default__test_relationships(model, column_name, to, field) %}\n\nwith child as (\n    select {{ column_name }} as from_field\n    from {{ model }}\n    where {{ column_name }} is not null\n),\n\nparent as (\n    select {{ field }} as to_field\n    from {{ to }}\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.710035, "supported_languages": null}, "macro.dbt.default__test_not_null": {"name": "default__test_not_null", "resource_type": "macro", "package_name": "dbt", "path": "macros/generic_test_sql/not_null.sql", "original_file_path": "macros/generic_test_sql/not_null.sql", "unique_id": "macro.dbt.default__test_not_null", "macro_sql": "{% macro default__test_not_null(model, column_name) %}\n\n{% set column_list = '*' if should_store_failures() else column_name %}\n\nselect {{ column_list }}\nfrom {{ model }}\nwhere {{ column_name }} is null\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.should_store_failures"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7103224, "supported_languages": null}, "macro.dbt.get_catalog_relations": {"name": "get_catalog_relations", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.get_catalog_relations", "macro_sql": "{% macro get_catalog_relations(information_schema, relations) -%}\n  {{ return(adapter.dispatch('get_catalog_relations', 'dbt')(information_schema, relations)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_catalog_relations"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7110567, "supported_languages": null}, "macro.dbt.default__get_catalog_relations": {"name": "default__get_catalog_relations", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__get_catalog_relations", "macro_sql": "{% macro default__get_catalog_relations(information_schema, relations) -%}\n  {% set typename = adapter.type() %}\n  {% set msg -%}\n    get_catalog_relations not implemented for {{ typename }}\n  {%- endset %}\n\n  {{ exceptions.raise_compiler_error(msg) }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7113235, "supported_languages": null}, "macro.dbt.get_catalog": {"name": "get_catalog", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.get_catalog", "macro_sql": "{% macro get_catalog(information_schema, schemas) -%}\n  {{ return(adapter.dispatch('get_catalog', 'dbt')(information_schema, schemas)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__get_catalog"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7115366, "supported_languages": null}, "macro.dbt.default__get_catalog": {"name": "default__get_catalog", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__get_catalog", "macro_sql": "{% macro default__get_catalog(information_schema, schemas) -%}\n\n  {% set typename = adapter.type() %}\n  {% set msg -%}\n    get_catalog not implemented for {{ typename }}\n  {%- endset %}\n\n  {{ exceptions.raise_compiler_error(msg) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7117813, "supported_languages": null}, "macro.dbt.information_schema_name": {"name": "information_schema_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.information_schema_name", "macro_sql": "{% macro information_schema_name(database) %}\n  {{ return(adapter.dispatch('information_schema_name', 'dbt')(database)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__information_schema_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7119963, "supported_languages": null}, "macro.dbt.default__information_schema_name": {"name": "default__information_schema_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__information_schema_name", "macro_sql": "{% macro default__information_schema_name(database) -%}\n  {%- if database -%}\n    {{ database }}.INFORMATION_SCHEMA\n  {%- else -%}\n    INFORMATION_SCHEMA\n  {%- endif -%}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7121577, "supported_languages": null}, "macro.dbt.list_schemas": {"name": "list_schemas", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.list_schemas", "macro_sql": "{% macro list_schemas(database) -%}\n  {{ return(adapter.dispatch('list_schemas', 'dbt')(database)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__list_schemas"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7123199, "supported_languages": null}, "macro.dbt.default__list_schemas": {"name": "default__list_schemas", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__list_schemas", "macro_sql": "{% macro default__list_schemas(database) -%}\n  {% set sql %}\n    select distinct schema_name\n    from {{ information_schema_name(database) }}.SCHEMATA\n    where catalog_name ilike '{{ database }}'\n  {% endset %}\n  {{ return(run_query(sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.information_schema_name", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.712554, "supported_languages": null}, "macro.dbt.check_schema_exists": {"name": "check_schema_exists", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.check_schema_exists", "macro_sql": "{% macro check_schema_exists(information_schema, schema) -%}\n  {{ return(adapter.dispatch('check_schema_exists', 'dbt')(information_schema, schema)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__check_schema_exists"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7127626, "supported_languages": null}, "macro.dbt.default__check_schema_exists": {"name": "default__check_schema_exists", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__check_schema_exists", "macro_sql": "{% macro default__check_schema_exists(information_schema, schema) -%}\n  {% set sql -%}\n        select count(*)\n        from {{ information_schema.replace(information_schema_view='SCHEMATA') }}\n        where catalog_name='{{ information_schema.database }}'\n          and schema_name='{{ schema }}'\n  {%- endset %}\n  {{ return(run_query(sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.replace", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7130632, "supported_languages": null}, "macro.dbt.list_relations_without_caching": {"name": "list_relations_without_caching", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.list_relations_without_caching", "macro_sql": "{% macro list_relations_without_caching(schema_relation) %}\n  {{ return(adapter.dispatch('list_relations_without_caching', 'dbt')(schema_relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__list_relations_without_caching"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7132404, "supported_languages": null}, "macro.dbt.default__list_relations_without_caching": {"name": "default__list_relations_without_caching", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__list_relations_without_caching", "macro_sql": "{% macro default__list_relations_without_caching(schema_relation) %}\n  {{ exceptions.raise_not_implemented(\n    'list_relations_without_caching macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7134004, "supported_languages": null}, "macro.dbt.get_catalog_for_single_relation": {"name": "get_catalog_for_single_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.get_catalog_for_single_relation", "macro_sql": "{% macro get_catalog_for_single_relation(relation) %}\n  {{ return(adapter.dispatch('get_catalog_for_single_relation', 'dbt')(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_catalog_for_single_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7135942, "supported_languages": null}, "macro.dbt.default__get_catalog_for_single_relation": {"name": "default__get_catalog_for_single_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__get_catalog_for_single_relation", "macro_sql": "{% macro default__get_catalog_for_single_relation(relation) %}\n  {{ exceptions.raise_not_implemented(\n    'get_catalog_for_single_relation macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7137446, "supported_languages": null}, "macro.dbt.get_relations": {"name": "get_relations", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.get_relations", "macro_sql": "{% macro get_relations() %}\n  {{ return(adapter.dispatch('get_relations', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_relations"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.713898, "supported_languages": null}, "macro.dbt.default__get_relations": {"name": "default__get_relations", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__get_relations", "macro_sql": "{% macro default__get_relations() %}\n  {{ exceptions.raise_not_implemented(\n    'get_relations macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7140367, "supported_languages": null}, "macro.dbt.get_relation_last_modified": {"name": "get_relation_last_modified", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.get_relation_last_modified", "macro_sql": "{% macro get_relation_last_modified(information_schema, relations) %}\n  {{ return(adapter.dispatch('get_relation_last_modified', 'dbt')(information_schema, relations)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_relation_last_modified"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7142198, "supported_languages": null}, "macro.dbt.default__get_relation_last_modified": {"name": "default__get_relation_last_modified", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__get_relation_last_modified", "macro_sql": "{% macro default__get_relation_last_modified(information_schema, relations) %}\n  {{ exceptions.raise_not_implemented(\n    'get_relation_last_modified macro not implemented for adapter ' + adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7143936, "supported_languages": null}, "macro.dbt.get_columns_in_relation": {"name": "get_columns_in_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.get_columns_in_relation", "macro_sql": "{% macro get_columns_in_relation(relation) -%}\n  {{ return(adapter.dispatch('get_columns_in_relation', 'dbt')(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__get_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7154446, "supported_languages": null}, "macro.dbt.default__get_columns_in_relation": {"name": "default__get_columns_in_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.default__get_columns_in_relation", "macro_sql": "{% macro default__get_columns_in_relation(relation) -%}\n  {{ exceptions.raise_not_implemented(\n    'get_columns_in_relation macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.715617, "supported_languages": null}, "macro.dbt.sql_convert_columns_in_relation": {"name": "sql_convert_columns_in_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.sql_convert_columns_in_relation", "macro_sql": "{% macro sql_convert_columns_in_relation(table) -%}\n  {% set columns = [] %}\n  {% for row in table %}\n    {% do columns.append(api.Column(*row)) %}\n  {% endfor %}\n  {{ return(columns) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7163572, "supported_languages": null}, "macro.dbt.get_empty_subquery_sql": {"name": "get_empty_subquery_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.get_empty_subquery_sql", "macro_sql": "{% macro get_empty_subquery_sql(select_sql, select_sql_header=none) -%}\n  {{ return(adapter.dispatch('get_empty_subquery_sql', 'dbt')(select_sql, select_sql_header)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_empty_subquery_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.716587, "supported_languages": null}, "macro.dbt.default__get_empty_subquery_sql": {"name": "default__get_empty_subquery_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.default__get_empty_subquery_sql", "macro_sql": "{% macro default__get_empty_subquery_sql(select_sql, select_sql_header=none) %}\n    {%- if select_sql_header is not none -%}\n    {{ select_sql_header }}\n    {%- endif -%}\n    select * from (\n        {{ select_sql }}\n    ) as __dbt_sbq\n    where false\n    limit 0\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.716796, "supported_languages": null}, "macro.dbt.get_empty_schema_sql": {"name": "get_empty_schema_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.get_empty_schema_sql", "macro_sql": "{% macro get_empty_schema_sql(columns) -%}\n  {{ return(adapter.dispatch('get_empty_schema_sql', 'dbt')(columns)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_empty_schema_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7169697, "supported_languages": null}, "macro.dbt.default__get_empty_schema_sql": {"name": "default__get_empty_schema_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.default__get_empty_schema_sql", "macro_sql": "{% macro default__get_empty_schema_sql(columns) %}\n    {%- set col_err = [] -%}\n    {%- set col_naked_numeric = [] -%}\n    select\n    {% for i in columns %}\n      {%- set col = columns[i] -%}\n      {%- if col['data_type'] is not defined -%}\n        {%- do col_err.append(col['name']) -%}\n      {#-- If this column's type is just 'numeric' then it is missing precision/scale, raise a warning --#}\n      {%- elif col['data_type'].strip().lower() in ('numeric', 'decimal', 'number') -%}\n        {%- do col_naked_numeric.append(col['name']) -%}\n      {%- endif -%}\n      {% set col_name = adapter.quote(col['name']) if col.get('quote') else col['name'] %}\n      {{ cast('null', col['data_type']) }} as {{ col_name }}{{ \", \" if not loop.last }}\n    {%- endfor -%}\n    {%- if (col_err | length) > 0 -%}\n      {{ exceptions.column_type_missing(column_names=col_err) }}\n    {%- elif (col_naked_numeric | length) > 0 -%}\n      {{ exceptions.warn(\"Detected columns with numeric type and unspecified precision/scale, this can lead to unintended rounding: \" ~ col_naked_numeric ~ \"`\") }}\n    {%- endif -%}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.cast"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.71807, "supported_languages": null}, "macro.dbt.get_column_schema_from_query": {"name": "get_column_schema_from_query", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.get_column_schema_from_query", "macro_sql": "{% macro get_column_schema_from_query(select_sql, select_sql_header=none) -%}\n    {% set columns = [] %}\n    {# -- Using an 'empty subquery' here to get the same schema as the given select_sql statement, without necessitating a data scan.#}\n    {% set sql = get_empty_subquery_sql(select_sql, select_sql_header) %}\n    {% set column_schema = adapter.get_column_schema_from_query(sql) %}\n    {{ return(column_schema) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_empty_subquery_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7184138, "supported_languages": null}, "macro.dbt.get_columns_in_query": {"name": "get_columns_in_query", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.get_columns_in_query", "macro_sql": "{% macro get_columns_in_query(select_sql) -%}\n  {{ return(adapter.dispatch('get_columns_in_query', 'dbt')(select_sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_columns_in_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7185912, "supported_languages": null}, "macro.dbt.default__get_columns_in_query": {"name": "default__get_columns_in_query", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.default__get_columns_in_query", "macro_sql": "{% macro default__get_columns_in_query(select_sql) %}\n    {% call statement('get_columns_in_query', fetch_result=True, auto_begin=False) -%}\n        {{ get_empty_subquery_sql(select_sql) }}\n    {% endcall %}\n    {{ return(load_result('get_columns_in_query').table.columns | map(attribute='name') | list) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.get_empty_subquery_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7189126, "supported_languages": null}, "macro.dbt.alter_column_type": {"name": "alter_column_type", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.alter_column_type", "macro_sql": "{% macro alter_column_type(relation, column_name, new_column_type) -%}\n  {{ return(adapter.dispatch('alter_column_type', 'dbt')(relation, column_name, new_column_type)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__alter_column_type"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.719146, "supported_languages": null}, "macro.dbt.default__alter_column_type": {"name": "default__alter_column_type", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.default__alter_column_type", "macro_sql": "{% macro default__alter_column_type(relation, column_name, new_column_type) -%}\n  {#\n    1. Create a new column (w/ temp name and correct type)\n    2. Copy data over to it\n    3. Drop the existing column (cascade!)\n    4. Rename the new column to existing column\n  #}\n  {%- set tmp_column = column_name + \"__dbt_alter\" -%}\n\n  {% call statement('alter_column_type') %}\n    alter table {{ relation.render() }} add column {{ adapter.quote(tmp_column) }} {{ new_column_type }};\n    update {{ relation.render() }} set {{ adapter.quote(tmp_column) }} = {{ adapter.quote(column_name) }};\n    alter table {{ relation.render() }} drop column {{ adapter.quote(column_name) }} cascade;\n    alter table {{ relation.render() }} rename column {{ adapter.quote(tmp_column) }} to {{ adapter.quote(column_name) }}\n  {% endcall %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7197611, "supported_languages": null}, "macro.dbt.alter_relation_add_remove_columns": {"name": "alter_relation_add_remove_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.alter_relation_add_remove_columns", "macro_sql": "{% macro alter_relation_add_remove_columns(relation, add_columns = none, remove_columns = none) -%}\n  {{ return(adapter.dispatch('alter_relation_add_remove_columns', 'dbt')(relation, add_columns, remove_columns)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__alter_relation_add_remove_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7200549, "supported_languages": null}, "macro.dbt.default__alter_relation_add_remove_columns": {"name": "default__alter_relation_add_remove_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.default__alter_relation_add_remove_columns", "macro_sql": "{% macro default__alter_relation_add_remove_columns(relation, add_columns, remove_columns) %}\n\n  {% if add_columns is none %}\n    {% set add_columns = [] %}\n  {% endif %}\n  {% if remove_columns is none %}\n    {% set remove_columns = [] %}\n  {% endif %}\n\n  {% set sql -%}\n\n     alter {{ relation.type }} {{ relation.render() }}\n\n            {% for column in add_columns %}\n               add column {{ column.name }} {{ column.data_type }}{{ ',' if not loop.last }}\n            {% endfor %}{{ ',' if add_columns and remove_columns }}\n\n            {% for column in remove_columns %}\n                drop column {{ column.name }}{{ ',' if not loop.last }}\n            {% endfor %}\n\n  {%- endset -%}\n\n  {% do run_query(sql) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7208254, "supported_languages": null}, "macro.dbt.create_schema": {"name": "create_schema", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "unique_id": "macro.dbt.create_schema", "macro_sql": "{% macro create_schema(relation) -%}\n  {{ adapter.dispatch('create_schema', 'dbt')(relation) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__create_schema"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7211738, "supported_languages": null}, "macro.dbt.default__create_schema": {"name": "default__create_schema", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "unique_id": "macro.dbt.default__create_schema", "macro_sql": "{% macro default__create_schema(relation) -%}\n  {%- call statement('create_schema') -%}\n    create schema if not exists {{ relation.without_identifier() }}\n  {% endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.721388, "supported_languages": null}, "macro.dbt.drop_schema": {"name": "drop_schema", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "unique_id": "macro.dbt.drop_schema", "macro_sql": "{% macro drop_schema(relation) -%}\n  {{ adapter.dispatch('drop_schema', 'dbt')(relation) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__drop_schema"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7215445, "supported_languages": null}, "macro.dbt.default__drop_schema": {"name": "default__drop_schema", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "unique_id": "macro.dbt.default__drop_schema", "macro_sql": "{% macro default__drop_schema(relation) -%}\n  {%- call statement('drop_schema') -%}\n    drop schema if exists {{ relation.without_identifier() }} cascade\n  {% endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.721723, "supported_languages": null}, "macro.dbt.collect_freshness": {"name": "collect_freshness", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/freshness.sql", "original_file_path": "macros/adapters/freshness.sql", "unique_id": "macro.dbt.collect_freshness", "macro_sql": "{% macro collect_freshness(source, loaded_at_field, filter) %}\n  {{ return(adapter.dispatch('collect_freshness', 'dbt')(source, loaded_at_field, filter))}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__collect_freshness"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7221508, "supported_languages": null}, "macro.dbt.default__collect_freshness": {"name": "default__collect_freshness", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/freshness.sql", "original_file_path": "macros/adapters/freshness.sql", "unique_id": "macro.dbt.default__collect_freshness", "macro_sql": "{% macro default__collect_freshness(source, loaded_at_field, filter) %}\n  {% call statement('collect_freshness', fetch_result=True, auto_begin=False) -%}\n    select\n      max({{ loaded_at_field }}) as max_loaded_at,\n      {{ current_timestamp() }} as snapshotted_at\n    from {{ source }}\n    {% if filter %}\n    where {{ filter }}\n    {% endif %}\n  {% endcall %}\n  {{ return(load_result('collect_freshness')) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7225368, "supported_languages": null}, "macro.dbt.collect_freshness_custom_sql": {"name": "collect_freshness_custom_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/freshness.sql", "original_file_path": "macros/adapters/freshness.sql", "unique_id": "macro.dbt.collect_freshness_custom_sql", "macro_sql": "{% macro collect_freshness_custom_sql(source, loaded_at_query) %}\n  {{ return(adapter.dispatch('collect_freshness_custom_sql', 'dbt')(source, loaded_at_query))}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__collect_freshness_custom_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7227385, "supported_languages": null}, "macro.dbt.default__collect_freshness_custom_sql": {"name": "default__collect_freshness_custom_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/freshness.sql", "original_file_path": "macros/adapters/freshness.sql", "unique_id": "macro.dbt.default__collect_freshness_custom_sql", "macro_sql": "{% macro default__collect_freshness_custom_sql(source, loaded_at_query) %}\n  {% call statement('collect_freshness_custom_sql', fetch_result=True, auto_begin=False) -%}\n  with source_query as (\n    {{ loaded_at_query }}\n  )\n  select\n    (select * from source_query) as max_loaded_at,\n    {{ current_timestamp() }} as snapshotted_at\n  {% endcall %}\n  {{ return(load_result('collect_freshness_custom_sql')) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7230282, "supported_languages": null}, "macro.dbt.make_intermediate_relation": {"name": "make_intermediate_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.make_intermediate_relation", "macro_sql": "{% macro make_intermediate_relation(base_relation, suffix='__dbt_tmp') %}\n  {{ return(adapter.dispatch('make_intermediate_relation', 'dbt')(base_relation, suffix)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__make_intermediate_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7237089, "supported_languages": null}, "macro.dbt.default__make_intermediate_relation": {"name": "default__make_intermediate_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.default__make_intermediate_relation", "macro_sql": "{% macro default__make_intermediate_relation(base_relation, suffix) %}\n    {{ return(default__make_temp_relation(base_relation, suffix)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__make_temp_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7238824, "supported_languages": null}, "macro.dbt.make_temp_relation": {"name": "make_temp_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.make_temp_relation", "macro_sql": "{% macro make_temp_relation(base_relation, suffix='__dbt_tmp') %}\n  {#-- This ensures microbatch batches get unique temp relations to avoid clobbering --#}\n  {% if suffix == '__dbt_tmp' and model.batch %}\n    {% set suffix = suffix ~ '_' ~ model.batch.id %}\n  {% endif %}\n\n  {{ return(adapter.dispatch('make_temp_relation', 'dbt')(base_relation, suffix)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__make_temp_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7242594, "supported_languages": null}, "macro.dbt.default__make_temp_relation": {"name": "default__make_temp_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.default__make_temp_relation", "macro_sql": "{% macro default__make_temp_relation(base_relation, suffix) %}\n    {%- set temp_identifier = base_relation.identifier ~ suffix -%}\n    {%- set temp_relation = base_relation.incorporate(\n                                path={\"identifier\": temp_identifier}) -%}\n\n    {{ return(temp_relation) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7245374, "supported_languages": null}, "macro.dbt.make_backup_relation": {"name": "make_backup_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.make_backup_relation", "macro_sql": "{% macro make_backup_relation(base_relation, backup_relation_type, suffix='__dbt_backup') %}\n    {{ return(adapter.dispatch('make_backup_relation', 'dbt')(base_relation, backup_relation_type, suffix)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__make_backup_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7247658, "supported_languages": null}, "macro.dbt.default__make_backup_relation": {"name": "default__make_backup_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.default__make_backup_relation", "macro_sql": "{% macro default__make_backup_relation(base_relation, backup_relation_type, suffix) %}\n    {%- set backup_identifier = base_relation.identifier ~ suffix -%}\n    {%- set backup_relation = base_relation.incorporate(\n                                  path={\"identifier\": backup_identifier},\n                                  type=backup_relation_type\n    ) -%}\n    {{ return(backup_relation) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.725065, "supported_languages": null}, "macro.dbt.truncate_relation": {"name": "truncate_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.truncate_relation", "macro_sql": "{% macro truncate_relation(relation) -%}\n  {{ return(adapter.dispatch('truncate_relation', 'dbt')(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__truncate_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7253776, "supported_languages": null}, "macro.dbt.default__truncate_relation": {"name": "default__truncate_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.default__truncate_relation", "macro_sql": "{% macro default__truncate_relation(relation) -%}\n  {% call statement('truncate_relation') -%}\n    truncate table {{ relation.render() }}\n  {%- endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7255836, "supported_languages": null}, "macro.dbt.get_or_create_relation": {"name": "get_or_create_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.get_or_create_relation", "macro_sql": "{% macro get_or_create_relation(database, schema, identifier, type) -%}\n  {{ return(adapter.dispatch('get_or_create_relation', 'dbt')(database, schema, identifier, type)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_or_create_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7258103, "supported_languages": null}, "macro.dbt.default__get_or_create_relation": {"name": "default__get_or_create_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.default__get_or_create_relation", "macro_sql": "{% macro default__get_or_create_relation(database, schema, identifier, type) %}\n  {%- set target_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) %}\n\n  {% if target_relation %}\n    {% do return([true, target_relation]) %}\n  {% endif %}\n\n  {%- set new_relation = api.Relation.create(\n      database=database,\n      schema=schema,\n      identifier=identifier,\n      type=type\n  ) -%}\n  {% do return([false, new_relation]) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7263048, "supported_languages": null}, "macro.dbt.load_cached_relation": {"name": "load_cached_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.load_cached_relation", "macro_sql": "{% macro load_cached_relation(relation) %}\n  {% do return(adapter.get_relation(\n    database=relation.database,\n    schema=relation.schema,\n    identifier=relation.identifier\n  )) -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7265131, "supported_languages": null}, "macro.dbt.load_relation": {"name": "load_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.load_relation", "macro_sql": "{% macro load_relation(relation) %}\n    {{ return(load_cached_relation(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.load_cached_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7266521, "supported_languages": null}, "macro.dbt.get_create_index_sql": {"name": "get_create_index_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.get_create_index_sql", "macro_sql": "{% macro get_create_index_sql(relation, index_dict) -%}\n  {{ return(adapter.dispatch('get_create_index_sql', 'dbt')(relation, index_dict)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_create_index_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7271254, "supported_languages": null}, "macro.dbt.default__get_create_index_sql": {"name": "default__get_create_index_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.default__get_create_index_sql", "macro_sql": "{% macro default__get_create_index_sql(relation, index_dict) -%}\n  {% do return(None) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.727293, "supported_languages": null}, "macro.dbt.create_indexes": {"name": "create_indexes", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.create_indexes", "macro_sql": "{% macro create_indexes(relation) -%}\n  {{ adapter.dispatch('create_indexes', 'dbt')(relation) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.727457, "supported_languages": null}, "macro.dbt.default__create_indexes": {"name": "default__create_indexes", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.default__create_indexes", "macro_sql": "{% macro default__create_indexes(relation) -%}\n  {%- set _indexes = config.get('indexes', default=[]) -%}\n\n  {% for _index_dict in _indexes %}\n    {% set create_index_sql = get_create_index_sql(relation, _index_dict) %}\n    {% if create_index_sql %}\n      {% do run_query(create_index_sql) %}\n    {% endif %}\n  {% endfor %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_create_index_sql", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.727843, "supported_languages": null}, "macro.dbt.get_drop_index_sql": {"name": "get_drop_index_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.get_drop_index_sql", "macro_sql": "{% macro get_drop_index_sql(relation, index_name) -%}\n    {{ adapter.dispatch('get_drop_index_sql', 'dbt')(relation, index_name) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_drop_index_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.72804, "supported_languages": null}, "macro.dbt.default__get_drop_index_sql": {"name": "default__get_drop_index_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.default__get_drop_index_sql", "macro_sql": "{% macro default__get_drop_index_sql(relation, index_name) -%}\n    {{ exceptions.raise_compiler_error(\"`get_drop_index_sql has not been implemented for this adapter.\") }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7281802, "supported_languages": null}, "macro.dbt.get_show_indexes_sql": {"name": "get_show_indexes_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.get_show_indexes_sql", "macro_sql": "{% macro get_show_indexes_sql(relation) -%}\n    {{ adapter.dispatch('get_show_indexes_sql', 'dbt')(relation) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_show_indexes_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7283337, "supported_languages": null}, "macro.dbt.default__get_show_indexes_sql": {"name": "default__get_show_indexes_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.default__get_show_indexes_sql", "macro_sql": "{% macro default__get_show_indexes_sql(relation) -%}\n    {{ exceptions.raise_compiler_error(\"`get_show_indexes_sql has not been implemented for this adapter.\") }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7284577, "supported_languages": null}, "macro.dbt.current_timestamp": {"name": "current_timestamp", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.current_timestamp", "macro_sql": "{%- macro current_timestamp() -%}\n    {{ adapter.dispatch('current_timestamp', 'dbt')() }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7289143, "supported_languages": null}, "macro.dbt.default__current_timestamp": {"name": "default__current_timestamp", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.default__current_timestamp", "macro_sql": "{% macro default__current_timestamp() -%}\n  {{ exceptions.raise_not_implemented(\n    'current_timestamp macro not implemented for adapter ' + adapter.type()) }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7290955, "supported_languages": null}, "macro.dbt.snapshot_get_time": {"name": "snapshot_get_time", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.snapshot_get_time", "macro_sql": "\n\n{%- macro snapshot_get_time() -%}\n    {{ adapter.dispatch('snapshot_get_time', 'dbt')() }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__snapshot_get_time"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7292414, "supported_languages": null}, "macro.dbt.default__snapshot_get_time": {"name": "default__snapshot_get_time", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.default__snapshot_get_time", "macro_sql": "{% macro default__snapshot_get_time() %}\n    {{ current_timestamp() }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.729352, "supported_languages": null}, "macro.dbt.get_snapshot_get_time_data_type": {"name": "get_snapshot_get_time_data_type", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.get_snapshot_get_time_data_type", "macro_sql": "{% macro get_snapshot_get_time_data_type() %}\n    {% set snapshot_time = adapter.dispatch('snapshot_get_time', 'dbt')() %}\n    {% set time_data_type_sql = 'select ' ~ snapshot_time ~ ' as dbt_snapshot_time' %}\n    {% set snapshot_time_column_schema = get_column_schema_from_query(time_data_type_sql) %}\n    {% set time_data_type = snapshot_time_column_schema[0].dtype %}\n    {{ return(time_data_type or none) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.snapshot_get_time", "macro.dbt_duckdb.duckdb__snapshot_get_time", "macro.dbt.get_column_schema_from_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7297342, "supported_languages": null}, "macro.dbt.current_timestamp_backcompat": {"name": "current_timestamp_backcompat", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.current_timestamp_backcompat", "macro_sql": "{% macro current_timestamp_backcompat() %}\n    {{ return(adapter.dispatch('current_timestamp_backcompat', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__current_timestamp_backcompat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7298944, "supported_languages": null}, "macro.dbt.default__current_timestamp_backcompat": {"name": "default__current_timestamp_backcompat", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.default__current_timestamp_backcompat", "macro_sql": "{% macro default__current_timestamp_backcompat() %}\n    current_timestamp::timestamp\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7300022, "supported_languages": null}, "macro.dbt.current_timestamp_in_utc_backcompat": {"name": "current_timestamp_in_utc_backcompat", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.current_timestamp_in_utc_backcompat", "macro_sql": "{% macro current_timestamp_in_utc_backcompat() %}\n    {{ return(adapter.dispatch('current_timestamp_in_utc_backcompat', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__current_timestamp_in_utc_backcompat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7301667, "supported_languages": null}, "macro.dbt.default__current_timestamp_in_utc_backcompat": {"name": "default__current_timestamp_in_utc_backcompat", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.default__current_timestamp_in_utc_backcompat", "macro_sql": "{% macro default__current_timestamp_in_utc_backcompat() %}\n    {{ return(adapter.dispatch('current_timestamp_backcompat', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.current_timestamp_backcompat", "macro.dbt.default__current_timestamp_backcompat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.730321, "supported_languages": null}, "macro.dbt.validate_sql": {"name": "validate_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/validate_sql.sql", "original_file_path": "macros/adapters/validate_sql.sql", "unique_id": "macro.dbt.validate_sql", "macro_sql": "{% macro validate_sql(sql) -%}\n  {{ return(adapter.dispatch('validate_sql', 'dbt')(sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__validate_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.730596, "supported_languages": null}, "macro.dbt.default__validate_sql": {"name": "default__validate_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/validate_sql.sql", "original_file_path": "macros/adapters/validate_sql.sql", "unique_id": "macro.dbt.default__validate_sql", "macro_sql": "{% macro default__validate_sql(sql) -%}\n  {% call statement('validate_sql') -%}\n    explain {{ sql }}\n  {% endcall %}\n  {{ return(load_result('validate_sql')) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.730833, "supported_languages": null}, "macro.dbt.copy_grants": {"name": "copy_grants", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.copy_grants", "macro_sql": "{% macro copy_grants() %}\n    {{ return(adapter.dispatch('copy_grants', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__copy_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7318351, "supported_languages": null}, "macro.dbt.default__copy_grants": {"name": "default__copy_grants", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__copy_grants", "macro_sql": "{% macro default__copy_grants() %}\n    {{ return(True) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.731972, "supported_languages": null}, "macro.dbt.support_multiple_grantees_per_dcl_statement": {"name": "support_multiple_grantees_per_dcl_statement", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.support_multiple_grantees_per_dcl_statement", "macro_sql": "{% macro support_multiple_grantees_per_dcl_statement() %}\n    {{ return(adapter.dispatch('support_multiple_grantees_per_dcl_statement', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__support_multiple_grantees_per_dcl_statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7322197, "supported_languages": null}, "macro.dbt.default__support_multiple_grantees_per_dcl_statement": {"name": "default__support_multiple_grantees_per_dcl_statement", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__support_multiple_grantees_per_dcl_statement", "macro_sql": "\n\n{%- macro default__support_multiple_grantees_per_dcl_statement() -%}\n    {{ return(True) }}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7323434, "supported_languages": null}, "macro.dbt.should_revoke": {"name": "should_revoke", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.should_revoke", "macro_sql": "{% macro should_revoke(existing_relation, full_refresh_mode=True) %}\n\n    {% if not existing_relation %}\n        {#-- The table doesn't already exist, so no grants to copy over --#}\n        {{ return(False) }}\n    {% elif full_refresh_mode %}\n        {#-- The object is being REPLACED -- whether grants are copied over depends on the value of user config --#}\n        {{ return(copy_grants()) }}\n    {% else %}\n        {#-- The table is being merged/upserted/inserted -- grants will be carried over --#}\n        {{ return(True) }}\n    {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.copy_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7326863, "supported_languages": null}, "macro.dbt.get_show_grant_sql": {"name": "get_show_grant_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.get_show_grant_sql", "macro_sql": "{% macro get_show_grant_sql(relation) %}\n    {{ return(adapter.dispatch(\"get_show_grant_sql\", \"dbt\")(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_show_grant_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7328982, "supported_languages": null}, "macro.dbt.default__get_show_grant_sql": {"name": "default__get_show_grant_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__get_show_grant_sql", "macro_sql": "{% macro default__get_show_grant_sql(relation) %}\n    show grants on {{ relation.render() }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7330225, "supported_languages": null}, "macro.dbt.get_grant_sql": {"name": "get_grant_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.get_grant_sql", "macro_sql": "{% macro get_grant_sql(relation, privilege, grantees) %}\n    {{ return(adapter.dispatch('get_grant_sql', 'dbt')(relation, privilege, grantees)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_grant_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7332268, "supported_languages": null}, "macro.dbt.default__get_grant_sql": {"name": "default__get_grant_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__get_grant_sql", "macro_sql": "\n\n{%- macro default__get_grant_sql(relation, privilege, grantees) -%}\n    grant {{ privilege }} on {{ relation.render() }} to {{ grantees | join(', ') }}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7334256, "supported_languages": null}, "macro.dbt.get_revoke_sql": {"name": "get_revoke_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.get_revoke_sql", "macro_sql": "{% macro get_revoke_sql(relation, privilege, grantees) %}\n    {{ return(adapter.dispatch('get_revoke_sql', 'dbt')(relation, privilege, grantees)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_revoke_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7336302, "supported_languages": null}, "macro.dbt.default__get_revoke_sql": {"name": "default__get_revoke_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__get_revoke_sql", "macro_sql": "\n\n{%- macro default__get_revoke_sql(relation, privilege, grantees) -%}\n    revoke {{ privilege }} on {{ relation.render() }} from {{ grantees | join(', ') }}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7338238, "supported_languages": null}, "macro.dbt.get_dcl_statement_list": {"name": "get_dcl_statement_list", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.get_dcl_statement_list", "macro_sql": "{% macro get_dcl_statement_list(relation, grant_config, get_dcl_macro) %}\n    {{ return(adapter.dispatch('get_dcl_statement_list', 'dbt')(relation, grant_config, get_dcl_macro)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_dcl_statement_list"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7340257, "supported_languages": null}, "macro.dbt.default__get_dcl_statement_list": {"name": "default__get_dcl_statement_list", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__get_dcl_statement_list", "macro_sql": "\n\n{%- macro default__get_dcl_statement_list(relation, grant_config, get_dcl_macro) -%}\n    {#\n      -- Unpack grant_config into specific privileges and the set of users who need them granted/revoked.\n      -- Depending on whether this database supports multiple grantees per statement, pass in the list of\n      -- all grantees per privilege, or (if not) template one statement per privilege-grantee pair.\n      -- `get_dcl_macro` will be either `get_grant_sql` or `get_revoke_sql`\n    #}\n    {%- set dcl_statements = [] -%}\n    {%- for privilege, grantees in grant_config.items() %}\n        {%- if support_multiple_grantees_per_dcl_statement() and grantees -%}\n          {%- set dcl = get_dcl_macro(relation, privilege, grantees) -%}\n          {%- do dcl_statements.append(dcl) -%}\n        {%- else -%}\n          {%- for grantee in grantees -%}\n              {% set dcl = get_dcl_macro(relation, privilege, [grantee]) %}\n              {%- do dcl_statements.append(dcl) -%}\n          {% endfor -%}\n        {%- endif -%}\n    {%- endfor -%}\n    {{ return(dcl_statements) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.support_multiple_grantees_per_dcl_statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7346463, "supported_languages": null}, "macro.dbt.call_dcl_statements": {"name": "call_dcl_statements", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.call_dcl_statements", "macro_sql": "{% macro call_dcl_statements(dcl_statement_list) %}\n    {{ return(adapter.dispatch(\"call_dcl_statements\", \"dbt\")(dcl_statement_list)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__call_dcl_statements"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7348557, "supported_languages": null}, "macro.dbt.default__call_dcl_statements": {"name": "default__call_dcl_statements", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__call_dcl_statements", "macro_sql": "{% macro default__call_dcl_statements(dcl_statement_list) %}\n    {#\n      -- By default, supply all grant + revoke statements in a single semicolon-separated block,\n      -- so that they're all processed together.\n\n      -- Some databases do not support this. Those adapters will need to override this macro\n      -- to run each statement individually.\n    #}\n    {% call statement('grants') %}\n        {% for dcl_statement in dcl_statement_list %}\n            {{ dcl_statement }};\n        {% endfor %}\n    {% endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.735097, "supported_languages": null}, "macro.dbt.apply_grants": {"name": "apply_grants", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.apply_grants", "macro_sql": "{% macro apply_grants(relation, grant_config, should_revoke) %}\n    {{ return(adapter.dispatch(\"apply_grants\", \"dbt\")(relation, grant_config, should_revoke)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__apply_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7352982, "supported_languages": null}, "macro.dbt.default__apply_grants": {"name": "default__apply_grants", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__apply_grants", "macro_sql": "{% macro default__apply_grants(relation, grant_config, should_revoke=True) %}\n    {#-- If grant_config is {} or None, this is a no-op --#}\n    {% if grant_config %}\n        {% if should_revoke %}\n            {#-- We think previous grants may have carried over --#}\n            {#-- Show current grants and calculate diffs --#}\n            {% set current_grants_table = run_query(get_show_grant_sql(relation)) %}\n            {% set current_grants_dict = adapter.standardize_grants_dict(current_grants_table) %}\n            {% set needs_granting = diff_of_two_dicts(grant_config, current_grants_dict) %}\n            {% set needs_revoking = diff_of_two_dicts(current_grants_dict, grant_config) %}\n            {% if not (needs_granting or needs_revoking) %}\n                {{ log('On ' ~ relation.render() ~': All grants are in place, no revocation or granting needed.')}}\n            {% endif %}\n        {% else %}\n            {#-- We don't think there's any chance of previous grants having carried over. --#}\n            {#-- Jump straight to granting what the user has configured. --#}\n            {% set needs_revoking = {} %}\n            {% set needs_granting = grant_config %}\n        {% endif %}\n        {% if needs_granting or needs_revoking %}\n            {% set revoke_statement_list = get_dcl_statement_list(relation, needs_revoking, get_revoke_sql) %}\n            {% set grant_statement_list = get_dcl_statement_list(relation, needs_granting, get_grant_sql) %}\n            {% set dcl_statement_list = revoke_statement_list + grant_statement_list %}\n            {% if dcl_statement_list %}\n                {{ call_dcl_statements(dcl_statement_list) }}\n            {% endif %}\n        {% endif %}\n    {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query", "macro.dbt.get_show_grant_sql", "macro.dbt.get_dcl_statement_list", "macro.dbt.call_dcl_statements"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.736611, "supported_languages": null}, "macro.dbt.alter_column_comment": {"name": "alter_column_comment", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "unique_id": "macro.dbt.alter_column_comment", "macro_sql": "{% macro alter_column_comment(relation, column_dict) -%}\n  {{ return(adapter.dispatch('alter_column_comment', 'dbt')(relation, column_dict)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7371643, "supported_languages": null}, "macro.dbt.default__alter_column_comment": {"name": "default__alter_column_comment", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "unique_id": "macro.dbt.default__alter_column_comment", "macro_sql": "{% macro default__alter_column_comment(relation, column_dict) -%}\n  {{ exceptions.raise_not_implemented(\n    'alter_column_comment macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7373383, "supported_languages": null}, "macro.dbt.alter_relation_comment": {"name": "alter_relation_comment", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "unique_id": "macro.dbt.alter_relation_comment", "macro_sql": "{% macro alter_relation_comment(relation, relation_comment) -%}\n  {{ return(adapter.dispatch('alter_relation_comment', 'dbt')(relation, relation_comment)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__alter_relation_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.737572, "supported_languages": null}, "macro.dbt.default__alter_relation_comment": {"name": "default__alter_relation_comment", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "unique_id": "macro.dbt.default__alter_relation_comment", "macro_sql": "{% macro default__alter_relation_comment(relation, relation_comment) -%}\n  {{ exceptions.raise_not_implemented(\n    'alter_relation_comment macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.737739, "supported_languages": null}, "macro.dbt.persist_docs": {"name": "persist_docs", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "unique_id": "macro.dbt.persist_docs", "macro_sql": "{% macro persist_docs(relation, model, for_relation=true, for_columns=true) -%}\n  {{ return(adapter.dispatch('persist_docs', 'dbt')(relation, model, for_relation, for_columns)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7379746, "supported_languages": null}, "macro.dbt.default__persist_docs": {"name": "default__persist_docs", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "unique_id": "macro.dbt.default__persist_docs", "macro_sql": "{% macro default__persist_docs(relation, model, for_relation, for_columns) -%}\n  {% if for_relation and config.persist_relation_docs() and model.description %}\n    {% do run_query(alter_relation_comment(relation, model.description)) %}\n  {% endif %}\n\n  {% if for_columns and config.persist_column_docs() and model.columns %}\n    {% do run_query(alter_column_comment(relation, model.columns)) %}\n  {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query", "macro.dbt.alter_relation_comment", "macro.dbt.alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.738392, "supported_languages": null}, "macro.dbt.get_show_sql": {"name": "get_show_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/show.sql", "original_file_path": "macros/adapters/show.sql", "unique_id": "macro.dbt.get_show_sql", "macro_sql": "{% macro get_show_sql(compiled_code, sql_header, limit) -%}\n  {%- if sql_header is not none -%}\n  {{ sql_header }}\n  {%- endif %}\n  {{ get_limit_subquery_sql(compiled_code, limit) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_limit_subquery_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7388017, "supported_languages": null}, "macro.dbt.get_limit_subquery_sql": {"name": "get_limit_subquery_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/show.sql", "original_file_path": "macros/adapters/show.sql", "unique_id": "macro.dbt.get_limit_subquery_sql", "macro_sql": "\n{%- macro get_limit_subquery_sql(sql, limit) -%}\n  {{ adapter.dispatch('get_limit_sql', 'dbt')(sql, limit) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__get_limit_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7389846, "supported_languages": null}, "macro.dbt.default__get_limit_sql": {"name": "default__get_limit_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/show.sql", "original_file_path": "macros/adapters/show.sql", "unique_id": "macro.dbt.default__get_limit_sql", "macro_sql": "{% macro default__get_limit_sql(sql, limit) %}\n  {{ sql }}\n  {% if limit is not none %}\n  limit {{ limit }}\n  {%- endif -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7391732, "supported_languages": null}, "macro.dbt.get_rename_sql": {"name": "get_rename_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/rename.sql", "original_file_path": "macros/relations/rename.sql", "unique_id": "macro.dbt.get_rename_sql", "macro_sql": "{%- macro get_rename_sql(relation, new_name) -%}\n    {{- log('Applying RENAME to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_rename_sql', 'dbt')(relation, new_name) -}}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt.default__get_rename_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7395935, "supported_languages": null}, "macro.dbt.default__get_rename_sql": {"name": "default__get_rename_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/rename.sql", "original_file_path": "macros/relations/rename.sql", "unique_id": "macro.dbt.default__get_rename_sql", "macro_sql": "{%- macro default__get_rename_sql(relation, new_name) -%}\n\n    {%- if relation.is_view -%}\n        {{ get_rename_view_sql(relation, new_name) }}\n\n    {%- elif relation.is_table -%}\n        {{ get_rename_table_sql(relation, new_name) }}\n\n    {%- elif relation.is_materialized_view -%}\n        {{ get_rename_materialized_view_sql(relation, new_name) }}\n\n    {%- else -%}\n        {{- exceptions.raise_compiler_error(\"`get_rename_sql` has not been implemented for: \" ~ relation.type ) -}}\n\n    {%- endif -%}\n\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt.get_rename_view_sql", "macro.dbt.get_rename_table_sql", "macro.dbt.get_rename_materialized_view_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7401104, "supported_languages": null}, "macro.dbt.rename_relation": {"name": "rename_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/rename.sql", "original_file_path": "macros/relations/rename.sql", "unique_id": "macro.dbt.rename_relation", "macro_sql": "{% macro rename_relation(from_relation, to_relation) -%}\n  {{ return(adapter.dispatch('rename_relation', 'dbt')(from_relation, to_relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__rename_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7403195, "supported_languages": null}, "macro.dbt.default__rename_relation": {"name": "default__rename_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/rename.sql", "original_file_path": "macros/relations/rename.sql", "unique_id": "macro.dbt.default__rename_relation", "macro_sql": "{% macro default__rename_relation(from_relation, to_relation) -%}\n  {% set target_name = adapter.quote_as_configured(to_relation.identifier, 'identifier') %}\n  {% call statement('rename_relation') -%}\n    alter table {{ from_relation.render() }} rename to {{ target_name }}\n  {%- endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7406087, "supported_languages": null}, "macro.dbt.get_create_backup_sql": {"name": "get_create_backup_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/create_backup.sql", "original_file_path": "macros/relations/create_backup.sql", "unique_id": "macro.dbt.get_create_backup_sql", "macro_sql": "{%- macro get_create_backup_sql(relation) -%}\n    {{- log('Applying CREATE BACKUP to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_create_backup_sql', 'dbt')(relation) -}}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt.default__get_create_backup_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7409465, "supported_languages": null}, "macro.dbt.default__get_create_backup_sql": {"name": "default__get_create_backup_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/create_backup.sql", "original_file_path": "macros/relations/create_backup.sql", "unique_id": "macro.dbt.default__get_create_backup_sql", "macro_sql": "{%- macro default__get_create_backup_sql(relation) -%}\n\n    -- get the standard backup name\n    {% set backup_relation = make_backup_relation(relation, relation.type) %}\n\n    -- drop any pre-existing backup\n    {{ get_drop_sql(backup_relation) }};\n\n    {{ get_rename_sql(relation, backup_relation.identifier) }}\n\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.make_backup_relation", "macro.dbt.get_drop_sql", "macro.dbt.get_rename_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.741206, "supported_languages": null}, "macro.dbt.get_drop_sql": {"name": "get_drop_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/drop.sql", "original_file_path": "macros/relations/drop.sql", "unique_id": "macro.dbt.get_drop_sql", "macro_sql": "{%- macro get_drop_sql(relation) -%}\n    {{- log('Applying DROP to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_drop_sql', 'dbt')(relation) -}}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt.default__get_drop_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7416375, "supported_languages": null}, "macro.dbt.default__get_drop_sql": {"name": "default__get_drop_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/drop.sql", "original_file_path": "macros/relations/drop.sql", "unique_id": "macro.dbt.default__get_drop_sql", "macro_sql": "{%- macro default__get_drop_sql(relation) -%}\n\n    {%- if relation.is_view -%}\n        {{ drop_view(relation) }}\n\n    {%- elif relation.is_table -%}\n        {{ drop_table(relation) }}\n\n    {%- elif relation.is_materialized_view -%}\n        {{ drop_materialized_view(relation) }}\n\n    {%- else -%}\n        drop {{ relation.type }} if exists {{ relation.render() }} cascade\n\n    {%- endif -%}\n\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt.drop_view", "macro.dbt.drop_table", "macro.dbt.drop_materialized_view"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.741995, "supported_languages": null}, "macro.dbt.drop_relation": {"name": "drop_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/drop.sql", "original_file_path": "macros/relations/drop.sql", "unique_id": "macro.dbt.drop_relation", "macro_sql": "{% macro drop_relation(relation) -%}\n    {{ return(adapter.dispatch('drop_relation', 'dbt')(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__drop_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7421913, "supported_languages": null}, "macro.dbt.default__drop_relation": {"name": "default__drop_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/drop.sql", "original_file_path": "macros/relations/drop.sql", "unique_id": "macro.dbt.default__drop_relation", "macro_sql": "{% macro default__drop_relation(relation) -%}\n    {% call statement('drop_relation', auto_begin=False) -%}\n        {{ get_drop_sql(relation) }}\n    {%- endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.get_drop_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.742401, "supported_languages": null}, "macro.dbt.drop_relation_if_exists": {"name": "drop_relation_if_exists", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/drop.sql", "original_file_path": "macros/relations/drop.sql", "unique_id": "macro.dbt.drop_relation_if_exists", "macro_sql": "{% macro drop_relation_if_exists(relation) %}\n  {% if relation is not none %}\n    {{ adapter.drop_relation(relation) }}\n  {% endif %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7425864, "supported_languages": null}, "macro.dbt.get_create_sql": {"name": "get_create_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/create.sql", "original_file_path": "macros/relations/create.sql", "unique_id": "macro.dbt.get_create_sql", "macro_sql": "{%- macro get_create_sql(relation, sql) -%}\n    {{- log('Applying CREATE to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_create_sql', 'dbt')(relation, sql) -}}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt.default__get_create_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7429678, "supported_languages": null}, "macro.dbt.default__get_create_sql": {"name": "default__get_create_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/create.sql", "original_file_path": "macros/relations/create.sql", "unique_id": "macro.dbt.default__get_create_sql", "macro_sql": "{%- macro default__get_create_sql(relation, sql) -%}\n\n    {%- if relation.is_view -%}\n        {{ get_create_view_as_sql(relation, sql) }}\n\n    {%- elif relation.is_table -%}\n        {{ get_create_table_as_sql(False, relation, sql) }}\n\n    {%- elif relation.is_materialized_view -%}\n        {{ get_create_materialized_view_as_sql(relation, sql) }}\n\n    {%- else -%}\n        {{- exceptions.raise_compiler_error(\"`get_create_sql` has not been implemented for: \" ~ relation.type ) -}}\n\n    {%- endif -%}\n\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.get_create_view_as_sql", "macro.dbt.get_create_table_as_sql", "macro.dbt.get_create_materialized_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7433674, "supported_languages": null}, "macro.dbt.drop_schema_named": {"name": "drop_schema_named", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/schema.sql", "original_file_path": "macros/relations/schema.sql", "unique_id": "macro.dbt.drop_schema_named", "macro_sql": "{% macro drop_schema_named(schema_name) %}\n    {{ return(adapter.dispatch('drop_schema_named', 'dbt') (schema_name)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__drop_schema_named"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7436306, "supported_languages": null}, "macro.dbt.default__drop_schema_named": {"name": "default__drop_schema_named", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/schema.sql", "original_file_path": "macros/relations/schema.sql", "unique_id": "macro.dbt.default__drop_schema_named", "macro_sql": "{% macro default__drop_schema_named(schema_name) %}\n  {% set schema_relation = api.Relation.create(schema=schema_name) %}\n  {{ adapter.drop_schema(schema_relation) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7438364, "supported_languages": null}, "macro.dbt.get_create_intermediate_sql": {"name": "get_create_intermediate_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/create_intermediate.sql", "original_file_path": "macros/relations/create_intermediate.sql", "unique_id": "macro.dbt.get_create_intermediate_sql", "macro_sql": "{%- macro get_create_intermediate_sql(relation, sql) -%}\n    {{- log('Applying CREATE INTERMEDIATE to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_create_intermediate_sql', 'dbt')(relation, sql) -}}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt.default__get_create_intermediate_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7441764, "supported_languages": null}, "macro.dbt.default__get_create_intermediate_sql": {"name": "default__get_create_intermediate_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/create_intermediate.sql", "original_file_path": "macros/relations/create_intermediate.sql", "unique_id": "macro.dbt.default__get_create_intermediate_sql", "macro_sql": "{%- macro default__get_create_intermediate_sql(relation, sql) -%}\n\n    -- get the standard intermediate name\n    {% set intermediate_relation = make_intermediate_relation(relation) %}\n\n    -- drop any pre-existing intermediate\n    {{ get_drop_sql(intermediate_relation) }};\n\n    {{ get_create_sql(intermediate_relation, sql) }}\n\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.make_intermediate_relation", "macro.dbt.get_drop_sql", "macro.dbt.get_create_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7444096, "supported_languages": null}, "macro.dbt.get_rename_intermediate_sql": {"name": "get_rename_intermediate_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/rename_intermediate.sql", "original_file_path": "macros/relations/rename_intermediate.sql", "unique_id": "macro.dbt.get_rename_intermediate_sql", "macro_sql": "{%- macro get_rename_intermediate_sql(relation) -%}\n    {{- log('Applying RENAME INTERMEDIATE to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_rename_intermediate_sql', 'dbt')(relation) -}}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt.default__get_rename_intermediate_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7447164, "supported_languages": null}, "macro.dbt.default__get_rename_intermediate_sql": {"name": "default__get_rename_intermediate_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/rename_intermediate.sql", "original_file_path": "macros/relations/rename_intermediate.sql", "unique_id": "macro.dbt.default__get_rename_intermediate_sql", "macro_sql": "{%- macro default__get_rename_intermediate_sql(relation) -%}\n\n    -- get the standard intermediate name\n    {% set intermediate_relation = make_intermediate_relation(relation) %}\n\n    {{ get_rename_sql(intermediate_relation, relation.identifier) }}\n\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.make_intermediate_relation", "macro.dbt.get_rename_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.744924, "supported_languages": null}, "macro.dbt.get_replace_sql": {"name": "get_replace_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/replace.sql", "original_file_path": "macros/relations/replace.sql", "unique_id": "macro.dbt.get_replace_sql", "macro_sql": "{% macro get_replace_sql(existing_relation, target_relation, sql) %}\n    {{- log('Applying REPLACE to: ' ~ existing_relation) -}}\n    {{- adapter.dispatch('get_replace_sql', 'dbt')(existing_relation, target_relation, sql) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_replace_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7454357, "supported_languages": null}, "macro.dbt.default__get_replace_sql": {"name": "default__get_replace_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/replace.sql", "original_file_path": "macros/relations/replace.sql", "unique_id": "macro.dbt.default__get_replace_sql", "macro_sql": "{% macro default__get_replace_sql(existing_relation, target_relation, sql) %}\n\n    {# /* use a create or replace statement if possible */ #}\n\n    {% set is_replaceable = existing_relation.type == target_relation.type and existing_relation.can_be_replaced %}\n\n    {% if is_replaceable and existing_relation.is_view %}\n        {{ get_replace_view_sql(target_relation, sql) }}\n\n    {% elif is_replaceable and existing_relation.is_table %}\n        {{ get_replace_table_sql(target_relation, sql) }}\n\n    {% elif is_replaceable and existing_relation.is_materialized_view %}\n        {{ get_replace_materialized_view_sql(target_relation, sql) }}\n\n    {# /* a create or replace statement is not possible, so try to stage and/or backup to be safe */ #}\n\n    {# /* create target_relation as an intermediate relation, then swap it out with the existing one using a backup */ #}\n    {%- elif target_relation.can_be_renamed and existing_relation.can_be_renamed -%}\n        {{ get_create_intermediate_sql(target_relation, sql) }};\n        {{ get_create_backup_sql(existing_relation) }};\n        {{ get_rename_intermediate_sql(target_relation) }};\n        {{ get_drop_backup_sql(existing_relation) }}\n\n    {# /* create target_relation as an intermediate relation, then swap it out with the existing one without using a backup */ #}\n    {%- elif target_relation.can_be_renamed -%}\n        {{ get_create_intermediate_sql(target_relation, sql) }};\n        {{ get_drop_sql(existing_relation) }};\n        {{ get_rename_intermediate_sql(target_relation) }}\n\n    {# /* create target_relation in place by first backing up the existing relation */ #}\n    {%- elif existing_relation.can_be_renamed -%}\n        {{ get_create_backup_sql(existing_relation) }};\n        {{ get_create_sql(target_relation, sql) }};\n        {{ get_drop_backup_sql(existing_relation) }}\n\n    {# /* no renaming is allowed, so just drop and create */ #}\n    {%- else -%}\n        {{ get_drop_sql(existing_relation) }};\n        {{ get_create_sql(target_relation, sql) }}\n\n    {%- endif -%}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_replace_view_sql", "macro.dbt.get_replace_table_sql", "macro.dbt.get_replace_materialized_view_sql", "macro.dbt.get_create_intermediate_sql", "macro.dbt.get_create_backup_sql", "macro.dbt.get_rename_intermediate_sql", "macro.dbt.get_drop_backup_sql", "macro.dbt.get_drop_sql", "macro.dbt.get_create_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.746506, "supported_languages": null}, "macro.dbt.get_drop_backup_sql": {"name": "get_drop_backup_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/drop_backup.sql", "original_file_path": "macros/relations/drop_backup.sql", "unique_id": "macro.dbt.get_drop_backup_sql", "macro_sql": "{%- macro get_drop_backup_sql(relation) -%}\n    {{- log('Applying DROP BACKUP to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_drop_backup_sql', 'dbt')(relation) -}}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt.default__get_drop_backup_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7468352, "supported_languages": null}, "macro.dbt.default__get_drop_backup_sql": {"name": "default__get_drop_backup_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/drop_backup.sql", "original_file_path": "macros/relations/drop_backup.sql", "unique_id": "macro.dbt.default__get_drop_backup_sql", "macro_sql": "{%- macro default__get_drop_backup_sql(relation) -%}\n\n    -- get the standard backup name\n    {% set backup_relation = make_backup_relation(relation, relation.type) %}\n\n    {{ get_drop_sql(backup_relation) }}\n\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.make_backup_relation", "macro.dbt.get_drop_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7470386, "supported_languages": null}, "macro.dbt.get_table_columns_and_constraints": {"name": "get_table_columns_and_constraints", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/column/columns_spec_ddl.sql", "original_file_path": "macros/relations/column/columns_spec_ddl.sql", "unique_id": "macro.dbt.get_table_columns_and_constraints", "macro_sql": "{%- macro get_table_columns_and_constraints() -%}\n  {{ adapter.dispatch('get_table_columns_and_constraints', 'dbt')() }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__get_table_columns_and_constraints"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.747719, "supported_languages": null}, "macro.dbt.default__get_table_columns_and_constraints": {"name": "default__get_table_columns_and_constraints", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/column/columns_spec_ddl.sql", "original_file_path": "macros/relations/column/columns_spec_ddl.sql", "unique_id": "macro.dbt.default__get_table_columns_and_constraints", "macro_sql": "{% macro default__get_table_columns_and_constraints() -%}\n  {{ return(table_columns_and_constraints()) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.table_columns_and_constraints"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7478342, "supported_languages": null}, "macro.dbt.table_columns_and_constraints": {"name": "table_columns_and_constraints", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/column/columns_spec_ddl.sql", "original_file_path": "macros/relations/column/columns_spec_ddl.sql", "unique_id": "macro.dbt.table_columns_and_constraints", "macro_sql": "{% macro table_columns_and_constraints() %}\n  {# loop through user_provided_columns to create DDL with data types and constraints #}\n    {%- set raw_column_constraints = adapter.render_raw_columns_constraints(raw_columns=model['columns']) -%}\n    {%- set raw_model_constraints = adapter.render_raw_model_constraints(raw_constraints=model['constraints']) -%}\n    (\n    {% for c in raw_column_constraints -%}\n      {{ c }}{{ \",\" if not loop.last or raw_model_constraints }}\n    {% endfor %}\n    {% for c in raw_model_constraints -%}\n        {{ c }}{{ \",\" if not loop.last }}\n    {% endfor -%}\n    )\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7483284, "supported_languages": null}, "macro.dbt.get_assert_columns_equivalent": {"name": "get_assert_columns_equivalent", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/column/columns_spec_ddl.sql", "original_file_path": "macros/relations/column/columns_spec_ddl.sql", "unique_id": "macro.dbt.get_assert_columns_equivalent", "macro_sql": "\n\n{%- macro get_assert_columns_equivalent(sql) -%}\n  {{ adapter.dispatch('get_assert_columns_equivalent', 'dbt')(sql) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__get_assert_columns_equivalent"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7484953, "supported_languages": null}, "macro.dbt.default__get_assert_columns_equivalent": {"name": "default__get_assert_columns_equivalent", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/column/columns_spec_ddl.sql", "original_file_path": "macros/relations/column/columns_spec_ddl.sql", "unique_id": "macro.dbt.default__get_assert_columns_equivalent", "macro_sql": "{% macro default__get_assert_columns_equivalent(sql) -%}\n  {{ return(assert_columns_equivalent(sql)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.assert_columns_equivalent"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7486446, "supported_languages": null}, "macro.dbt.assert_columns_equivalent": {"name": "assert_columns_equivalent", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/column/columns_spec_ddl.sql", "original_file_path": "macros/relations/column/columns_spec_ddl.sql", "unique_id": "macro.dbt.assert_columns_equivalent", "macro_sql": "{% macro assert_columns_equivalent(sql) %}\n\n  {#-- First ensure the user has defined 'columns' in yaml specification --#}\n  {%- set user_defined_columns = model['columns'] -%}\n  {%- if not user_defined_columns -%}\n      {{ exceptions.raise_contract_error([], []) }}\n  {%- endif -%}\n\n  {#-- Obtain the column schema provided by sql file. #}\n  {%- set sql_file_provided_columns = get_column_schema_from_query(sql, config.get('sql_header', none)) -%}\n  {#--Obtain the column schema provided by the schema file by generating an 'empty schema' query from the model's columns. #}\n  {%- set schema_file_provided_columns = get_column_schema_from_query(get_empty_schema_sql(user_defined_columns)) -%}\n\n  {#-- create dictionaries with name and formatted data type and strings for exception #}\n  {%- set sql_columns = format_columns(sql_file_provided_columns) -%}\n  {%- set yaml_columns = format_columns(schema_file_provided_columns)  -%}\n\n  {%- if sql_columns|length != yaml_columns|length -%}\n    {%- do exceptions.raise_contract_error(yaml_columns, sql_columns) -%}\n  {%- endif -%}\n\n  {%- for sql_col in sql_columns -%}\n    {%- set yaml_col = [] -%}\n    {%- for this_col in yaml_columns -%}\n      {%- if this_col['name'] == sql_col['name'] -%}\n        {%- do yaml_col.append(this_col) -%}\n        {%- break -%}\n      {%- endif -%}\n    {%- endfor -%}\n    {%- if not yaml_col -%}\n      {#-- Column with name not found in yaml #}\n      {%- do exceptions.raise_contract_error(yaml_columns, sql_columns) -%}\n    {%- endif -%}\n    {%- if sql_col['formatted'] != yaml_col[0]['formatted'] -%}\n      {#-- Column data types don't match #}\n      {%- do exceptions.raise_contract_error(yaml_columns, sql_columns) -%}\n    {%- endif -%}\n  {%- endfor -%}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_column_schema_from_query", "macro.dbt.get_empty_schema_sql", "macro.dbt.format_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.749926, "supported_languages": null}, "macro.dbt.format_columns": {"name": "format_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/column/columns_spec_ddl.sql", "original_file_path": "macros/relations/column/columns_spec_ddl.sql", "unique_id": "macro.dbt.format_columns", "macro_sql": "{% macro format_columns(columns) %}\n  {% set formatted_columns = [] %}\n  {% for column in columns %}\n    {%- set formatted_column = adapter.dispatch('format_column', 'dbt')(column) -%}\n    {%- do formatted_columns.append(formatted_column) -%}\n  {% endfor %}\n  {{ return(formatted_columns) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__format_column"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7502937, "supported_languages": null}, "macro.dbt.default__format_column": {"name": "default__format_column", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/column/columns_spec_ddl.sql", "original_file_path": "macros/relations/column/columns_spec_ddl.sql", "unique_id": "macro.dbt.default__format_column", "macro_sql": "{% macro default__format_column(column) -%}\n  {% set data_type = column.dtype %}\n  {% set formatted = column.column.lower() ~ \" \" ~ data_type %}\n  {{ return({'name': column.name, 'data_type': data_type, 'formatted': formatted}) }}\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.750641, "supported_languages": null}, "macro.dbt.get_rename_view_sql": {"name": "get_rename_view_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/rename.sql", "original_file_path": "macros/relations/view/rename.sql", "unique_id": "macro.dbt.get_rename_view_sql", "macro_sql": "{% macro get_rename_view_sql(relation, new_name) %}\n    {{- adapter.dispatch('get_rename_view_sql', 'dbt')(relation, new_name) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_rename_view_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.750919, "supported_languages": null}, "macro.dbt.default__get_rename_view_sql": {"name": "default__get_rename_view_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/rename.sql", "original_file_path": "macros/relations/view/rename.sql", "unique_id": "macro.dbt.default__get_rename_view_sql", "macro_sql": "{% macro default__get_rename_view_sql(relation, new_name) %}\n    {{ exceptions.raise_compiler_error(\n        \"`get_rename_view_sql` has not been implemented for this adapter.\"\n    ) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.751065, "supported_languages": null}, "macro.dbt.drop_view": {"name": "drop_view", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/drop.sql", "original_file_path": "macros/relations/view/drop.sql", "unique_id": "macro.dbt.drop_view", "macro_sql": "{% macro drop_view(relation) -%}\n    {{- adapter.dispatch('drop_view', 'dbt')(relation) -}}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__drop_view"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7513263, "supported_languages": null}, "macro.dbt.default__drop_view": {"name": "default__drop_view", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/drop.sql", "original_file_path": "macros/relations/view/drop.sql", "unique_id": "macro.dbt.default__drop_view", "macro_sql": "{% macro default__drop_view(relation) -%}\n    drop view if exists {{ relation.render() }} cascade\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7514572, "supported_languages": null}, "macro.dbt.get_create_view_as_sql": {"name": "get_create_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/create.sql", "original_file_path": "macros/relations/view/create.sql", "unique_id": "macro.dbt.get_create_view_as_sql", "macro_sql": "{% macro get_create_view_as_sql(relation, sql) -%}\n  {{ adapter.dispatch('get_create_view_as_sql', 'dbt')(relation, sql) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_create_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7518196, "supported_languages": null}, "macro.dbt.default__get_create_view_as_sql": {"name": "default__get_create_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/create.sql", "original_file_path": "macros/relations/view/create.sql", "unique_id": "macro.dbt.default__get_create_view_as_sql", "macro_sql": "{% macro default__get_create_view_as_sql(relation, sql) -%}\n  {{ return(create_view_as(relation, sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.create_view_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.751991, "supported_languages": null}, "macro.dbt.create_view_as": {"name": "create_view_as", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/create.sql", "original_file_path": "macros/relations/view/create.sql", "unique_id": "macro.dbt.create_view_as", "macro_sql": "{% macro create_view_as(relation, sql) -%}\n  {{ adapter.dispatch('create_view_as', 'dbt')(relation, sql) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__create_view_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7521777, "supported_languages": null}, "macro.dbt.default__create_view_as": {"name": "default__create_view_as", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/create.sql", "original_file_path": "macros/relations/view/create.sql", "unique_id": "macro.dbt.default__create_view_as", "macro_sql": "{% macro default__create_view_as(relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n  create view {{ relation.render() }}\n    {% set contract_config = config.get('contract') %}\n    {% if contract_config.enforced %}\n      {{ get_assert_columns_equivalent(sql) }}\n    {%- endif %}\n  as (\n    {{ sql }}\n  );\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_assert_columns_equivalent"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7526667, "supported_languages": null}, "macro.dbt.get_replace_view_sql": {"name": "get_replace_view_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/replace.sql", "original_file_path": "macros/relations/view/replace.sql", "unique_id": "macro.dbt.get_replace_view_sql", "macro_sql": "{% macro get_replace_view_sql(relation, sql) %}\n    {{- adapter.dispatch('get_replace_view_sql', 'dbt')(relation, sql) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_replace_view_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7531753, "supported_languages": null}, "macro.dbt.default__get_replace_view_sql": {"name": "default__get_replace_view_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/replace.sql", "original_file_path": "macros/relations/view/replace.sql", "unique_id": "macro.dbt.default__get_replace_view_sql", "macro_sql": "{% macro default__get_replace_view_sql(relation, sql) %}\n    {{ exceptions.raise_compiler_error(\n        \"`get_replace_view_sql` has not been implemented for this adapter.\"\n    ) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.753327, "supported_languages": null}, "macro.dbt.create_or_replace_view": {"name": "create_or_replace_view", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/replace.sql", "original_file_path": "macros/relations/view/replace.sql", "unique_id": "macro.dbt.create_or_replace_view", "macro_sql": "{% macro create_or_replace_view() %}\n  {%- set identifier = model['alias'] -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n  {%- set exists_as_view = (old_relation is not none and old_relation.is_view) -%}\n\n  {%- set target_relation = api.Relation.create(\n      identifier=identifier, schema=schema, database=database,\n      type='view') -%}\n  {% set grant_config = config.get('grants') %}\n\n  {{ run_hooks(pre_hooks) }}\n\n  -- If there's a table with the same name and we weren't told to full refresh,\n  -- that's an error. If we were told to full refresh, drop it. This behavior differs\n  -- for Snowflake and BigQuery, so multiple dispatch is used.\n  {%- if old_relation is not none and old_relation.is_table -%}\n    {{ handle_existing_table(should_full_refresh(), old_relation) }}\n  {%- endif -%}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ get_create_view_as_sql(target_relation, sql) }}\n  {%- endcall %}\n\n  {% set should_revoke = should_revoke(exists_as_view, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {{ run_hooks(post_hooks) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.handle_existing_table", "macro.dbt.should_full_refresh", "macro.dbt.statement", "macro.dbt.get_create_view_as_sql", "macro.dbt.should_revoke", "macro.dbt.apply_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7543285, "supported_languages": null}, "macro.dbt.handle_existing_table": {"name": "handle_existing_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/replace.sql", "original_file_path": "macros/relations/view/replace.sql", "unique_id": "macro.dbt.handle_existing_table", "macro_sql": "{% macro handle_existing_table(full_refresh, old_relation) %}\n    {{ adapter.dispatch('handle_existing_table', 'dbt')(full_refresh, old_relation) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__handle_existing_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.754527, "supported_languages": null}, "macro.dbt.default__handle_existing_table": {"name": "default__handle_existing_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/replace.sql", "original_file_path": "macros/relations/view/replace.sql", "unique_id": "macro.dbt.default__handle_existing_table", "macro_sql": "{% macro default__handle_existing_table(full_refresh, old_relation) %}\n    {{ log(\"Dropping relation \" ~ old_relation.render() ~ \" because it is of type \" ~ old_relation.type) }}\n    {{ adapter.drop_relation(old_relation) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7547462, "supported_languages": null}, "macro.dbt.get_rename_materialized_view_sql": {"name": "get_rename_materialized_view_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/rename.sql", "original_file_path": "macros/relations/materialized_view/rename.sql", "unique_id": "macro.dbt.get_rename_materialized_view_sql", "macro_sql": "{% macro get_rename_materialized_view_sql(relation, new_name) %}\n    {{- adapter.dispatch('get_rename_materialized_view_sql', 'dbt')(relation, new_name) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_rename_materialized_view_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7550175, "supported_languages": null}, "macro.dbt.default__get_rename_materialized_view_sql": {"name": "default__get_rename_materialized_view_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/rename.sql", "original_file_path": "macros/relations/materialized_view/rename.sql", "unique_id": "macro.dbt.default__get_rename_materialized_view_sql", "macro_sql": "{% macro default__get_rename_materialized_view_sql(relation, new_name) %}\n    {{ exceptions.raise_compiler_error(\n        \"`get_rename_materialized_view_sql` has not been implemented for this adapter.\"\n    ) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7551613, "supported_languages": null}, "macro.dbt.refresh_materialized_view": {"name": "refresh_materialized_view", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/refresh.sql", "original_file_path": "macros/relations/materialized_view/refresh.sql", "unique_id": "macro.dbt.refresh_materialized_view", "macro_sql": "{% macro refresh_materialized_view(relation) %}\n    {{- log('Applying REFRESH to: ' ~ relation) -}}\n    {{- adapter.dispatch('refresh_materialized_view', 'dbt')(relation) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__refresh_materialized_view"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7555103, "supported_languages": null}, "macro.dbt.default__refresh_materialized_view": {"name": "default__refresh_materialized_view", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/refresh.sql", "original_file_path": "macros/relations/materialized_view/refresh.sql", "unique_id": "macro.dbt.default__refresh_materialized_view", "macro_sql": "{% macro default__refresh_materialized_view(relation) %}\n    {{ exceptions.raise_compiler_error(\"`refresh_materialized_view` has not been implemented for this adapter.\") }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7557752, "supported_languages": null}, "macro.dbt.drop_materialized_view": {"name": "drop_materialized_view", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/drop.sql", "original_file_path": "macros/relations/materialized_view/drop.sql", "unique_id": "macro.dbt.drop_materialized_view", "macro_sql": "{% macro drop_materialized_view(relation) -%}\n    {{- adapter.dispatch('drop_materialized_view', 'dbt')(relation) -}}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__drop_materialized_view"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7560377, "supported_languages": null}, "macro.dbt.default__drop_materialized_view": {"name": "default__drop_materialized_view", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/drop.sql", "original_file_path": "macros/relations/materialized_view/drop.sql", "unique_id": "macro.dbt.default__drop_materialized_view", "macro_sql": "{% macro default__drop_materialized_view(relation) -%}\n    drop materialized view if exists {{ relation.render() }} cascade\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7561598, "supported_languages": null}, "macro.dbt.get_create_materialized_view_as_sql": {"name": "get_create_materialized_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/create.sql", "original_file_path": "macros/relations/materialized_view/create.sql", "unique_id": "macro.dbt.get_create_materialized_view_as_sql", "macro_sql": "{% macro get_create_materialized_view_as_sql(relation, sql) -%}\n    {{- adapter.dispatch('get_create_materialized_view_as_sql', 'dbt')(relation, sql) -}}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_create_materialized_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7564445, "supported_languages": null}, "macro.dbt.default__get_create_materialized_view_as_sql": {"name": "default__get_create_materialized_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/create.sql", "original_file_path": "macros/relations/materialized_view/create.sql", "unique_id": "macro.dbt.default__get_create_materialized_view_as_sql", "macro_sql": "{% macro default__get_create_materialized_view_as_sql(relation, sql) -%}\n    {{ exceptions.raise_compiler_error(\n        \"`get_create_materialized_view_as_sql` has not been implemented for this adapter.\"\n    ) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7565942, "supported_languages": null}, "macro.dbt.get_alter_materialized_view_as_sql": {"name": "get_alter_materialized_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/alter.sql", "original_file_path": "macros/relations/materialized_view/alter.sql", "unique_id": "macro.dbt.get_alter_materialized_view_as_sql", "macro_sql": "{% macro get_alter_materialized_view_as_sql(\n    relation,\n    configuration_changes,\n    sql,\n    existing_relation,\n    backup_relation,\n    intermediate_relation\n) %}\n    {{- log('Applying ALTER to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_alter_materialized_view_as_sql', 'dbt')(\n        relation,\n        configuration_changes,\n        sql,\n        existing_relation,\n        backup_relation,\n        intermediate_relation\n    ) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_alter_materialized_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7570965, "supported_languages": null}, "macro.dbt.default__get_alter_materialized_view_as_sql": {"name": "default__get_alter_materialized_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/alter.sql", "original_file_path": "macros/relations/materialized_view/alter.sql", "unique_id": "macro.dbt.default__get_alter_materialized_view_as_sql", "macro_sql": "{% macro default__get_alter_materialized_view_as_sql(\n    relation,\n    configuration_changes,\n    sql,\n    existing_relation,\n    backup_relation,\n    intermediate_relation\n) %}\n    {{ exceptions.raise_compiler_error(\"Materialized views have not been implemented for this adapter.\") }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7572725, "supported_languages": null}, "macro.dbt.get_materialized_view_configuration_changes": {"name": "get_materialized_view_configuration_changes", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/alter.sql", "original_file_path": "macros/relations/materialized_view/alter.sql", "unique_id": "macro.dbt.get_materialized_view_configuration_changes", "macro_sql": "{% macro get_materialized_view_configuration_changes(existing_relation, new_config) %}\n    /* {#\n    It's recommended that configuration changes be formatted as follows:\n    {\"<change_category>\": [{\"action\": \"<name>\", \"context\": ...}]}\n\n    For example:\n    {\n        \"indexes\": [\n            {\"action\": \"drop\", \"context\": \"index_abc\"},\n            {\"action\": \"create\", \"context\": {\"columns\": [\"column_1\", \"column_2\"], \"type\": \"hash\", \"unique\": True}},\n        ],\n    }\n\n    Either way, `get_materialized_view_configuration_changes` needs to align with `get_alter_materialized_view_as_sql`.\n    #} */\n    {{- log('Determining configuration changes on: ' ~ existing_relation) -}}\n    {%- do return(adapter.dispatch('get_materialized_view_configuration_changes', 'dbt')(existing_relation, new_config)) -%}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_materialized_view_configuration_changes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7575614, "supported_languages": null}, "macro.dbt.default__get_materialized_view_configuration_changes": {"name": "default__get_materialized_view_configuration_changes", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/alter.sql", "original_file_path": "macros/relations/materialized_view/alter.sql", "unique_id": "macro.dbt.default__get_materialized_view_configuration_changes", "macro_sql": "{% macro default__get_materialized_view_configuration_changes(existing_relation, new_config) %}\n    {{ exceptions.raise_compiler_error(\"Materialized views have not been implemented for this adapter.\") }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7577043, "supported_languages": null}, "macro.dbt.get_replace_materialized_view_sql": {"name": "get_replace_materialized_view_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/replace.sql", "original_file_path": "macros/relations/materialized_view/replace.sql", "unique_id": "macro.dbt.get_replace_materialized_view_sql", "macro_sql": "{% macro get_replace_materialized_view_sql(relation, sql) %}\n    {{- adapter.dispatch('get_replace_materialized_view_sql', 'dbt')(relation, sql) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_replace_materialized_view_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7580664, "supported_languages": null}, "macro.dbt.default__get_replace_materialized_view_sql": {"name": "default__get_replace_materialized_view_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/replace.sql", "original_file_path": "macros/relations/materialized_view/replace.sql", "unique_id": "macro.dbt.default__get_replace_materialized_view_sql", "macro_sql": "{% macro default__get_replace_materialized_view_sql(relation, sql) %}\n    {{ exceptions.raise_compiler_error(\n        \"`get_replace_materialized_view_sql` has not been implemented for this adapter.\"\n    ) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7582254, "supported_languages": null}, "macro.dbt.get_rename_table_sql": {"name": "get_rename_table_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/rename.sql", "original_file_path": "macros/relations/table/rename.sql", "unique_id": "macro.dbt.get_rename_table_sql", "macro_sql": "{% macro get_rename_table_sql(relation, new_name) %}\n    {{- adapter.dispatch('get_rename_table_sql', 'dbt')(relation, new_name) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_rename_table_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7585087, "supported_languages": null}, "macro.dbt.default__get_rename_table_sql": {"name": "default__get_rename_table_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/rename.sql", "original_file_path": "macros/relations/table/rename.sql", "unique_id": "macro.dbt.default__get_rename_table_sql", "macro_sql": "{% macro default__get_rename_table_sql(relation, new_name) %}\n    {{ exceptions.raise_compiler_error(\n        \"`get_rename_table_sql` has not been implemented for this adapter.\"\n    ) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7586517, "supported_languages": null}, "macro.dbt.drop_table": {"name": "drop_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/drop.sql", "original_file_path": "macros/relations/table/drop.sql", "unique_id": "macro.dbt.drop_table", "macro_sql": "{% macro drop_table(relation) -%}\n    {{- adapter.dispatch('drop_table', 'dbt')(relation) -}}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__drop_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.758885, "supported_languages": null}, "macro.dbt.default__drop_table": {"name": "default__drop_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/drop.sql", "original_file_path": "macros/relations/table/drop.sql", "unique_id": "macro.dbt.default__drop_table", "macro_sql": "{% macro default__drop_table(relation) -%}\n    drop table if exists {{ relation.render() }} cascade\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7590075, "supported_languages": null}, "macro.dbt.get_create_table_as_sql": {"name": "get_create_table_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/create.sql", "original_file_path": "macros/relations/table/create.sql", "unique_id": "macro.dbt.get_create_table_as_sql", "macro_sql": "{% macro get_create_table_as_sql(temporary, relation, sql) -%}\n  {{ adapter.dispatch('get_create_table_as_sql', 'dbt')(temporary, relation, sql) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_create_table_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7595813, "supported_languages": null}, "macro.dbt.default__get_create_table_as_sql": {"name": "default__get_create_table_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/create.sql", "original_file_path": "macros/relations/table/create.sql", "unique_id": "macro.dbt.default__get_create_table_as_sql", "macro_sql": "{% macro default__get_create_table_as_sql(temporary, relation, sql) -%}\n  {{ return(create_table_as(temporary, relation, sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.759781, "supported_languages": null}, "macro.dbt.create_table_as": {"name": "create_table_as", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/create.sql", "original_file_path": "macros/relations/table/create.sql", "unique_id": "macro.dbt.create_table_as", "macro_sql": "{% macro create_table_as(temporary, relation, compiled_code, language='sql') -%}\n  {# backward compatibility for create_table_as that does not support language #}\n  {% if language == \"sql\" %}\n    {{ adapter.dispatch('create_table_as', 'dbt')(temporary, relation, compiled_code)}}\n  {% else %}\n    {{ adapter.dispatch('create_table_as', 'dbt')(temporary, relation, compiled_code, language) }}\n  {% endif %}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7601917, "supported_languages": null}, "macro.dbt.default__create_table_as": {"name": "default__create_table_as", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/create.sql", "original_file_path": "macros/relations/table/create.sql", "unique_id": "macro.dbt.default__create_table_as", "macro_sql": "{% macro default__create_table_as(temporary, relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n\n  create {% if temporary: -%}temporary{%- endif %} table\n    {{ relation.include(database=(not temporary), schema=(not temporary)) }}\n  {% set contract_config = config.get('contract') %}\n  {% if contract_config.enforced and (not temporary) %}\n    {{ get_assert_columns_equivalent(sql) }}\n    {{ get_table_columns_and_constraints() }}\n    {%- set sql = get_select_subquery(sql) %}\n  {% endif %}\n  as (\n    {{ sql }}\n  );\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_assert_columns_equivalent", "macro.dbt.get_table_columns_and_constraints", "macro.dbt.get_select_subquery"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7608526, "supported_languages": null}, "macro.dbt.default__get_column_names": {"name": "default__get_column_names", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/create.sql", "original_file_path": "macros/relations/table/create.sql", "unique_id": "macro.dbt.default__get_column_names", "macro_sql": "{% macro default__get_column_names() %}\n  {#- loop through user_provided_columns to get column names -#}\n    {%- set user_provided_columns = model['columns'] -%}\n    {%- for i in user_provided_columns %}\n      {%- set col = user_provided_columns[i] -%}\n      {%- set col_name = adapter.quote(col['name']) if col.get('quote') else col['name'] -%}\n      {{ col_name }}{{ \", \" if not loop.last }}\n    {%- endfor -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7612798, "supported_languages": null}, "macro.dbt.get_select_subquery": {"name": "get_select_subquery", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/create.sql", "original_file_path": "macros/relations/table/create.sql", "unique_id": "macro.dbt.get_select_subquery", "macro_sql": "{% macro get_select_subquery(sql) %}\n  {{ return(adapter.dispatch('get_select_subquery', 'dbt')(sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_select_subquery"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7614524, "supported_languages": null}, "macro.dbt.default__get_select_subquery": {"name": "default__get_select_subquery", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/create.sql", "original_file_path": "macros/relations/table/create.sql", "unique_id": "macro.dbt.default__get_select_subquery", "macro_sql": "{% macro default__get_select_subquery(sql) %}\n    select {{ adapter.dispatch('get_column_names', 'dbt')() }}\n    from (\n        {{ sql }}\n    ) as model_subq\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_duckdb.get_column_names", "macro.dbt.default__get_column_names"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7616389, "supported_languages": null}, "macro.dbt.get_replace_table_sql": {"name": "get_replace_table_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/replace.sql", "original_file_path": "macros/relations/table/replace.sql", "unique_id": "macro.dbt.get_replace_table_sql", "macro_sql": "{% macro get_replace_table_sql(relation, sql) %}\n    {{- adapter.dispatch('get_replace_table_sql', 'dbt')(relation, sql) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_replace_table_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7619164, "supported_languages": null}, "macro.dbt.default__get_replace_table_sql": {"name": "default__get_replace_table_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/replace.sql", "original_file_path": "macros/relations/table/replace.sql", "unique_id": "macro.dbt.default__get_replace_table_sql", "macro_sql": "{% macro default__get_replace_table_sql(relation, sql) %}\n    {{ exceptions.raise_compiler_error(\n        \"`get_replace_table_sql` has not been implemented for this adapter.\"\n    ) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7620692, "supported_languages": null}, "macro.dbt.generate_alias_name": {"name": "generate_alias_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_alias.sql", "original_file_path": "macros/get_custom_name/get_custom_alias.sql", "unique_id": "macro.dbt.generate_alias_name", "macro_sql": "{% macro generate_alias_name(custom_alias_name=none, node=none) -%}\n    {% do return(adapter.dispatch('generate_alias_name', 'dbt')(custom_alias_name, node)) %}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__generate_alias_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.762453, "supported_languages": null}, "macro.dbt.default__generate_alias_name": {"name": "default__generate_alias_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_alias.sql", "original_file_path": "macros/get_custom_name/get_custom_alias.sql", "unique_id": "macro.dbt.default__generate_alias_name", "macro_sql": "{% macro default__generate_alias_name(custom_alias_name=none, node=none) -%}\n\n    {%- if custom_alias_name -%}\n\n        {{ custom_alias_name | trim }}\n\n    {%- elif node.version -%}\n\n        {{ return(node.name ~ \"_v\" ~ (node.version | replace(\".\", \"_\"))) }}\n\n    {%- else -%}\n\n        {{ node.name }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7628026, "supported_languages": null}, "macro.dbt.generate_schema_name": {"name": "generate_schema_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_schema.sql", "original_file_path": "macros/get_custom_name/get_custom_schema.sql", "unique_id": "macro.dbt.generate_schema_name", "macro_sql": "{% macro generate_schema_name(custom_schema_name=none, node=none) -%}\n    {{ return(adapter.dispatch('generate_schema_name', 'dbt')(custom_schema_name, node)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__generate_schema_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7631996, "supported_languages": null}, "macro.dbt.default__generate_schema_name": {"name": "default__generate_schema_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_schema.sql", "original_file_path": "macros/get_custom_name/get_custom_schema.sql", "unique_id": "macro.dbt.default__generate_schema_name", "macro_sql": "{% macro default__generate_schema_name(custom_schema_name, node) -%}\n\n    {%- set default_schema = target.schema -%}\n    {%- if custom_schema_name is none -%}\n\n        {{ default_schema }}\n\n    {%- else -%}\n\n        {{ default_schema }}_{{ custom_schema_name | trim }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.763466, "supported_languages": null}, "macro.dbt.generate_schema_name_for_env": {"name": "generate_schema_name_for_env", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_schema.sql", "original_file_path": "macros/get_custom_name/get_custom_schema.sql", "unique_id": "macro.dbt.generate_schema_name_for_env", "macro_sql": "{% macro generate_schema_name_for_env(custom_schema_name, node) -%}\n\n    {%- set default_schema = target.schema -%}\n    {%- if target.name == 'prod' and custom_schema_name is not none -%}\n\n        {{ custom_schema_name | trim }}\n\n    {%- else -%}\n\n        {{ default_schema }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7637446, "supported_languages": null}, "macro.dbt.generate_database_name": {"name": "generate_database_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_database.sql", "original_file_path": "macros/get_custom_name/get_custom_database.sql", "unique_id": "macro.dbt.generate_database_name", "macro_sql": "{% macro generate_database_name(custom_database_name=none, node=none) -%}\n    {% do return(adapter.dispatch('generate_database_name', 'dbt')(custom_database_name, node)) %}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__generate_database_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7640948, "supported_languages": null}, "macro.dbt.default__generate_database_name": {"name": "default__generate_database_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_database.sql", "original_file_path": "macros/get_custom_name/get_custom_database.sql", "unique_id": "macro.dbt.default__generate_database_name", "macro_sql": "{% macro default__generate_database_name(custom_database_name=none, node=none) -%}\n    {%- set default_database = target.database -%}\n    {%- if custom_database_name is none -%}\n\n        {{ default_database }}\n\n    {%- else -%}\n\n        {{ custom_database_name }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.764377, "supported_languages": null}, "macro.dbt.get_fixture_sql": {"name": "get_fixture_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/unit_test_sql/get_fixture_sql.sql", "original_file_path": "macros/unit_test_sql/get_fixture_sql.sql", "unique_id": "macro.dbt.get_fixture_sql", "macro_sql": "{% macro get_fixture_sql(rows, column_name_to_data_types) %}\n-- Fixture for {{ model.name }}\n{% set default_row = {} %}\n\n{%- if not column_name_to_data_types -%}\n{#-- Use defer_relation IFF it is available in the manifest and 'this' is missing from the database --#}\n{%-   set this_or_defer_relation = defer_relation if (defer_relation and not load_relation(this)) else this -%}\n{%-   set columns_in_relation = adapter.get_columns_in_relation(this_or_defer_relation) -%}\n\n{%-   set column_name_to_data_types = {} -%}\n{%-   for column in columns_in_relation -%}\n{#-- This needs to be a case-insensitive comparison --#}\n{%-     do column_name_to_data_types.update({column.name|lower: column.data_type}) -%}\n{%-   endfor -%}\n{%- endif -%}\n\n{%- if not column_name_to_data_types -%}\n    {{ exceptions.raise_compiler_error(\"Not able to get columns for unit test '\" ~ model.name ~ \"' from relation \" ~ this ~ \" because the relation doesn't exist\") }}\n{%- endif -%}\n\n{%- for column_name, column_type in column_name_to_data_types.items() -%}\n    {%- do default_row.update({column_name: (safe_cast(\"null\", column_type) | trim )}) -%}\n{%- endfor -%}\n\n{{ validate_fixture_rows(rows, row_number) }}\n\n{%- for row in rows -%}\n{%-   set formatted_row = format_row(row, column_name_to_data_types) -%}\n{%-   set default_row_copy = default_row.copy() -%}\n{%-   do default_row_copy.update(formatted_row) -%}\nselect\n{%-   for column_name, column_value in default_row_copy.items() %} {{ column_value }} as {{ column_name }}{% if not loop.last -%}, {%- endif %}\n{%-   endfor %}\n{%-   if not loop.last %}\nunion all\n{%    endif %}\n{%- endfor -%}\n\n{%- if (rows | length) == 0 -%}\n    select\n    {%- for column_name, column_value in default_row.items() %} {{ column_value }} as {{ column_name }}{% if not loop.last -%},{%- endif %}\n    {%- endfor %}\n    limit 0\n{%- endif -%}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.load_relation", "macro.dbt.safe_cast", "macro.dbt.validate_fixture_rows", "macro.dbt.format_row"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7667565, "supported_languages": null}, "macro.dbt.get_expected_sql": {"name": "get_expected_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/unit_test_sql/get_fixture_sql.sql", "original_file_path": "macros/unit_test_sql/get_fixture_sql.sql", "unique_id": "macro.dbt.get_expected_sql", "macro_sql": "{% macro get_expected_sql(rows, column_name_to_data_types) %}\n\n{%- if (rows | length) == 0 -%}\n    select * from dbt_internal_unit_test_actual\n    limit 0\n{%- else -%}\n{%- for row in rows -%}\n{%- set formatted_row = format_row(row, column_name_to_data_types) -%}\nselect\n{%- for column_name, column_value in formatted_row.items() %} {{ column_value }} as {{ column_name }}{% if not loop.last -%}, {%- endif %}\n{%- endfor %}\n{%- if not loop.last %}\nunion all\n{% endif %}\n{%- endfor -%}\n{%- endif -%}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.format_row"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7674544, "supported_languages": null}, "macro.dbt.format_row": {"name": "format_row", "resource_type": "macro", "package_name": "dbt", "path": "macros/unit_test_sql/get_fixture_sql.sql", "original_file_path": "macros/unit_test_sql/get_fixture_sql.sql", "unique_id": "macro.dbt.format_row", "macro_sql": "\n\n{%- macro format_row(row, column_name_to_data_types) -%}\n    {#-- generate case-insensitive formatted row --#}\n    {% set formatted_row = {} %}\n    {%- for column_name, column_value in row.items() -%}\n        {% set column_name = column_name|lower %}\n\n        {%- if column_name not in column_name_to_data_types %}\n            {#-- if user-provided row contains column name that relation does not contain, raise an error --#}\n            {% set fixture_name = \"expected output\" if model.resource_type == 'unit_test' else (\"'\" ~ model.name ~ \"'\") %}\n            {{ exceptions.raise_compiler_error(\n                \"Invalid column name: '\" ~ column_name ~ \"' in unit test fixture for \" ~ fixture_name ~ \".\"\n                \"\\nAccepted columns for \" ~ fixture_name ~ \" are: \" ~ (column_name_to_data_types.keys()|list)\n            ) }}\n        {%- endif -%}\n\n        {%- set column_type = column_name_to_data_types[column_name] %}\n\n        {#-- sanitize column_value: wrap yaml strings in quotes, apply cast --#}\n        {%- set column_value_clean = column_value -%}\n        {%- if column_value is string -%}\n            {%- set column_value_clean = dbt.string_literal(dbt.escape_single_quotes(column_value)) -%}\n        {%- elif column_value is none -%}\n            {%- set column_value_clean = 'null' -%}\n        {%- endif -%}\n\n        {%- set row_update = {column_name: safe_cast(column_value_clean, column_type) } -%}\n        {%- do formatted_row.update(row_update) -%}\n    {%- endfor -%}\n    {{ return(formatted_row) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.string_literal", "macro.dbt.escape_single_quotes", "macro.dbt.safe_cast"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7686133, "supported_languages": null}, "macro.dbt.validate_fixture_rows": {"name": "validate_fixture_rows", "resource_type": "macro", "package_name": "dbt", "path": "macros/unit_test_sql/get_fixture_sql.sql", "original_file_path": "macros/unit_test_sql/get_fixture_sql.sql", "unique_id": "macro.dbt.validate_fixture_rows", "macro_sql": "{%- macro validate_fixture_rows(rows, row_number) -%}\n  {{ return(adapter.dispatch('validate_fixture_rows', 'dbt')(rows, row_number)) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__validate_fixture_rows"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7688224, "supported_languages": null}, "macro.dbt.default__validate_fixture_rows": {"name": "default__validate_fixture_rows", "resource_type": "macro", "package_name": "dbt", "path": "macros/unit_test_sql/get_fixture_sql.sql", "original_file_path": "macros/unit_test_sql/get_fixture_sql.sql", "unique_id": "macro.dbt.default__validate_fixture_rows", "macro_sql": "{%- macro default__validate_fixture_rows(rows, row_number) -%}\n  {# This is an abstract method for adapter overrides as needed #}\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7689266, "supported_languages": null}, "macro.dbt.convert_datetime": {"name": "convert_datetime", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "unique_id": "macro.dbt.convert_datetime", "macro_sql": "{% macro convert_datetime(date_str, date_fmt) %}\n\n  {% set error_msg -%}\n      The provided partition date '{{ date_str }}' does not match the expected format '{{ date_fmt }}'\n  {%- endset %}\n\n  {% set res = try_or_compiler_error(error_msg, modules.datetime.datetime.strptime, date_str.strip(), date_fmt) %}\n  {{ return(res) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7696657, "supported_languages": null}, "macro.dbt.dates_in_range": {"name": "dates_in_range", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "unique_id": "macro.dbt.dates_in_range", "macro_sql": "{% macro dates_in_range(start_date_str, end_date_str=none, in_fmt=\"%Y%m%d\", out_fmt=\"%Y%m%d\") %}\n    {% set end_date_str = start_date_str if end_date_str is none else end_date_str %}\n\n    {% set start_date = convert_datetime(start_date_str, in_fmt) %}\n    {% set end_date = convert_datetime(end_date_str, in_fmt) %}\n\n    {% set day_count = (end_date - start_date).days %}\n    {% if day_count < 0 %}\n        {% set msg -%}\n            Partition start date is after the end date ({{ start_date }}, {{ end_date }})\n        {%- endset %}\n\n        {{ exceptions.raise_compiler_error(msg, model) }}\n    {% endif %}\n\n    {% set date_list = [] %}\n    {% for i in range(0, day_count + 1) %}\n        {% set the_date = (modules.datetime.timedelta(days=i) + start_date) %}\n        {% if not out_fmt %}\n            {% set _ = date_list.append(the_date) %}\n        {% else %}\n            {% set _ = date_list.append(the_date.strftime(out_fmt)) %}\n        {% endif %}\n    {% endfor %}\n\n    {{ return(date_list) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.convert_datetime"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.770737, "supported_languages": null}, "macro.dbt.partition_range": {"name": "partition_range", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "unique_id": "macro.dbt.partition_range", "macro_sql": "{% macro partition_range(raw_partition_date, date_fmt='%Y%m%d') %}\n    {% set partition_range = (raw_partition_date | string).split(\",\") %}\n\n    {% if (partition_range | length) == 1 %}\n      {% set start_date = partition_range[0] %}\n      {% set end_date = none %}\n    {% elif (partition_range | length) == 2 %}\n      {% set start_date = partition_range[0] %}\n      {% set end_date = partition_range[1] %}\n    {% else %}\n      {{ exceptions.raise_compiler_error(\"Invalid partition time. Expected format: {Start Date}[,{End Date}]. Got: \" ~ raw_partition_date) }}\n    {% endif %}\n\n    {{ return(dates_in_range(start_date, end_date, in_fmt=date_fmt)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.dates_in_range"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.771516, "supported_languages": null}, "macro.dbt.py_current_timestring": {"name": "py_current_timestring", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "unique_id": "macro.dbt.py_current_timestring", "macro_sql": "{% macro py_current_timestring() %}\n    {% set dt = modules.datetime.datetime.now() %}\n    {% do return(dt.strftime(\"%Y%m%d%H%M%S%f\")) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7717555, "supported_languages": null}, "macro.dbt.statement": {"name": "statement", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/statement.sql", "original_file_path": "macros/etc/statement.sql", "unique_id": "macro.dbt.statement", "macro_sql": "\n{%- macro statement(name=None, fetch_result=False, auto_begin=True, language='sql') -%}\n  {%- if execute: -%}\n    {%- set compiled_code = caller() -%}\n\n    {%- if name == 'main' -%}\n      {{ log('Writing runtime {} for node \"{}\"'.format(language, model['unique_id'])) }}\n      {{ write(compiled_code) }}\n    {%- endif -%}\n    {%- if language == 'sql'-%}\n      {%- set res, table = adapter.execute(compiled_code, auto_begin=auto_begin, fetch=fetch_result) -%}\n    {%- elif language == 'python' -%}\n      {%- set res = submit_python_job(model, compiled_code) -%}\n      {#-- TODO: What should table be for python models? --#}\n      {%- set table = None -%}\n    {%- else -%}\n      {% do exceptions.raise_compiler_error(\"statement macro didn't get supported language\") %}\n    {%- endif -%}\n\n    {%- if name is not none -%}\n      {{ store_result(name, response=res, agate_table=table) }}\n    {%- endif -%}\n\n  {%- endif -%}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7729468, "supported_languages": null}, "macro.dbt.noop_statement": {"name": "noop_statement", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/statement.sql", "original_file_path": "macros/etc/statement.sql", "unique_id": "macro.dbt.noop_statement", "macro_sql": "{% macro noop_statement(name=None, message=None, code=None, rows_affected=None, res=None) -%}\n  {%- set sql = caller() -%}\n\n  {%- if name == 'main' -%}\n    {{ log('Writing runtime SQL for node \"{}\"'.format(model['unique_id'])) }}\n    {{ write(sql) }}\n  {%- endif -%}\n\n  {%- if name is not none -%}\n    {{ store_raw_result(name, message=message, code=code, rows_affected=rows_affected, agate_table=res) }}\n  {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7734978, "supported_languages": null}, "macro.dbt.run_query": {"name": "run_query", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/statement.sql", "original_file_path": "macros/etc/statement.sql", "unique_id": "macro.dbt.run_query", "macro_sql": "{% macro run_query(sql) %}\n  {% call statement(\"run_query_statement\", fetch_result=true, auto_begin=false) %}\n    {{ sql }}\n  {% endcall %}\n\n  {% do return(load_result(\"run_query_statement\").table) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7737772, "supported_languages": null}, "macro.dbt.cast": {"name": "cast", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/cast.sql", "original_file_path": "macros/utils/cast.sql", "unique_id": "macro.dbt.cast", "macro_sql": "{% macro cast(field, type) %}\n  {{ return(adapter.dispatch('cast', 'dbt') (field, type)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__cast"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7740705, "supported_languages": null}, "macro.dbt.default__cast": {"name": "default__cast", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/cast.sql", "original_file_path": "macros/utils/cast.sql", "unique_id": "macro.dbt.default__cast", "macro_sql": "{% macro default__cast(field, type) %}\n    cast({{field}} as {{type}})\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7742097, "supported_languages": null}, "macro.dbt.concat": {"name": "concat", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/concat.sql", "original_file_path": "macros/utils/concat.sql", "unique_id": "macro.dbt.concat", "macro_sql": "{% macro concat(fields) -%}\n  {{ return(adapter.dispatch('concat', 'dbt')(fields)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__concat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7744482, "supported_languages": null}, "macro.dbt.default__concat": {"name": "default__concat", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/concat.sql", "original_file_path": "macros/utils/concat.sql", "unique_id": "macro.dbt.default__concat", "macro_sql": "{% macro default__concat(fields) -%}\n    {{ fields|join(' || ') }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7745833, "supported_languages": null}, "macro.dbt.position": {"name": "position", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/position.sql", "original_file_path": "macros/utils/position.sql", "unique_id": "macro.dbt.position", "macro_sql": "{% macro position(substring_text, string_text) -%}\n    {{ return(adapter.dispatch('position', 'dbt') (substring_text, string_text)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__position"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7748435, "supported_languages": null}, "macro.dbt.default__position": {"name": "default__position", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/position.sql", "original_file_path": "macros/utils/position.sql", "unique_id": "macro.dbt.default__position", "macro_sql": "{% macro default__position(substring_text, string_text) %}\n\n    position(\n        {{ substring_text }} in {{ string_text }}\n    )\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7749832, "supported_languages": null}, "macro.dbt.array_construct": {"name": "array_construct", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/array_construct.sql", "original_file_path": "macros/utils/array_construct.sql", "unique_id": "macro.dbt.array_construct", "macro_sql": "{% macro array_construct(inputs=[], data_type=api.Column.translate_type('integer')) -%}\n  {{ return(adapter.dispatch('array_construct', 'dbt')(inputs, data_type)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__array_construct"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.775358, "supported_languages": null}, "macro.dbt.default__array_construct": {"name": "default__array_construct", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/array_construct.sql", "original_file_path": "macros/utils/array_construct.sql", "unique_id": "macro.dbt.default__array_construct", "macro_sql": "{% macro default__array_construct(inputs, data_type) -%}\n    {% if inputs|length > 0 %}\n    array[ {{ inputs|join(' , ') }} ]\n    {% else %}\n    array[]::{{data_type}}[]\n    {% endif %}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7756038, "supported_languages": null}, "macro.dbt.string_literal": {"name": "string_literal", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/literal.sql", "original_file_path": "macros/utils/literal.sql", "unique_id": "macro.dbt.string_literal", "macro_sql": "{%- macro string_literal(value) -%}\n  {{ return(adapter.dispatch('string_literal', 'dbt') (value)) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__string_literal"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7758465, "supported_languages": null}, "macro.dbt.default__string_literal": {"name": "default__string_literal", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/literal.sql", "original_file_path": "macros/utils/literal.sql", "unique_id": "macro.dbt.default__string_literal", "macro_sql": "{% macro default__string_literal(value) -%}\n    '{{ value }}'\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7759655, "supported_languages": null}, "macro.dbt.listagg": {"name": "listagg", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/listagg.sql", "original_file_path": "macros/utils/listagg.sql", "unique_id": "macro.dbt.listagg", "macro_sql": "{% macro listagg(measure, delimiter_text=\"','\", order_by_clause=none, limit_num=none) -%}\n    {{ return(adapter.dispatch('listagg', 'dbt') (measure, delimiter_text, order_by_clause, limit_num)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__listagg"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7763796, "supported_languages": null}, "macro.dbt.default__listagg": {"name": "default__listagg", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/listagg.sql", "original_file_path": "macros/utils/listagg.sql", "unique_id": "macro.dbt.default__listagg", "macro_sql": "{% macro default__listagg(measure, delimiter_text, order_by_clause, limit_num) -%}\n\n    {% if limit_num -%}\n    array_to_string(\n        array_slice(\n            array_agg(\n                {{ measure }}\n            ){% if order_by_clause -%}\n            within group ({{ order_by_clause }})\n            {%- endif %}\n            ,0\n            ,{{ limit_num }}\n        ),\n        {{ delimiter_text }}\n        )\n    {%- else %}\n    listagg(\n        {{ measure }},\n        {{ delimiter_text }}\n        )\n        {% if order_by_clause -%}\n        within group ({{ order_by_clause }})\n        {%- endif %}\n    {%- endif %}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7768333, "supported_languages": null}, "macro.dbt.length": {"name": "length", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/length.sql", "original_file_path": "macros/utils/length.sql", "unique_id": "macro.dbt.length", "macro_sql": "{% macro length(expression) -%}\n    {{ return(adapter.dispatch('length', 'dbt') (expression)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__length"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7771153, "supported_languages": null}, "macro.dbt.default__length": {"name": "default__length", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/length.sql", "original_file_path": "macros/utils/length.sql", "unique_id": "macro.dbt.default__length", "macro_sql": "{% macro default__length(expression) %}\n\n    length(\n        {{ expression }}\n    )\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.777229, "supported_languages": null}, "macro.dbt.datediff": {"name": "datediff", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/datediff.sql", "original_file_path": "macros/utils/datediff.sql", "unique_id": "macro.dbt.datediff", "macro_sql": "{% macro datediff(first_date, second_date, datepart) %}\n  {{ return(adapter.dispatch('datediff', 'dbt')(first_date, second_date, datepart)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__datediff"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.777512, "supported_languages": null}, "macro.dbt.default__datediff": {"name": "default__datediff", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/datediff.sql", "original_file_path": "macros/utils/datediff.sql", "unique_id": "macro.dbt.default__datediff", "macro_sql": "{% macro default__datediff(first_date, second_date, datepart) -%}\n\n    datediff(\n        {{ datepart }},\n        {{ first_date }},\n        {{ second_date }}\n        )\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7776678, "supported_languages": null}, "macro.dbt.escape_single_quotes": {"name": "escape_single_quotes", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/escape_single_quotes.sql", "original_file_path": "macros/utils/escape_single_quotes.sql", "unique_id": "macro.dbt.escape_single_quotes", "macro_sql": "{% macro escape_single_quotes(expression) %}\n      {{ return(adapter.dispatch('escape_single_quotes', 'dbt') (expression)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__escape_single_quotes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7779343, "supported_languages": null}, "macro.dbt.default__escape_single_quotes": {"name": "default__escape_single_quotes", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/escape_single_quotes.sql", "original_file_path": "macros/utils/escape_single_quotes.sql", "unique_id": "macro.dbt.default__escape_single_quotes", "macro_sql": "{% macro default__escape_single_quotes(expression) -%}\n{{ expression | replace(\"'\",\"''\") }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7781844, "supported_languages": null}, "macro.dbt.dateadd": {"name": "dateadd", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/dateadd.sql", "original_file_path": "macros/utils/dateadd.sql", "unique_id": "macro.dbt.dateadd", "macro_sql": "{% macro dateadd(datepart, interval, from_date_or_timestamp) %}\n  {{ return(adapter.dispatch('dateadd', 'dbt')(datepart, interval, from_date_or_timestamp)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7784846, "supported_languages": null}, "macro.dbt.default__dateadd": {"name": "default__dateadd", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/dateadd.sql", "original_file_path": "macros/utils/dateadd.sql", "unique_id": "macro.dbt.default__dateadd", "macro_sql": "{% macro default__dateadd(datepart, interval, from_date_or_timestamp) %}\n\n    dateadd(\n        {{ datepart }},\n        {{ interval }},\n        {{ from_date_or_timestamp }}\n        )\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7786472, "supported_languages": null}, "macro.dbt.date_trunc": {"name": "date_trunc", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/date_trunc.sql", "original_file_path": "macros/utils/date_trunc.sql", "unique_id": "macro.dbt.date_trunc", "macro_sql": "{% macro date_trunc(datepart, date) -%}\n  {{ return(adapter.dispatch('date_trunc', 'dbt') (datepart, date)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__date_trunc"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7789, "supported_languages": null}, "macro.dbt.default__date_trunc": {"name": "default__date_trunc", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/date_trunc.sql", "original_file_path": "macros/utils/date_trunc.sql", "unique_id": "macro.dbt.default__date_trunc", "macro_sql": "{% macro default__date_trunc(datepart, date) -%}\n    date_trunc('{{datepart}}', {{date}})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7790334, "supported_languages": null}, "macro.dbt.right": {"name": "right", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/right.sql", "original_file_path": "macros/utils/right.sql", "unique_id": "macro.dbt.right", "macro_sql": "{% macro right(string_text, length_expression) -%}\n    {{ return(adapter.dispatch('right', 'dbt') (string_text, length_expression)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__right"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7793121, "supported_languages": null}, "macro.dbt.default__right": {"name": "default__right", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/right.sql", "original_file_path": "macros/utils/right.sql", "unique_id": "macro.dbt.default__right", "macro_sql": "{% macro default__right(string_text, length_expression) %}\n\n    right(\n        {{ string_text }},\n        {{ length_expression }}\n    )\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7794573, "supported_languages": null}, "macro.dbt.last_day": {"name": "last_day", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/last_day.sql", "original_file_path": "macros/utils/last_day.sql", "unique_id": "macro.dbt.last_day", "macro_sql": "{% macro last_day(date, datepart) %}\n  {{ return(adapter.dispatch('last_day', 'dbt') (date, datepart)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__last_day"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7797768, "supported_languages": null}, "macro.dbt.default_last_day": {"name": "default_last_day", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/last_day.sql", "original_file_path": "macros/utils/last_day.sql", "unique_id": "macro.dbt.default_last_day", "macro_sql": "\n\n{%- macro default_last_day(date, datepart) -%}\n    cast(\n        {{dbt.dateadd('day', '-1',\n        dbt.dateadd(datepart, '1', dbt.date_trunc(datepart, date))\n        )}}\n        as date)\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.dateadd", "macro.dbt.date_trunc"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7800329, "supported_languages": null}, "macro.dbt.default__last_day": {"name": "default__last_day", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/last_day.sql", "original_file_path": "macros/utils/last_day.sql", "unique_id": "macro.dbt.default__last_day", "macro_sql": "{% macro default__last_day(date, datepart) -%}\n    {{dbt.default_last_day(date, datepart)}}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default_last_day"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7801788, "supported_languages": null}, "macro.dbt.except": {"name": "except", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/except.sql", "original_file_path": "macros/utils/except.sql", "unique_id": "macro.dbt.except", "macro_sql": "{% macro except() %}\n  {{ return(adapter.dispatch('except', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__except"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7803988, "supported_languages": null}, "macro.dbt.default__except": {"name": "default__except", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/except.sql", "original_file_path": "macros/utils/except.sql", "unique_id": "macro.dbt.default__except", "macro_sql": "{% macro default__except() %}\n\n    except\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7804797, "supported_languages": null}, "macro.dbt.cast_bool_to_text": {"name": "cast_bool_to_text", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/cast_bool_to_text.sql", "original_file_path": "macros/utils/cast_bool_to_text.sql", "unique_id": "macro.dbt.cast_bool_to_text", "macro_sql": "{% macro cast_bool_to_text(field) %}\n  {{ adapter.dispatch('cast_bool_to_text', 'dbt') (field) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__cast_bool_to_text"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.780712, "supported_languages": null}, "macro.dbt.default__cast_bool_to_text": {"name": "default__cast_bool_to_text", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/cast_bool_to_text.sql", "original_file_path": "macros/utils/cast_bool_to_text.sql", "unique_id": "macro.dbt.default__cast_bool_to_text", "macro_sql": "{% macro default__cast_bool_to_text(field) %}\n    cast({{ field }} as {{ api.Column.translate_type('string') }})\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7808676, "supported_languages": null}, "macro.dbt.intersect": {"name": "intersect", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/intersect.sql", "original_file_path": "macros/utils/intersect.sql", "unique_id": "macro.dbt.intersect", "macro_sql": "{% macro intersect() %}\n  {{ return(adapter.dispatch('intersect', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__intersect"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.781104, "supported_languages": null}, "macro.dbt.default__intersect": {"name": "default__intersect", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/intersect.sql", "original_file_path": "macros/utils/intersect.sql", "unique_id": "macro.dbt.default__intersect", "macro_sql": "{% macro default__intersect() %}\n\n    intersect\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7811868, "supported_languages": null}, "macro.dbt.array_concat": {"name": "array_concat", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/array_concat.sql", "original_file_path": "macros/utils/array_concat.sql", "unique_id": "macro.dbt.array_concat", "macro_sql": "{% macro array_concat(array_1, array_2) -%}\n  {{ return(adapter.dispatch('array_concat', 'dbt')(array_1, array_2)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__array_concat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7814357, "supported_languages": null}, "macro.dbt.default__array_concat": {"name": "default__array_concat", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/array_concat.sql", "original_file_path": "macros/utils/array_concat.sql", "unique_id": "macro.dbt.default__array_concat", "macro_sql": "{% macro default__array_concat(array_1, array_2) -%}\n    array_cat({{ array_1 }}, {{ array_2 }})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7815638, "supported_languages": null}, "macro.dbt.date": {"name": "date", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/date.sql", "original_file_path": "macros/utils/date.sql", "unique_id": "macro.dbt.date", "macro_sql": "{% macro date(year, month, day) %}\n  {{ return(adapter.dispatch('date', 'dbt') (year, month, day)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__date"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7818613, "supported_languages": null}, "macro.dbt.default__date": {"name": "default__date", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/date.sql", "original_file_path": "macros/utils/date.sql", "unique_id": "macro.dbt.default__date", "macro_sql": "{% macro default__date(year, month, day) -%}\n    {%- set dt = modules.datetime.date(year, month, day) -%}\n    {%- set iso_8601_formatted_date = dt.strftime('%Y-%m-%d') -%}\n    to_date('{{ iso_8601_formatted_date }}', 'YYYY-MM-DD')\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7821395, "supported_languages": null}, "macro.dbt.get_powers_of_two": {"name": "get_powers_of_two", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/generate_series.sql", "original_file_path": "macros/utils/generate_series.sql", "unique_id": "macro.dbt.get_powers_of_two", "macro_sql": "{% macro get_powers_of_two(upper_bound) %}\n    {{ return(adapter.dispatch('get_powers_of_two', 'dbt')(upper_bound)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_powers_of_two"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7825413, "supported_languages": null}, "macro.dbt.default__get_powers_of_two": {"name": "default__get_powers_of_two", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/generate_series.sql", "original_file_path": "macros/utils/generate_series.sql", "unique_id": "macro.dbt.default__get_powers_of_two", "macro_sql": "{% macro default__get_powers_of_two(upper_bound) %}\n\n    {% if upper_bound <= 0 %}\n    {{ exceptions.raise_compiler_error(\"upper bound must be positive\") }}\n    {% endif %}\n\n    {% for _ in range(1, 100) %}\n       {% if upper_bound <= 2 ** loop.index %}{{ return(loop.index) }}{% endif %}\n    {% endfor %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.782951, "supported_languages": null}, "macro.dbt.generate_series": {"name": "generate_series", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/generate_series.sql", "original_file_path": "macros/utils/generate_series.sql", "unique_id": "macro.dbt.generate_series", "macro_sql": "{% macro generate_series(upper_bound) %}\n    {{ return(adapter.dispatch('generate_series', 'dbt')(upper_bound)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__generate_series"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7831771, "supported_languages": null}, "macro.dbt.default__generate_series": {"name": "default__generate_series", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/generate_series.sql", "original_file_path": "macros/utils/generate_series.sql", "unique_id": "macro.dbt.default__generate_series", "macro_sql": "{% macro default__generate_series(upper_bound) %}\n\n    {% set n = dbt.get_powers_of_two(upper_bound) %}\n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    {% for i in range(n) %}\n    p{{i}}.generated_number * power(2, {{i}})\n    {% if not loop.last %} + {% endif %}\n    {% endfor %}\n    + 1\n    as generated_number\n\n    from\n\n    {% for i in range(n) %}\n    p as p{{i}}\n    {% if not loop.last %} cross join {% endif %}\n    {% endfor %}\n\n    )\n\n    select *\n    from unioned\n    where generated_number <= {{upper_bound}}\n    order by generated_number\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_powers_of_two"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7836776, "supported_languages": null}, "macro.dbt.any_value": {"name": "any_value", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/any_value.sql", "original_file_path": "macros/utils/any_value.sql", "unique_id": "macro.dbt.any_value", "macro_sql": "{% macro any_value(expression) -%}\n    {{ return(adapter.dispatch('any_value', 'dbt') (expression)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__any_value"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7839644, "supported_languages": null}, "macro.dbt.default__any_value": {"name": "default__any_value", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/any_value.sql", "original_file_path": "macros/utils/any_value.sql", "unique_id": "macro.dbt.default__any_value", "macro_sql": "{% macro default__any_value(expression) -%}\n\n    any_value({{ expression }})\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7840867, "supported_languages": null}, "macro.dbt.equals": {"name": "equals", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/equals.sql", "original_file_path": "macros/utils/equals.sql", "unique_id": "macro.dbt.equals", "macro_sql": "{% macro equals(expr1, expr2) %}\n    {{ return(adapter.dispatch('equals', 'dbt') (expr1, expr2)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__equals"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7844093, "supported_languages": null}, "macro.dbt.default__equals": {"name": "default__equals", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/equals.sql", "original_file_path": "macros/utils/equals.sql", "unique_id": "macro.dbt.default__equals", "macro_sql": "{% macro default__equals(expr1, expr2) -%}\n{%- if adapter.behavior.enable_truthy_nulls_equals_macro.no_warn %}\n    case when (({{ expr1 }} = {{ expr2 }}) or ({{ expr1 }} is null and {{ expr2 }} is null))\n        then 0\n        else 1\n    end = 0\n{%- else -%}\n    ({{ expr1 }} = {{ expr2 }})\n{%- endif %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7847843, "supported_languages": null}, "macro.dbt.replace": {"name": "replace", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/replace.sql", "original_file_path": "macros/utils/replace.sql", "unique_id": "macro.dbt.replace", "macro_sql": "{% macro replace(field, old_chars, new_chars) -%}\n    {{ return(adapter.dispatch('replace', 'dbt') (field, old_chars, new_chars)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__replace"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.785096, "supported_languages": null}, "macro.dbt.default__replace": {"name": "default__replace", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/replace.sql", "original_file_path": "macros/utils/replace.sql", "unique_id": "macro.dbt.default__replace", "macro_sql": "{% macro default__replace(field, old_chars, new_chars) %}\n\n    replace(\n        {{ field }},\n        {{ old_chars }},\n        {{ new_chars }}\n    )\n\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.78526, "supported_languages": null}, "macro.dbt.hash": {"name": "hash", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/hash.sql", "original_file_path": "macros/utils/hash.sql", "unique_id": "macro.dbt.hash", "macro_sql": "{% macro hash(field) -%}\n  {{ return(adapter.dispatch('hash', 'dbt') (field)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__hash"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7855065, "supported_languages": null}, "macro.dbt.default__hash": {"name": "default__hash", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/hash.sql", "original_file_path": "macros/utils/hash.sql", "unique_id": "macro.dbt.default__hash", "macro_sql": "{% macro default__hash(field) -%}\n    md5(cast({{ field }} as {{ api.Column.translate_type('string') }}))\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7856655, "supported_languages": null}, "macro.dbt.safe_cast": {"name": "safe_cast", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/safe_cast.sql", "original_file_path": "macros/utils/safe_cast.sql", "unique_id": "macro.dbt.safe_cast", "macro_sql": "{% macro safe_cast(field, type) %}\n  {{ return(adapter.dispatch('safe_cast', 'dbt') (field, type)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__safe_cast"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7859364, "supported_languages": null}, "macro.dbt.default__safe_cast": {"name": "default__safe_cast", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/safe_cast.sql", "original_file_path": "macros/utils/safe_cast.sql", "unique_id": "macro.dbt.default__safe_cast", "macro_sql": "{% macro default__safe_cast(field, type) %}\n    {# most databases don't support this function yet\n    so we just need to use cast #}\n    cast({{field}} as {{type}})\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7860816, "supported_languages": null}, "macro.dbt.type_string": {"name": "type_string", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_string", "macro_sql": "\n\n{%- macro type_string() -%}\n  {{ return(adapter.dispatch('type_string', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7867599, "supported_languages": null}, "macro.dbt.default__type_string": {"name": "default__type_string", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_string", "macro_sql": "{% macro default__type_string() %}\n    {{ return(api.Column.translate_type(\"string\")) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7869124, "supported_languages": null}, "macro.dbt.type_timestamp": {"name": "type_timestamp", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_timestamp", "macro_sql": "\n\n{%- macro type_timestamp() -%}\n  {{ return(adapter.dispatch('type_timestamp', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7870665, "supported_languages": null}, "macro.dbt.default__type_timestamp": {"name": "default__type_timestamp", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_timestamp", "macro_sql": "{% macro default__type_timestamp() %}\n    {{ return(api.Column.translate_type(\"timestamp\")) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7872875, "supported_languages": null}, "macro.dbt.type_float": {"name": "type_float", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_float", "macro_sql": "\n\n{%- macro type_float() -%}\n  {{ return(adapter.dispatch('type_float', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_float"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.787444, "supported_languages": null}, "macro.dbt.default__type_float": {"name": "default__type_float", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_float", "macro_sql": "{% macro default__type_float() %}\n    {{ return(api.Column.translate_type(\"float\")) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7875845, "supported_languages": null}, "macro.dbt.type_numeric": {"name": "type_numeric", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_numeric", "macro_sql": "\n\n{%- macro type_numeric() -%}\n  {{ return(adapter.dispatch('type_numeric', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_numeric"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7877347, "supported_languages": null}, "macro.dbt.default__type_numeric": {"name": "default__type_numeric", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_numeric", "macro_sql": "{% macro default__type_numeric() %}\n    {{ return(api.Column.numeric_type(\"numeric\", 28, 6)) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7879043, "supported_languages": null}, "macro.dbt.type_bigint": {"name": "type_bigint", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_bigint", "macro_sql": "\n\n{%- macro type_bigint() -%}\n  {{ return(adapter.dispatch('type_bigint', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_bigint"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.788075, "supported_languages": null}, "macro.dbt.default__type_bigint": {"name": "default__type_bigint", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_bigint", "macro_sql": "{% macro default__type_bigint() %}\n    {{ return(api.Column.translate_type(\"bigint\")) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7882154, "supported_languages": null}, "macro.dbt.type_int": {"name": "type_int", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_int", "macro_sql": "\n\n{%- macro type_int() -%}\n  {{ return(adapter.dispatch('type_int', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_int"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7883685, "supported_languages": null}, "macro.dbt.default__type_int": {"name": "default__type_int", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_int", "macro_sql": "{%- macro default__type_int() -%}\n  {{ return(api.Column.translate_type(\"integer\")) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.788506, "supported_languages": null}, "macro.dbt.type_boolean": {"name": "type_boolean", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_boolean", "macro_sql": "\n\n{%- macro type_boolean() -%}\n  {{ return(adapter.dispatch('type_boolean', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_boolean"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7886512, "supported_languages": null}, "macro.dbt.default__type_boolean": {"name": "default__type_boolean", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_boolean", "macro_sql": "{%- macro default__type_boolean() -%}\n  {{ return(api.Column.translate_type(\"boolean\")) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7887857, "supported_languages": null}, "macro.dbt.get_intervals_between": {"name": "get_intervals_between", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/date_spine.sql", "original_file_path": "macros/utils/date_spine.sql", "unique_id": "macro.dbt.get_intervals_between", "macro_sql": "{% macro get_intervals_between(start_date, end_date, datepart) -%}\n    {{ return(adapter.dispatch('get_intervals_between', 'dbt')(start_date, end_date, datepart)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_intervals_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7892933, "supported_languages": null}, "macro.dbt.default__get_intervals_between": {"name": "default__get_intervals_between", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/date_spine.sql", "original_file_path": "macros/utils/date_spine.sql", "unique_id": "macro.dbt.default__get_intervals_between", "macro_sql": "{% macro default__get_intervals_between(start_date, end_date, datepart) -%}\n    {%- call statement('get_intervals_between', fetch_result=True) %}\n\n        select {{ dbt.datediff(start_date, end_date, datepart) }}\n\n    {%- endcall -%}\n\n    {%- set value_list = load_result('get_intervals_between') -%}\n\n    {%- if value_list and value_list['data'] -%}\n        {%- set values = value_list['data'] | map(attribute=0) | list %}\n        {{ return(values[0]) }}\n    {%- else -%}\n        {{ return(1) }}\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.datediff"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.789895, "supported_languages": null}, "macro.dbt.date_spine": {"name": "date_spine", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/date_spine.sql", "original_file_path": "macros/utils/date_spine.sql", "unique_id": "macro.dbt.date_spine", "macro_sql": "{% macro date_spine(datepart, start_date, end_date) %}\n    {{ return(adapter.dispatch('date_spine', 'dbt')(datepart, start_date, end_date)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__date_spine"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7901087, "supported_languages": null}, "macro.dbt.default__date_spine": {"name": "default__date_spine", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/date_spine.sql", "original_file_path": "macros/utils/date_spine.sql", "unique_id": "macro.dbt.default__date_spine", "macro_sql": "{% macro default__date_spine(datepart, start_date, end_date) %}\n\n\n    {# call as follows:\n\n    date_spine(\n        \"day\",\n        \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n        \"dbt.dateadd(week, 1, current_date)\"\n    ) #}\n\n\n    with rawdata as (\n\n        {{dbt.generate_series(\n            dbt.get_intervals_between(start_date, end_date, datepart)\n        )}}\n\n    ),\n\n    all_periods as (\n\n        select (\n            {{\n                dbt.dateadd(\n                    datepart,\n                    \"row_number() over (order by 1) - 1\",\n                    start_date\n                )\n            }}\n        ) as date_{{datepart}}\n        from rawdata\n\n    ),\n\n    filtered as (\n\n        select *\n        from all_periods\n        where date_{{datepart}} <= {{ end_date }}\n\n    )\n\n    select * from filtered\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.generate_series", "macro.dbt.get_intervals_between", "macro.dbt.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7904558, "supported_languages": null}, "macro.dbt.split_part": {"name": "split_part", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/split_part.sql", "original_file_path": "macros/utils/split_part.sql", "unique_id": "macro.dbt.split_part", "macro_sql": "{% macro split_part(string_text, delimiter_text, part_number) %}\n  {{ return(adapter.dispatch('split_part', 'dbt') (string_text, delimiter_text, part_number)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__split_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.790812, "supported_languages": null}, "macro.dbt.default__split_part": {"name": "default__split_part", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/split_part.sql", "original_file_path": "macros/utils/split_part.sql", "unique_id": "macro.dbt.default__split_part", "macro_sql": "{% macro default__split_part(string_text, delimiter_text, part_number) %}\n\n    split_part(\n        {{ string_text }},\n        {{ delimiter_text }},\n        {{ part_number }}\n        )\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7910612, "supported_languages": null}, "macro.dbt._split_part_negative": {"name": "_split_part_negative", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/split_part.sql", "original_file_path": "macros/utils/split_part.sql", "unique_id": "macro.dbt._split_part_negative", "macro_sql": "{% macro _split_part_negative(string_text, delimiter_text, part_number) %}\n\n    split_part(\n        {{ string_text }},\n        {{ delimiter_text }},\n          length({{ string_text }})\n          - length(\n              replace({{ string_text }},  {{ delimiter_text }}, '')\n          ) + 2 + {{ part_number }}\n        )\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7912974, "supported_languages": null}, "macro.dbt.array_append": {"name": "array_append", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/array_append.sql", "original_file_path": "macros/utils/array_append.sql", "unique_id": "macro.dbt.array_append", "macro_sql": "{% macro array_append(array, new_element) -%}\n  {{ return(adapter.dispatch('array_append', 'dbt')(array, new_element)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__array_append"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.791581, "supported_languages": null}, "macro.dbt.default__array_append": {"name": "default__array_append", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/array_append.sql", "original_file_path": "macros/utils/array_append.sql", "unique_id": "macro.dbt.default__array_append", "macro_sql": "{% macro default__array_append(array, new_element) -%}\n    array_append({{ array }}, {{ new_element }})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7917173, "supported_languages": null}, "macro.dbt.bool_or": {"name": "bool_or", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/bool_or.sql", "original_file_path": "macros/utils/bool_or.sql", "unique_id": "macro.dbt.bool_or", "macro_sql": "{% macro bool_or(expression) -%}\n    {{ return(adapter.dispatch('bool_or', 'dbt') (expression)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__bool_or"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7919693, "supported_languages": null}, "macro.dbt.default__bool_or": {"name": "default__bool_or", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/bool_or.sql", "original_file_path": "macros/utils/bool_or.sql", "unique_id": "macro.dbt.default__bool_or", "macro_sql": "{% macro default__bool_or(expression) -%}\n\n    bool_or({{ expression }})\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.79208, "supported_languages": null}, "macro.dbt.resolve_model_name": {"name": "resolve_model_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.resolve_model_name", "macro_sql": "{% macro resolve_model_name(input_model_name) %}\n    {{ return(adapter.dispatch('resolve_model_name', 'dbt')(input_model_name)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__resolve_model_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7927485, "supported_languages": null}, "macro.dbt.default__resolve_model_name": {"name": "default__resolve_model_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.default__resolve_model_name", "macro_sql": "\n\n{%- macro default__resolve_model_name(input_model_name) -%}\n    {{  input_model_name | string | replace('\"', '\\\"') }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7929013, "supported_languages": null}, "macro.dbt.build_ref_function": {"name": "build_ref_function", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.build_ref_function", "macro_sql": "{% macro build_ref_function(model) %}\n\n    {%- set ref_dict = {} -%}\n    {%- for _ref in model.refs -%}\n        {% set _ref_args = [_ref.get('package'), _ref['name']] if _ref.get('package') else [_ref['name'],] %}\n        {%- set resolved = ref(*_ref_args, v=_ref.get('version')) -%}\n\n        {#\n            We want to get the string of the returned relation by calling .render() in order to skip sample/empty\n            mode rendering logic. However, people override the default ref macro, and often return a string instead\n            of a relation (like the ref macro does by default). Thus, to make sure we dont blow things up, we have\n            to ensure the resolved relation has a .render() method.\n        #}\n        {%- if resolved.render is defined and resolved.render is callable -%}\n            {%- set resolved = resolved.render() -%}\n        {%- endif -%}\n\n        {%- if _ref.get('version') -%}\n            {% do _ref_args.extend([\"v\" ~ _ref['version']]) %}\n        {%- endif -%}\n       {%- do ref_dict.update({_ref_args | join('.'): resolve_model_name(resolved)}) -%}\n    {%- endfor -%}\n\ndef ref(*args, **kwargs):\n    refs = {{ ref_dict | tojson }}\n    key = '.'.join(args)\n    version = kwargs.get(\"v\") or kwargs.get(\"version\")\n    if version:\n        key += f\".v{version}\"\n    dbt_load_df_function = kwargs.get(\"dbt_load_df_function\")\n    return dbt_load_df_function(refs[key])\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.resolve_model_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.793812, "supported_languages": null}, "macro.dbt.build_source_function": {"name": "build_source_function", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.build_source_function", "macro_sql": "{% macro build_source_function(model) %}\n\n    {%- set source_dict = {} -%}\n    {%- for _source in model.sources -%}\n        {%- set resolved = source(*_source) -%}\n        {%- do source_dict.update({_source | join('.'): resolve_model_name(resolved)}) -%}\n    {%- endfor -%}\n\ndef source(*args, dbt_load_df_function):\n    sources = {{ source_dict | tojson }}\n    key = '.'.join(args)\n    return dbt_load_df_function(sources[key])\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.resolve_model_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7942352, "supported_languages": null}, "macro.dbt.build_config_dict": {"name": "build_config_dict", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.build_config_dict", "macro_sql": "{% macro build_config_dict(model) %}\n    {%- set config_dict = {} -%}\n    {% set config_dbt_used = zip(model.config.config_keys_used, model.config.config_keys_defaults) | list %}\n    {%- for key, default in config_dbt_used -%}\n        {# weird type testing with enum, would be much easier to write this logic in Python! #}\n        {%- if key == \"language\" -%}\n          {%- set value = \"python\" -%}\n        {%- endif -%}\n        {%- set value = model.config.get(key, default) -%}\n        {%- do config_dict.update({key: value}) -%}\n    {%- endfor -%}\nconfig_dict = {{ config_dict }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7947683, "supported_languages": null}, "macro.dbt.py_script_postfix": {"name": "py_script_postfix", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.py_script_postfix", "macro_sql": "{% macro py_script_postfix(model) %}\n# This part is user provided model code\n# you will need to copy the next section to run the code\n# COMMAND ----------\n# this part is dbt logic for get ref work, do not modify\n\n{{ build_ref_function(model ) }}\n{{ build_source_function(model ) }}\n{{ build_config_dict(model) }}\n\nclass config:\n    def __init__(self, *args, **kwargs):\n        pass\n\n    @staticmethod\n    def get(key, default=None):\n        return config_dict.get(key, default)\n\nclass this:\n    \"\"\"dbt.this() or dbt.this.identifier\"\"\"\n    database = \"{{ this.database }}\"\n    schema = \"{{ this.schema }}\"\n    identifier = \"{{ this.identifier }}\"\n    {% set this_relation_name = resolve_model_name(this) %}\n    def __repr__(self):\n        return '{{ this_relation_name  }}'\n\n\nclass dbtObj:\n    def __init__(self, load_df_function) -> None:\n        self.source = lambda *args: source(*args, dbt_load_df_function=load_df_function)\n        self.ref = lambda *args, **kwargs: ref(*args, **kwargs, dbt_load_df_function=load_df_function)\n        self.config = config\n        self.this = this()\n        self.is_incremental = {{ is_incremental() }}\n\n# COMMAND ----------\n{{py_script_comment()}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.build_ref_function", "macro.dbt.build_source_function", "macro.dbt.build_config_dict", "macro.dbt.resolve_model_name", "macro.dbt.is_incremental", "macro.dbt.py_script_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7952273, "supported_languages": null}, "macro.dbt.py_script_comment": {"name": "py_script_comment", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.py_script_comment", "macro_sql": "{%macro py_script_comment()%}\n{%endmacro%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7953098, "supported_languages": null}, "macro.dbt.set_sql_header": {"name": "set_sql_header", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/configs.sql", "original_file_path": "macros/materializations/configs.sql", "unique_id": "macro.dbt.set_sql_header", "macro_sql": "{% macro set_sql_header(config) -%}\n  {{ config.set('sql_header', caller()) }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7956195, "supported_languages": null}, "macro.dbt.should_full_refresh": {"name": "should_full_refresh", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/configs.sql", "original_file_path": "macros/materializations/configs.sql", "unique_id": "macro.dbt.should_full_refresh", "macro_sql": "{% macro should_full_refresh() %}\n  {% set config_full_refresh = config.get('full_refresh') %}\n  {% if config_full_refresh is none %}\n    {% set config_full_refresh = flags.FULL_REFRESH %}\n  {% endif %}\n  {% do return(config_full_refresh) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7959216, "supported_languages": null}, "macro.dbt.should_store_failures": {"name": "should_store_failures", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/configs.sql", "original_file_path": "macros/materializations/configs.sql", "unique_id": "macro.dbt.should_store_failures", "macro_sql": "{% macro should_store_failures() %}\n  {% set config_store_failures = config.get('store_failures') %}\n  {% if config_store_failures is none %}\n    {% set config_store_failures = flags.STORE_FAILURES %}\n  {% endif %}\n  {% do return(config_store_failures) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7962112, "supported_languages": null}, "macro.dbt.run_hooks": {"name": "run_hooks", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "unique_id": "macro.dbt.run_hooks", "macro_sql": "{% macro run_hooks(hooks, inside_transaction=True) %}\n  {% for hook in hooks | selectattr('transaction', 'equalto', inside_transaction)  %}\n    {% if not inside_transaction and loop.first %}\n      {% call statement(auto_begin=inside_transaction) %}\n        commit;\n      {% endcall %}\n    {% endif %}\n    {% set rendered = render(hook.get('sql')) | trim %}\n    {% if (rendered | length) > 0 %}\n      {% call statement(auto_begin=inside_transaction) %}\n        {{ rendered }}\n      {% endcall %}\n    {% endif %}\n  {% endfor %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7970073, "supported_languages": null}, "macro.dbt.make_hook_config": {"name": "make_hook_config", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "unique_id": "macro.dbt.make_hook_config", "macro_sql": "{% macro make_hook_config(sql, inside_transaction) %}\n    {{ tojson({\"sql\": sql, \"transaction\": inside_transaction}) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.797234, "supported_languages": null}, "macro.dbt.before_begin": {"name": "before_begin", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "unique_id": "macro.dbt.before_begin", "macro_sql": "{% macro before_begin(sql) %}\n    {{ make_hook_config(sql, inside_transaction=False) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7973807, "supported_languages": null}, "macro.dbt.in_transaction": {"name": "in_transaction", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "unique_id": "macro.dbt.in_transaction", "macro_sql": "{% macro in_transaction(sql) %}\n    {{ make_hook_config(sql, inside_transaction=True) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.7975178, "supported_languages": null}, "macro.dbt.after_commit": {"name": "after_commit", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "unique_id": "macro.dbt.after_commit", "macro_sql": "{% macro after_commit(sql) %}\n    {{ make_hook_config(sql, inside_transaction=False) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.797652, "supported_languages": null}, "macro.dbt.materialization_unit_default": {"name": "materialization_unit_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/unit.sql", "original_file_path": "macros/materializations/tests/unit.sql", "unique_id": "macro.dbt.materialization_unit_default", "macro_sql": "{%- materialization unit, default -%}\n\n  {% set relations = [] %}\n\n  {% set expected_rows = config.get('expected_rows') %}\n  {% set expected_sql = config.get('expected_sql') %}\n  {% set tested_expected_column_names = expected_rows[0].keys() if (expected_rows | length ) > 0 else get_columns_in_query(sql) %} %}\n\n  {%- set target_relation = this.incorporate(type='table') -%}\n  {%- set temp_relation = make_temp_relation(target_relation)-%}\n  {% do run_query(get_create_table_as_sql(True, temp_relation, get_empty_subquery_sql(sql))) %}\n  {%- set columns_in_relation = adapter.get_columns_in_relation(temp_relation) -%}\n  {%- set column_name_to_data_types = {} -%}\n  {%- for column in columns_in_relation -%}\n  {%-   do column_name_to_data_types.update({column.name|lower: column.data_type}) -%}\n  {%- endfor -%}\n\n  {% if not expected_sql %}\n  {%   set expected_sql = get_expected_sql(expected_rows, column_name_to_data_types) %}\n  {% endif %}\n  {% set unit_test_sql = get_unit_test_sql(sql, expected_sql, tested_expected_column_names) %}\n\n  {% call statement('main', fetch_result=True) -%}\n\n    {{ unit_test_sql }}\n\n  {%- endcall %}\n\n  {% do adapter.drop_relation(temp_relation) %}\n\n  {{ return({'relations': relations}) }}\n\n{%- endmaterialization -%}", "depends_on": {"macros": ["macro.dbt.get_columns_in_query", "macro.dbt.make_temp_relation", "macro.dbt.run_query", "macro.dbt.get_create_table_as_sql", "macro.dbt.get_empty_subquery_sql", "macro.dbt.get_expected_sql", "macro.dbt.get_unit_test_sql", "macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.799033, "supported_languages": ["sql"]}, "macro.dbt.materialization_test_default": {"name": "materialization_test_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/test.sql", "original_file_path": "macros/materializations/tests/test.sql", "unique_id": "macro.dbt.materialization_test_default", "macro_sql": "{%- materialization test, default -%}\n\n  {% set relations = [] %}\n  {% set limit = config.get('limit') %}\n\n  {% set sql_with_limit %}\n    {{ get_limit_subquery_sql(sql, limit) }}\n  {% endset %}\n\n  {% if should_store_failures() %}\n\n    {% set identifier = model['alias'] %}\n    {% set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) %}\n\n    {% set store_failures_as = config.get('store_failures_as') %}\n    -- if `--store-failures` is invoked via command line and `store_failures_as` is not set,\n    -- config.get('store_failures_as', 'table') returns None, not 'table'\n    {% if store_failures_as == none %}{% set store_failures_as = 'table' %}{% endif %}\n    {% if store_failures_as not in ['table', 'view'] %}\n        {{ exceptions.raise_compiler_error(\n            \"'\" ~ store_failures_as ~ \"' is not a valid value for `store_failures_as`. \"\n            \"Accepted values are: ['ephemeral', 'table', 'view']\"\n        ) }}\n    {% endif %}\n\n    {% set target_relation = api.Relation.create(\n        identifier=identifier, schema=schema, database=database, type=store_failures_as) -%} %}\n\n    {% if old_relation %}\n        {% do adapter.drop_relation(old_relation) %}\n    {% endif %}\n\n    {% call statement(auto_begin=True) %}\n        {{ get_create_sql(target_relation, sql_with_limit) }}\n    {% endcall %}\n\n    {% do relations.append(target_relation) %}\n\n    {# Since the test failures have already been saved to the database, reuse that result rather than querying again #}\n    {% set main_sql %}\n        select *\n        from {{ target_relation }}\n    {% endset %}\n\n    {{ adapter.commit() }}\n\n  {% else %}\n\n      {% set main_sql = sql_with_limit %}\n\n  {% endif %}\n\n  {% set fail_calc = config.get('fail_calc') %}\n  {% set warn_if = config.get('warn_if') %}\n  {% set error_if = config.get('error_if') %}\n\n  {% call statement('main', fetch_result=True) -%}\n\n    {# The limit has already been included above, and we do not want to duplicate it again. We also want to be safe for macro overrides treating `limit` as a required parameter. #}\n    {{ get_test_sql(main_sql, fail_calc, warn_if, error_if, limit=none)}}\n\n  {%- endcall %}\n\n  {{ return({'relations': relations}) }}\n\n{%- endmaterialization -%}", "depends_on": {"macros": ["macro.dbt.get_limit_subquery_sql", "macro.dbt.should_store_failures", "macro.dbt.statement", "macro.dbt.get_create_sql", "macro.dbt.get_test_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.801269, "supported_languages": ["sql"]}, "macro.dbt.get_test_sql": {"name": "get_test_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/helpers.sql", "original_file_path": "macros/materializations/tests/helpers.sql", "unique_id": "macro.dbt.get_test_sql", "macro_sql": "{% macro get_test_sql(main_sql, fail_calc, warn_if, error_if, limit) -%}\n  {{ adapter.dispatch('get_test_sql', 'dbt')(main_sql, fail_calc, warn_if, error_if, limit) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_test_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8018157, "supported_languages": null}, "macro.dbt.default__get_test_sql": {"name": "default__get_test_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/helpers.sql", "original_file_path": "macros/materializations/tests/helpers.sql", "unique_id": "macro.dbt.default__get_test_sql", "macro_sql": "{% macro default__get_test_sql(main_sql, fail_calc, warn_if, error_if, limit) -%}\n    select\n      {{ fail_calc }} as failures,\n      {{ fail_calc }} {{ warn_if }} as should_warn,\n      {{ fail_calc }} {{ error_if }} as should_error\n    from (\n      {{ main_sql }}\n      {{ \"limit \" ~ limit if limit != none }}\n    ) dbt_internal_test\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8021145, "supported_languages": null}, "macro.dbt.get_unit_test_sql": {"name": "get_unit_test_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/helpers.sql", "original_file_path": "macros/materializations/tests/helpers.sql", "unique_id": "macro.dbt.get_unit_test_sql", "macro_sql": "{% macro get_unit_test_sql(main_sql, expected_fixture_sql, expected_column_names) -%}\n  {{ adapter.dispatch('get_unit_test_sql', 'dbt')(main_sql, expected_fixture_sql, expected_column_names) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_unit_test_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8023121, "supported_languages": null}, "macro.dbt.default__get_unit_test_sql": {"name": "default__get_unit_test_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/helpers.sql", "original_file_path": "macros/materializations/tests/helpers.sql", "unique_id": "macro.dbt.default__get_unit_test_sql", "macro_sql": "{% macro default__get_unit_test_sql(main_sql, expected_fixture_sql, expected_column_names) -%}\n-- Build actual result given inputs\nwith dbt_internal_unit_test_actual as (\n  select\n    {% for expected_column_name in expected_column_names %}{{expected_column_name}}{% if not loop.last -%},{% endif %}{%- endfor -%}, {{ dbt.string_literal(\"actual\") }} as {{ adapter.quote(\"actual_or_expected\") }}\n  from (\n    {{ main_sql }}\n  ) _dbt_internal_unit_test_actual\n),\n-- Build expected result\ndbt_internal_unit_test_expected as (\n  select\n    {% for expected_column_name in expected_column_names %}{{expected_column_name}}{% if not loop.last -%}, {% endif %}{%- endfor -%}, {{ dbt.string_literal(\"expected\") }} as {{ adapter.quote(\"actual_or_expected\") }}\n  from (\n    {{ expected_fixture_sql }}\n  ) _dbt_internal_unit_test_expected\n)\n-- Union actual and expected results\nselect * from dbt_internal_unit_test_actual\nunion all\nselect * from dbt_internal_unit_test_expected\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.string_literal"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8030014, "supported_languages": null}, "macro.dbt.get_where_subquery": {"name": "get_where_subquery", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/where_subquery.sql", "original_file_path": "macros/materializations/tests/where_subquery.sql", "unique_id": "macro.dbt.get_where_subquery", "macro_sql": "{% macro get_where_subquery(relation) -%}\n    {% do return(adapter.dispatch('get_where_subquery', 'dbt')(relation)) %}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_where_subquery"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.80334, "supported_languages": null}, "macro.dbt.default__get_where_subquery": {"name": "default__get_where_subquery", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/where_subquery.sql", "original_file_path": "macros/materializations/tests/where_subquery.sql", "unique_id": "macro.dbt.default__get_where_subquery", "macro_sql": "{% macro default__get_where_subquery(relation) -%}\n    {% set where = config.get('where', '') %}\n    {% if where %}\n        {%- set filtered -%}\n            (select * from {{ relation }} where {{ where }}) dbt_subquery\n        {%- endset -%}\n        {% do return(filtered) %}\n    {%- else -%}\n        {% do return(relation) %}\n    {%- endif -%}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8037045, "supported_languages": null}, "macro.dbt.materialization_materialized_view_default": {"name": "materialization_materialized_view_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view.sql", "unique_id": "macro.dbt.materialization_materialized_view_default", "macro_sql": "{% materialization materialized_view, default %}\n    {% set existing_relation = load_cached_relation(this) %}\n    {% set target_relation = this.incorporate(type=this.MaterializedView) %}\n    {% set intermediate_relation = make_intermediate_relation(target_relation) %}\n    {% set backup_relation_type = target_relation.MaterializedView if existing_relation is none else existing_relation.type %}\n    {% set backup_relation = make_backup_relation(target_relation, backup_relation_type) %}\n\n    {{ materialized_view_setup(backup_relation, intermediate_relation, pre_hooks) }}\n\n        {% set build_sql = materialized_view_get_build_sql(existing_relation, target_relation, backup_relation, intermediate_relation) %}\n\n        {% if build_sql == '' %}\n            {{ materialized_view_execute_no_op(target_relation) }}\n        {% else %}\n            {{ materialized_view_execute_build_sql(build_sql, existing_relation, target_relation, post_hooks) }}\n        {% endif %}\n\n    {{ materialized_view_teardown(backup_relation, intermediate_relation, post_hooks) }}\n\n    {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.materialized_view_setup", "macro.dbt.materialized_view_get_build_sql", "macro.dbt.materialized_view_execute_no_op", "macro.dbt.materialized_view_execute_build_sql", "macro.dbt.materialized_view_teardown"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8051722, "supported_languages": ["sql"]}, "macro.dbt.materialized_view_setup": {"name": "materialized_view_setup", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view.sql", "unique_id": "macro.dbt.materialized_view_setup", "macro_sql": "{% macro materialized_view_setup(backup_relation, intermediate_relation, pre_hooks) %}\n\n    -- backup_relation and intermediate_relation should not already exist in the database\n    -- it's possible these exist because of a previous run that exited unexpectedly\n    {% set preexisting_backup_relation = load_cached_relation(backup_relation) %}\n    {% set preexisting_intermediate_relation = load_cached_relation(intermediate_relation) %}\n\n    -- drop the temp relations if they exist already in the database\n    {{ drop_relation_if_exists(preexisting_backup_relation) }}\n    {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n\n    {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8055408, "supported_languages": null}, "macro.dbt.materialized_view_teardown": {"name": "materialized_view_teardown", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view.sql", "unique_id": "macro.dbt.materialized_view_teardown", "macro_sql": "{% macro materialized_view_teardown(backup_relation, intermediate_relation, post_hooks) %}\n\n    -- drop the temp relations if they exist to leave the database clean for the next run\n    {{ drop_relation_if_exists(backup_relation) }}\n    {{ drop_relation_if_exists(intermediate_relation) }}\n\n    {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8057706, "supported_languages": null}, "macro.dbt.materialized_view_get_build_sql": {"name": "materialized_view_get_build_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view.sql", "unique_id": "macro.dbt.materialized_view_get_build_sql", "macro_sql": "{% macro materialized_view_get_build_sql(existing_relation, target_relation, backup_relation, intermediate_relation) %}\n\n    {% set full_refresh_mode = should_full_refresh() %}\n\n    -- determine the scenario we're in: create, full_refresh, alter, refresh data\n    {% if existing_relation is none %}\n        {% set build_sql = get_create_materialized_view_as_sql(target_relation, sql) %}\n    {% elif full_refresh_mode or not existing_relation.is_materialized_view %}\n        {% set build_sql = get_replace_sql(existing_relation, target_relation, sql) %}\n    {% else %}\n\n        -- get config options\n        {% set on_configuration_change = config.get('on_configuration_change') %}\n        {% set configuration_changes = get_materialized_view_configuration_changes(existing_relation, config) %}\n\n        {% if configuration_changes is none %}\n            {% set build_sql = refresh_materialized_view(target_relation) %}\n\n        {% elif on_configuration_change == 'apply' %}\n            {% set build_sql = get_alter_materialized_view_as_sql(target_relation, configuration_changes, sql, existing_relation, backup_relation, intermediate_relation) %}\n        {% elif on_configuration_change == 'continue' %}\n            {% set build_sql = '' %}\n            {{ exceptions.warn(\"Configuration changes were identified and `on_configuration_change` was set to `continue` for `\" ~ target_relation.render() ~ \"`\") }}\n        {% elif on_configuration_change == 'fail' %}\n            {{ exceptions.raise_fail_fast_error(\"Configuration changes were identified and `on_configuration_change` was set to `fail` for `\" ~ target_relation.render() ~ \"`\") }}\n\n        {% else %}\n            -- this only happens if the user provides a value other than `apply`, 'skip', 'fail'\n            {{ exceptions.raise_compiler_error(\"Unexpected configuration scenario\") }}\n\n        {% endif %}\n\n    {% endif %}\n\n    {% do return(build_sql) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.should_full_refresh", "macro.dbt.get_create_materialized_view_as_sql", "macro.dbt.get_replace_sql", "macro.dbt.get_materialized_view_configuration_changes", "macro.dbt.refresh_materialized_view", "macro.dbt.get_alter_materialized_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8070042, "supported_languages": null}, "macro.dbt.materialized_view_execute_no_op": {"name": "materialized_view_execute_no_op", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view.sql", "unique_id": "macro.dbt.materialized_view_execute_no_op", "macro_sql": "{% macro materialized_view_execute_no_op(target_relation) %}\n    {% do store_raw_result(\n        name=\"main\",\n        message=\"skip \" ~ target_relation,\n        code=\"skip\",\n        rows_affected=\"-1\"\n    ) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8072302, "supported_languages": null}, "macro.dbt.materialized_view_execute_build_sql": {"name": "materialized_view_execute_build_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view.sql", "unique_id": "macro.dbt.materialized_view_execute_build_sql", "macro_sql": "{% macro materialized_view_execute_build_sql(build_sql, existing_relation, target_relation, post_hooks) %}\n\n    -- `BEGIN` happens here:\n    {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n    {% set grant_config = config.get('grants') %}\n\n    {% call statement(name=\"main\") %}\n        {{ build_sql }}\n    {% endcall %}\n\n    {% set should_revoke = should_revoke(existing_relation, full_refresh_mode=True) %}\n    {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n    {% do persist_docs(target_relation, model) %}\n\n    {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n    {{ adapter.commit() }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.807809, "supported_languages": null}, "macro.dbt.materialization_view_default": {"name": "materialization_view_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/view.sql", "original_file_path": "macros/materializations/models/view.sql", "unique_id": "macro.dbt.materialization_view_default", "macro_sql": "{%- materialization view, default -%}\n\n  {%- set existing_relation = load_cached_relation(this) -%}\n  {%- set target_relation = this.incorporate(type='view') -%}\n  {%- set intermediate_relation =  make_intermediate_relation(target_relation) -%}\n\n  -- the intermediate_relation should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation\n  {%- set preexisting_intermediate_relation = load_cached_relation(intermediate_relation) -%}\n  /*\n     This relation (probably) doesn't exist yet. If it does exist, it's a leftover from\n     a previous run, and we're going to try to drop it immediately. At the end of this\n     materialization, we're going to rename the \"existing_relation\" to this identifier,\n     and then we're going to drop it. In order to make sure we run the correct one of:\n       - drop view ...\n       - drop table ...\n\n     We need to set the type of this relation to be the type of the existing_relation, if it exists,\n     or else \"view\" as a sane default if it does not. Note that if the existing_relation does not\n     exist, then there is nothing to move out of the way and subsequentally drop. In that case,\n     this relation will be effectively unused.\n  */\n  {%- set backup_relation_type = 'view' if existing_relation is none else existing_relation.type -%}\n  {%- set backup_relation = make_backup_relation(target_relation, backup_relation_type) -%}\n  -- as above, the backup_relation should not already exist\n  {%- set preexisting_backup_relation = load_cached_relation(backup_relation) -%}\n  -- grab current tables grants config for comparision later on\n  {% set grant_config = config.get('grants') %}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- drop the temp relations if they exist already in the database\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ get_create_view_as_sql(intermediate_relation, sql) }}\n  {%- endcall %}\n\n  -- cleanup\n  -- move the existing view out of the way\n  {% if existing_relation is not none %}\n     /* Do the equivalent of rename_if_exists. 'existing_relation' could have been dropped\n        since the variable was first set. */\n    {% set existing_relation = load_cached_relation(existing_relation) %}\n    {% if existing_relation is not none %}\n        {{ adapter.rename_relation(existing_relation, backup_relation) }}\n    {% endif %}\n  {% endif %}\n  {{ adapter.rename_relation(intermediate_relation, target_relation) }}\n\n  {% set should_revoke = should_revoke(existing_relation, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {{ adapter.commit() }}\n\n  {{ drop_relation_if_exists(backup_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization -%}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.run_hooks", "macro.dbt.drop_relation_if_exists", "macro.dbt.statement", "macro.dbt.get_create_view_as_sql", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.809752, "supported_languages": ["sql"]}, "macro.dbt.materialization_table_default": {"name": "materialization_table_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table.sql", "original_file_path": "macros/materializations/models/table.sql", "unique_id": "macro.dbt.materialization_table_default", "macro_sql": "{% materialization table, default %}\n\n  {%- set existing_relation = load_cached_relation(this) -%}\n  {%- set target_relation = this.incorporate(type='table') %}\n  {%- set intermediate_relation =  make_intermediate_relation(target_relation) -%}\n  -- the intermediate_relation should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation\n  {%- set preexisting_intermediate_relation = load_cached_relation(intermediate_relation) -%}\n  /*\n      See ../view/view.sql for more information about this relation.\n  */\n  {%- set backup_relation_type = 'table' if existing_relation is none else existing_relation.type -%}\n  {%- set backup_relation = make_backup_relation(target_relation, backup_relation_type) -%}\n  -- as above, the backup_relation should not already exist\n  {%- set preexisting_backup_relation = load_cached_relation(backup_relation) -%}\n  -- grab current tables grants config for comparision later on\n  {% set grant_config = config.get('grants') %}\n\n  -- drop the temp relations if they exist already in the database\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ get_create_table_as_sql(False, intermediate_relation, sql) }}\n  {%- endcall %}\n\n  {% do create_indexes(intermediate_relation) %}\n\n  -- cleanup\n  {% if existing_relation is not none %}\n     /* Do the equivalent of rename_if_exists. 'existing_relation' could have been dropped\n        since the variable was first set. */\n    {% set existing_relation = load_cached_relation(existing_relation) %}\n    {% if existing_relation is not none %}\n        {{ adapter.rename_relation(existing_relation, backup_relation) }}\n    {% endif %}\n  {% endif %}\n\n  {{ adapter.rename_relation(intermediate_relation, target_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {% set should_revoke = should_revoke(existing_relation, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  -- finally, drop the existing/backup relation after the commit\n  {{ drop_relation_if_exists(backup_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.get_create_table_as_sql", "macro.dbt.create_indexes", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.811646, "supported_languages": ["sql"]}, "macro.dbt.can_clone_table": {"name": "can_clone_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/clone/can_clone_table.sql", "original_file_path": "macros/materializations/models/clone/can_clone_table.sql", "unique_id": "macro.dbt.can_clone_table", "macro_sql": "{% macro can_clone_table() %}\n    {{ return(adapter.dispatch('can_clone_table', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__can_clone_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8119216, "supported_languages": null}, "macro.dbt.default__can_clone_table": {"name": "default__can_clone_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/clone/can_clone_table.sql", "original_file_path": "macros/materializations/models/clone/can_clone_table.sql", "unique_id": "macro.dbt.default__can_clone_table", "macro_sql": "{% macro default__can_clone_table() %}\n    {{ return(False) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8120518, "supported_languages": null}, "macro.dbt.materialization_clone_default": {"name": "materialization_clone_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/clone/clone.sql", "original_file_path": "macros/materializations/models/clone/clone.sql", "unique_id": "macro.dbt.materialization_clone_default", "macro_sql": "{%- materialization clone, default -%}\n\n  {%- set relations = {'relations': []} -%}\n\n  {%- if not defer_relation -%}\n      -- nothing to do\n      {{ log(\"No relation found in state manifest for \" ~ model.unique_id, info=True) }}\n      {{ return(relations) }}\n  {%- endif -%}\n\n  {%- set existing_relation = load_cached_relation(this) -%}\n\n  {%- if existing_relation and not flags.FULL_REFRESH -%}\n      -- noop!\n      {{ log(\"Relation \" ~ existing_relation ~ \" already exists\", info=True) }}\n      {{ return(relations) }}\n  {%- endif -%}\n\n  {%- set other_existing_relation = load_cached_relation(defer_relation) -%}\n\n  -- If this is a database that can do zero-copy cloning of tables, and the other relation is a table, then this will be a table\n  -- Otherwise, this will be a view\n\n  {% set can_clone_table = can_clone_table() %}\n\n  {%- if other_existing_relation and other_existing_relation.type == 'table' and can_clone_table -%}\n\n      {%- set target_relation = this.incorporate(type='table') -%}\n      {% if existing_relation is not none and not existing_relation.is_table %}\n        {{ log(\"Dropping relation \" ~ existing_relation.render() ~ \" because it is of type \" ~ existing_relation.type) }}\n        {{ drop_relation_if_exists(existing_relation) }}\n      {% endif %}\n\n      -- as a general rule, data platforms that can clone tables can also do atomic 'create or replace'\n      {% call statement('main') %}\n          {% if target_relation and defer_relation and target_relation == defer_relation %}\n              {{ log(\"Target relation and defer relation are the same, skipping clone for relation: \" ~ target_relation.render()) }}\n          {% else %}\n              {{ create_or_replace_clone(target_relation, defer_relation) }}\n          {% endif %}\n\n      {% endcall %}\n\n      {% set should_revoke = should_revoke(existing_relation, full_refresh_mode=True) %}\n      {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n      {% do persist_docs(target_relation, model) %}\n\n      {{ return({'relations': [target_relation]}) }}\n\n  {%- else -%}\n\n      {%- set target_relation = this.incorporate(type='view') -%}\n\n      -- reuse the view materialization\n      -- TODO: support actual dispatch for materialization macros\n      -- Tracking ticket: https://github.com/dbt-labs/dbt-core/issues/7799\n      {% set search_name = \"materialization_view_\" ~ adapter.type() %}\n      {% if not search_name in context %}\n          {% set search_name = \"materialization_view_default\" %}\n      {% endif %}\n      {% set materialization_macro = context[search_name] %}\n      {% set relations = materialization_macro() %}\n      {{ return(relations) }}\n\n  {%- endif -%}\n\n{%- endmaterialization -%}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.can_clone_table", "macro.dbt.drop_relation_if_exists", "macro.dbt.statement", "macro.dbt.create_or_replace_clone", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8144007, "supported_languages": ["sql"]}, "macro.dbt.create_or_replace_clone": {"name": "create_or_replace_clone", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/clone/create_or_replace_clone.sql", "original_file_path": "macros/materializations/models/clone/create_or_replace_clone.sql", "unique_id": "macro.dbt.create_or_replace_clone", "macro_sql": "{% macro create_or_replace_clone(this_relation, defer_relation) %}\n    {{ return(adapter.dispatch('create_or_replace_clone', 'dbt')(this_relation, defer_relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__create_or_replace_clone"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8149178, "supported_languages": null}, "macro.dbt.default__create_or_replace_clone": {"name": "default__create_or_replace_clone", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/clone/create_or_replace_clone.sql", "original_file_path": "macros/materializations/models/clone/create_or_replace_clone.sql", "unique_id": "macro.dbt.default__create_or_replace_clone", "macro_sql": "{% macro default__create_or_replace_clone(this_relation, defer_relation) %}\n    create or replace table {{ this_relation.render() }} clone {{ defer_relation.render() }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.815185, "supported_languages": null}, "macro.dbt.get_merge_sql": {"name": "get_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "unique_id": "macro.dbt.get_merge_sql", "macro_sql": "{% macro get_merge_sql(target, source, unique_key, dest_columns, incremental_predicates=none) -%}\n   -- back compat for old kwarg name\n  {% set incremental_predicates = kwargs.get('predicates', incremental_predicates) %}\n  {{ adapter.dispatch('get_merge_sql', 'dbt')(target, source, unique_key, dest_columns, incremental_predicates) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.816731, "supported_languages": null}, "macro.dbt.default__get_merge_sql": {"name": "default__get_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "unique_id": "macro.dbt.default__get_merge_sql", "macro_sql": "{% macro default__get_merge_sql(target, source, unique_key, dest_columns, incremental_predicates=none) -%}\n    {%- set predicates = [] if incremental_predicates is none else [] + incremental_predicates -%}\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n    {%- set merge_update_columns = config.get('merge_update_columns') -%}\n    {%- set merge_exclude_columns = config.get('merge_exclude_columns') -%}\n    {%- set update_columns = get_merge_update_columns(merge_update_columns, merge_exclude_columns, dest_columns) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {% if unique_key %}\n        {% if unique_key is sequence and unique_key is not mapping and unique_key is not string %}\n            {% for key in unique_key %}\n                {% set this_key_match %}\n                    DBT_INTERNAL_SOURCE.{{ key }} = DBT_INTERNAL_DEST.{{ key }}\n                {% endset %}\n                {% do predicates.append(this_key_match) %}\n            {% endfor %}\n        {% else %}\n            {% set source_unique_key = (\"DBT_INTERNAL_SOURCE.\" ~ unique_key) | trim %}\n\t    {% set target_unique_key = (\"DBT_INTERNAL_DEST.\" ~ unique_key) | trim %}\n\t    {% set unique_key_match = equals(source_unique_key, target_unique_key) | trim %}\n            {% do predicates.append(unique_key_match) %}\n        {% endif %}\n    {% else %}\n        {% do predicates.append('FALSE') %}\n    {% endif %}\n\n    {{ sql_header if sql_header is not none }}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n        using {{ source }} as DBT_INTERNAL_SOURCE\n        on {{\"(\" ~ predicates | join(\") and (\") ~ \")\"}}\n\n    {% if unique_key %}\n    when matched then update set\n        {% for column_name in update_columns -%}\n            {{ column_name }} = DBT_INTERNAL_SOURCE.{{ column_name }}\n            {%- if not loop.last %}, {%- endif %}\n        {%- endfor %}\n    {% endif %}\n\n    when not matched then insert\n        ({{ dest_cols_csv }})\n    values\n        ({{ dest_cols_csv }})\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_quoted_csv", "macro.dbt.get_merge_update_columns", "macro.dbt.equals"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8185985, "supported_languages": null}, "macro.dbt.get_delete_insert_merge_sql": {"name": "get_delete_insert_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "unique_id": "macro.dbt.get_delete_insert_merge_sql", "macro_sql": "{% macro get_delete_insert_merge_sql(target, source, unique_key, dest_columns, incremental_predicates) -%}\n  {{ adapter.dispatch('get_delete_insert_merge_sql', 'dbt')(target, source, unique_key, dest_columns, incremental_predicates) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__get_delete_insert_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8188806, "supported_languages": null}, "macro.dbt.default__get_delete_insert_merge_sql": {"name": "default__get_delete_insert_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "unique_id": "macro.dbt.default__get_delete_insert_merge_sql", "macro_sql": "{% macro default__get_delete_insert_merge_sql(target, source, unique_key, dest_columns, incremental_predicates) -%}\n\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n\n    {% if unique_key %}\n        {% if unique_key is string %}\n        {% set unique_key = [unique_key] %}\n        {% endif %}\n\n        {%- set unique_key_str = unique_key|join(', ') -%}\n\n        delete from {{ target }} as DBT_INTERNAL_DEST\n        where ({{ unique_key_str }}) in (\n            select distinct {{ unique_key_str }}\n            from {{ source }} as DBT_INTERNAL_SOURCE\n        )\n        {%- if incremental_predicates %}\n            {% for predicate in incremental_predicates %}\n                and {{ predicate }}\n            {% endfor %}\n        {%- endif -%};\n\n    {% endif %}\n\n    insert into {{ target }} ({{ dest_cols_csv }})\n    (\n        select {{ dest_cols_csv }}\n        from {{ source }}\n    )\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8195472, "supported_languages": null}, "macro.dbt.get_insert_overwrite_merge_sql": {"name": "get_insert_overwrite_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "unique_id": "macro.dbt.get_insert_overwrite_merge_sql", "macro_sql": "{% macro get_insert_overwrite_merge_sql(target, source, dest_columns, predicates, include_sql_header=false) -%}\n  {{ adapter.dispatch('get_insert_overwrite_merge_sql', 'dbt')(target, source, dest_columns, predicates, include_sql_header) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_insert_overwrite_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.819829, "supported_languages": null}, "macro.dbt.default__get_insert_overwrite_merge_sql": {"name": "default__get_insert_overwrite_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "unique_id": "macro.dbt.default__get_insert_overwrite_merge_sql", "macro_sql": "{% macro default__get_insert_overwrite_merge_sql(target, source, dest_columns, predicates, include_sql_header) -%}\n    {#-- The only time include_sql_header is True: --#}\n    {#-- BigQuery + insert_overwrite strategy + \"static\" partitions config --#}\n    {#-- We should consider including the sql header at the materialization level instead --#}\n\n    {%- set predicates = [] if predicates is none else [] + predicates -%}\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {{ sql_header if sql_header is not none and include_sql_header }}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n        using {{ source }} as DBT_INTERNAL_SOURCE\n        on FALSE\n\n    when not matched by source\n        {% if predicates %} and {{ predicates | join(' and ') }} {% endif %}\n        then delete\n\n    when not matched then insert\n        ({{ dest_cols_csv }})\n    values\n        ({{ dest_cols_csv }})\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8205328, "supported_languages": null}, "macro.dbt.materialization_incremental_default": {"name": "materialization_incremental_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/incremental.sql", "original_file_path": "macros/materializations/models/incremental/incremental.sql", "unique_id": "macro.dbt.materialization_incremental_default", "macro_sql": "{% materialization incremental, default -%}\n\n  -- relations\n  {%- set existing_relation = load_cached_relation(this) -%}\n  {%- set target_relation = this.incorporate(type='table') -%}\n  {%- set temp_relation = make_temp_relation(target_relation)-%}\n  {%- set intermediate_relation = make_intermediate_relation(target_relation)-%}\n  {%- set backup_relation_type = 'table' if existing_relation is none else existing_relation.type -%}\n  {%- set backup_relation = make_backup_relation(target_relation, backup_relation_type) -%}\n\n  -- configs\n  {%- set unique_key = config.get('unique_key') -%}\n  {%- set full_refresh_mode = (should_full_refresh()  or existing_relation.is_view) -%}\n  {%- set on_schema_change = incremental_validate_on_schema_change(config.get('on_schema_change'), default='ignore') -%}\n\n  -- the temp_ and backup_ relations should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation. This has to happen before\n  -- BEGIN, in a separate transaction\n  {%- set preexisting_intermediate_relation = load_cached_relation(intermediate_relation)-%}\n  {%- set preexisting_backup_relation = load_cached_relation(backup_relation) -%}\n   -- grab current tables grants config for comparision later on\n  {% set grant_config = config.get('grants') %}\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {% set to_drop = [] %}\n\n  {% set incremental_strategy = config.get('incremental_strategy') or 'default' %}\n  {% set strategy_sql_macro_func = adapter.get_incremental_strategy_macro(context, incremental_strategy) %}\n\n  {% if existing_relation is none %}\n      {% set build_sql = get_create_table_as_sql(False, target_relation, sql) %}\n      {% set relation_for_indexes = target_relation %}\n  {% elif full_refresh_mode %}\n      {% set build_sql = get_create_table_as_sql(False, intermediate_relation, sql) %}\n      {% set relation_for_indexes = intermediate_relation %}\n      {% set need_swap = true %}\n  {% else %}\n    {% do run_query(get_create_table_as_sql(True, temp_relation, sql)) %}\n    {% set relation_for_indexes = temp_relation %}\n    {% set contract_config = config.get('contract') %}\n    {% if not contract_config or not contract_config.enforced %}\n      {% do adapter.expand_target_column_types(\n               from_relation=temp_relation,\n               to_relation=target_relation) %}\n    {% endif %}\n    {#-- Process schema changes. Returns dict of changes if successful. Use source columns for upserting/merging --#}\n    {% set dest_columns = process_schema_changes(on_schema_change, temp_relation, existing_relation) %}\n    {% if not dest_columns %}\n      {% set dest_columns = adapter.get_columns_in_relation(existing_relation) %}\n    {% endif %}\n\n    {#-- Get the incremental_strategy, the macro to use for the strategy, and build the sql --#}\n    {% set incremental_predicates = config.get('predicates', none) or config.get('incremental_predicates', none) %}\n    {% set strategy_arg_dict = ({'target_relation': target_relation, 'temp_relation': temp_relation, 'unique_key': unique_key, 'dest_columns': dest_columns, 'incremental_predicates': incremental_predicates }) %}\n    {% set build_sql = strategy_sql_macro_func(strategy_arg_dict) %}\n\n  {% endif %}\n\n  {% call statement(\"main\") %}\n      {{ build_sql }}\n  {% endcall %}\n\n  {% if existing_relation is none or existing_relation.is_view or should_full_refresh() %}\n    {% do create_indexes(relation_for_indexes) %}\n  {% endif %}\n\n  {% if need_swap %}\n      {% do adapter.rename_relation(target_relation, backup_relation) %}\n      {% do adapter.rename_relation(intermediate_relation, target_relation) %}\n      {% do to_drop.append(backup_relation) %}\n  {% endif %}\n\n  {% set should_revoke = should_revoke(existing_relation, full_refresh_mode) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {% do adapter.commit() %}\n\n  {% for rel in to_drop %}\n      {% do adapter.drop_relation(rel) %}\n  {% endfor %}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization %}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.make_temp_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.should_full_refresh", "macro.dbt.incremental_validate_on_schema_change", "macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.get_create_table_as_sql", "macro.dbt.run_query", "macro.dbt.process_schema_changes", "macro.dbt.statement", "macro.dbt.create_indexes", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8247757, "supported_languages": ["sql"]}, "macro.dbt.incremental_validate_on_schema_change": {"name": "incremental_validate_on_schema_change", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "unique_id": "macro.dbt.incremental_validate_on_schema_change", "macro_sql": "{% macro incremental_validate_on_schema_change(on_schema_change, default='ignore') %}\n\n   {% if on_schema_change not in ['sync_all_columns', 'append_new_columns', 'fail', 'ignore'] %}\n\n     {% set log_message = 'Invalid value for on_schema_change (%s) specified. Setting default value of %s.' % (on_schema_change, default) %}\n     {% do log(log_message) %}\n\n     {{ return(default) }}\n\n   {% else %}\n\n     {{ return(on_schema_change) }}\n\n   {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8259072, "supported_languages": null}, "macro.dbt.check_for_schema_changes": {"name": "check_for_schema_changes", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "unique_id": "macro.dbt.check_for_schema_changes", "macro_sql": "{% macro check_for_schema_changes(source_relation, target_relation) %}\n\n  {% set schema_changed = False %}\n\n  {%- set source_columns = adapter.get_columns_in_relation(source_relation) -%}\n  {%- set target_columns = adapter.get_columns_in_relation(target_relation) -%}\n  {%- set source_not_in_target = diff_columns(source_columns, target_columns) -%}\n  {%- set target_not_in_source = diff_columns(target_columns, source_columns) -%}\n\n  {% set new_target_types = diff_column_data_types(source_columns, target_columns) %}\n\n  {% if source_not_in_target != [] %}\n    {% set schema_changed = True %}\n  {% elif target_not_in_source != [] or new_target_types != [] %}\n    {% set schema_changed = True %}\n  {% elif new_target_types != [] %}\n    {% set schema_changed = True %}\n  {% endif %}\n\n  {% set changes_dict = {\n    'schema_changed': schema_changed,\n    'source_not_in_target': source_not_in_target,\n    'target_not_in_source': target_not_in_source,\n    'source_columns': source_columns,\n    'target_columns': target_columns,\n    'new_target_types': new_target_types\n  } %}\n\n  {% set msg %}\n    In {{ target_relation }}:\n        Schema changed: {{ schema_changed }}\n        Source columns not in target: {{ source_not_in_target }}\n        Target columns not in source: {{ target_not_in_source }}\n        New column types: {{ new_target_types }}\n  {% endset %}\n\n  {% do log(msg) %}\n\n  {{ return(changes_dict) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.diff_columns", "macro.dbt.diff_column_data_types"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8270614, "supported_languages": null}, "macro.dbt.sync_column_schemas": {"name": "sync_column_schemas", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "unique_id": "macro.dbt.sync_column_schemas", "macro_sql": "{% macro sync_column_schemas(on_schema_change, target_relation, schema_changes_dict) %}\n\n  {%- set add_to_target_arr = schema_changes_dict['source_not_in_target'] -%}\n\n  {%- if on_schema_change == 'append_new_columns'-%}\n     {%- if add_to_target_arr | length > 0 -%}\n       {%- do alter_relation_add_remove_columns(target_relation, add_to_target_arr, none) -%}\n     {%- endif -%}\n\n  {% elif on_schema_change == 'sync_all_columns' %}\n     {%- set remove_from_target_arr = schema_changes_dict['target_not_in_source'] -%}\n     {%- set new_target_types = schema_changes_dict['new_target_types'] -%}\n\n     {% if add_to_target_arr | length > 0 or remove_from_target_arr | length > 0 %}\n       {%- do alter_relation_add_remove_columns(target_relation, add_to_target_arr, remove_from_target_arr) -%}\n     {% endif %}\n\n     {% if new_target_types != [] %}\n       {% for ntt in new_target_types %}\n         {% set column_name = ntt['column_name'] %}\n         {% set new_type = ntt['new_type'] %}\n         {% do alter_column_type(target_relation, column_name, new_type) %}\n       {% endfor %}\n     {% endif %}\n\n  {% endif %}\n\n  {% set schema_change_message %}\n    In {{ target_relation }}:\n        Schema change approach: {{ on_schema_change }}\n        Columns added: {{ add_to_target_arr }}\n        Columns removed: {{ remove_from_target_arr }}\n        Data types changed: {{ new_target_types }}\n  {% endset %}\n\n  {% do log(schema_change_message) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.alter_relation_add_remove_columns", "macro.dbt.alter_column_type"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8281746, "supported_languages": null}, "macro.dbt.process_schema_changes": {"name": "process_schema_changes", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "unique_id": "macro.dbt.process_schema_changes", "macro_sql": "{% macro process_schema_changes(on_schema_change, source_relation, target_relation) %}\n\n    {% if on_schema_change == 'ignore' %}\n\n     {{ return({}) }}\n\n    {% else %}\n\n      {% set schema_changes_dict = check_for_schema_changes(source_relation, target_relation) %}\n\n      {% if schema_changes_dict['schema_changed'] %}\n\n        {% if on_schema_change == 'fail' %}\n\n          {% set fail_msg %}\n              The source and target schemas on this incremental model are out of sync!\n              They can be reconciled in several ways:\n                - set the `on_schema_change` config to either append_new_columns or sync_all_columns, depending on your situation.\n                - Re-run the incremental model with `full_refresh: True` to update the target schema.\n                - update the schema manually and re-run the process.\n\n              Additional troubleshooting context:\n                 Source columns not in target: {{ schema_changes_dict['source_not_in_target'] }}\n                 Target columns not in source: {{ schema_changes_dict['target_not_in_source'] }}\n                 New column types: {{ schema_changes_dict['new_target_types'] }}\n          {% endset %}\n\n          {% do exceptions.raise_compiler_error(fail_msg) %}\n\n        {# -- unless we ignore, run the sync operation per the config #}\n        {% else %}\n\n          {% do sync_column_schemas(on_schema_change, target_relation, schema_changes_dict) %}\n\n        {% endif %}\n\n      {% endif %}\n\n      {{ return(schema_changes_dict['source_columns']) }}\n\n    {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.check_for_schema_changes", "macro.dbt.sync_column_schemas"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8290017, "supported_languages": null}, "macro.dbt.get_quoted_csv": {"name": "get_quoted_csv", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "unique_id": "macro.dbt.get_quoted_csv", "macro_sql": "{% macro get_quoted_csv(column_names) %}\n\n    {% set quoted = [] %}\n    {% for col in column_names -%}\n        {%- do quoted.append(adapter.quote(col)) -%}\n    {%- endfor %}\n\n    {%- set dest_cols_csv = quoted | join(', ') -%}\n    {{ return(dest_cols_csv) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8298361, "supported_languages": null}, "macro.dbt.diff_columns": {"name": "diff_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "unique_id": "macro.dbt.diff_columns", "macro_sql": "{% macro diff_columns(source_columns, target_columns) %}\n\n  {% set result = [] %}\n  {% set source_names = source_columns | map(attribute = 'column') | list %}\n  {% set target_names = target_columns | map(attribute = 'column') | list %}\n\n   {# --check whether the name attribute exists in the target - this does not perform a data type check #}\n   {% for sc in source_columns %}\n     {% if sc.name not in target_names %}\n        {{ result.append(sc) }}\n     {% endif %}\n   {% endfor %}\n\n  {{ return(result) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8305259, "supported_languages": null}, "macro.dbt.diff_column_data_types": {"name": "diff_column_data_types", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "unique_id": "macro.dbt.diff_column_data_types", "macro_sql": "{% macro diff_column_data_types(source_columns, target_columns) %}\n\n  {% set result = [] %}\n  {% for sc in source_columns %}\n    {% set tc = target_columns | selectattr(\"name\", \"equalto\", sc.name) | list | first %}\n    {% if tc %}\n      {% if sc.data_type != tc.data_type and not sc.can_expand_to(other_column=tc) %}\n        {{ result.append( { 'column_name': tc.name, 'new_type': sc.data_type } ) }}\n      {% endif %}\n    {% endif %}\n  {% endfor %}\n\n  {{ return(result) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8311672, "supported_languages": null}, "macro.dbt.get_merge_update_columns": {"name": "get_merge_update_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "unique_id": "macro.dbt.get_merge_update_columns", "macro_sql": "{% macro get_merge_update_columns(merge_update_columns, merge_exclude_columns, dest_columns) %}\n  {{ return(adapter.dispatch('get_merge_update_columns', 'dbt')(merge_update_columns, merge_exclude_columns, dest_columns)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_merge_update_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8313928, "supported_languages": null}, "macro.dbt.default__get_merge_update_columns": {"name": "default__get_merge_update_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "unique_id": "macro.dbt.default__get_merge_update_columns", "macro_sql": "{% macro default__get_merge_update_columns(merge_update_columns, merge_exclude_columns, dest_columns) %}\n  {%- set default_cols = dest_columns | map(attribute=\"quoted\") | list -%}\n\n  {%- if merge_update_columns and merge_exclude_columns -%}\n    {{ exceptions.raise_compiler_error(\n        'Model cannot specify merge_update_columns and merge_exclude_columns. Please update model to use only one config'\n    )}}\n  {%- elif merge_update_columns -%}\n    {%- set update_columns = merge_update_columns -%}\n  {%- elif merge_exclude_columns -%}\n    {%- set update_columns = [] -%}\n    {%- for column in dest_columns -%}\n      {% if column.column | lower not in merge_exclude_columns | map(\"lower\") | list %}\n        {%- do update_columns.append(column.quoted) -%}\n      {% endif %}\n    {%- endfor -%}\n  {%- else -%}\n    {%- set update_columns = default_cols -%}\n  {%- endif -%}\n\n  {{ return(update_columns) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.832117, "supported_languages": null}, "macro.dbt.is_incremental": {"name": "is_incremental", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/is_incremental.sql", "original_file_path": "macros/materializations/models/incremental/is_incremental.sql", "unique_id": "macro.dbt.is_incremental", "macro_sql": "{% macro is_incremental() %}\n    {#-- do not run introspective queries in parsing #}\n    {% if not execute %}\n        {{ return(False) }}\n    {% else %}\n        {% set relation = adapter.get_relation(this.database, this.schema, this.table) %}\n        {{ return(relation is not none\n                  and relation.type == 'table'\n                  and model.config.materialized == 'incremental'\n                  and not should_full_refresh()) }}\n    {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.should_full_refresh"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8327, "supported_languages": null}, "macro.dbt.get_incremental_append_sql": {"name": "get_incremental_append_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_incremental_append_sql", "macro_sql": "{% macro get_incremental_append_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_append_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_incremental_append_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8332763, "supported_languages": null}, "macro.dbt.default__get_incremental_append_sql": {"name": "default__get_incremental_append_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.default__get_incremental_append_sql", "macro_sql": "{% macro default__get_incremental_append_sql(arg_dict) %}\n\n  {% do return(get_insert_into_sql(arg_dict[\"target_relation\"], arg_dict[\"temp_relation\"], arg_dict[\"dest_columns\"])) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_insert_into_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.833485, "supported_languages": null}, "macro.dbt.get_incremental_delete_insert_sql": {"name": "get_incremental_delete_insert_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_incremental_delete_insert_sql", "macro_sql": "{% macro get_incremental_delete_insert_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_delete_insert_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_incremental_delete_insert_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8336568, "supported_languages": null}, "macro.dbt.default__get_incremental_delete_insert_sql": {"name": "default__get_incremental_delete_insert_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.default__get_incremental_delete_insert_sql", "macro_sql": "{% macro default__get_incremental_delete_insert_sql(arg_dict) %}\n\n  {% do return(get_delete_insert_merge_sql(arg_dict[\"target_relation\"], arg_dict[\"temp_relation\"], arg_dict[\"unique_key\"], arg_dict[\"dest_columns\"], arg_dict[\"incremental_predicates\"])) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_delete_insert_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8339255, "supported_languages": null}, "macro.dbt.get_incremental_merge_sql": {"name": "get_incremental_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_incremental_merge_sql", "macro_sql": "{% macro get_incremental_merge_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_merge_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_incremental_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8341324, "supported_languages": null}, "macro.dbt.default__get_incremental_merge_sql": {"name": "default__get_incremental_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.default__get_incremental_merge_sql", "macro_sql": "{% macro default__get_incremental_merge_sql(arg_dict) %}\n\n  {% do return(get_merge_sql(arg_dict[\"target_relation\"], arg_dict[\"temp_relation\"], arg_dict[\"unique_key\"], arg_dict[\"dest_columns\"], arg_dict[\"incremental_predicates\"])) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8343885, "supported_languages": null}, "macro.dbt.get_incremental_insert_overwrite_sql": {"name": "get_incremental_insert_overwrite_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_incremental_insert_overwrite_sql", "macro_sql": "{% macro get_incremental_insert_overwrite_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_insert_overwrite_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_incremental_insert_overwrite_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8345616, "supported_languages": null}, "macro.dbt.default__get_incremental_insert_overwrite_sql": {"name": "default__get_incremental_insert_overwrite_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.default__get_incremental_insert_overwrite_sql", "macro_sql": "{% macro default__get_incremental_insert_overwrite_sql(arg_dict) %}\n\n  {% do return(get_insert_overwrite_merge_sql(arg_dict[\"target_relation\"], arg_dict[\"temp_relation\"], arg_dict[\"dest_columns\"], arg_dict[\"incremental_predicates\"])) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_insert_overwrite_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8348029, "supported_languages": null}, "macro.dbt.get_incremental_default_sql": {"name": "get_incremental_default_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_incremental_default_sql", "macro_sql": "{% macro get_incremental_default_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_default_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__get_incremental_default_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8349712, "supported_languages": null}, "macro.dbt.default__get_incremental_default_sql": {"name": "default__get_incremental_default_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.default__get_incremental_default_sql", "macro_sql": "{% macro default__get_incremental_default_sql(arg_dict) %}\n\n  {% do return(get_incremental_append_sql(arg_dict)) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_incremental_append_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8351104, "supported_languages": null}, "macro.dbt.get_incremental_microbatch_sql": {"name": "get_incremental_microbatch_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_incremental_microbatch_sql", "macro_sql": "{% macro get_incremental_microbatch_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_microbatch_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_incremental_microbatch_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8352764, "supported_languages": null}, "macro.dbt.default__get_incremental_microbatch_sql": {"name": "default__get_incremental_microbatch_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.default__get_incremental_microbatch_sql", "macro_sql": "{% macro default__get_incremental_microbatch_sql(arg_dict) %}\n\n  {{ exceptions.raise_not_implemented('microbatch materialization strategy not implemented for adapter ' + adapter.type()) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8354301, "supported_languages": null}, "macro.dbt.get_insert_into_sql": {"name": "get_insert_into_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_insert_into_sql", "macro_sql": "{% macro get_insert_into_sql(target_relation, temp_relation, dest_columns) %}\n\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n\n    insert into {{ target_relation }} ({{ dest_cols_csv }})\n    (\n        select {{ dest_cols_csv }}\n        from {{ temp_relation }}\n    )\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.835695, "supported_languages": null}, "macro.dbt.create_columns": {"name": "create_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.create_columns", "macro_sql": "{% macro create_columns(relation, columns) %}\n  {{ adapter.dispatch('create_columns', 'dbt')(relation, columns) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__create_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8374445, "supported_languages": null}, "macro.dbt.default__create_columns": {"name": "default__create_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.default__create_columns", "macro_sql": "{% macro default__create_columns(relation, columns) %}\n  {% for column in columns %}\n    {% call statement() %}\n      alter table {{ relation.render() }} add column \"{{ column.name }}\" {{ column.data_type }};\n    {% endcall %}\n  {% endfor %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.874313, "supported_languages": null}, "macro.dbt.post_snapshot": {"name": "post_snapshot", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.post_snapshot", "macro_sql": "{% macro post_snapshot(staging_relation) %}\n  {{ adapter.dispatch('post_snapshot', 'dbt')(staging_relation) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__post_snapshot"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.87464, "supported_languages": null}, "macro.dbt.default__post_snapshot": {"name": "default__post_snapshot", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.default__post_snapshot", "macro_sql": "{% macro default__post_snapshot(staging_relation) %}\n    {# no-op #}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8747854, "supported_languages": null}, "macro.dbt.get_true_sql": {"name": "get_true_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.get_true_sql", "macro_sql": "{% macro get_true_sql() %}\n  {{ adapter.dispatch('get_true_sql', 'dbt')() }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_true_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.874988, "supported_languages": null}, "macro.dbt.default__get_true_sql": {"name": "default__get_true_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.default__get_true_sql", "macro_sql": "{% macro default__get_true_sql() %}\n    {{ return('TRUE') }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8751452, "supported_languages": null}, "macro.dbt.snapshot_staging_table": {"name": "snapshot_staging_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.snapshot_staging_table", "macro_sql": "{% macro snapshot_staging_table(strategy, source_sql, target_relation) -%}\n  {{ adapter.dispatch('snapshot_staging_table', 'dbt')(strategy, source_sql, target_relation) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__snapshot_staging_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8753989, "supported_languages": null}, "macro.dbt.get_snapshot_table_column_names": {"name": "get_snapshot_table_column_names", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.get_snapshot_table_column_names", "macro_sql": "{% macro get_snapshot_table_column_names() %}\n    {{ return({'dbt_valid_to': 'dbt_valid_to', 'dbt_valid_from': 'dbt_valid_from', 'dbt_scd_id': 'dbt_scd_id', 'dbt_updated_at': 'dbt_updated_at', 'dbt_is_deleted': 'dbt_is_deleted'}) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.875687, "supported_languages": null}, "macro.dbt.default__snapshot_staging_table": {"name": "default__snapshot_staging_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.default__snapshot_staging_table", "macro_sql": "{% macro default__snapshot_staging_table(strategy, source_sql, target_relation) -%}\n    {% set columns = config.get('snapshot_table_column_names') or get_snapshot_table_column_names() %}\n    {% if strategy.hard_deletes == 'new_record' %}\n        {% set new_scd_id = snapshot_hash_arguments([columns.dbt_scd_id, snapshot_get_time()]) %}\n    {% endif %}\n    with snapshot_query as (\n\n        {{ source_sql }}\n\n    ),\n\n    snapshotted_data as (\n\n        select *, {{ unique_key_fields(strategy.unique_key) }}\n        from {{ target_relation }}\n        where\n            {% if config.get('dbt_valid_to_current') %}\n\t\t{% set source_unique_key = columns.dbt_valid_to | trim %}\n\t\t{% set target_unique_key = config.get('dbt_valid_to_current') | trim %}\n\n\t\t{# The exact equals semantics between NULL values depends on the current behavior flag set. Also, update records if the source field is null #}\n                ( {{ equals(source_unique_key, target_unique_key) }} or {{ source_unique_key }} is null )\n            {% else %}\n                {{ columns.dbt_valid_to }} is null\n            {% endif %}\n\n    ),\n\n    insertions_source_data as (\n\n        select *, {{ unique_key_fields(strategy.unique_key) }},\n            {{ strategy.updated_at }} as {{ columns.dbt_updated_at }},\n            {{ strategy.updated_at }} as {{ columns.dbt_valid_from }},\n            {{ get_dbt_valid_to_current(strategy, columns) }},\n            {{ strategy.scd_id }} as {{ columns.dbt_scd_id }}\n\n        from snapshot_query\n    ),\n\n    updates_source_data as (\n\n        select *, {{ unique_key_fields(strategy.unique_key) }},\n            {{ strategy.updated_at }} as {{ columns.dbt_updated_at }},\n            {{ strategy.updated_at }} as {{ columns.dbt_valid_from }},\n            {{ strategy.updated_at }} as {{ columns.dbt_valid_to }}\n\n        from snapshot_query\n    ),\n\n    {%- if strategy.hard_deletes == 'invalidate' or strategy.hard_deletes == 'new_record' %}\n\n    deletes_source_data as (\n\n        select *, {{ unique_key_fields(strategy.unique_key) }}\n        from snapshot_query\n    ),\n    {% endif %}\n\n    insertions as (\n\n        select\n            'insert' as dbt_change_type,\n            source_data.*\n          {%- if strategy.hard_deletes == 'new_record' -%}\n            ,'False' as {{ columns.dbt_is_deleted }}\n          {%- endif %}\n\n        from insertions_source_data as source_data\n        left outer join snapshotted_data\n            on {{ unique_key_join_on(strategy.unique_key, \"snapshotted_data\", \"source_data\") }}\n            where {{ unique_key_is_null(strategy.unique_key, \"snapshotted_data\") }}\n            or ({{ unique_key_is_not_null(strategy.unique_key, \"snapshotted_data\") }} and (\n               {{ strategy.row_changed }} {%- if strategy.hard_deletes == 'new_record' -%} or snapshotted_data.{{ columns.dbt_is_deleted }} = 'True' {% endif %}\n            )\n\n        )\n\n    ),\n\n    updates as (\n\n        select\n            'update' as dbt_change_type,\n            source_data.*,\n            snapshotted_data.{{ columns.dbt_scd_id }}\n          {%- if strategy.hard_deletes == 'new_record' -%}\n            , snapshotted_data.{{ columns.dbt_is_deleted }}\n          {%- endif %}\n\n        from updates_source_data as source_data\n        join snapshotted_data\n            on {{ unique_key_join_on(strategy.unique_key, \"snapshotted_data\", \"source_data\") }}\n        where (\n            {{ strategy.row_changed }}  {%- if strategy.hard_deletes == 'new_record' -%} or snapshotted_data.{{ columns.dbt_is_deleted }} = 'True' {% endif %}\n        )\n    )\n\n    {%- if strategy.hard_deletes == 'invalidate' or strategy.hard_deletes == 'new_record' %}\n    ,\n    deletes as (\n\n        select\n            'delete' as dbt_change_type,\n            source_data.*,\n            {{ snapshot_get_time() }} as {{ columns.dbt_valid_from }},\n            {{ snapshot_get_time() }} as {{ columns.dbt_updated_at }},\n            {{ snapshot_get_time() }} as {{ columns.dbt_valid_to }},\n            snapshotted_data.{{ columns.dbt_scd_id }}\n          {%- if strategy.hard_deletes == 'new_record' -%}\n            , snapshotted_data.{{ columns.dbt_is_deleted }}\n          {%- endif %}\n        from snapshotted_data\n        left join deletes_source_data as source_data\n            on {{ unique_key_join_on(strategy.unique_key, \"snapshotted_data\", \"source_data\") }}\n            where {{ unique_key_is_null(strategy.unique_key, \"source_data\") }}\n    )\n    {%- endif %}\n\n    {%- if strategy.hard_deletes == 'new_record' %}\n        {% set source_sql_cols = get_column_schema_from_query(source_sql) %}\n    ,\n    deletion_records as (\n\n        select\n            'insert' as dbt_change_type,\n            {%- for col in source_sql_cols -%}\n            snapshotted_data.{{ adapter.quote(col.column) }},\n            {% endfor -%}\n            {%- if strategy.unique_key | is_list -%}\n                {%- for key in strategy.unique_key -%}\n            snapshotted_data.{{ key }} as dbt_unique_key_{{ loop.index }},\n                {% endfor -%}\n            {%- else -%}\n            snapshotted_data.dbt_unique_key as dbt_unique_key,\n            {% endif -%}\n            {{ snapshot_get_time() }} as {{ columns.dbt_valid_from }},\n            {{ snapshot_get_time() }} as {{ columns.dbt_updated_at }},\n            snapshotted_data.{{ columns.dbt_valid_to }} as {{ columns.dbt_valid_to }},\n            {{ new_scd_id }} as {{ columns.dbt_scd_id }},\n            'True' as {{ columns.dbt_is_deleted }}\n        from snapshotted_data\n        left join deletes_source_data as source_data\n            on {{ unique_key_join_on(strategy.unique_key, \"snapshotted_data\", \"source_data\") }}\n        where {{ unique_key_is_null(strategy.unique_key, \"source_data\") }}\n\n    )\n    {%- endif %}\n\n    select * from insertions\n    union all\n    select * from updates\n    {%- if strategy.hard_deletes == 'invalidate' or strategy.hard_deletes == 'new_record' %}\n    union all\n    select * from deletes\n    {%- endif %}\n    {%- if strategy.hard_deletes == 'new_record' %}\n    union all\n    select * from deletion_records\n    {%- endif %}\n\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_snapshot_table_column_names", "macro.dbt.snapshot_hash_arguments", "macro.dbt.snapshot_get_time", "macro.dbt.unique_key_fields", "macro.dbt.equals", "macro.dbt.get_dbt_valid_to_current", "macro.dbt.unique_key_join_on", "macro.dbt.unique_key_is_null", "macro.dbt.unique_key_is_not_null", "macro.dbt.get_column_schema_from_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.88022, "supported_languages": null}, "macro.dbt.build_snapshot_table": {"name": "build_snapshot_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.build_snapshot_table", "macro_sql": "{% macro build_snapshot_table(strategy, sql) -%}\n  {{ adapter.dispatch('build_snapshot_table', 'dbt')(strategy, sql) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__build_snapshot_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8805368, "supported_languages": null}, "macro.dbt.default__build_snapshot_table": {"name": "default__build_snapshot_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.default__build_snapshot_table", "macro_sql": "{% macro default__build_snapshot_table(strategy, sql) %}\n    {% set columns = config.get('snapshot_table_column_names') or get_snapshot_table_column_names() %}\n\n    select *,\n        {{ strategy.scd_id }} as {{ columns.dbt_scd_id }},\n        {{ strategy.updated_at }} as {{ columns.dbt_updated_at }},\n        {{ strategy.updated_at }} as {{ columns.dbt_valid_from }},\n        {{ get_dbt_valid_to_current(strategy, columns) }}\n      {%- if strategy.hard_deletes == 'new_record' -%}\n        , 'False' as {{ columns.dbt_is_deleted }}\n      {% endif -%}\n    from (\n        {{ sql }}\n    ) sbq\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_snapshot_table_column_names", "macro.dbt.get_dbt_valid_to_current"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.881078, "supported_languages": null}, "macro.dbt.build_snapshot_staging_table": {"name": "build_snapshot_staging_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.build_snapshot_staging_table", "macro_sql": "{% macro build_snapshot_staging_table(strategy, sql, target_relation) %}\n    {% set temp_relation = make_temp_relation(target_relation) %}\n\n    {% set select = snapshot_staging_table(strategy, sql, target_relation) %}\n\n    {% call statement('build_snapshot_staging_relation') %}\n        {{ create_table_as(True, temp_relation, select) }}\n    {% endcall %}\n\n    {% do return(temp_relation) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.make_temp_relation", "macro.dbt.snapshot_staging_table", "macro.dbt.statement", "macro.dbt.create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8815324, "supported_languages": null}, "macro.dbt.get_updated_at_column_data_type": {"name": "get_updated_at_column_data_type", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.get_updated_at_column_data_type", "macro_sql": "{% macro get_updated_at_column_data_type(snapshot_sql) %}\n    {% set snapshot_sql_column_schema = get_column_schema_from_query(snapshot_sql) %}\n    {% set dbt_updated_at_data_type = null %}\n    {% set ns = namespace() -%} {#-- handle for-loop scoping with a namespace --#}\n    {% set ns.dbt_updated_at_data_type = null -%}\n    {% for column in snapshot_sql_column_schema %}\n    {%   if ((column.column == 'dbt_updated_at') or (column.column == 'DBT_UPDATED_AT')) %}\n    {%     set ns.dbt_updated_at_data_type = column.dtype %}\n    {%   endif %}\n    {% endfor %}\n    {{ return(ns.dbt_updated_at_data_type or none)  }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_column_schema_from_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8822017, "supported_languages": null}, "macro.dbt.check_time_data_types": {"name": "check_time_data_types", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.check_time_data_types", "macro_sql": "{% macro check_time_data_types(sql) %}\n  {% set dbt_updated_at_data_type = get_updated_at_column_data_type(sql) %}\n  {% set snapshot_get_time_data_type = get_snapshot_get_time_data_type() %}\n  {% if snapshot_get_time_data_type is not none and dbt_updated_at_data_type is not none and snapshot_get_time_data_type != dbt_updated_at_data_type %}\n  {%   if exceptions.warn_snapshot_timestamp_data_types %}\n  {{     exceptions.warn_snapshot_timestamp_data_types(snapshot_get_time_data_type, dbt_updated_at_data_type) }}\n  {%   endif %}\n  {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_updated_at_column_data_type", "macro.dbt.get_snapshot_get_time_data_type"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8826375, "supported_languages": null}, "macro.dbt.get_dbt_valid_to_current": {"name": "get_dbt_valid_to_current", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.get_dbt_valid_to_current", "macro_sql": "{% macro get_dbt_valid_to_current(strategy, columns) %}\n  {% set dbt_valid_to_current = config.get('dbt_valid_to_current') or \"null\" %}\n  coalesce(nullif({{ strategy.updated_at }}, {{ strategy.updated_at }}), {{dbt_valid_to_current}})\n  as {{ columns.dbt_valid_to }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.882927, "supported_languages": null}, "macro.dbt.unique_key_fields": {"name": "unique_key_fields", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.unique_key_fields", "macro_sql": "{% macro unique_key_fields(unique_key) %}\n    {% if unique_key | is_list %}\n        {% for key in unique_key %}\n            {{ key }} as dbt_unique_key_{{ loop.index }}\n            {%- if not loop.last %} , {%- endif %}\n        {% endfor %}\n    {% else %}\n        {{ unique_key }} as dbt_unique_key\n    {% endif %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8832915, "supported_languages": null}, "macro.dbt.unique_key_join_on": {"name": "unique_key_join_on", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.unique_key_join_on", "macro_sql": "{% macro unique_key_join_on(unique_key, identifier, from_identifier) %}\n    {% if unique_key | is_list %}\n        {% for key in unique_key %}\n\t    {% set source_unique_key = (identifier ~ \".dbt_unique_key_\" ~ loop.index) | trim %}\n\t    {% set target_unique_key = (from_identifier ~ \".dbt_unique_key_\" ~ loop.index) | trim %}\n\t    {{ equals(source_unique_key, target_unique_key) }}\n            {%- if not loop.last %} and {%- endif %}\n        {% endfor %}\n    {% else %}\n        {{ identifier }}.dbt_unique_key = {{ from_identifier }}.dbt_unique_key\n    {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.equals"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.883892, "supported_languages": null}, "macro.dbt.unique_key_is_null": {"name": "unique_key_is_null", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.unique_key_is_null", "macro_sql": "{% macro unique_key_is_null(unique_key, identifier) %}\n    {% if unique_key | is_list %}\n        {{ identifier }}.dbt_unique_key_1 is null\n    {% else %}\n        {{ identifier }}.dbt_unique_key is null\n    {% endif %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.884143, "supported_languages": null}, "macro.dbt.unique_key_is_not_null": {"name": "unique_key_is_not_null", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.unique_key_is_not_null", "macro_sql": "{% macro unique_key_is_not_null(unique_key, identifier) %}\n    {% if unique_key | is_list %}\n        {{ identifier }}.dbt_unique_key_1 is not null\n    {% else %}\n        {{ identifier }}.dbt_unique_key is not null\n    {% endif %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.884353, "supported_languages": null}, "macro.dbt.materialization_snapshot_default": {"name": "materialization_snapshot_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/snapshot.sql", "original_file_path": "macros/materializations/snapshots/snapshot.sql", "unique_id": "macro.dbt.materialization_snapshot_default", "macro_sql": "{% materialization snapshot, default %}\n\n  {%- set target_table = model.get('alias', model.get('name')) -%}\n\n  {%- set strategy_name = config.get('strategy') -%}\n  {%- set unique_key = config.get('unique_key') %}\n  -- grab current tables grants config for comparision later on\n  {%- set grant_config = config.get('grants') -%}\n\n  {% set target_relation_exists, target_relation = get_or_create_relation(\n          database=model.database,\n          schema=model.schema,\n          identifier=target_table,\n          type='table') -%}\n\n  {%- if not target_relation.is_table -%}\n    {% do exceptions.relation_wrong_type(target_relation, 'table') %}\n  {%- endif -%}\n\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {% set strategy_macro = strategy_dispatch(strategy_name) %}\n  {# The model['config'] parameter below is no longer used, but passing anyway for compatibility #}\n  {# It was a dictionary of config, instead of the config object from the context #}\n  {% set strategy = strategy_macro(model, \"snapshotted_data\", \"source_data\", model['config'], target_relation_exists) %}\n\n  {% if not target_relation_exists %}\n\n      {% set build_sql = build_snapshot_table(strategy, model['compiled_code']) %}\n      {% set build_or_select_sql = build_sql %}\n      {% set final_sql = create_table_as(False, target_relation, build_sql) %}\n\n  {% else %}\n\n      {% set columns = config.get(\"snapshot_table_column_names\") or get_snapshot_table_column_names() %}\n\n      {{ adapter.assert_valid_snapshot_target_given_strategy(target_relation, columns, strategy) }}\n\n      {% set build_or_select_sql = snapshot_staging_table(strategy, sql, target_relation) %}\n      {% set staging_table = build_snapshot_staging_table(strategy, sql, target_relation) %}\n\n      -- this may no-op if the database does not require column expansion\n      {% do adapter.expand_target_column_types(from_relation=staging_table,\n                                               to_relation=target_relation) %}\n\n      {% set remove_columns = ['dbt_change_type', 'DBT_CHANGE_TYPE', 'dbt_unique_key', 'DBT_UNIQUE_KEY'] %}\n      {% if unique_key | is_list %}\n          {% for key in strategy.unique_key %}\n              {{ remove_columns.append('dbt_unique_key_' + loop.index|string) }}\n              {{ remove_columns.append('DBT_UNIQUE_KEY_' + loop.index|string) }}\n          {% endfor %}\n      {% endif %}\n\n      {% set missing_columns = adapter.get_missing_columns(staging_table, target_relation)\n                                   | rejectattr('name', 'in', remove_columns)\n                                   | list %}\n\n      {% do create_columns(target_relation, missing_columns) %}\n\n      {% set source_columns = adapter.get_columns_in_relation(staging_table)\n                                   | rejectattr('name', 'in', remove_columns)\n                                   | list %}\n\n      {% set quoted_source_columns = [] %}\n      {% for column in source_columns %}\n        {% do quoted_source_columns.append(adapter.quote(column.name)) %}\n      {% endfor %}\n\n      {% set final_sql = snapshot_merge_sql(\n            target = target_relation,\n            source = staging_table,\n            insert_cols = quoted_source_columns\n         )\n      %}\n\n  {% endif %}\n\n\n  {{ check_time_data_types(build_or_select_sql) }}\n\n  {% call statement('main') %}\n      {{ final_sql }}\n  {% endcall %}\n\n  {% set should_revoke = should_revoke(target_relation_exists, full_refresh_mode=False) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if not target_relation_exists %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {{ adapter.commit() }}\n\n  {% if staging_table is defined %}\n      {% do post_snapshot(staging_table) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt.get_or_create_relation", "macro.dbt.run_hooks", "macro.dbt.strategy_dispatch", "macro.dbt.build_snapshot_table", "macro.dbt.create_table_as", "macro.dbt.get_snapshot_table_column_names", "macro.dbt.snapshot_staging_table", "macro.dbt.build_snapshot_staging_table", "macro.dbt.create_columns", "macro.dbt.snapshot_merge_sql", "macro.dbt.check_time_data_types", "macro.dbt.statement", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs", "macro.dbt.create_indexes", "macro.dbt.post_snapshot"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8883564, "supported_languages": ["sql"]}, "macro.dbt.snapshot_merge_sql": {"name": "snapshot_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/snapshot_merge.sql", "original_file_path": "macros/materializations/snapshots/snapshot_merge.sql", "unique_id": "macro.dbt.snapshot_merge_sql", "macro_sql": "{% macro snapshot_merge_sql(target, source, insert_cols) -%}\n  {{ adapter.dispatch('snapshot_merge_sql', 'dbt')(target, source, insert_cols) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__snapshot_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8888686, "supported_languages": null}, "macro.dbt.default__snapshot_merge_sql": {"name": "default__snapshot_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/snapshot_merge.sql", "original_file_path": "macros/materializations/snapshots/snapshot_merge.sql", "unique_id": "macro.dbt.default__snapshot_merge_sql", "macro_sql": "{% macro default__snapshot_merge_sql(target, source, insert_cols) -%}\n    {%- set insert_cols_csv = insert_cols | join(', ') -%}\n\n    {%- set columns = config.get(\"snapshot_table_column_names\") or get_snapshot_table_column_names() -%}\n\n    merge into {{ target.render() }} as DBT_INTERNAL_DEST\n    using {{ source }} as DBT_INTERNAL_SOURCE\n    on DBT_INTERNAL_SOURCE.{{ columns.dbt_scd_id }} = DBT_INTERNAL_DEST.{{ columns.dbt_scd_id }}\n\n    when matched\n     {% if config.get(\"dbt_valid_to_current\") %}\n\t{% set source_unique_key = (\"DBT_INTERNAL_DEST.\" ~ columns.dbt_valid_to) | trim %}\n\t{% set target_unique_key = config.get('dbt_valid_to_current') | trim %}\n\tand ({{ equals(source_unique_key, target_unique_key) }} or {{ source_unique_key }} is null)\n\n     {% else %}\n       and DBT_INTERNAL_DEST.{{ columns.dbt_valid_to }} is null\n     {% endif %}\n     and DBT_INTERNAL_SOURCE.dbt_change_type in ('update', 'delete')\n        then update\n        set {{ columns.dbt_valid_to }} = DBT_INTERNAL_SOURCE.{{ columns.dbt_valid_to }}\n\n    when not matched\n     and DBT_INTERNAL_SOURCE.dbt_change_type = 'insert'\n        then insert ({{ insert_cols_csv }})\n        values ({{ insert_cols_csv }})\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_snapshot_table_column_names", "macro.dbt.equals"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.889678, "supported_languages": null}, "macro.dbt.strategy_dispatch": {"name": "strategy_dispatch", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.strategy_dispatch", "macro_sql": "{% macro strategy_dispatch(name) -%}\n{% set original_name = name %}\n  {% if '.' in name %}\n    {% set package_name, name = name.split(\".\", 1) %}\n  {% else %}\n    {% set package_name = none %}\n  {% endif %}\n\n  {% if package_name is none %}\n    {% set package_context = context %}\n  {% elif package_name in context %}\n    {% set package_context = context[package_name] %}\n  {% else %}\n    {% set error_msg %}\n        Could not find package '{{package_name}}', called with '{{original_name}}'\n    {% endset %}\n    {{ exceptions.raise_compiler_error(error_msg | trim) }}\n  {% endif %}\n\n  {%- set search_name = 'snapshot_' ~ name ~ '_strategy' -%}\n\n  {% if search_name not in package_context %}\n    {% set error_msg %}\n        The specified strategy macro '{{name}}' was not found in package '{{ package_name }}'\n    {% endset %}\n    {{ exceptions.raise_compiler_error(error_msg | trim) }}\n  {% endif %}\n  {{ return(package_context[search_name]) }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8917255, "supported_languages": null}, "macro.dbt.snapshot_hash_arguments": {"name": "snapshot_hash_arguments", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.snapshot_hash_arguments", "macro_sql": "{% macro snapshot_hash_arguments(args) -%}\n  {{ adapter.dispatch('snapshot_hash_arguments', 'dbt')(args) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.89192, "supported_languages": null}, "macro.dbt.default__snapshot_hash_arguments": {"name": "default__snapshot_hash_arguments", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.default__snapshot_hash_arguments", "macro_sql": "{% macro default__snapshot_hash_arguments(args) -%}\n    md5({%- for arg in args -%}\n        coalesce(cast({{ arg }} as varchar ), '')\n        {% if not loop.last %} || '|' || {% endif %}\n    {%- endfor -%})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8921907, "supported_languages": null}, "macro.dbt.snapshot_timestamp_strategy": {"name": "snapshot_timestamp_strategy", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.snapshot_timestamp_strategy", "macro_sql": "{% macro snapshot_timestamp_strategy(node, snapshotted_rel, current_rel, model_config, target_exists) %}\n    {# The model_config parameter is no longer used, but is passed in anyway for compatibility. #}\n    {% set primary_key = config.get('unique_key') %}\n    {% set updated_at = config.get('updated_at') %}\n    {% set hard_deletes = adapter.get_hard_deletes_behavior(config) %}\n    {% set invalidate_hard_deletes = hard_deletes == 'invalidate' %}\n    {% set columns = config.get(\"snapshot_table_column_names\") or get_snapshot_table_column_names() %}\n\n    {#/*\n        The snapshot relation might not have an {{ updated_at }} value if the\n        snapshot strategy is changed from `check` to `timestamp`. We\n        should use a dbt-created column for the comparison in the snapshot\n        table instead of assuming that the user-supplied {{ updated_at }}\n        will be present in the historical data.\n\n        See https://github.com/dbt-labs/dbt-core/issues/2350\n    */ #}\n    {% set row_changed_expr -%}\n        ({{ snapshotted_rel }}.{{ columns.dbt_valid_from }} < {{ current_rel }}.{{ updated_at }})\n    {%- endset %}\n\n    {% set scd_args = api.Relation.scd_args(primary_key, updated_at) %}\n    {% set scd_id_expr = snapshot_hash_arguments(scd_args) %}\n\n    {% do return({\n        \"unique_key\": primary_key,\n        \"updated_at\": updated_at,\n        \"row_changed\": row_changed_expr,\n        \"scd_id\": scd_id_expr,\n        \"invalidate_hard_deletes\": invalidate_hard_deletes,\n        \"hard_deletes\": hard_deletes\n    }) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_snapshot_table_column_names", "macro.dbt.snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8931277, "supported_languages": null}, "macro.dbt.snapshot_string_as_time": {"name": "snapshot_string_as_time", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.snapshot_string_as_time", "macro_sql": "{% macro snapshot_string_as_time(timestamp) -%}\n    {{ adapter.dispatch('snapshot_string_as_time', 'dbt')(timestamp) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__snapshot_string_as_time"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8932977, "supported_languages": null}, "macro.dbt.default__snapshot_string_as_time": {"name": "default__snapshot_string_as_time", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.default__snapshot_string_as_time", "macro_sql": "{% macro default__snapshot_string_as_time(timestamp) %}\n    {% do exceptions.raise_not_implemented(\n        'snapshot_string_as_time macro not implemented for adapter '+adapter.type()\n    ) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8934677, "supported_languages": null}, "macro.dbt.snapshot_check_all_get_existing_columns": {"name": "snapshot_check_all_get_existing_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.snapshot_check_all_get_existing_columns", "macro_sql": "{% macro snapshot_check_all_get_existing_columns(node, target_exists, check_cols_config) -%}\n    {%- if not target_exists -%}\n        {#-- no table yet -> return whatever the query does --#}\n        {{ return((false, query_columns)) }}\n    {%- endif -%}\n\n    {#-- handle any schema changes --#}\n    {%- set target_relation = adapter.get_relation(database=node.database, schema=node.schema, identifier=node.alias) -%}\n\n    {% if check_cols_config == 'all' %}\n        {%- set query_columns = get_columns_in_query(node['compiled_code']) -%}\n\n    {% elif check_cols_config is iterable and (check_cols_config | length) > 0 %}\n        {#-- query for proper casing/quoting, to support comparison below --#}\n        {%- set select_check_cols_from_target -%}\n            {#-- N.B. The whitespace below is necessary to avoid edge case issue with comments --#}\n            {#-- See: https://github.com/dbt-labs/dbt-core/issues/6781 --#}\n            select {{ check_cols_config | join(', ') }} from (\n                {{ node['compiled_code'] }}\n            ) subq\n        {%- endset -%}\n        {% set query_columns = get_columns_in_query(select_check_cols_from_target) %}\n\n    {% else %}\n        {% do exceptions.raise_compiler_error(\"Invalid value for 'check_cols': \" ~ check_cols_config) %}\n    {% endif %}\n\n    {%- set existing_cols = adapter.get_columns_in_relation(target_relation) | map(attribute = 'name') | list -%}\n    {%- set ns = namespace() -%} {#-- handle for-loop scoping with a namespace --#}\n    {%- set ns.column_added = false -%}\n\n    {%- set intersection = [] -%}\n    {%- for col in query_columns -%}\n        {%- if col in existing_cols -%}\n            {%- do intersection.append(adapter.quote(col)) -%}\n        {%- else -%}\n            {% set ns.column_added = true %}\n        {%- endif -%}\n    {%- endfor -%}\n    {{ return((ns.column_added, intersection)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_columns_in_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.894842, "supported_languages": null}, "macro.dbt.snapshot_check_strategy": {"name": "snapshot_check_strategy", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.snapshot_check_strategy", "macro_sql": "{% macro snapshot_check_strategy(node, snapshotted_rel, current_rel, model_config, target_exists) %}\n    {# The model_config parameter is no longer used, but is passed in anyway for compatibility. #}\n    {% set check_cols_config = config.get('check_cols') %}\n    {% set primary_key = config.get('unique_key') %}\n    {% set hard_deletes = adapter.get_hard_deletes_behavior(config) %}\n    {% set invalidate_hard_deletes = hard_deletes == 'invalidate' %}\n    {% set updated_at = config.get('updated_at') or snapshot_get_time() %}\n\n    {% set column_added = false %}\n\n    {% set column_added, check_cols = snapshot_check_all_get_existing_columns(node, target_exists, check_cols_config) %}\n\n    {%- set row_changed_expr -%}\n    (\n    {%- if column_added -%}\n        {{ get_true_sql() }}\n    {%- else -%}\n    {%- for col in check_cols -%}\n        {{ snapshotted_rel }}.{{ col }} != {{ current_rel }}.{{ col }}\n        or\n        (\n            (({{ snapshotted_rel }}.{{ col }} is null) and not ({{ current_rel }}.{{ col }} is null))\n            or\n            ((not {{ snapshotted_rel }}.{{ col }} is null) and ({{ current_rel }}.{{ col }} is null))\n        )\n        {%- if not loop.last %} or {% endif -%}\n    {%- endfor -%}\n    {%- endif -%}\n    )\n    {%- endset %}\n\n    {% set scd_args = api.Relation.scd_args(primary_key, updated_at) %}\n    {% set scd_id_expr = snapshot_hash_arguments(scd_args) %}\n\n    {% do return({\n        \"unique_key\": primary_key,\n        \"updated_at\": updated_at,\n        \"row_changed\": row_changed_expr,\n        \"scd_id\": scd_id_expr,\n        \"invalidate_hard_deletes\": invalidate_hard_deletes,\n        \"hard_deletes\": hard_deletes\n    }) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.snapshot_get_time", "macro.dbt.snapshot_check_all_get_existing_columns", "macro.dbt.get_true_sql", "macro.dbt.snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8962162, "supported_languages": null}, "macro.dbt.create_csv_table": {"name": "create_csv_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.create_csv_table", "macro_sql": "{% macro create_csv_table(model, agate_table) -%}\n  {{ adapter.dispatch('create_csv_table', 'dbt')(model, agate_table) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__create_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8971405, "supported_languages": null}, "macro.dbt.default__create_csv_table": {"name": "default__create_csv_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.default__create_csv_table", "macro_sql": "{% macro default__create_csv_table(model, agate_table) %}\n  {%- set column_override = model['config'].get('column_types', {}) -%}\n  {%- set quote_seed_column = model['config'].get('quote_columns', None) -%}\n\n  {% set sql %}\n    create table {{ this.render() }} (\n        {%- for col_name in agate_table.column_names -%}\n            {%- set inferred_type = adapter.convert_type(agate_table, loop.index0) -%}\n            {%- set type = column_override.get(col_name, inferred_type) -%}\n            {%- set column_name = (col_name | string) -%}\n            {{ adapter.quote_seed_column(column_name, quote_seed_column) }} {{ type }} {%- if not loop.last -%}, {%- endif -%}\n        {%- endfor -%}\n    )\n  {% endset %}\n\n  {% call statement('_') -%}\n    {{ sql }}\n  {%- endcall %}\n\n  {{ return(sql) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8980386, "supported_languages": null}, "macro.dbt.reset_csv_table": {"name": "reset_csv_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.reset_csv_table", "macro_sql": "{% macro reset_csv_table(model, full_refresh, old_relation, agate_table) -%}\n  {{ adapter.dispatch('reset_csv_table', 'dbt')(model, full_refresh, old_relation, agate_table) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__reset_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8982818, "supported_languages": null}, "macro.dbt.default__reset_csv_table": {"name": "default__reset_csv_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.default__reset_csv_table", "macro_sql": "{% macro default__reset_csv_table(model, full_refresh, old_relation, agate_table) %}\n    {% set sql = \"\" %}\n    {% if full_refresh %}\n        {{ adapter.drop_relation(old_relation) }}\n        {% set sql = create_csv_table(model, agate_table) %}\n    {% else %}\n        {{ adapter.truncate_relation(old_relation) }}\n        {% set sql = \"truncate table \" ~ old_relation.render() %}\n    {% endif %}\n\n    {{ return(sql) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.create_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8987362, "supported_languages": null}, "macro.dbt.get_csv_sql": {"name": "get_csv_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.get_csv_sql", "macro_sql": "{% macro get_csv_sql(create_or_truncate_sql, insert_sql) %}\n    {{ adapter.dispatch('get_csv_sql', 'dbt')(create_or_truncate_sql, insert_sql) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_csv_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8989208, "supported_languages": null}, "macro.dbt.default__get_csv_sql": {"name": "default__get_csv_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.default__get_csv_sql", "macro_sql": "{% macro default__get_csv_sql(create_or_truncate_sql, insert_sql) %}\n    {{ create_or_truncate_sql }};\n    -- dbt seed --\n    {{ insert_sql }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8990579, "supported_languages": null}, "macro.dbt.get_binding_char": {"name": "get_binding_char", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.get_binding_char", "macro_sql": "{% macro get_binding_char() -%}\n  {{ adapter.dispatch('get_binding_char', 'dbt')() }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__get_binding_char"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8991947, "supported_languages": null}, "macro.dbt.default__get_binding_char": {"name": "default__get_binding_char", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.default__get_binding_char", "macro_sql": "{% macro default__get_binding_char() %}\n  {{ return('%s') }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8993077, "supported_languages": null}, "macro.dbt.get_batch_size": {"name": "get_batch_size", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.get_batch_size", "macro_sql": "{% macro get_batch_size() -%}\n  {{ return(adapter.dispatch('get_batch_size', 'dbt')()) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__get_batch_size"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.89948, "supported_languages": null}, "macro.dbt.default__get_batch_size": {"name": "default__get_batch_size", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.default__get_batch_size", "macro_sql": "{% macro default__get_batch_size() %}\n  {{ return(10000) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.8996012, "supported_languages": null}, "macro.dbt.get_seed_column_quoted_csv": {"name": "get_seed_column_quoted_csv", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.get_seed_column_quoted_csv", "macro_sql": "{% macro get_seed_column_quoted_csv(model, column_names) %}\n  {%- set quote_seed_column = model['config'].get('quote_columns', None) -%}\n    {% set quoted = [] %}\n    {% for col in column_names -%}\n        {%- do quoted.append(adapter.quote_seed_column(col, quote_seed_column)) -%}\n    {%- endfor %}\n\n    {%- set dest_cols_csv = quoted | join(', ') -%}\n    {{ return(dest_cols_csv) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.90005, "supported_languages": null}, "macro.dbt.load_csv_rows": {"name": "load_csv_rows", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.load_csv_rows", "macro_sql": "{% macro load_csv_rows(model, agate_table) -%}\n  {{ adapter.dispatch('load_csv_rows', 'dbt')(model, agate_table) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__load_csv_rows"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.900224, "supported_languages": null}, "macro.dbt.default__load_csv_rows": {"name": "default__load_csv_rows", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.default__load_csv_rows", "macro_sql": "{% macro default__load_csv_rows(model, agate_table) %}\n\n  {% set batch_size = get_batch_size() %}\n\n  {% set cols_sql = get_seed_column_quoted_csv(model, agate_table.column_names) %}\n  {% set bindings = [] %}\n\n  {% set statements = [] %}\n\n  {% for chunk in agate_table.rows | batch(batch_size) %}\n      {% set bindings = [] %}\n\n      {% for row in chunk %}\n          {% do bindings.extend(row) %}\n      {% endfor %}\n\n      {% set sql %}\n          insert into {{ this.render() }} ({{ cols_sql }}) values\n          {% for row in chunk -%}\n              ({%- for column in agate_table.column_names -%}\n                  {{ get_binding_char() }}\n                  {%- if not loop.last%},{%- endif %}\n              {%- endfor -%})\n              {%- if not loop.last%},{%- endif %}\n          {%- endfor %}\n      {% endset %}\n\n      {% do adapter.add_query(sql, bindings=bindings, abridge_sql_log=True) %}\n\n      {% if loop.index0 == 0 %}\n          {% do statements.append(sql) %}\n      {% endif %}\n  {% endfor %}\n\n  {# Return SQL so we can render it out into the compiled files #}\n  {{ return(statements[0]) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_batch_size", "macro.dbt.get_seed_column_quoted_csv", "macro.dbt.get_binding_char"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9014826, "supported_languages": null}, "macro.dbt.materialization_seed_default": {"name": "materialization_seed_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/seed.sql", "original_file_path": "macros/materializations/seeds/seed.sql", "unique_id": "macro.dbt.materialization_seed_default", "macro_sql": "{% materialization seed, default %}\n\n  {%- set identifier = model['alias'] -%}\n  {%- set full_refresh_mode = (should_full_refresh()) -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n\n  {%- set exists_as_table = (old_relation is not none and old_relation.is_table) -%}\n  {%- set exists_as_view = (old_relation is not none and old_relation.is_view) -%}\n\n  {%- set grant_config = config.get('grants') -%}\n  {%- set agate_table = load_agate_table() -%}\n  -- grab current tables grants config for comparison later on\n\n  {%- do store_result('agate_table', response='OK', agate_table=agate_table) -%}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% set create_table_sql = \"\" %}\n  {% if exists_as_view %}\n    {{ exceptions.raise_compiler_error(\"Cannot seed to '{}', it is a view\".format(old_relation.render())) }}\n  {% elif exists_as_table %}\n    {% set create_table_sql = reset_csv_table(model, full_refresh_mode, old_relation, agate_table) %}\n  {% else %}\n    {% set create_table_sql = create_csv_table(model, agate_table) %}\n  {% endif %}\n\n  {% set code = 'CREATE' if full_refresh_mode else 'INSERT' %}\n  {% set rows_affected = (agate_table.rows | length) %}\n  {% set sql = load_csv_rows(model, agate_table) %}\n\n  {% call noop_statement('main', code ~ ' ' ~ rows_affected, code, rows_affected) %}\n    {{ get_csv_sql(create_table_sql, sql) }};\n  {% endcall %}\n\n  {% set target_relation = this.incorporate(type='table') %}\n\n  {% set should_revoke = should_revoke(old_relation, full_refresh_mode) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if full_refresh_mode or not exists_as_table %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt.should_full_refresh", "macro.dbt.run_hooks", "macro.dbt.reset_csv_table", "macro.dbt.create_csv_table", "macro.dbt.load_csv_rows", "macro.dbt.noop_statement", "macro.dbt.get_csv_sql", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs", "macro.dbt.create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.903847, "supported_languages": ["sql"]}, "macro.dbt.test_unique": {"name": "test_unique", "resource_type": "macro", "package_name": "dbt", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "unique_id": "macro.dbt.test_unique", "macro_sql": "{% test unique(model, column_name) %}\n    {% set macro = adapter.dispatch('test_unique', 'dbt') %}\n    {{ macro(model, column_name) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt.default__test_unique"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9043605, "supported_languages": null}, "macro.dbt.test_not_null": {"name": "test_not_null", "resource_type": "macro", "package_name": "dbt", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "unique_id": "macro.dbt.test_not_null", "macro_sql": "{% test not_null(model, column_name) %}\n    {% set macro = adapter.dispatch('test_not_null', 'dbt') %}\n    {{ macro(model, column_name) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt.default__test_not_null"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.904613, "supported_languages": null}, "macro.dbt.test_accepted_values": {"name": "test_accepted_values", "resource_type": "macro", "package_name": "dbt", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "unique_id": "macro.dbt.test_accepted_values", "macro_sql": "{% test accepted_values(model, column_name, values, quote=True) %}\n    {% set macro = adapter.dispatch('test_accepted_values', 'dbt') %}\n    {{ macro(model, column_name, values, quote) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt.default__test_accepted_values"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.904895, "supported_languages": null}, "macro.dbt.test_relationships": {"name": "test_relationships", "resource_type": "macro", "package_name": "dbt", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "unique_id": "macro.dbt.test_relationships", "macro_sql": "{% test relationships(model, column_name, to, field) %}\n    {% set macro = adapter.dispatch('test_relationships', 'dbt') %}\n    {{ macro(model, column_name, to, field) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt.default__test_relationships"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9051735, "supported_languages": null}, "macro.dbt_utils.get_url_path": {"name": "get_url_path", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/web/get_url_path.sql", "original_file_path": "macros/web/get_url_path.sql", "unique_id": "macro.dbt_utils.get_url_path", "macro_sql": "{% macro get_url_path(field) -%}\n    {{ return(adapter.dispatch('get_url_path', 'dbt_utils')(field)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_url_path"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9055502, "supported_languages": null}, "macro.dbt_utils.default__get_url_path": {"name": "default__get_url_path", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/web/get_url_path.sql", "original_file_path": "macros/web/get_url_path.sql", "unique_id": "macro.dbt_utils.default__get_url_path", "macro_sql": "{% macro default__get_url_path(field) -%}\n\n    {%- set stripped_url =\n        dbt.replace(\n            dbt.replace(field, \"'http://'\", \"''\"), \"'https://'\", \"''\")\n    -%}\n\n    {%- set first_slash_pos -%}\n        coalesce(\n            nullif({{ dbt.position(\"'/'\", stripped_url) }}, 0),\n            {{ dbt.position(\"'?'\", stripped_url) }} - 1\n            )\n    {%- endset -%}\n\n    {%- set parsed_path =\n        dbt.split_part(\n            dbt.right(\n                stripped_url,\n                dbt.length(stripped_url) ~ \"-\" ~ first_slash_pos\n                ),\n            \"'?'\", 1\n            )\n    -%}\n\n    {{ dbt.safe_cast(\n        parsed_path,\n        dbt.type_string()\n    )}}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.replace", "macro.dbt.position", "macro.dbt.split_part", "macro.dbt.right", "macro.dbt.length", "macro.dbt.safe_cast", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9061315, "supported_languages": null}, "macro.dbt_utils.get_url_host": {"name": "get_url_host", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/web/get_url_host.sql", "original_file_path": "macros/web/get_url_host.sql", "unique_id": "macro.dbt_utils.get_url_host", "macro_sql": "{% macro get_url_host(field) -%}\n    {{ return(adapter.dispatch('get_url_host', 'dbt_utils')(field)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_url_host"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.906443, "supported_languages": null}, "macro.dbt_utils.default__get_url_host": {"name": "default__get_url_host", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/web/get_url_host.sql", "original_file_path": "macros/web/get_url_host.sql", "unique_id": "macro.dbt_utils.default__get_url_host", "macro_sql": "{% macro default__get_url_host(field) -%}\n\n{%- set parsed =\n    dbt.split_part(\n        dbt.split_part(\n            dbt.replace(\n                dbt.replace(\n                    dbt.replace(field, \"'android-app://'\", \"''\"\n                    ), \"'http://'\", \"''\"\n                ), \"'https://'\", \"''\"\n            ), \"'/'\", 1\n        ), \"'?'\", 1\n    )\n\n-%}\n\n\n    {{ dbt.safe_cast(\n        parsed,\n        dbt.type_string()\n        )}}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.split_part", "macro.dbt.replace", "macro.dbt.safe_cast", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9069762, "supported_languages": null}, "macro.dbt_utils.get_url_parameter": {"name": "get_url_parameter", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/web/get_url_parameter.sql", "original_file_path": "macros/web/get_url_parameter.sql", "unique_id": "macro.dbt_utils.get_url_parameter", "macro_sql": "{% macro get_url_parameter(field, url_parameter) -%}\n    {{ return(adapter.dispatch('get_url_parameter', 'dbt_utils')(field, url_parameter)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_url_parameter"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9072804, "supported_languages": null}, "macro.dbt_utils.default__get_url_parameter": {"name": "default__get_url_parameter", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/web/get_url_parameter.sql", "original_file_path": "macros/web/get_url_parameter.sql", "unique_id": "macro.dbt_utils.default__get_url_parameter", "macro_sql": "{% macro default__get_url_parameter(field, url_parameter) -%}\n\n{%- set formatted_url_parameter = \"'\" + url_parameter + \"='\" -%}\n\n{%- set split = dbt.split_part(dbt.split_part(field, formatted_url_parameter, 2), \"'&'\", 1) -%}\n\nnullif({{ split }},'')\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.split_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.907632, "supported_languages": null}, "macro.dbt_utils._is_relation": {"name": "_is_relation", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/jinja_helpers/_is_relation.sql", "original_file_path": "macros/jinja_helpers/_is_relation.sql", "unique_id": "macro.dbt_utils._is_relation", "macro_sql": "{% macro _is_relation(obj, macro) %}\n    {%- if not (obj is mapping and obj.get('metadata', {}).get('type', '').endswith('Relation')) -%}\n        {%- do exceptions.raise_compiler_error(\"Macro \" ~ macro ~ \" expected a Relation but received the value: \" ~ obj) -%}\n    {%- endif -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9082084, "supported_languages": null}, "macro.dbt_utils.pretty_log_format": {"name": "pretty_log_format", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/jinja_helpers/pretty_log_format.sql", "original_file_path": "macros/jinja_helpers/pretty_log_format.sql", "unique_id": "macro.dbt_utils.pretty_log_format", "macro_sql": "{% macro pretty_log_format(message) %}\n    {{ return(adapter.dispatch('pretty_log_format', 'dbt_utils')(message)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__pretty_log_format"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9085846, "supported_languages": null}, "macro.dbt_utils.default__pretty_log_format": {"name": "default__pretty_log_format", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/jinja_helpers/pretty_log_format.sql", "original_file_path": "macros/jinja_helpers/pretty_log_format.sql", "unique_id": "macro.dbt_utils.default__pretty_log_format", "macro_sql": "{% macro default__pretty_log_format(message) %}\n    {{ return( dbt_utils.pretty_time() ~ ' + ' ~ message) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.pretty_time"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.908797, "supported_languages": null}, "macro.dbt_utils.pretty_time": {"name": "pretty_time", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/jinja_helpers/pretty_time.sql", "original_file_path": "macros/jinja_helpers/pretty_time.sql", "unique_id": "macro.dbt_utils.pretty_time", "macro_sql": "{% macro pretty_time(format='%H:%M:%S') %}\n    {{ return(adapter.dispatch('pretty_time', 'dbt_utils')(format)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__pretty_time"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9091656, "supported_languages": null}, "macro.dbt_utils.default__pretty_time": {"name": "default__pretty_time", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/jinja_helpers/pretty_time.sql", "original_file_path": "macros/jinja_helpers/pretty_time.sql", "unique_id": "macro.dbt_utils.default__pretty_time", "macro_sql": "{% macro default__pretty_time(format='%H:%M:%S') %}\n    {{ return(modules.datetime.datetime.now().strftime(format)) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9093878, "supported_languages": null}, "macro.dbt_utils.slugify": {"name": "slugify", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/jinja_helpers/slugify.sql", "original_file_path": "macros/jinja_helpers/slugify.sql", "unique_id": "macro.dbt_utils.slugify", "macro_sql": "{% macro slugify(string) %}\n\n{% if not string %}\n{{ return('') }}\n{% endif %}\n\n{#- Lower case the string -#}\n{% set string = string | lower %}\n{#- Replace spaces and dashes with underscores -#}\n{% set string = modules.re.sub('[ -]+', '_', string) %}\n{#- Only take letters, numbers, and underscores -#}\n{% set string = modules.re.sub('[^a-z0-9_]+', '', string) %}\n{#- Prepends \"_\" if string begins with a number -#}\n{% set string = modules.re.sub('^[0-9]', '_' + string[0], string) %}\n\n{{ return(string) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9103017, "supported_languages": null}, "macro.dbt_utils.log_info": {"name": "log_info", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/jinja_helpers/log_info.sql", "original_file_path": "macros/jinja_helpers/log_info.sql", "unique_id": "macro.dbt_utils.log_info", "macro_sql": "{% macro log_info(message) %}\n    {{ return(adapter.dispatch('log_info', 'dbt_utils')(message)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__log_info"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.910598, "supported_languages": null}, "macro.dbt_utils.default__log_info": {"name": "default__log_info", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/jinja_helpers/log_info.sql", "original_file_path": "macros/jinja_helpers/log_info.sql", "unique_id": "macro.dbt_utils.default__log_info", "macro_sql": "{% macro default__log_info(message) %}\n    {{ log(dbt_utils.pretty_log_format(message), info=True) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.pretty_log_format"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9107907, "supported_languages": null}, "macro.dbt_utils._is_ephemeral": {"name": "_is_ephemeral", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/jinja_helpers/_is_ephemeral.sql", "original_file_path": "macros/jinja_helpers/_is_ephemeral.sql", "unique_id": "macro.dbt_utils._is_ephemeral", "macro_sql": "{% macro _is_ephemeral(obj, macro) %}\n    {%- if obj.is_cte -%}\n        {% set ephemeral_prefix = api.Relation.add_ephemeral_prefix('') %}\n        {% if obj.name.startswith(ephemeral_prefix) %}\n            {% set model_name = obj.name[(ephemeral_prefix|length):] %}\n        {% else %}\n            {% set model_name = obj.name %}\n        {%- endif -%}\n        {% set error_message %}\nThe `{{ macro }}` macro cannot be used with ephemeral models, as it relies on the information schema.\n\n`{{ model_name }}` is an ephemeral model. Consider making it a view or table instead.\n        {% endset %}\n        {%- do exceptions.raise_compiler_error(error_message) -%}\n    {%- endif -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9115841, "supported_languages": null}, "macro.dbt_utils.surrogate_key": {"name": "surrogate_key", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/surrogate_key.sql", "original_file_path": "macros/sql/surrogate_key.sql", "unique_id": "macro.dbt_utils.surrogate_key", "macro_sql": "{%- macro surrogate_key(field_list) -%}\n    {% set frustrating_jinja_feature = varargs %}\n    {{ return(adapter.dispatch('surrogate_key', 'dbt_utils')(field_list, *varargs)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__surrogate_key"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9120133, "supported_languages": null}, "macro.dbt_utils.default__surrogate_key": {"name": "default__surrogate_key", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/surrogate_key.sql", "original_file_path": "macros/sql/surrogate_key.sql", "unique_id": "macro.dbt_utils.default__surrogate_key", "macro_sql": "\n\n{%- macro default__surrogate_key(field_list) -%}\n\n{%- set error_message = '\nWarning: `dbt_utils.surrogate_key` has been replaced by \\\n`dbt_utils.generate_surrogate_key`. The new macro treats null values \\\ndifferently to empty strings. To restore the behaviour of the original \\\nmacro, add a global variable in dbt_project.yml called \\\n`surrogate_key_treat_nulls_as_empty_strings` to your \\\ndbt_project.yml file with a value of True. \\\nThe {}.{} model triggered this warning. \\\n'.format(model.package_name, model.name) -%}\n\n{%- do exceptions.raise_compiler_error(error_message) -%}\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9123218, "supported_languages": null}, "macro.dbt_utils.group_by": {"name": "group_by", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/groupby.sql", "original_file_path": "macros/sql/groupby.sql", "unique_id": "macro.dbt_utils.group_by", "macro_sql": "{%- macro group_by(n) -%}\n    {{ return(adapter.dispatch('group_by', 'dbt_utils')(n)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__group_by"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9126182, "supported_languages": null}, "macro.dbt_utils.default__group_by": {"name": "default__group_by", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/groupby.sql", "original_file_path": "macros/sql/groupby.sql", "unique_id": "macro.dbt_utils.default__group_by", "macro_sql": "\n\n{%- macro default__group_by(n) -%}\n\n  group by {% for i in range(1, n + 1) -%}\n      {{ i }}{{ ',' if not loop.last }}   \n   {%- endfor -%}\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.912883, "supported_languages": null}, "macro.dbt_utils.deduplicate": {"name": "deduplicate", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/deduplicate.sql", "original_file_path": "macros/sql/deduplicate.sql", "unique_id": "macro.dbt_utils.deduplicate", "macro_sql": "{%- macro deduplicate(relation, partition_by, order_by) -%}\n    {{ return(adapter.dispatch('deduplicate', 'dbt_utils')(relation, partition_by, order_by)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__deduplicate"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9134862, "supported_languages": null}, "macro.dbt_utils.default__deduplicate": {"name": "default__deduplicate", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/deduplicate.sql", "original_file_path": "macros/sql/deduplicate.sql", "unique_id": "macro.dbt_utils.default__deduplicate", "macro_sql": "\n\n{%- macro default__deduplicate(relation, partition_by, order_by) -%}\n\n    with row_numbered as (\n        select\n            _inner.*,\n            row_number() over (\n                partition by {{ partition_by }}\n                order by {{ order_by }}\n            ) as rn\n        from {{ relation }} as _inner\n    )\n\n    select\n        distinct data.*\n    from {{ relation }} as data\n    {#\n    -- Not all DBs will support natural joins but the ones that do include:\n    -- Oracle, MySQL, SQLite, Redshift, Teradata, Materialize, Databricks\n    -- Apache Spark, SingleStore, Vertica\n    -- Those that do not appear to support natural joins include:\n    -- SQLServer, Trino, Presto, Rockset, Athena\n    #}\n    natural join row_numbered\n    where row_numbered.rn = 1\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.91383, "supported_languages": null}, "macro.dbt_utils.redshift__deduplicate": {"name": "redshift__deduplicate", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/deduplicate.sql", "original_file_path": "macros/sql/deduplicate.sql", "unique_id": "macro.dbt_utils.redshift__deduplicate", "macro_sql": "{% macro redshift__deduplicate(relation, partition_by, order_by) -%}\n\n    select *\n    from {{ relation }} as tt\n    qualify\n        row_number() over (\n            partition by {{ partition_by }}\n            order by {{ order_by }}\n        ) = 1\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9140146, "supported_languages": null}, "macro.dbt_utils.postgres__deduplicate": {"name": "postgres__deduplicate", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/deduplicate.sql", "original_file_path": "macros/sql/deduplicate.sql", "unique_id": "macro.dbt_utils.postgres__deduplicate", "macro_sql": "\n{%- macro postgres__deduplicate(relation, partition_by, order_by) -%}\n\n    select\n        distinct on ({{ partition_by }}) *\n    from {{ relation }}\n    order by {{ partition_by }}{{ ',' ~ order_by }}\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9142454, "supported_languages": null}, "macro.dbt_utils.snowflake__deduplicate": {"name": "snowflake__deduplicate", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/deduplicate.sql", "original_file_path": "macros/sql/deduplicate.sql", "unique_id": "macro.dbt_utils.snowflake__deduplicate", "macro_sql": "\n{%- macro snowflake__deduplicate(relation, partition_by, order_by) -%}\n\n    select *\n    from {{ relation }}\n    qualify\n        row_number() over (\n            partition by {{ partition_by }}\n            order by {{ order_by }}\n        ) = 1\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.914421, "supported_languages": null}, "macro.dbt_utils.databricks__deduplicate": {"name": "databricks__deduplicate", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/deduplicate.sql", "original_file_path": "macros/sql/deduplicate.sql", "unique_id": "macro.dbt_utils.databricks__deduplicate", "macro_sql": "\n{%- macro databricks__deduplicate(relation, partition_by, order_by) -%}\n\n    select *\n    from {{ relation }}\n    qualify\n        row_number() over (\n            partition by {{ partition_by }}\n            order by {{ order_by }}\n        ) = 1\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9146304, "supported_languages": null}, "macro.dbt_utils.bigquery__deduplicate": {"name": "bigquery__deduplicate", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/deduplicate.sql", "original_file_path": "macros/sql/deduplicate.sql", "unique_id": "macro.dbt_utils.bigquery__deduplicate", "macro_sql": "\n{%- macro bigquery__deduplicate(relation, partition_by, order_by) -%}\n\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by {{ order_by }}\n                limit 1\n            )[offset(0)] unique\n        from {{ relation }} original\n        group by {{ partition_by }}\n    )\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.914834, "supported_languages": null}, "macro.dbt_utils.get_query_results_as_dict": {"name": "get_query_results_as_dict", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_query_results_as_dict.sql", "original_file_path": "macros/sql/get_query_results_as_dict.sql", "unique_id": "macro.dbt_utils.get_query_results_as_dict", "macro_sql": "{% macro get_query_results_as_dict(query) %}\n    {{ return(adapter.dispatch('get_query_results_as_dict', 'dbt_utils')(query)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_query_results_as_dict"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.915199, "supported_languages": null}, "macro.dbt_utils.default__get_query_results_as_dict": {"name": "default__get_query_results_as_dict", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_query_results_as_dict.sql", "original_file_path": "macros/sql/get_query_results_as_dict.sql", "unique_id": "macro.dbt_utils.default__get_query_results_as_dict", "macro_sql": "{% macro default__get_query_results_as_dict(query) %}\n\n{# This macro returns a dictionary of the form {column_name: (tuple_of_results)} #}\n\n    {%- call statement('get_query_results', fetch_result=True,auto_begin=false) -%}\n\n        {{ query }}\n\n    {%- endcall -%}\n\n    {% set sql_results={} %}\n\n    {%- if execute -%}\n        {% set sql_results_table = load_result('get_query_results').table.columns %}\n        {% for column_name, column in sql_results_table.items() %}\n            {% do sql_results.update({column_name: column.values()}) %}\n        {% endfor %}\n    {%- endif -%}\n\n    {{ return(sql_results) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9158416, "supported_languages": null}, "macro.dbt_utils.safe_subtract": {"name": "safe_subtract", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/safe_subtract.sql", "original_file_path": "macros/sql/safe_subtract.sql", "unique_id": "macro.dbt_utils.safe_subtract", "macro_sql": "{%- macro safe_subtract(field_list) -%}\n    {{ return(adapter.dispatch('safe_subtract', 'dbt_utils')(field_list)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__safe_subtract"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9162102, "supported_languages": null}, "macro.dbt_utils.default__safe_subtract": {"name": "default__safe_subtract", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/safe_subtract.sql", "original_file_path": "macros/sql/safe_subtract.sql", "unique_id": "macro.dbt_utils.default__safe_subtract", "macro_sql": "\n\n{%- macro default__safe_subtract(field_list) -%}\n\n{%- if field_list is not iterable or field_list is string or field_list is mapping -%}\n\n{%- set error_message = '\nWarning: the `safe_subtract` macro takes a single list argument instead of \\\nstring arguments. The {}.{} model triggered this warning. \\\n'.format(model.package_name, model.name) -%}\n\n{%- do exceptions.raise_compiler_error(error_message) -%}\n\n{%- endif -%}\n\n{% set fields = [] %}\n\n{%- for field in field_list -%}\n\n    {% do fields.append(\"coalesce(\" ~ field ~ \", 0)\") %}\n\n{%- endfor -%}\n\n{{ fields|join(' -\\n  ') }}\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9167817, "supported_languages": null}, "macro.dbt_utils.unpivot": {"name": "unpivot", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/unpivot.sql", "original_file_path": "macros/sql/unpivot.sql", "unique_id": "macro.dbt_utils.unpivot", "macro_sql": "{% macro unpivot(relation=none, cast_to='varchar', exclude=none, remove=none, field_name='field_name', value_name='value', quote_identifiers=False) -%}\n    {{ return(adapter.dispatch('unpivot', 'dbt_utils')(relation, cast_to, exclude, remove, field_name, value_name, quote_identifiers)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__unpivot"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9175122, "supported_languages": null}, "macro.dbt_utils.default__unpivot": {"name": "default__unpivot", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/unpivot.sql", "original_file_path": "macros/sql/unpivot.sql", "unique_id": "macro.dbt_utils.default__unpivot", "macro_sql": "{% macro default__unpivot(relation=none, cast_to='varchar', exclude=none, remove=none, field_name='field_name', value_name='value', quote_identifiers=False) -%}\n\n    {% if not relation %}\n        {{ exceptions.raise_compiler_error(\"Error: argument `relation` is required for `unpivot` macro.\") }}\n    {% endif %}\n\n  {%- set exclude = exclude if exclude is not none else [] %}\n  {%- set remove = remove if remove is not none else [] %}\n\n  {%- set include_cols = [] %}\n\n  {%- set table_columns = {} %}\n\n  {%- do table_columns.update({relation: []}) %}\n\n  {%- do dbt_utils._is_relation(relation, 'unpivot') -%}\n  {%- do dbt_utils._is_ephemeral(relation, 'unpivot') -%}\n  {%- set cols = adapter.get_columns_in_relation(relation) %}\n\n  {%- for col in cols -%}\n    {%- if col.column.lower() not in remove|map('lower') and col.column.lower() not in exclude|map('lower') -%}\n      {% do include_cols.append(col) %}\n    {%- endif %}\n  {%- endfor %}\n\n\n  {%- for col in include_cols -%}\n    {%- set current_col_name = adapter.quote(col.column) if quote_identifiers else col.column -%}\n    select\n      {%- for exclude_col in exclude %}\n        {{ adapter.quote(exclude_col) if quote_identifiers else exclude_col }},\n      {%- endfor %}\n\n      cast('{{ col.column }}' as {{ dbt.type_string() }}) as {{ adapter.quote(field_name) if quote_identifiers else field_name  }},\n      cast(  {% if col.data_type == 'boolean' %}\n           {{ dbt.cast_bool_to_text(current_col_name) }}\n             {% else %}\n           {{ current_col_name }}\n             {% endif %}\n           as {{ cast_to }}) as {{ adapter.quote(value_name) if quote_identifiers else value_name }}\n\n    from {{ relation }}\n\n    {% if not loop.last -%}\n      union all\n    {% endif -%}\n  {%- endfor -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt.type_string", "macro.dbt.cast_bool_to_text"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.919307, "supported_languages": null}, "macro.dbt_utils.get_filtered_columns_in_relation": {"name": "get_filtered_columns_in_relation", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_filtered_columns_in_relation.sql", "original_file_path": "macros/sql/get_filtered_columns_in_relation.sql", "unique_id": "macro.dbt_utils.get_filtered_columns_in_relation", "macro_sql": "{% macro get_filtered_columns_in_relation(from, except=[]) -%}\n    {{ return(adapter.dispatch('get_filtered_columns_in_relation', 'dbt_utils')(from, except)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_filtered_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9197485, "supported_languages": null}, "macro.dbt_utils.default__get_filtered_columns_in_relation": {"name": "default__get_filtered_columns_in_relation", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_filtered_columns_in_relation.sql", "original_file_path": "macros/sql/get_filtered_columns_in_relation.sql", "unique_id": "macro.dbt_utils.default__get_filtered_columns_in_relation", "macro_sql": "{% macro default__get_filtered_columns_in_relation(from, except=[]) -%}\n    {%- do dbt_utils._is_relation(from, 'get_filtered_columns_in_relation') -%}\n    {%- do dbt_utils._is_ephemeral(from, 'get_filtered_columns_in_relation') -%}\n\n    {# -- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\n    {%- if not execute -%}\n        {{ return('') }}\n    {% endif %}\n\n    {%- set include_cols = [] %}\n    {%- set cols = adapter.get_columns_in_relation(from) -%}\n    {%- set except = except | map(\"lower\") | list %}\n    {%- for col in cols -%}\n        {%- if col.column|lower not in except -%}\n            {% do include_cols.append(col.column) %}\n        {%- endif %}\n    {%- endfor %}\n\n    {{ return(include_cols) }}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.920476, "supported_languages": null}, "macro.dbt_utils.nullcheck_table": {"name": "nullcheck_table", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/nullcheck_table.sql", "original_file_path": "macros/sql/nullcheck_table.sql", "unique_id": "macro.dbt_utils.nullcheck_table", "macro_sql": "{% macro nullcheck_table(relation) %}\n    {{ return(adapter.dispatch('nullcheck_table', 'dbt_utils')(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__nullcheck_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9208179, "supported_languages": null}, "macro.dbt_utils.default__nullcheck_table": {"name": "default__nullcheck_table", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/nullcheck_table.sql", "original_file_path": "macros/sql/nullcheck_table.sql", "unique_id": "macro.dbt_utils.default__nullcheck_table", "macro_sql": "{% macro default__nullcheck_table(relation) %}\n\n  {%- do dbt_utils._is_relation(relation, 'nullcheck_table') -%}\n  {%- do dbt_utils._is_ephemeral(relation, 'nullcheck_table') -%}\n  {% set cols = adapter.get_columns_in_relation(relation) %}\n\n  select {{ dbt_utils.nullcheck(cols) }}\n  from {{relation}}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt_utils.nullcheck"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9211464, "supported_languages": null}, "macro.dbt_utils.star": {"name": "star", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/star.sql", "original_file_path": "macros/sql/star.sql", "unique_id": "macro.dbt_utils.star", "macro_sql": "{% macro star(from, relation_alias=False, except=[], prefix='', suffix='', quote_identifiers=True) -%}\r\n    {{ return(adapter.dispatch('star', 'dbt_utils')(from, relation_alias, except, prefix, suffix, quote_identifiers)) }}\r\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__star"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.921855, "supported_languages": null}, "macro.dbt_utils.default__star": {"name": "default__star", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/star.sql", "original_file_path": "macros/sql/star.sql", "unique_id": "macro.dbt_utils.default__star", "macro_sql": "{% macro default__star(from, relation_alias=False, except=[], prefix='', suffix='', quote_identifiers=True) -%}\r\n    {%- do dbt_utils._is_relation(from, 'star') -%}\r\n    {%- do dbt_utils._is_ephemeral(from, 'star') -%}\r\n\r\n    {#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\r\n    {%- if not execute -%}\r\n        {% do return('*') %}\r\n    {%- endif -%}\r\n\r\n    {% set cols = dbt_utils.get_filtered_columns_in_relation(from, except) %}\r\n\r\n    {%- if cols|length <= 0 -%}\r\n        {% if flags.WHICH == 'compile' %}\r\n            {% set response %}\r\n*\r\n/* No columns were returned. Maybe the relation doesn't exist yet \r\nor all columns were excluded. This star is only output during  \r\ndbt compile, and exists to keep SQLFluff happy. */\r\n            {% endset %}\r\n            {% do return(response) %}\r\n        {% else %}\r\n            {% do return(\"/* no columns returned from star() macro */\") %}\r\n        {% endif %}\r\n    {%- else -%}\r\n        {%- for col in cols %}\r\n            {%- if relation_alias %}{{ relation_alias }}.{% else %}{%- endif -%}\r\n                {%- if quote_identifiers -%}\r\n                    {{ adapter.quote(col)|trim }} {%- if prefix!='' or suffix!='' %} as {{ adapter.quote(prefix ~ col ~ suffix)|trim }} {%- endif -%}\r\n                {%- else -%}\r\n                    {{ col|trim }} {%- if prefix!='' or suffix!='' %} as {{ (prefix ~ col ~ suffix)|trim }} {%- endif -%}\r\n                {% endif %}\r\n            {%- if not loop.last %},{{ '\\n  ' }}{%- endif -%}\r\n        {%- endfor -%}\r\n    {% endif %}\r\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt_utils.get_filtered_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9232154, "supported_languages": null}, "macro.dbt_utils.get_relations_by_pattern": {"name": "get_relations_by_pattern", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_relations_by_pattern.sql", "original_file_path": "macros/sql/get_relations_by_pattern.sql", "unique_id": "macro.dbt_utils.get_relations_by_pattern", "macro_sql": "{% macro get_relations_by_pattern(schema_pattern, table_pattern, exclude='', database=target.database) %}\n    {{ return(adapter.dispatch('get_relations_by_pattern', 'dbt_utils')(schema_pattern, table_pattern, exclude, database)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_relations_by_pattern"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9238255, "supported_languages": null}, "macro.dbt_utils.default__get_relations_by_pattern": {"name": "default__get_relations_by_pattern", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_relations_by_pattern.sql", "original_file_path": "macros/sql/get_relations_by_pattern.sql", "unique_id": "macro.dbt_utils.default__get_relations_by_pattern", "macro_sql": "{% macro default__get_relations_by_pattern(schema_pattern, table_pattern, exclude='', database=target.database) %}\n\n    {%- call statement('get_tables', fetch_result=True) %}\n\n      {{ dbt_utils.get_tables_by_pattern_sql(schema_pattern, table_pattern, exclude, database) }}\n\n    {%- endcall -%}\n\n    {%- set table_list = load_result('get_tables') -%}\n\n    {%- if table_list and table_list['table'] -%}\n        {%- set tbl_relations = [] -%}\n        {%- for row in table_list['table'] -%}\n            {%- set tbl_relation = api.Relation.create(\n                database=database,\n                schema=row.table_schema,\n                identifier=row.table_name,\n                type=row.table_type\n            ) -%}\n            {%- do tbl_relations.append(tbl_relation) -%}\n        {%- endfor -%}\n\n        {{ return(tbl_relations) }}\n    {%- else -%}\n        {{ return([]) }}\n    {%- endif -%}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_utils.get_tables_by_pattern_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.924852, "supported_languages": null}, "macro.dbt_utils.generate_surrogate_key": {"name": "generate_surrogate_key", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/generate_surrogate_key.sql", "original_file_path": "macros/sql/generate_surrogate_key.sql", "unique_id": "macro.dbt_utils.generate_surrogate_key", "macro_sql": "{%- macro generate_surrogate_key(field_list) -%}\n    {{ return(adapter.dispatch('generate_surrogate_key', 'dbt_utils')(field_list)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__generate_surrogate_key"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9253097, "supported_languages": null}, "macro.dbt_utils.default__generate_surrogate_key": {"name": "default__generate_surrogate_key", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/generate_surrogate_key.sql", "original_file_path": "macros/sql/generate_surrogate_key.sql", "unique_id": "macro.dbt_utils.default__generate_surrogate_key", "macro_sql": "\n\n{%- macro default__generate_surrogate_key(field_list) -%}\n\n{%- if var('surrogate_key_treat_nulls_as_empty_strings', False) -%}\n    {%- set default_null_value = \"\" -%}\n{%- else -%}\n    {%- set default_null_value = '_dbt_utils_surrogate_key_null_' -%}\n{%- endif -%}\n\n{%- set fields = [] -%}\n\n{%- for field in field_list -%}\n\n    {%- do fields.append(\n        \"coalesce(cast(\" ~ field ~ \" as \" ~ dbt.type_string() ~ \"), '\" ~ default_null_value  ~\"')\"\n    ) -%}\n\n    {%- if not loop.last %}\n        {%- do fields.append(\"'-'\") -%}\n    {%- endif -%}\n\n{%- endfor -%}\n\n{{ dbt.hash(dbt.concat(fields)) }}\n\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.type_string", "macro.dbt.hash", "macro.dbt.concat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9261098, "supported_languages": null}, "macro.dbt_utils.get_relations_by_prefix": {"name": "get_relations_by_prefix", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_relations_by_prefix.sql", "original_file_path": "macros/sql/get_relations_by_prefix.sql", "unique_id": "macro.dbt_utils.get_relations_by_prefix", "macro_sql": "{% macro get_relations_by_prefix(schema, prefix, exclude='', database=target.database) %}\n    {{ return(adapter.dispatch('get_relations_by_prefix', 'dbt_utils')(schema, prefix, exclude, database)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_relations_by_prefix"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9265816, "supported_languages": null}, "macro.dbt_utils.default__get_relations_by_prefix": {"name": "default__get_relations_by_prefix", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_relations_by_prefix.sql", "original_file_path": "macros/sql/get_relations_by_prefix.sql", "unique_id": "macro.dbt_utils.default__get_relations_by_prefix", "macro_sql": "{% macro default__get_relations_by_prefix(schema, prefix, exclude='', database=target.database) %}\n\n    {%- call statement('get_tables', fetch_result=True) %}\n\n      {{ dbt_utils.get_tables_by_prefix_sql(schema, prefix, exclude, database) }}\n\n    {%- endcall -%}\n\n    {%- set table_list = load_result('get_tables') -%}\n\n    {%- if table_list and table_list['table'] -%}\n        {%- set tbl_relations = [] -%}\n        {%- for row in table_list['table'] -%}\n            {%- set tbl_relation = api.Relation.create(\n                database=database,\n                schema=row.table_schema,\n                identifier=row.table_name,\n                type=row.table_type\n            ) -%}\n            {%- do tbl_relations.append(tbl_relation) -%}\n        {%- endfor -%}\n\n        {{ return(tbl_relations) }}\n    {%- else -%}\n        {{ return([]) }}\n    {%- endif -%}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_utils.get_tables_by_prefix_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9273932, "supported_languages": null}, "macro.dbt_utils.safe_divide": {"name": "safe_divide", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/safe_divide.sql", "original_file_path": "macros/sql/safe_divide.sql", "unique_id": "macro.dbt_utils.safe_divide", "macro_sql": "{% macro safe_divide(numerator, denominator) -%}\n  {{ return(adapter.dispatch('safe_divide', 'dbt_utils')(numerator, denominator)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__safe_divide"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9276745, "supported_languages": null}, "macro.dbt_utils.default__safe_divide": {"name": "default__safe_divide", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/safe_divide.sql", "original_file_path": "macros/sql/safe_divide.sql", "unique_id": "macro.dbt_utils.default__safe_divide", "macro_sql": "{% macro default__safe_divide(numerator, denominator) %}\n    ( {{ numerator }} ) / nullif( ( {{ denominator }} ), 0)\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.92781, "supported_languages": null}, "macro.dbt_utils.get_column_values": {"name": "get_column_values", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_column_values.sql", "original_file_path": "macros/sql/get_column_values.sql", "unique_id": "macro.dbt_utils.get_column_values", "macro_sql": "{% macro get_column_values(table, column, order_by='count(*) desc', max_records=none, default=none, where=none) -%}\n    {{ return(adapter.dispatch('get_column_values', 'dbt_utils')(table, column, order_by, max_records, default, where)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_column_values"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9286628, "supported_languages": null}, "macro.dbt_utils.default__get_column_values": {"name": "default__get_column_values", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_column_values.sql", "original_file_path": "macros/sql/get_column_values.sql", "unique_id": "macro.dbt_utils.default__get_column_values", "macro_sql": "{% macro default__get_column_values(table, column, order_by='count(*) desc', max_records=none, default=none, where=none) -%}\n    {#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\n    {%- if not execute -%}\n        {% set default = [] if not default %}\n        {{ return(default) }}\n    {% endif %}\n\n    {%- do dbt_utils._is_ephemeral(table, 'get_column_values') -%}\n\n    {# Not all relations are tables. Renaming for internal clarity without breaking functionality for anyone using named arguments #}\n    {# TODO: Change the method signature in a future 0.x.0 release #}\n    {%- set target_relation = table -%}\n\n    {# adapter.load_relation is a convenience wrapper to avoid building a Relation when we already have one #}\n    {% set relation_exists = (load_relation(target_relation)) is not none %}\n\n    {%- call statement('get_column_values', fetch_result=true) %}\n\n        {%- if not relation_exists and default is none -%}\n\n          {{ exceptions.raise_compiler_error(\"In get_column_values(): relation \" ~ target_relation ~ \" does not exist and no default value was provided.\") }}\n\n        {%- elif not relation_exists and default is not none -%}\n\n          {{ log(\"Relation \" ~ target_relation ~ \" does not exist. Returning the default value: \" ~ default) }}\n\n          {{ return(default) }}\n\n        {%- else -%}\n\n\n            select\n                {{ column }} as value\n\n            from {{ target_relation }}\n\n            {% if where is not none %}\n            where {{ where }}\n            {% endif %}\n\n            group by {{ column }}\n            order by {{ order_by }}\n\n            {% if max_records is not none %}\n            limit {{ max_records }}\n            {% endif %}\n\n        {% endif %}\n\n    {%- endcall -%}\n\n    {%- set value_list = load_result('get_column_values') -%}\n\n    {%- if value_list and value_list['data'] -%}\n        {%- set values = value_list['data'] | map(attribute=0) | list %}\n        {{ return(values) }}\n    {%- else -%}\n        {{ return(default) }}\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils._is_ephemeral", "macro.dbt.load_relation", "macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9301233, "supported_languages": null}, "macro.dbt_utils.degrees_to_radians": {"name": "degrees_to_radians", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/haversine_distance.sql", "original_file_path": "macros/sql/haversine_distance.sql", "unique_id": "macro.dbt_utils.degrees_to_radians", "macro_sql": "{% macro degrees_to_radians(degrees) -%}\n    acos(-1) * {{degrees}} / 180\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9305809, "supported_languages": null}, "macro.dbt_utils.haversine_distance": {"name": "haversine_distance", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/haversine_distance.sql", "original_file_path": "macros/sql/haversine_distance.sql", "unique_id": "macro.dbt_utils.haversine_distance", "macro_sql": "{% macro haversine_distance(lat1, lon1, lat2, lon2, unit='mi') -%}\n    {{ return(adapter.dispatch('haversine_distance', 'dbt_utils')(lat1,lon1,lat2,lon2,unit)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__haversine_distance"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9308317, "supported_languages": null}, "macro.dbt_utils.default__haversine_distance": {"name": "default__haversine_distance", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/haversine_distance.sql", "original_file_path": "macros/sql/haversine_distance.sql", "unique_id": "macro.dbt_utils.default__haversine_distance", "macro_sql": "{% macro default__haversine_distance(lat1, lon1, lat2, lon2, unit='mi') -%}\n{%- if unit == 'mi' %}\n    {% set conversion_rate = 1 %}\n{% elif unit == 'km' %}\n    {% set conversion_rate = 1.60934 %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\"unit input must be one of 'mi' or 'km'. Got \" ~ unit) }}\n{% endif %}\n\n    2 * 3961 * asin(sqrt(power((sin(radians(({{ lat2 }} - {{ lat1 }}) / 2))), 2) +\n    cos(radians({{lat1}})) * cos(radians({{lat2}})) *\n    power((sin(radians(({{ lon2 }} - {{ lon1 }}) / 2))), 2))) * {{ conversion_rate }}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.931422, "supported_languages": null}, "macro.dbt_utils.bigquery__haversine_distance": {"name": "bigquery__haversine_distance", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/haversine_distance.sql", "original_file_path": "macros/sql/haversine_distance.sql", "unique_id": "macro.dbt_utils.bigquery__haversine_distance", "macro_sql": "{% macro bigquery__haversine_distance(lat1, lon1, lat2, lon2, unit='mi') -%}\n{% set radians_lat1 = dbt_utils.degrees_to_radians(lat1) %}\n{% set radians_lat2 = dbt_utils.degrees_to_radians(lat2) %}\n{% set radians_lon1 = dbt_utils.degrees_to_radians(lon1) %}\n{% set radians_lon2 = dbt_utils.degrees_to_radians(lon2) %}\n{%- if unit == 'mi' %}\n    {% set conversion_rate = 1 %}\n{% elif unit == 'km' %}\n    {% set conversion_rate = 1.60934 %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\"unit input must be one of 'mi' or 'km'. Got \" ~ unit) }}\n{% endif %}\n    2 * 3961 * asin(sqrt(power(sin(({{ radians_lat2 }} - {{ radians_lat1 }}) / 2), 2) +\n    cos({{ radians_lat1 }}) * cos({{ radians_lat2 }}) *\n    power(sin(({{ radians_lon2 }} - {{ radians_lon1 }}) / 2), 2))) * {{ conversion_rate }}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.degrees_to_radians"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9322495, "supported_languages": null}, "macro.dbt_utils.get_tables_by_prefix_sql": {"name": "get_tables_by_prefix_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_tables_by_prefix_sql.sql", "original_file_path": "macros/sql/get_tables_by_prefix_sql.sql", "unique_id": "macro.dbt_utils.get_tables_by_prefix_sql", "macro_sql": "{% macro get_tables_by_prefix_sql(schema, prefix, exclude='', database=target.database) %}\n    {{ return(adapter.dispatch('get_tables_by_prefix_sql', 'dbt_utils')(schema, prefix, exclude, database)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_tables_by_prefix_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9326503, "supported_languages": null}, "macro.dbt_utils.default__get_tables_by_prefix_sql": {"name": "default__get_tables_by_prefix_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_tables_by_prefix_sql.sql", "original_file_path": "macros/sql/get_tables_by_prefix_sql.sql", "unique_id": "macro.dbt_utils.default__get_tables_by_prefix_sql", "macro_sql": "{% macro default__get_tables_by_prefix_sql(schema, prefix, exclude='', database=target.database) %}\n\n    {{ dbt_utils.get_tables_by_pattern_sql(\n        schema_pattern = schema,\n        table_pattern = prefix ~ '%',\n        exclude = exclude,\n        database = database\n    ) }}\n    \n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.get_tables_by_pattern_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9329174, "supported_languages": null}, "macro.dbt_utils.nullcheck": {"name": "nullcheck", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/nullcheck.sql", "original_file_path": "macros/sql/nullcheck.sql", "unique_id": "macro.dbt_utils.nullcheck", "macro_sql": "{% macro nullcheck(cols) %}\n    {{ return(adapter.dispatch('nullcheck', 'dbt_utils')(cols)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__nullcheck"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.933236, "supported_languages": null}, "macro.dbt_utils.default__nullcheck": {"name": "default__nullcheck", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/nullcheck.sql", "original_file_path": "macros/sql/nullcheck.sql", "unique_id": "macro.dbt_utils.default__nullcheck", "macro_sql": "{% macro default__nullcheck(cols) %}\n{%- for col in cols %}\n\n    {% if col.is_string() -%}\n\n    nullif({{col.name}},'') as {{col.name}}\n\n    {%- else -%}\n\n    {{col.name}}\n\n    {%- endif -%}\n\n{%- if not loop.last -%} , {%- endif -%}\n\n{%- endfor -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.933569, "supported_languages": null}, "macro.dbt_utils.pivot": {"name": "pivot", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/pivot.sql", "original_file_path": "macros/sql/pivot.sql", "unique_id": "macro.dbt_utils.pivot", "macro_sql": "{% macro pivot(column,\n               values,\n               alias=True,\n               agg='sum',\n               cmp='=',\n               prefix='',\n               suffix='',\n               then_value=1,\n               else_value=0,\n               quote_identifiers=True,\n               distinct=False) %}\n    {{ return(adapter.dispatch('pivot', 'dbt_utils')(column, values, alias, agg, cmp, prefix, suffix, then_value, else_value, quote_identifiers, distinct)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__pivot"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.934326, "supported_languages": null}, "macro.dbt_utils.default__pivot": {"name": "default__pivot", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/pivot.sql", "original_file_path": "macros/sql/pivot.sql", "unique_id": "macro.dbt_utils.default__pivot", "macro_sql": "{% macro default__pivot(column,\n               values,\n               alias=True,\n               agg='sum',\n               cmp='=',\n               prefix='',\n               suffix='',\n               then_value=1,\n               else_value=0,\n               quote_identifiers=True,\n               distinct=False) %}\n  {% for value in values %}\n    {{ agg }}(\n      {% if distinct %} distinct {% endif %}\n      case\n      when {{ column }} {{ cmp }} '{{ dbt.escape_single_quotes(value) }}'\n        then {{ then_value }}\n      else {{ else_value }}\n      end\n    )\n    {% if alias %}\n      {% if quote_identifiers %}\n            as {{ adapter.quote(prefix ~ value ~ suffix) }}\n      {% else %}\n        as {{ dbt_utils.slugify(prefix ~ value ~ suffix) }}\n      {% endif %}\n    {% endif %}\n    {% if not loop.last %},{% endif %}\n  {% endfor %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.escape_single_quotes", "macro.dbt_utils.slugify"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.935096, "supported_languages": null}, "macro.dbt_utils.get_powers_of_two": {"name": "get_powers_of_two", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/generate_series.sql", "original_file_path": "macros/sql/generate_series.sql", "unique_id": "macro.dbt_utils.get_powers_of_two", "macro_sql": "{% macro get_powers_of_two(upper_bound) %}\n    {{ return(adapter.dispatch('get_powers_of_two', 'dbt_utils')(upper_bound)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_powers_of_two"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9355168, "supported_languages": null}, "macro.dbt_utils.default__get_powers_of_two": {"name": "default__get_powers_of_two", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/generate_series.sql", "original_file_path": "macros/sql/generate_series.sql", "unique_id": "macro.dbt_utils.default__get_powers_of_two", "macro_sql": "{% macro default__get_powers_of_two(upper_bound) %}\n\n    {% if upper_bound <= 0 %}\n    {{ exceptions.raise_compiler_error(\"upper bound must be positive\") }}\n    {% endif %}\n\n    {% for _ in range(1, 100) %}\n       {% if upper_bound <= 2 ** loop.index %}{{ return(loop.index) }}{% endif %}\n    {% endfor %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9359798, "supported_languages": null}, "macro.dbt_utils.generate_series": {"name": "generate_series", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/generate_series.sql", "original_file_path": "macros/sql/generate_series.sql", "unique_id": "macro.dbt_utils.generate_series", "macro_sql": "{% macro generate_series(upper_bound) %}\n    {{ return(adapter.dispatch('generate_series', 'dbt_utils')(upper_bound)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__generate_series"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9361691, "supported_languages": null}, "macro.dbt_utils.default__generate_series": {"name": "default__generate_series", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/generate_series.sql", "original_file_path": "macros/sql/generate_series.sql", "unique_id": "macro.dbt_utils.default__generate_series", "macro_sql": "{% macro default__generate_series(upper_bound) %}\n\n    {% set n = dbt_utils.get_powers_of_two(upper_bound) %}\n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    {% for i in range(n) %}\n    p{{i}}.generated_number * power(2, {{i}})\n    {% if not loop.last %} + {% endif %}\n    {% endfor %}\n    + 1\n    as generated_number\n\n    from\n\n    {% for i in range(n) %}\n    p as p{{i}}\n    {% if not loop.last %} cross join {% endif %}\n    {% endfor %}\n\n    )\n\n    select *\n    from unioned\n    where generated_number <= {{upper_bound}}\n    order by generated_number\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.get_powers_of_two"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.936688, "supported_languages": null}, "macro.dbt_utils.width_bucket": {"name": "width_bucket", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/width_bucket.sql", "original_file_path": "macros/sql/width_bucket.sql", "unique_id": "macro.dbt_utils.width_bucket", "macro_sql": "{% macro width_bucket(expr, min_value, max_value, num_buckets) %}\n  {{ return(adapter.dispatch('width_bucket', 'dbt_utils') (expr, min_value, max_value, num_buckets)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__width_bucket"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9371243, "supported_languages": null}, "macro.dbt_utils.default__width_bucket": {"name": "default__width_bucket", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/width_bucket.sql", "original_file_path": "macros/sql/width_bucket.sql", "unique_id": "macro.dbt_utils.default__width_bucket", "macro_sql": "{% macro default__width_bucket(expr, min_value, max_value, num_buckets) -%}\n\n    {% set bin_size -%}\n    (( {{ max_value }} - {{ min_value }} ) / {{ num_buckets }} )\n    {%- endset %}\n    (\n        -- to break ties when the amount is eaxtly at the bucket egde\n        case\n            when\n                mod(\n                    {{ dbt.safe_cast(expr, dbt.type_numeric() ) }},\n                    {{ dbt.safe_cast(bin_size, dbt.type_numeric() ) }}\n                ) = 0\n            then 1\n            else 0\n        end\n    ) +\n      -- Anything over max_value goes the N+1 bucket\n    least(\n        ceil(\n            ({{ expr }} - {{ min_value }})/{{ bin_size }}\n        ),\n        {{ num_buckets }} + 1\n    )\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.safe_cast", "macro.dbt.type_numeric"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9375525, "supported_languages": null}, "macro.dbt_utils.snowflake__width_bucket": {"name": "snowflake__width_bucket", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/width_bucket.sql", "original_file_path": "macros/sql/width_bucket.sql", "unique_id": "macro.dbt_utils.snowflake__width_bucket", "macro_sql": "{% macro snowflake__width_bucket(expr, min_value, max_value, num_buckets) %}\n    width_bucket({{ expr }}, {{ min_value }}, {{ max_value }}, {{ num_buckets }} )\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9377582, "supported_languages": null}, "macro.dbt_utils.union_relations": {"name": "union_relations", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/union.sql", "original_file_path": "macros/sql/union.sql", "unique_id": "macro.dbt_utils.union_relations", "macro_sql": "{%- macro union_relations(relations, column_override=none, include=[], exclude=[], source_column_name='_dbt_source_relation', where=none) -%}\n    {{ return(adapter.dispatch('union_relations', 'dbt_utils')(relations, column_override, include, exclude, source_column_name, where)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__union_relations"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9387515, "supported_languages": null}, "macro.dbt_utils.default__union_relations": {"name": "default__union_relations", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/union.sql", "original_file_path": "macros/sql/union.sql", "unique_id": "macro.dbt_utils.default__union_relations", "macro_sql": "\n\n{%- macro default__union_relations(relations, column_override=none, include=[], exclude=[], source_column_name='_dbt_source_relation', where=none) -%}\n\n    {%- if exclude and include -%}\n        {{ exceptions.raise_compiler_error(\"Both an exclude and include list were provided to the `union` macro. Only one is allowed\") }}\n    {%- endif -%}\n\n    {#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. -#}\n    {%- if not execute %}\n        {{ return('') }}\n    {% endif -%}\n\n    {%- set column_override = column_override if column_override is not none else {} -%}\n\n    {%- set relation_columns = {} -%}\n    {%- set column_superset = {} -%}\n    {%- set all_excludes = [] -%}\n    {%- set all_includes = [] -%}\n\n    {%- if exclude -%}\n        {%- for exc in exclude -%}\n            {%- do all_excludes.append(exc | lower) -%}\n        {%- endfor -%}\n    {%- endif -%}\n\n    {%- if include -%}\n        {%- for inc in include -%}\n            {%- do all_includes.append(inc | lower) -%}\n        {%- endfor -%}\n    {%- endif -%}\n\n    {%- for relation in relations -%}\n\n        {%- do relation_columns.update({relation: []}) -%}\n\n        {%- do dbt_utils._is_relation(relation, 'union_relations') -%}\n        {%- do dbt_utils._is_ephemeral(relation, 'union_relations') -%}\n        {%- set cols = adapter.get_columns_in_relation(relation) -%}\n        {%- for col in cols -%}\n\n        {#- If an exclude list was provided and the column is in the list, do nothing -#}\n        {%- if exclude and col.column | lower in all_excludes -%}\n\n        {#- If an include list was provided and the column is not in the list, do nothing -#}\n        {%- elif include and col.column | lower not in all_includes -%}\n\n        {#- Otherwise add the column to the column superset -#}\n        {%- else -%}\n\n            {#- update the list of columns in this relation -#}\n            {%- do relation_columns[relation].append(col.column) -%}\n\n            {%- if col.column in column_superset -%}\n\n                {%- set stored = column_superset[col.column] -%}\n                {%- if col.is_string() and stored.is_string() and col.string_size() > stored.string_size() -%}\n\n                    {%- do column_superset.update({col.column: col}) -%}\n\n                {%- endif %}\n\n            {%- else -%}\n\n                {%- do column_superset.update({col.column: col}) -%}\n\n            {%- endif -%}\n\n        {%- endif -%}\n\n        {%- endfor -%}\n    {%- endfor -%}\n\n    {%- set ordered_column_names = column_superset.keys() -%}\n    {%- set dbt_command = flags.WHICH -%}\n\n\n    {% if dbt_command in ['run', 'build'] %}\n    {% if (include | length > 0 or exclude | length > 0) and not column_superset.keys() %}\n        {%- set relations_string -%}\n            {%- for relation in relations -%}\n                {{ relation.name }}\n            {%- if not loop.last %}, {% endif -%}\n            {%- endfor -%}\n        {%- endset -%}\n\n        {%- set error_message -%}\n            There were no columns found to union for relations {{ relations_string }}\n        {%- endset -%}\n\n        {{ exceptions.raise_compiler_error(error_message) }}\n    {%- endif -%}\n    {%- endif -%}\n\n    {%- for relation in relations %}\n\n        (\n            select\n\n                {%- if source_column_name is not none %}\n                cast({{ dbt.string_literal(relation) }} as {{ dbt.type_string() }}) as {{ source_column_name }},\n                {%- endif %}\n\n                {% for col_name in ordered_column_names -%}\n\n                    {%- set col = column_superset[col_name] %}\n                    {%- set col_type = column_override.get(col.column, col.data_type) %}\n                    {%- set col_name = adapter.quote(col_name) if col_name in relation_columns[relation] else 'null' %}\n                    cast({{ col_name }} as {{ col_type }}) as {{ col.quoted }} {% if not loop.last %},{% endif -%}\n\n                {%- endfor %}\n\n            from {{ relation }}\n\n            {% if where -%}\n            where {{ where }}\n            {%- endif %}\n        )\n\n        {% if not loop.last -%}\n            union all\n        {% endif -%}\n\n    {%- endfor -%}\n\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt.string_literal", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.94228, "supported_languages": null}, "macro.dbt_utils.safe_add": {"name": "safe_add", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/safe_add.sql", "original_file_path": "macros/sql/safe_add.sql", "unique_id": "macro.dbt_utils.safe_add", "macro_sql": "{%- macro safe_add(field_list) -%}\n    {{ return(adapter.dispatch('safe_add', 'dbt_utils')(field_list)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__safe_add"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9426944, "supported_languages": null}, "macro.dbt_utils.default__safe_add": {"name": "default__safe_add", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/safe_add.sql", "original_file_path": "macros/sql/safe_add.sql", "unique_id": "macro.dbt_utils.default__safe_add", "macro_sql": "\n\n{%- macro default__safe_add(field_list) -%}\n\n{%- if field_list is not iterable or field_list is string or field_list is mapping -%}\n\n{%- set error_message = '\nWarning: the `safe_add` macro now takes a single list argument instead of \\\nstring arguments. The {}.{} model triggered this warning. \\\n'.format(model.package_name, model.name) -%}\n\n{%- do exceptions.warn(error_message) -%}\n\n{%- endif -%}\n\n{% set fields = [] %}\n\n{%- for field in field_list -%}\n\n    {% do fields.append(\"coalesce(\" ~ field ~ \", 0)\") %}\n\n{%- endfor -%}\n\n{{ fields|join(' +\\n  ') }}\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9432192, "supported_languages": null}, "macro.dbt_utils.get_single_value": {"name": "get_single_value", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_single_value.sql", "original_file_path": "macros/sql/get_single_value.sql", "unique_id": "macro.dbt_utils.get_single_value", "macro_sql": "{% macro get_single_value(query, default=none) %}\n    {{ return(adapter.dispatch('get_single_value', 'dbt_utils')(query, default)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_single_value"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9436517, "supported_languages": null}, "macro.dbt_utils.default__get_single_value": {"name": "default__get_single_value", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_single_value.sql", "original_file_path": "macros/sql/get_single_value.sql", "unique_id": "macro.dbt_utils.default__get_single_value", "macro_sql": "{% macro default__get_single_value(query, default) %}\n\n{# This macro returns the (0, 0) record in a query, i.e. the first row of the first column #}\n\n    {%- call statement('get_query_result', fetch_result=True, auto_begin=false) -%}\n\n        {{ query }}\n\n    {%- endcall -%}\n\n    {%- if execute -%}\n\n        {% set r = load_result('get_query_result').table.columns[0].values() %}\n        {% if r | length == 0 %}\n            {% do print('Query `' ~ query ~ '` returned no rows. Using the default value: ' ~ default) %}\n            {% set sql_result = default %}\n        {% else %}\n            {% set sql_result = r[0] %}\n        {% endif %}\n        \n    {%- else -%}\n    \n        {% set sql_result = default %}\n    \n    {%- endif -%}\n\n    {% do return(sql_result) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9443634, "supported_languages": null}, "macro.dbt_utils.get_table_types_sql": {"name": "get_table_types_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_table_types_sql.sql", "original_file_path": "macros/sql/get_table_types_sql.sql", "unique_id": "macro.dbt_utils.get_table_types_sql", "macro_sql": "{%- macro get_table_types_sql() -%}\n  {{ return(adapter.dispatch('get_table_types_sql', 'dbt_utils')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_utils.default__get_table_types_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9447577, "supported_languages": null}, "macro.dbt_utils.default__get_table_types_sql": {"name": "default__get_table_types_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_table_types_sql.sql", "original_file_path": "macros/sql/get_table_types_sql.sql", "unique_id": "macro.dbt_utils.default__get_table_types_sql", "macro_sql": "{% macro default__get_table_types_sql() %}\n            case table_type\n                when 'BASE TABLE' then 'table'\n                when 'EXTERNAL TABLE' then 'external'\n                when 'MATERIALIZED VIEW' then 'materializedview'\n                else lower(table_type)\n            end as {{ adapter.quote('table_type') }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.944917, "supported_languages": null}, "macro.dbt_utils.postgres__get_table_types_sql": {"name": "postgres__get_table_types_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_table_types_sql.sql", "original_file_path": "macros/sql/get_table_types_sql.sql", "unique_id": "macro.dbt_utils.postgres__get_table_types_sql", "macro_sql": "{% macro postgres__get_table_types_sql() %}\n            case table_type\n                when 'BASE TABLE' then 'table'\n                when 'FOREIGN' then 'external'\n                when 'MATERIALIZED VIEW' then 'materializedview'\n                else lower(table_type)\n            end as {{ adapter.quote('table_type') }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.945063, "supported_languages": null}, "macro.dbt_utils.databricks__get_table_types_sql": {"name": "databricks__get_table_types_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_table_types_sql.sql", "original_file_path": "macros/sql/get_table_types_sql.sql", "unique_id": "macro.dbt_utils.databricks__get_table_types_sql", "macro_sql": "{% macro databricks__get_table_types_sql() %}\n            case table_type\n                when 'MANAGED' then 'table'\n                when 'BASE TABLE' then 'table'\n                when 'MATERIALIZED VIEW' then 'materializedview'\n                else lower(table_type)\n            end as {{ adapter.quote('table_type') }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9452074, "supported_languages": null}, "macro.dbt_utils.get_tables_by_pattern_sql": {"name": "get_tables_by_pattern_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_tables_by_pattern_sql.sql", "original_file_path": "macros/sql/get_tables_by_pattern_sql.sql", "unique_id": "macro.dbt_utils.get_tables_by_pattern_sql", "macro_sql": "{% macro get_tables_by_pattern_sql(schema_pattern, table_pattern, exclude='', database=target.database) %}\n    {{ return(adapter.dispatch('get_tables_by_pattern_sql', 'dbt_utils')\n        (schema_pattern, table_pattern, exclude, database)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_tables_by_pattern_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9460754, "supported_languages": null}, "macro.dbt_utils.default__get_tables_by_pattern_sql": {"name": "default__get_tables_by_pattern_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_tables_by_pattern_sql.sql", "original_file_path": "macros/sql/get_tables_by_pattern_sql.sql", "unique_id": "macro.dbt_utils.default__get_tables_by_pattern_sql", "macro_sql": "{% macro default__get_tables_by_pattern_sql(schema_pattern, table_pattern, exclude='', database=target.database) %}\n\n        select distinct\n            table_schema as {{ adapter.quote('table_schema') }},\n            table_name as {{ adapter.quote('table_name') }},\n            {{ dbt_utils.get_table_types_sql() }}\n        from {{ database }}.information_schema.tables\n        where table_schema ilike '{{ schema_pattern }}'\n        and table_name ilike '{{ table_pattern }}'\n        and table_name not ilike '{{ exclude }}'\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.get_table_types_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9464924, "supported_languages": null}, "macro.dbt_utils.redshift__get_tables_by_pattern_sql": {"name": "redshift__get_tables_by_pattern_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_tables_by_pattern_sql.sql", "original_file_path": "macros/sql/get_tables_by_pattern_sql.sql", "unique_id": "macro.dbt_utils.redshift__get_tables_by_pattern_sql", "macro_sql": "{% macro redshift__get_tables_by_pattern_sql(schema_pattern, table_pattern, exclude='', database=target.database) %}\n\n    {% set sql %}\n        select distinct\n            table_schema as {{ adapter.quote('table_schema') }},\n            table_name as {{ adapter.quote('table_name') }},\n            {{ dbt_utils.get_table_types_sql() }}\n        from \"{{ database }}\".\"information_schema\".\"tables\"\n        where table_schema ilike '{{ schema_pattern }}'\n        and table_name ilike '{{ table_pattern }}'\n        and table_name not ilike '{{ exclude }}'\n        union all\n        select distinct\n            schemaname as {{ adapter.quote('table_schema') }},\n            tablename as {{ adapter.quote('table_name') }},\n            'external' as {{ adapter.quote('table_type') }}\n        from svv_external_tables\n        where redshift_database_name = '{{ database }}'\n        and schemaname ilike '{{ schema_pattern }}'\n        and table_name ilike '{{ table_pattern }}'\n        and table_name not ilike '{{ exclude }}'\n    {% endset %}\n\n    {{ return(sql) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.get_table_types_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9471507, "supported_languages": null}, "macro.dbt_utils.bigquery__get_tables_by_pattern_sql": {"name": "bigquery__get_tables_by_pattern_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_tables_by_pattern_sql.sql", "original_file_path": "macros/sql/get_tables_by_pattern_sql.sql", "unique_id": "macro.dbt_utils.bigquery__get_tables_by_pattern_sql", "macro_sql": "{% macro bigquery__get_tables_by_pattern_sql(schema_pattern, table_pattern, exclude='', database=target.database) %}\n\n    {% if '%' in schema_pattern %}\n        {% set schemata=dbt_utils._bigquery__get_matching_schemata(schema_pattern, database) %}\n    {% else %}\n        {% set schemata=[schema_pattern] %}\n    {% endif %}\n\n    {% set sql %}\n        {% for schema in schemata %}\n            select distinct\n                table_schema,\n                table_name,\n                {{ dbt_utils.get_table_types_sql() }}\n\n            from {{ adapter.quote(database) }}.{{ schema }}.INFORMATION_SCHEMA.TABLES\n            where lower(table_name) like lower ('{{ table_pattern }}')\n                and lower(table_name) not like lower ('{{ exclude }}')\n\n            {% if not loop.last %} union all {% endif %}\n\n        {% endfor %}\n    {% endset %}\n\n    {{ return(sql) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils._bigquery__get_matching_schemata", "macro.dbt_utils.get_table_types_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.947825, "supported_languages": null}, "macro.dbt_utils._bigquery__get_matching_schemata": {"name": "_bigquery__get_matching_schemata", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_tables_by_pattern_sql.sql", "original_file_path": "macros/sql/get_tables_by_pattern_sql.sql", "unique_id": "macro.dbt_utils._bigquery__get_matching_schemata", "macro_sql": "{% macro _bigquery__get_matching_schemata(schema_pattern, database) %}\n    {% if execute %}\n\n        {% set sql %}\n        select schema_name from {{ adapter.quote(database) }}.INFORMATION_SCHEMA.SCHEMATA\n        where lower(schema_name) like lower('{{ schema_pattern }}')\n        {% endset %}\n\n        {% set results=run_query(sql) %}\n\n        {% set schemata=results.columns['schema_name'].values() %}\n\n        {{ return(schemata) }}\n\n    {% else %}\n\n        {{ return([]) }}\n\n    {% endif %}\n\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.948367, "supported_languages": null}, "macro.dbt_utils.get_intervals_between": {"name": "get_intervals_between", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/date_spine.sql", "original_file_path": "macros/sql/date_spine.sql", "unique_id": "macro.dbt_utils.get_intervals_between", "macro_sql": "{% macro get_intervals_between(start_date, end_date, datepart) -%}\n    {{ return(adapter.dispatch('get_intervals_between', 'dbt_utils')(start_date, end_date, datepart)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_intervals_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9488533, "supported_languages": null}, "macro.dbt_utils.default__get_intervals_between": {"name": "default__get_intervals_between", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/date_spine.sql", "original_file_path": "macros/sql/date_spine.sql", "unique_id": "macro.dbt_utils.default__get_intervals_between", "macro_sql": "{% macro default__get_intervals_between(start_date, end_date, datepart) -%}\n    {%- call statement('get_intervals_between', fetch_result=True) %}\n\n        select {{ dbt.datediff(start_date, end_date, datepart) }}\n\n    {%- endcall -%}\n\n    {%- set value_list = load_result('get_intervals_between') -%}\n\n    {%- if value_list and value_list['data'] -%}\n        {%- set values = value_list['data'] | map(attribute=0) | list %}\n        {{ return(values[0]) }}\n    {%- else -%}\n        {{ return(1) }}\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.datediff"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.949425, "supported_languages": null}, "macro.dbt_utils.date_spine": {"name": "date_spine", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/date_spine.sql", "original_file_path": "macros/sql/date_spine.sql", "unique_id": "macro.dbt_utils.date_spine", "macro_sql": "{% macro date_spine(datepart, start_date, end_date) %}\n    {{ return(adapter.dispatch('date_spine', 'dbt_utils')(datepart, start_date, end_date)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__date_spine"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9496524, "supported_languages": null}, "macro.dbt_utils.default__date_spine": {"name": "default__date_spine", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/date_spine.sql", "original_file_path": "macros/sql/date_spine.sql", "unique_id": "macro.dbt_utils.default__date_spine", "macro_sql": "{% macro default__date_spine(datepart, start_date, end_date) %}\n\n\n{# call as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dbt.dateadd(week, 1, current_date)\"\n) #}\n\n\nwith rawdata as (\n\n    {{dbt_utils.generate_series(\n        dbt_utils.get_intervals_between(start_date, end_date, datepart)\n    )}}\n\n),\n\nall_periods as (\n\n    select (\n        {{\n            dbt.dateadd(\n                datepart,\n                \"row_number() over (order by 1) - 1\",\n                start_date\n            )\n        }}\n    ) as date_{{datepart}}\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_{{datepart}} <= {{ end_date }}\n\n)\n\nselect * from filtered\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.generate_series", "macro.dbt_utils.get_intervals_between", "macro.dbt.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9499753, "supported_languages": null}, "macro.dbt_utils.test_not_null_proportion": {"name": "test_not_null_proportion", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/not_null_proportion.sql", "original_file_path": "macros/generic_tests/not_null_proportion.sql", "unique_id": "macro.dbt_utils.test_not_null_proportion", "macro_sql": "{% macro test_not_null_proportion(model, group_by_columns = []) %}\n  {{ return(adapter.dispatch('test_not_null_proportion', 'dbt_utils')(model, group_by_columns, **kwargs)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_not_null_proportion"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9504318, "supported_languages": null}, "macro.dbt_utils.default__test_not_null_proportion": {"name": "default__test_not_null_proportion", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/not_null_proportion.sql", "original_file_path": "macros/generic_tests/not_null_proportion.sql", "unique_id": "macro.dbt_utils.default__test_not_null_proportion", "macro_sql": "{% macro default__test_not_null_proportion(model, group_by_columns) %}\n\n{% set column_name = kwargs.get('column_name', kwargs.get('arg')) %}\n{% set at_least = kwargs.get('at_least', kwargs.get('arg')) %}\n{% set at_most = kwargs.get('at_most', kwargs.get('arg', 1)) %}\n\n{% if group_by_columns|length() > 0 %}\n  {% set select_gb_cols = group_by_columns|join(' ,') + ', ' %}\n  {% set groupby_gb_cols = 'group by ' + group_by_columns|join(',') %}\n{% endif %}\n\nwith validation as (\n  select\n    {{select_gb_cols}}\n    sum(case when {{ column_name }} is null then 0 else 1 end) / cast(count(*) as {{ dbt.type_numeric() }}) as not_null_proportion\n  from {{ model }}\n  {{groupby_gb_cols}}\n),\nvalidation_errors as (\n  select\n    {{select_gb_cols}}\n    not_null_proportion\n  from validation\n  where not_null_proportion < {{ at_least }} or not_null_proportion > {{ at_most }}\n)\nselect\n  *\nfrom validation_errors\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.type_numeric"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9512093, "supported_languages": null}, "macro.dbt_utils.test_at_least_one": {"name": "test_at_least_one", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/at_least_one.sql", "original_file_path": "macros/generic_tests/at_least_one.sql", "unique_id": "macro.dbt_utils.test_at_least_one", "macro_sql": "{% test at_least_one(model, column_name, group_by_columns = []) %}\n  {{ return(adapter.dispatch('test_at_least_one', 'dbt_utils')(model, column_name, group_by_columns)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_at_least_one"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9516754, "supported_languages": null}, "macro.dbt_utils.default__test_at_least_one": {"name": "default__test_at_least_one", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/at_least_one.sql", "original_file_path": "macros/generic_tests/at_least_one.sql", "unique_id": "macro.dbt_utils.default__test_at_least_one", "macro_sql": "{% macro default__test_at_least_one(model, column_name, group_by_columns) %}\n\n{% set pruned_cols = [column_name] %}\n\n{% if group_by_columns|length() > 0 %}\n\n  {% set select_gb_cols = group_by_columns|join(' ,') + ', ' %}\n  {% set groupby_gb_cols = 'group by ' + group_by_columns|join(',') %}\n  {% set pruned_cols = group_by_columns %}\n\n  {% if column_name not in pruned_cols %}\n    {% do pruned_cols.append(column_name) %}\n  {% endif %}\n\n{% endif %}\n\n{% set select_pruned_cols = pruned_cols|join(' ,') %}\n\nselect *\nfrom (\n    with pruned_rows as (\n      select\n        {{ select_pruned_cols }}\n      from {{ model }}\n      {% if group_by_columns|length() == 0 %}\n        where {{ column_name }} is not null\n        limit 1\n      {% endif %}\n    )\n    select\n        {# In TSQL, subquery aggregate columns need aliases #}\n        {# thus: a filler col name, 'filler_column' #}\n      {{select_gb_cols}}\n      count({{ column_name }}) as filler_column\n\n    from pruned_rows\n\n    {{groupby_gb_cols}}\n\n    having count({{ column_name }}) = 0\n\n) validation_errors\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9525287, "supported_languages": null}, "macro.dbt_utils.test_equal_rowcount": {"name": "test_equal_rowcount", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/equal_rowcount.sql", "original_file_path": "macros/generic_tests/equal_rowcount.sql", "unique_id": "macro.dbt_utils.test_equal_rowcount", "macro_sql": "{% test equal_rowcount(model, compare_model, group_by_columns = []) %}\n  {{ return(adapter.dispatch('test_equal_rowcount', 'dbt_utils')(model, compare_model, group_by_columns)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_equal_rowcount"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.953084, "supported_languages": null}, "macro.dbt_utils.default__test_equal_rowcount": {"name": "default__test_equal_rowcount", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/equal_rowcount.sql", "original_file_path": "macros/generic_tests/equal_rowcount.sql", "unique_id": "macro.dbt_utils.default__test_equal_rowcount", "macro_sql": "{% macro default__test_equal_rowcount(model, compare_model, group_by_columns) %}\n\n{#-- Needs to be set at parse time, before we return '' below --#}\n{{ config(fail_calc = 'sum(coalesce(diff_count, 0))') }}\n\n{#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\n{%- if not execute -%}\n    {{ return('') }}\n{% endif %}\n\n{% if group_by_columns|length() > 0 %}\n  {% set select_gb_cols = group_by_columns|join(', ') + ', ' %}\n  {% set join_gb_cols %}\n    {% for c in group_by_columns %}\n      and a.{{c}} = b.{{c}}\n    {% endfor %}\n  {% endset %}\n  {% set groupby_gb_cols = 'group by ' + group_by_columns|join(',') %}\n{% endif %}\n\n{#-- We must add a fake join key in case additional grouping variables are not provided --#}\n{#-- Redshift does not allow for dynamically created join conditions (e.g. full join on 1 = 1 --#}\n{#-- The same logic is used in fewer_rows_than. In case of changes, maintain consistent logic --#}\n{% set group_by_columns = ['id_dbtutils_test_equal_rowcount'] + group_by_columns %}\n{% set groupby_gb_cols = 'group by ' + group_by_columns|join(',') %}\n\nwith a as (\n\n    select \n      {{select_gb_cols}}\n      1 as id_dbtutils_test_equal_rowcount,\n      count(*) as count_a \n    from {{ model }}\n    {{groupby_gb_cols}}\n\n\n),\nb as (\n\n    select \n      {{select_gb_cols}}\n      1 as id_dbtutils_test_equal_rowcount,\n      count(*) as count_b \n    from {{ compare_model }}\n    {{groupby_gb_cols}}\n\n),\nfinal as (\n\n    select\n    \n        {% for c in group_by_columns -%}\n          a.{{c}} as {{c}}_a,\n          b.{{c}} as {{c}}_b,\n        {% endfor %}\n\n        count_a,\n        count_b,\n        abs(count_a - count_b) as diff_count\n\n    from a\n    full join b\n    on\n    a.id_dbtutils_test_equal_rowcount = b.id_dbtutils_test_equal_rowcount\n    {{join_gb_cols}}\n\n\n)\n\nselect * from final\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9542296, "supported_languages": null}, "macro.dbt_utils.test_expression_is_true": {"name": "test_expression_is_true", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/expression_is_true.sql", "original_file_path": "macros/generic_tests/expression_is_true.sql", "unique_id": "macro.dbt_utils.test_expression_is_true", "macro_sql": "{% test expression_is_true(model, expression, column_name=None) %}\n  {{ return(adapter.dispatch('test_expression_is_true', 'dbt_utils')(model, expression, column_name)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9546027, "supported_languages": null}, "macro.dbt_utils.default__test_expression_is_true": {"name": "default__test_expression_is_true", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/expression_is_true.sql", "original_file_path": "macros/generic_tests/expression_is_true.sql", "unique_id": "macro.dbt_utils.default__test_expression_is_true", "macro_sql": "{% macro default__test_expression_is_true(model, expression, column_name) %}\n\n{% set column_list = '*' if should_store_failures() else \"1\" %}\n\nselect\n    {{ column_list }}\nfrom {{ model }}\n{% if column_name is none %}\nwhere not({{ expression }})\n{%- else %}\nwhere not({{ column_name }} {{ expression }})\n{%- endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.should_store_failures"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9549794, "supported_languages": null}, "macro.dbt_utils.test_not_constant": {"name": "test_not_constant", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/not_constant.sql", "original_file_path": "macros/generic_tests/not_constant.sql", "unique_id": "macro.dbt_utils.test_not_constant", "macro_sql": "{% test not_constant(model, column_name, group_by_columns = []) %}\n  {{ return(adapter.dispatch('test_not_constant', 'dbt_utils')(model, column_name, group_by_columns)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_not_constant"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.955391, "supported_languages": null}, "macro.dbt_utils.default__test_not_constant": {"name": "default__test_not_constant", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/not_constant.sql", "original_file_path": "macros/generic_tests/not_constant.sql", "unique_id": "macro.dbt_utils.default__test_not_constant", "macro_sql": "{% macro default__test_not_constant(model, column_name, group_by_columns) %}\n\n{% if group_by_columns|length() > 0 %}\n  {% set select_gb_cols = group_by_columns|join(' ,') + ', ' %}\n  {% set groupby_gb_cols = 'group by ' + group_by_columns|join(',') %}\n{% endif %}\n\n\nselect\n    {# In TSQL, subquery aggregate columns need aliases #}\n    {# thus: a filler col name, 'filler_column' #}\n    {{select_gb_cols}}\n    count(distinct {{ column_name }}) as filler_column\n\nfrom {{ model }}\n\n  {{groupby_gb_cols}}\n\nhaving count(distinct {{ column_name }}) = 1\n\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9559429, "supported_languages": null}, "macro.dbt_utils.test_equality": {"name": "test_equality", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/equality.sql", "original_file_path": "macros/generic_tests/equality.sql", "unique_id": "macro.dbt_utils.test_equality", "macro_sql": "{% test equality(model, compare_model, compare_columns=None, exclude_columns=None, precision = None) %}\n  {{ return(adapter.dispatch('test_equality', 'dbt_utils')(model, compare_model, compare_columns, exclude_columns, precision)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_equality"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9570985, "supported_languages": null}, "macro.dbt_utils.default__test_equality": {"name": "default__test_equality", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/equality.sql", "original_file_path": "macros/generic_tests/equality.sql", "unique_id": "macro.dbt_utils.default__test_equality", "macro_sql": "{% macro default__test_equality(model, compare_model, compare_columns=None, exclude_columns=None, precision = None) %}\n\n{%- if compare_columns and exclude_columns -%}\n    {{ exceptions.raise_compiler_error(\"Both a compare and an ignore list were provided to the `equality` macro. Only one is allowed\") }}\n{%- endif -%}\n\n{% set set_diff %}\n    count(*) + coalesce(abs(\n        sum(case when which_diff = 'a_minus_b' then 1 else 0 end) -\n        sum(case when which_diff = 'b_minus_a' then 1 else 0 end)\n    ), 0)\n{% endset %}\n\n{#-- Needs to be set at parse time, before we return '' below --#}\n{{ config(fail_calc = set_diff) }}\n\n{#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\n{%- if not execute -%}\n    {{ return('') }}\n{% endif %}\n\n\n\n-- setup\n{%- do dbt_utils._is_relation(model, 'test_equality') -%}\n\n{# Ensure there are no extra columns in the compare_model vs model #}\n{%- if not compare_columns -%}\n    {%- do dbt_utils._is_ephemeral(model, 'test_equality') -%}\n    {%- do dbt_utils._is_ephemeral(compare_model, 'test_equality') -%}\n\n    {%- set model_columns = adapter.get_columns_in_relation(model) -%}\n    {%- set compare_model_columns = adapter.get_columns_in_relation(compare_model) -%}\n\n\n    {%- if exclude_columns -%}\n        {#-- Lower case ignore columns for easier comparison --#}\n        {%- set exclude_columns = exclude_columns | map(\"lower\") | list %}\n\n        {# Filter out the excluded columns #}\n        {%- set include_columns = [] %}\n        {%- set include_model_columns = [] %}\n        {%- for column in model_columns -%}\n            {%- if column.name | lower not in exclude_columns -%}\n                {% do include_columns.append(column) %}\n            {%- endif %}\n        {%- endfor %}\n        {%- for column in compare_model_columns -%}\n            {%- if column.name | lower not in exclude_columns -%}\n                {% do include_model_columns.append(column) %}\n            {%- endif %}\n        {%- endfor %}\n\n        {%- set compare_columns_set = set(include_columns | map(attribute='quoted') | map(\"lower\")) %}\n        {%- set compare_model_columns_set = set(include_model_columns | map(attribute='quoted') | map(\"lower\")) %}\n    {%- else -%}\n        {%- set compare_columns_set = set(model_columns | map(attribute='quoted') | map(\"lower\")) %}\n        {%- set compare_model_columns_set = set(compare_model_columns | map(attribute='quoted') | map(\"lower\")) %}\n    {%- endif -%}\n\n    {% if compare_columns_set != compare_model_columns_set %}\n        {{ exceptions.raise_compiler_error(compare_model ~\" has less columns than \" ~ model ~ \", please ensure they have the same columns or use the `compare_columns` or `exclude_columns` arguments to subset them.\") }}\n    {% endif %}\n\n\n{% endif %}\n\n{%- if not precision -%}\n    {%- if not compare_columns -%}\n        {# \n            You cannot get the columns in an ephemeral model (due to not existing in the information schema),\n            so if the user does not provide an explicit list of columns we must error in the case it is ephemeral\n        #}\n        {%- do dbt_utils._is_ephemeral(model, 'test_equality') -%}\n        {%- set compare_columns = adapter.get_columns_in_relation(model)-%}\n\n        {%- if exclude_columns -%}\n            {#-- Lower case ignore columns for easier comparison --#}\n            {%- set exclude_columns = exclude_columns | map(\"lower\") | list %}\n\n            {# Filter out the excluded columns #}\n            {%- set include_columns = [] %}\n            {%- for column in compare_columns -%}\n                {%- if column.name | lower not in exclude_columns -%}\n                    {% do include_columns.append(column) %}\n                {%- endif %}\n            {%- endfor %}\n\n            {%- set compare_columns = include_columns | map(attribute='quoted') %}\n        {%- else -%} {# Compare columns provided #}\n            {%- set compare_columns = compare_columns | map(attribute='quoted') %}\n        {%- endif -%}\n    {%- endif -%}\n\n    {% set compare_cols_csv = compare_columns | join(', ') %}\n\n{% else %} {# Precision required #}\n    {#-\n        If rounding is required, we need to get the types, so it cannot be ephemeral even if they provide column names\n    -#}\n    {%- do dbt_utils._is_ephemeral(model, 'test_equality') -%}\n    {%- set columns = adapter.get_columns_in_relation(model) -%}\n\n    {% set columns_list = [] %}\n    {%- for col in columns -%}\n        {%- if (\n                (col.name|lower in compare_columns|map('lower') or not compare_columns) and\n                (col.name|lower not in exclude_columns|map('lower') or not exclude_columns)\n                ) -%}\n            {# Databricks double type is not picked up by any number type checks in dbt #}\n            {%- if col.is_float() or col.is_numeric() or col.data_type == 'double' -%}\n                {# Cast is required due to postgres not having round for a double precision number #}\n                {%- do columns_list.append('round(cast(' ~ col.quoted ~ ' as ' ~ dbt.type_numeric() ~ '),' ~ precision ~ ') as ' ~ col.quoted) -%}\n            {%- else -%} {# Non-numeric type #}\n                {%- do columns_list.append(col.quoted) -%}\n            {%- endif -%}\n        {% endif %}\n    {%- endfor -%}\n\n    {% set compare_cols_csv = columns_list | join(', ') %}\n\n{% endif %}\n\nwith a as (\n\n    select * from {{ model }}\n\n),\n\nb as (\n\n    select * from {{ compare_model }}\n\n),\n\na_minus_b as (\n\n    select {{compare_cols_csv}} from a\n    {{ dbt.except() }}\n    select {{compare_cols_csv}} from b\n\n),\n\nb_minus_a as (\n\n    select {{compare_cols_csv}} from b\n    {{ dbt.except() }}\n    select {{compare_cols_csv}} from a\n\n),\n\nunioned as (\n\n    select 'a_minus_b' as which_diff, a_minus_b.* from a_minus_b\n    union all\n    select 'b_minus_a' as which_diff, b_minus_a.* from b_minus_a\n\n)\n\nselect * from unioned\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt.type_numeric", "macro.dbt.except"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9610684, "supported_languages": null}, "macro.dbt_utils.test_relationships_where": {"name": "test_relationships_where", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/relationships_where.sql", "original_file_path": "macros/generic_tests/relationships_where.sql", "unique_id": "macro.dbt_utils.test_relationships_where", "macro_sql": "{% test relationships_where(model, column_name, to, field, from_condition=\"1=1\", to_condition=\"1=1\") %}\n  {{ return(adapter.dispatch('test_relationships_where', 'dbt_utils')(model, column_name, to, field, from_condition, to_condition)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_relationships_where"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.961589, "supported_languages": null}, "macro.dbt_utils.default__test_relationships_where": {"name": "default__test_relationships_where", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/relationships_where.sql", "original_file_path": "macros/generic_tests/relationships_where.sql", "unique_id": "macro.dbt_utils.default__test_relationships_where", "macro_sql": "{% macro default__test_relationships_where(model, column_name, to, field, from_condition=\"1=1\", to_condition=\"1=1\") %}\n\n{# T-SQL has no boolean data type so we use 1=1 which returns TRUE #}\n{# ref https://stackoverflow.com/a/7170753/3842610 #}\n\nwith left_table as (\n\n  select\n    {{column_name}} as id\n\n  from {{model}}\n\n  where {{column_name}} is not null\n    and {{from_condition}}\n\n),\n\nright_table as (\n\n  select\n    {{field}} as id\n\n  from {{to}}\n\n  where {{field}} is not null\n    and {{to_condition}}\n\n),\n\nexceptions as (\n\n  select\n    left_table.id,\n    right_table.id as right_id\n\n  from left_table\n\n  left join right_table\n         on left_table.id = right_table.id\n\n  where right_table.id is null\n\n)\n\nselect * from exceptions\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9619138, "supported_languages": null}, "macro.dbt_utils.test_mutually_exclusive_ranges": {"name": "test_mutually_exclusive_ranges", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/mutually_exclusive_ranges.sql", "original_file_path": "macros/generic_tests/mutually_exclusive_ranges.sql", "unique_id": "macro.dbt_utils.test_mutually_exclusive_ranges", "macro_sql": "{% test mutually_exclusive_ranges(model, lower_bound_column, upper_bound_column, partition_by=None, gaps='allowed', zero_length_range_allowed=False) %}\n  {{ return(adapter.dispatch('test_mutually_exclusive_ranges', 'dbt_utils')(model, lower_bound_column, upper_bound_column, partition_by, gaps, zero_length_range_allowed)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_mutually_exclusive_ranges"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9627028, "supported_languages": null}, "macro.dbt_utils.default__test_mutually_exclusive_ranges": {"name": "default__test_mutually_exclusive_ranges", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/mutually_exclusive_ranges.sql", "original_file_path": "macros/generic_tests/mutually_exclusive_ranges.sql", "unique_id": "macro.dbt_utils.default__test_mutually_exclusive_ranges", "macro_sql": "{% macro default__test_mutually_exclusive_ranges(model, lower_bound_column, upper_bound_column, partition_by=None, gaps='allowed', zero_length_range_allowed=False) %}\n{% if gaps == 'not_allowed' %}\n    {% set allow_gaps_operator='=' %}\n    {% set allow_gaps_operator_in_words='equal_to' %}\n{% elif gaps == 'allowed' %}\n    {% set allow_gaps_operator='<=' %}\n    {% set allow_gaps_operator_in_words='less_than_or_equal_to' %}\n{% elif gaps == 'required' %}\n    {% set allow_gaps_operator='<' %}\n    {% set allow_gaps_operator_in_words='less_than' %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\n        \"`gaps` argument for mutually_exclusive_ranges test must be one of ['not_allowed', 'allowed', 'required'] Got: '\" ~ gaps ~\"'.'\"\n    ) }}\n{% endif %}\n{% if not zero_length_range_allowed %}\n    {% set allow_zero_length_operator='<' %}\n    {% set allow_zero_length_operator_in_words='less_than' %}\n{% elif zero_length_range_allowed %}\n    {% set allow_zero_length_operator='<=' %}\n    {% set allow_zero_length_operator_in_words='less_than_or_equal_to' %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\n        \"`zero_length_range_allowed` argument for mutually_exclusive_ranges test must be one of [true, false] Got: '\" ~ zero_length_range_allowed ~\"'.'\"\n    ) }}\n{% endif %}\n\n{% set partition_clause=\"partition by \" ~ partition_by if partition_by else '' %}\n\nwith window_functions as (\n\n    select\n        {% if partition_by %}\n        {{ partition_by }} as partition_by_col,\n        {% endif %}\n        {{ lower_bound_column }} as lower_bound,\n        {{ upper_bound_column }} as upper_bound,\n\n        lead({{ lower_bound_column }}) over (\n            {{ partition_clause }}\n            order by {{ lower_bound_column }}, {{ upper_bound_column }}\n        ) as next_lower_bound,\n\n        row_number() over (\n            {{ partition_clause }}\n            order by {{ lower_bound_column }} desc, {{ upper_bound_column }} desc\n        ) = 1 as is_last_record\n\n    from {{ model }}\n\n),\n\ncalc as (\n    -- We want to return records where one of our assumptions fails, so we'll use\n    -- the `not` function with `and` statements so we can write our assumptions more cleanly\n    select\n        *,\n\n        -- For each record: lower_bound should be < upper_bound.\n        -- Coalesce it to return an error on the null case (implicit assumption\n        -- these columns are not_null)\n        coalesce(\n            lower_bound {{ allow_zero_length_operator }} upper_bound,\n            false\n        ) as lower_bound_{{ allow_zero_length_operator_in_words }}_upper_bound,\n\n        -- For each record: upper_bound {{ allow_gaps_operator }} the next lower_bound.\n        -- Coalesce it to handle null cases for the last record.\n        coalesce(\n            upper_bound {{ allow_gaps_operator }} next_lower_bound,\n            is_last_record,\n            false\n        ) as upper_bound_{{ allow_gaps_operator_in_words }}_next_lower_bound\n\n    from window_functions\n\n),\n\nvalidation_errors as (\n\n    select\n        *\n    from calc\n\n    where not(\n        -- THE FOLLOWING SHOULD BE TRUE --\n        lower_bound_{{ allow_zero_length_operator_in_words }}_upper_bound\n        and upper_bound_{{ allow_gaps_operator_in_words }}_next_lower_bound\n    )\n)\n\nselect * from validation_errors\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9643083, "supported_languages": null}, "macro.dbt_utils.test_recency": {"name": "test_recency", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/recency.sql", "original_file_path": "macros/generic_tests/recency.sql", "unique_id": "macro.dbt_utils.test_recency", "macro_sql": "{% test recency(model, field, datepart, interval, ignore_time_component=False, group_by_columns = []) %}\n  {{ return(adapter.dispatch('test_recency', 'dbt_utils')(model, field, datepart, interval, ignore_time_component, group_by_columns)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_recency"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9648514, "supported_languages": null}, "macro.dbt_utils.default__test_recency": {"name": "default__test_recency", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/recency.sql", "original_file_path": "macros/generic_tests/recency.sql", "unique_id": "macro.dbt_utils.default__test_recency", "macro_sql": "{% macro default__test_recency(model, field, datepart, interval, ignore_time_component, group_by_columns) %}\n\n{% set threshold = 'cast(' ~ dbt.dateadd(datepart, interval * -1, dbt.current_timestamp()) ~ ' as ' ~ ('date' if ignore_time_component else dbt.type_timestamp()) ~ ')'  %}\n\n{% if group_by_columns|length() > 0 %}\n  {% set select_gb_cols = group_by_columns|join(' ,') + ', ' %}\n  {% set groupby_gb_cols = 'group by ' + group_by_columns|join(',') %}\n{% endif %}\n\n\nwith recency as (\n\n    select \n\n      {{ select_gb_cols }}\n      {% if ignore_time_component %}\n        cast(max({{ field }}) as date) as most_recent\n      {%- else %}\n        max({{ field }}) as most_recent\n      {%- endif %}\n\n    from {{ model }}\n\n    {{ groupby_gb_cols }}\n\n)\n\nselect\n\n    {{ select_gb_cols }}\n    most_recent,\n    {{ threshold }} as threshold\n\nfrom recency\nwhere most_recent < {{ threshold }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.dateadd", "macro.dbt.current_timestamp", "macro.dbt.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.965863, "supported_languages": null}, "macro.dbt_utils.test_unique_combination_of_columns": {"name": "test_unique_combination_of_columns", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/unique_combination_of_columns.sql", "original_file_path": "macros/generic_tests/unique_combination_of_columns.sql", "unique_id": "macro.dbt_utils.test_unique_combination_of_columns", "macro_sql": "{% test unique_combination_of_columns(model, combination_of_columns, quote_columns=false) %}\n  {{ return(adapter.dispatch('test_unique_combination_of_columns', 'dbt_utils')(model, combination_of_columns, quote_columns)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_unique_combination_of_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9663608, "supported_languages": null}, "macro.dbt_utils.default__test_unique_combination_of_columns": {"name": "default__test_unique_combination_of_columns", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/unique_combination_of_columns.sql", "original_file_path": "macros/generic_tests/unique_combination_of_columns.sql", "unique_id": "macro.dbt_utils.default__test_unique_combination_of_columns", "macro_sql": "{% macro default__test_unique_combination_of_columns(model, combination_of_columns, quote_columns=false) %}\n\n{% if not quote_columns %}\n    {%- set column_list=combination_of_columns %}\n{% elif quote_columns %}\n    {%- set column_list=[] %}\n        {% for column in combination_of_columns -%}\n            {% set column_list = column_list.append( adapter.quote(column) ) %}\n        {%- endfor %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\n        \"`quote_columns` argument for unique_combination_of_columns test must be one of [True, False] Got: '\" ~ quote ~\"'.'\"\n    ) }}\n{% endif %}\n\n{%- set columns_csv=column_list | join(', ') %}\n\n\nwith validation_errors as (\n\n    select\n        {{ columns_csv }}\n    from {{ model }}\n    group by {{ columns_csv }}\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.967017, "supported_languages": null}, "macro.dbt_utils.test_fewer_rows_than": {"name": "test_fewer_rows_than", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/fewer_rows_than.sql", "original_file_path": "macros/generic_tests/fewer_rows_than.sql", "unique_id": "macro.dbt_utils.test_fewer_rows_than", "macro_sql": "{% test fewer_rows_than(model, compare_model, group_by_columns = []) %}\n  {{ return(adapter.dispatch('test_fewer_rows_than', 'dbt_utils')(model, compare_model, group_by_columns)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_fewer_rows_than"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9675682, "supported_languages": null}, "macro.dbt_utils.default__test_fewer_rows_than": {"name": "default__test_fewer_rows_than", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/fewer_rows_than.sql", "original_file_path": "macros/generic_tests/fewer_rows_than.sql", "unique_id": "macro.dbt_utils.default__test_fewer_rows_than", "macro_sql": "{% macro default__test_fewer_rows_than(model, compare_model, group_by_columns) %}\n\n{{ config(fail_calc = 'sum(coalesce(row_count_delta, 0))') }}\n\n{% if group_by_columns|length() > 0 %}\n  {% set select_gb_cols = group_by_columns|join(' ,') + ', ' %}\n  {% set join_gb_cols %}\n    {% for c in group_by_columns %}\n      and a.{{c}} = b.{{c}}\n    {% endfor %}\n  {% endset %}\n  {% set groupby_gb_cols = 'group by ' + group_by_columns|join(',') %}\n{% endif %}\n\n{#-- We must add a fake join key in case additional grouping variables are not provided --#}\n{#-- Redshift does not allow for dynamically created join conditions (e.g. full join on 1 = 1 --#}\n{#-- The same logic is used in equal_rowcount. In case of changes, maintain consistent logic --#}\n{% set group_by_columns = ['id_dbtutils_test_fewer_rows_than'] + group_by_columns %}\n{% set groupby_gb_cols = 'group by ' + group_by_columns|join(',') %}\n\n\nwith a as (\n\n    select \n      {{select_gb_cols}}\n      1 as id_dbtutils_test_fewer_rows_than,\n      count(*) as count_our_model \n    from {{ model }}\n    {{ groupby_gb_cols }}\n\n),\nb as (\n\n    select \n      {{select_gb_cols}}\n      1 as id_dbtutils_test_fewer_rows_than,\n      count(*) as count_comparison_model \n    from {{ compare_model }}\n    {{ groupby_gb_cols }}\n\n),\ncounts as (\n\n    select\n\n        {% for c in group_by_columns -%}\n          a.{{c}} as {{c}}_a,\n          b.{{c}} as {{c}}_b,\n        {% endfor %}\n\n        count_our_model,\n        count_comparison_model\n    from a\n    full join b on \n    a.id_dbtutils_test_fewer_rows_than = b.id_dbtutils_test_fewer_rows_than\n    {{ join_gb_cols }}\n\n),\nfinal as (\n\n    select *,\n        case\n            -- fail the test if we have more rows than the reference model and return the row count delta\n            when count_our_model > count_comparison_model then (count_our_model - count_comparison_model)\n            -- fail the test if they are the same number\n            when count_our_model = count_comparison_model then 1\n            -- pass the test if the delta is positive (i.e. return the number 0)\n            else 0\n    end as row_count_delta\n    from counts\n\n)\n\nselect * from final\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.968573, "supported_languages": null}, "macro.dbt_utils.test_not_accepted_values": {"name": "test_not_accepted_values", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/not_accepted_values.sql", "original_file_path": "macros/generic_tests/not_accepted_values.sql", "unique_id": "macro.dbt_utils.test_not_accepted_values", "macro_sql": "{% test not_accepted_values(model, column_name, values, quote=True) %}\n  {{ return(adapter.dispatch('test_not_accepted_values', 'dbt_utils')(model, column_name, values, quote)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_not_accepted_values"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9689999, "supported_languages": null}, "macro.dbt_utils.default__test_not_accepted_values": {"name": "default__test_not_accepted_values", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/not_accepted_values.sql", "original_file_path": "macros/generic_tests/not_accepted_values.sql", "unique_id": "macro.dbt_utils.default__test_not_accepted_values", "macro_sql": "{% macro default__test_not_accepted_values(model, column_name, values, quote=True) %}\nwith all_values as (\n\n    select distinct\n        {{ column_name }} as value_field\n\n    from {{ model }}\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field in (\n        {% for value in values -%}\n            {% if quote -%}\n            '{{ value }}'\n            {%- else -%}\n            {{ value }}\n            {%- endif -%}\n            {%- if not loop.last -%},{%- endif %}\n        {%- endfor %}\n        )\n\n)\n\nselect *\nfrom validation_errors\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9693973, "supported_languages": null}, "macro.dbt_utils.test_not_empty_string": {"name": "test_not_empty_string", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/not_empty_string.sql", "original_file_path": "macros/generic_tests/not_empty_string.sql", "unique_id": "macro.dbt_utils.test_not_empty_string", "macro_sql": "{% test not_empty_string(model, column_name, trim_whitespace=true) %}\n\n  {{ return(adapter.dispatch('test_not_empty_string', 'dbt_utils')(model, column_name, trim_whitespace)) }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_not_empty_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9698055, "supported_languages": null}, "macro.dbt_utils.default__test_not_empty_string": {"name": "default__test_not_empty_string", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/not_empty_string.sql", "original_file_path": "macros/generic_tests/not_empty_string.sql", "unique_id": "macro.dbt_utils.default__test_not_empty_string", "macro_sql": "{% macro default__test_not_empty_string(model, column_name, trim_whitespace=true) %}\n\n    with\n    \n    all_values as (\n\n        select \n\n\n            {% if trim_whitespace == true -%}\n\n                trim({{ column_name }}) as {{ column_name }}\n\n            {%- else -%}\n\n                {{ column_name }}\n\n            {%- endif %}\n            \n        from {{ model }}\n\n    ),\n\n    errors as (\n\n        select * from all_values\n        where {{ column_name }} = ''\n\n    )\n\n    select * from errors\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9701138, "supported_languages": null}, "macro.dbt_utils.test_accepted_range": {"name": "test_accepted_range", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/accepted_range.sql", "original_file_path": "macros/generic_tests/accepted_range.sql", "unique_id": "macro.dbt_utils.test_accepted_range", "macro_sql": "{% test accepted_range(model, column_name, min_value=none, max_value=none, inclusive=true) %}\n  {{ return(adapter.dispatch('test_accepted_range', 'dbt_utils')(model, column_name, min_value, max_value, inclusive)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_accepted_range"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9705791, "supported_languages": null}, "macro.dbt_utils.default__test_accepted_range": {"name": "default__test_accepted_range", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/accepted_range.sql", "original_file_path": "macros/generic_tests/accepted_range.sql", "unique_id": "macro.dbt_utils.default__test_accepted_range", "macro_sql": "{% macro default__test_accepted_range(model, column_name, min_value=none, max_value=none, inclusive=true) %}\n\nwith meet_condition as(\n  select *\n  from {{ model }}\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n\n  {%- if min_value is not none %}\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not {{ column_name }} > {{- \"=\" if inclusive }} {{ min_value }}\n  {%- endif %}\n\n  {%- if max_value is not none %}\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not {{ column_name }} < {{- \"=\" if inclusive }} {{ max_value }}\n  {%- endif %}\n)\n\nselect *\nfrom validation_errors\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9710653, "supported_languages": null}, "macro.dbt_utils.test_cardinality_equality": {"name": "test_cardinality_equality", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/cardinality_equality.sql", "original_file_path": "macros/generic_tests/cardinality_equality.sql", "unique_id": "macro.dbt_utils.test_cardinality_equality", "macro_sql": "{% test cardinality_equality(model, column_name, to, field) %}\n    {{ return(adapter.dispatch('test_cardinality_equality', 'dbt_utils')(model, column_name, to, field)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_cardinality_equality"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9715734, "supported_languages": null}, "macro.dbt_utils.default__test_cardinality_equality": {"name": "default__test_cardinality_equality", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/cardinality_equality.sql", "original_file_path": "macros/generic_tests/cardinality_equality.sql", "unique_id": "macro.dbt_utils.default__test_cardinality_equality", "macro_sql": "{% macro default__test_cardinality_equality(model, column_name, to, field) %}\n\n{# T-SQL does not let you use numbers as aliases for columns #}\n{# Thus, no \"GROUP BY 1\" #}\n\nwith table_a as (\nselect\n  {{ column_name }},\n  count(*) as num_rows\nfrom {{ model }}\ngroup by {{ column_name }}\n),\n\ntable_b as (\nselect\n  {{ field }},\n  count(*) as num_rows\nfrom {{ to }}\ngroup by {{ field }}\n),\n\nexcept_a as (\n  select *\n  from table_a\n  {{ dbt.except() }}\n  select *\n  from table_b\n),\n\nexcept_b as (\n  select *\n  from table_b\n  {{ dbt.except() }}\n  select *\n  from table_a\n),\n\nunioned as (\n  select *\n  from except_a\n  union all\n  select *\n  from except_b\n)\n\nselect *\nfrom unioned\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.except"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.9719713, "supported_languages": null}, "macro.dbt_utils.test_sequential_values": {"name": "test_sequential_values", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/sequential_values.sql", "original_file_path": "macros/generic_tests/sequential_values.sql", "unique_id": "macro.dbt_utils.test_sequential_values", "macro_sql": "{% test sequential_values(model, column_name, interval=1, datepart=None, group_by_columns = []) %}\n\n  {{ return(adapter.dispatch('test_sequential_values', 'dbt_utils')(model, column_name, interval, datepart, group_by_columns)) }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_sequential_values"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.972523, "supported_languages": null}, "macro.dbt_utils.default__test_sequential_values": {"name": "default__test_sequential_values", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/sequential_values.sql", "original_file_path": "macros/generic_tests/sequential_values.sql", "unique_id": "macro.dbt_utils.default__test_sequential_values", "macro_sql": "{% macro default__test_sequential_values(model, column_name, interval=1, datepart=None, group_by_columns = []) %}\n\n{% set previous_column_name = \"previous_\" ~ dbt_utils.slugify(column_name) %}\n\n{% if group_by_columns|length() > 0 %}\n  {% set select_gb_cols = group_by_columns|join(',') + ', ' %}\n  {% set partition_gb_cols = 'partition by ' + group_by_columns|join(',') %}\n{% endif %}\n\nwith windowed as (\n\n    select\n        {{ select_gb_cols }}\n        {{ column_name }},\n        lag({{ column_name }}) over (\n            {{partition_gb_cols}}\n            order by {{ column_name }}\n        ) as {{ previous_column_name }}\n    from {{ model }}\n),\n\nvalidation_errors as (\n    select\n        *\n    from windowed\n    {% if datepart %}\n    where not(cast({{ column_name }} as {{ dbt.type_timestamp() }})= cast({{ dbt.dateadd(datepart, interval, previous_column_name) }} as {{ dbt.type_timestamp() }}))\n    {% else %}\n    where not({{ column_name }} = {{ previous_column_name }} + {{ interval }})\n    {% endif %}\n)\n\nselect *\nfrom validation_errors\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.slugify", "macro.dbt.type_timestamp", "macro.dbt.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1757448966.973554, "supported_languages": null}}, "docs": {"doc.dbt.__overview__": {"name": "__overview__", "resource_type": "doc", "package_name": "dbt", "path": "overview.md", "original_file_path": "docs/overview.md", "unique_id": "doc.dbt.__overview__", "block_contents": "### Welcome!\n\nWelcome to the auto-generated documentation for your dbt project!\n\n### Navigation\n\nYou can use the `Project` and `Database` navigation tabs on the left side of the window to explore the models\nin your project.\n\n#### Project Tab\nThe `Project` tab mirrors the directory structure of your dbt project. In this tab, you can see all of the\nmodels defined in your dbt project, as well as models imported from dbt packages.\n\n#### Database Tab\nThe `Database` tab also exposes your models, but in a format that looks more like a database explorer. This view\nshows relations (tables and views) grouped into database schemas. Note that ephemeral models are _not_ shown\nin this interface, as they do not exist in the database.\n\n### Graph Exploration\nYou can click the blue icon on the bottom-right corner of the page to view the lineage graph of your models.\n\nOn model pages, you'll see the immediate parents and children of the model you're exploring. By clicking the `Expand`\nbutton at the top-right of this lineage pane, you'll be able to see all of the models that are used to build,\nor are built from, the model you're exploring.\n\nOnce expanded, you'll be able to use the `--select` and `--exclude` model selection syntax to filter the\nmodels in the graph. For more information on model selection, check out the [dbt docs](https://docs.getdbt.com/docs/model-selection-syntax).\n\nNote that you can also right-click on models to interactively filter and explore the graph.\n\n---\n\n### More information\n\n- [What is dbt](https://docs.getdbt.com/docs/introduction)?\n- Read the [dbt viewpoint](https://docs.getdbt.com/docs/viewpoint)\n- [Installation](https://docs.getdbt.com/docs/installation)\n- Join the [dbt Community](https://www.getdbt.com/community/) for questions and discussion"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_participant_description": {"name": "GREGoR_R03_HMB_20250612_participant_description", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_participant_description", "block_contents": "Model for GREGoR_R03_HMB_20250612_participant."}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_participant_participant_id": {"name": "GREGoR_R03_HMB_20250612_participant_participant_id", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_participant_participant_id", "block_contents": "Unique participant identifier"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_participant_affected_status": {"name": "GREGoR_R03_HMB_20250612_participant_affected_status", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_participant_affected_status", "block_contents": "Affected status of the participant"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_participant_age_at_enrollment": {"name": "GREGoR_R03_HMB_20250612_participant_age_at_enrollment", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_participant_age_at_enrollment", "block_contents": "Age at enrollment in years"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_participant_age_at_last_observation": {"name": "GREGoR_R03_HMB_20250612_participant_age_at_last_observation", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_participant_age_at_last_observation", "block_contents": "Age at the last known observation"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_participant_ancestry_detail": {"name": "GREGoR_R03_HMB_20250612_participant_ancestry_detail", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_participant_ancestry_detail", "block_contents": "Detailed ancestry description"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_participant_consent_code": {"name": "GREGoR_R03_HMB_20250612_participant_consent_code", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_participant_consent_code", "block_contents": "Consent group or code for data use"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_participant_family_id": {"name": "GREGoR_R03_HMB_20250612_participant_family_id", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_participant_family_id", "block_contents": "Family identifier"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_participant_gregor_center": {"name": "GREGoR_R03_HMB_20250612_participant_gregor_center", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_participant_gregor_center", "block_contents": "GREGOR project center identifier"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_participant_internal_project_id": {"name": "GREGoR_R03_HMB_20250612_participant_internal_project_id", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_participant_internal_project_id", "block_contents": "Internal project identifier"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_participant_maternal_id": {"name": "GREGoR_R03_HMB_20250612_participant_maternal_id", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_participant_maternal_id", "block_contents": "Maternal ID (0 if unknown)"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_participant_missing_variant_case": {"name": "GREGoR_R03_HMB_20250612_participant_missing_variant_case", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_participant_missing_variant_case", "block_contents": "Indicates if the participant is a missing variant case"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_participant_paternal_id": {"name": "GREGoR_R03_HMB_20250612_participant_paternal_id", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_participant_paternal_id", "block_contents": "Paternal ID (0 if unknown)"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_participant_phenotype_description": {"name": "GREGoR_R03_HMB_20250612_participant_phenotype_description", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_participant_phenotype_description", "block_contents": "Description of phenotype"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_participant_pmid_id": {"name": "GREGoR_R03_HMB_20250612_participant_pmid_id", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_participant_pmid_id", "block_contents": "PMID of a related publication or report"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_participant_prior_testing": {"name": "GREGoR_R03_HMB_20250612_participant_prior_testing", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_participant_prior_testing", "block_contents": "Indicates whether prior genetic testing was conducted"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_participant_proband_relationship": {"name": "GREGoR_R03_HMB_20250612_participant_proband_relationship", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_participant_proband_relationship", "block_contents": "Relationship to self (usually 'Self')"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_participant_proband_relationship_detail": {"name": "GREGoR_R03_HMB_20250612_participant_proband_relationship_detail", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_participant_proband_relationship_detail", "block_contents": "Further detail on relationship to self"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_participant_reported_ethnicity": {"name": "GREGoR_R03_HMB_20250612_participant_reported_ethnicity", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_participant_reported_ethnicity", "block_contents": "Ethnicity reported by participant or caregiver"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_participant_reported_race": {"name": "GREGoR_R03_HMB_20250612_participant_reported_race", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_participant_reported_race", "block_contents": "Race reported by participant or caregiver"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_participant_sex": {"name": "GREGoR_R03_HMB_20250612_participant_sex", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_participant_sex", "block_contents": "Reported biological sex"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_participant_sex_detail": {"name": "GREGoR_R03_HMB_20250612_participant_sex_detail", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_participant_sex_detail", "block_contents": "Additional detail about sex or gender"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_participant_solve_status": {"name": "GREGoR_R03_HMB_20250612_participant_solve_status", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_participant_solve_status", "block_contents": "Status of diagnostic resolution"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_participant_twin_id": {"name": "GREGoR_R03_HMB_20250612_participant_twin_id", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_participant_twin_id", "block_contents": "Identifier for twin if applicable"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_participant_ingest_provenance": {"name": "GREGoR_R03_HMB_20250612_participant_ingest_provenance", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_participant_ingest_provenance", "block_contents": "nan"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant_description": {"name": "GREGoR_R03_HMB_20250612_stg_participant_description", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant_description", "block_contents": "Model for GREGoR_R03_HMB_20250612_stg_participant."}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant_participant_id": {"name": "GREGoR_R03_HMB_20250612_stg_participant_participant_id", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant_participant_id", "block_contents": "Unique participant identifier"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant_affected_status": {"name": "GREGoR_R03_HMB_20250612_stg_participant_affected_status", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant_affected_status", "block_contents": "Affected status of the participant"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant_age_at_enrollment": {"name": "GREGoR_R03_HMB_20250612_stg_participant_age_at_enrollment", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant_age_at_enrollment", "block_contents": "Age at enrollment in years"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant_age_at_last_observation": {"name": "GREGoR_R03_HMB_20250612_stg_participant_age_at_last_observation", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant_age_at_last_observation", "block_contents": "Age at the last known observation"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant_ancestry_detail": {"name": "GREGoR_R03_HMB_20250612_stg_participant_ancestry_detail", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant_ancestry_detail", "block_contents": "Detailed ancestry description"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant_consent_code": {"name": "GREGoR_R03_HMB_20250612_stg_participant_consent_code", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant_consent_code", "block_contents": "Consent group or code for data use"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant_family_id": {"name": "GREGoR_R03_HMB_20250612_stg_participant_family_id", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant_family_id", "block_contents": "Family identifier"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant_gregor_center": {"name": "GREGoR_R03_HMB_20250612_stg_participant_gregor_center", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant_gregor_center", "block_contents": "GREGOR project center identifier"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant_internal_project_id": {"name": "GREGoR_R03_HMB_20250612_stg_participant_internal_project_id", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant_internal_project_id", "block_contents": "Internal project identifier"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant_maternal_id": {"name": "GREGoR_R03_HMB_20250612_stg_participant_maternal_id", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant_maternal_id", "block_contents": "Maternal ID (0 if unknown)"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant_missing_variant_case": {"name": "GREGoR_R03_HMB_20250612_stg_participant_missing_variant_case", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant_missing_variant_case", "block_contents": "Indicates if the participant is a missing variant case"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant_paternal_id": {"name": "GREGoR_R03_HMB_20250612_stg_participant_paternal_id", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant_paternal_id", "block_contents": "Paternal ID (0 if unknown)"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant_phenotype_description": {"name": "GREGoR_R03_HMB_20250612_stg_participant_phenotype_description", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant_phenotype_description", "block_contents": "Description of phenotype"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant_pmid_id": {"name": "GREGoR_R03_HMB_20250612_stg_participant_pmid_id", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant_pmid_id", "block_contents": "PMID of a related publication or report"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant_prior_testing": {"name": "GREGoR_R03_HMB_20250612_stg_participant_prior_testing", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant_prior_testing", "block_contents": "Indicates whether prior genetic testing was conducted"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant_proband_relationship": {"name": "GREGoR_R03_HMB_20250612_stg_participant_proband_relationship", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant_proband_relationship", "block_contents": "Relationship to self (usually 'Self')"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant_proband_relationship_detail": {"name": "GREGoR_R03_HMB_20250612_stg_participant_proband_relationship_detail", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant_proband_relationship_detail", "block_contents": "Further detail on relationship to self"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant_reported_ethnicity": {"name": "GREGoR_R03_HMB_20250612_stg_participant_reported_ethnicity", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant_reported_ethnicity", "block_contents": "Ethnicity reported by participant or caregiver"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant_reported_race": {"name": "GREGoR_R03_HMB_20250612_stg_participant_reported_race", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant_reported_race", "block_contents": "Race reported by participant or caregiver"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant_sex": {"name": "GREGoR_R03_HMB_20250612_stg_participant_sex", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant_sex", "block_contents": "Reported biological sex"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant_sex_detail": {"name": "GREGoR_R03_HMB_20250612_stg_participant_sex_detail", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant_sex_detail", "block_contents": "Additional detail about sex or gender"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant_solve_status": {"name": "GREGoR_R03_HMB_20250612_stg_participant_solve_status", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant_solve_status", "block_contents": "Status of diagnostic resolution"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant_twin_id": {"name": "GREGoR_R03_HMB_20250612_stg_participant_twin_id", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant_twin_id", "block_contents": "Identifier for twin if applicable"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant_ingest_provenance": {"name": "GREGoR_R03_HMB_20250612_stg_participant_ingest_provenance", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant_ingest_provenance", "block_contents": "nan"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_phenotype_description": {"name": "GREGoR_R03_HMB_20250612_phenotype_description", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_phenotype_description", "block_contents": "Model for GREGoR_R03_HMB_20250612_phenotype."}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_phenotype_phenotype_id": {"name": "GREGoR_R03_HMB_20250612_phenotype_phenotype_id", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_phenotype_phenotype_id", "block_contents": "Unique identifier for the phenotype record"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_phenotype_additional_details": {"name": "GREGoR_R03_HMB_20250612_phenotype_additional_details", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_phenotype_additional_details", "block_contents": "Free text field for extra phenotype information"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_phenotype_additional_modifiers": {"name": "GREGoR_R03_HMB_20250612_phenotype_additional_modifiers", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_phenotype_additional_modifiers", "block_contents": "Modifiers that qualify the phenotype term"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_phenotype_onset_age_range": {"name": "GREGoR_R03_HMB_20250612_phenotype_onset_age_range", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_phenotype_onset_age_range", "block_contents": "Age range when the phenotype was observed"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_phenotype_ontology": {"name": "GREGoR_R03_HMB_20250612_phenotype_ontology", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_phenotype_ontology", "block_contents": "Ontology used for the phenotype term"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_phenotype_participant_id": {"name": "GREGoR_R03_HMB_20250612_phenotype_participant_id", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_phenotype_participant_id", "block_contents": "Participant ID associated with the phenotype record"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_phenotype_presence": {"name": "GREGoR_R03_HMB_20250612_phenotype_presence", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_phenotype_presence", "block_contents": "Indicates if the phenotype is present or absent"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_phenotype_syndromic": {"name": "GREGoR_R03_HMB_20250612_phenotype_syndromic", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_phenotype_syndromic", "block_contents": "nan"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_phenotype_term_id": {"name": "GREGoR_R03_HMB_20250612_phenotype_term_id", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_phenotype_term_id", "block_contents": "Ontology identifier for the phenotype term"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype_description": {"name": "GREGoR_R03_HMB_20250612_stg_phenotype_description", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype_description", "block_contents": "Model for GREGoR_R03_HMB_20250612_stg_phenotype."}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype_phenotype_id": {"name": "GREGoR_R03_HMB_20250612_stg_phenotype_phenotype_id", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype_phenotype_id", "block_contents": "Unique identifier for the phenotype record"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype_additional_details": {"name": "GREGoR_R03_HMB_20250612_stg_phenotype_additional_details", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype_additional_details", "block_contents": "Free text field for extra phenotype information"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype_additional_modifiers": {"name": "GREGoR_R03_HMB_20250612_stg_phenotype_additional_modifiers", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype_additional_modifiers", "block_contents": "Modifiers that qualify the phenotype term"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype_onset_age_range": {"name": "GREGoR_R03_HMB_20250612_stg_phenotype_onset_age_range", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype_onset_age_range", "block_contents": "Age range when the phenotype was observed"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype_ontology": {"name": "GREGoR_R03_HMB_20250612_stg_phenotype_ontology", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype_ontology", "block_contents": "Ontology used for the phenotype term"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype_participant_id": {"name": "GREGoR_R03_HMB_20250612_stg_phenotype_participant_id", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype_participant_id", "block_contents": "Participant ID associated with the phenotype record"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype_presence": {"name": "GREGoR_R03_HMB_20250612_stg_phenotype_presence", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype_presence", "block_contents": "Indicates if the phenotype is present or absent"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype_syndromic": {"name": "GREGoR_R03_HMB_20250612_stg_phenotype_syndromic", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype_syndromic", "block_contents": "nan"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype_term_id": {"name": "GREGoR_R03_HMB_20250612_stg_phenotype_term_id", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype_term_id", "block_contents": "Ontology identifier for the phenotype term"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_experiment_description": {"name": "GREGoR_R03_HMB_20250612_experiment_description", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_experiment_description", "block_contents": "Model for GREGoR_R03_HMB_20250612_experiment."}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_experiment_experiment_id": {"name": "GREGoR_R03_HMB_20250612_experiment_experiment_id", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_experiment_experiment_id", "block_contents": "table_name.experiment_id_in_table"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_experiment_table_name": {"name": "GREGoR_R03_HMB_20250612_experiment_table_name", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_experiment_table_name", "block_contents": "nan"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_experiment_id_in_table": {"name": "GREGoR_R03_HMB_20250612_experiment_id_in_table", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_experiment_id_in_table", "block_contents": "nan"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_experiment_participant_id": {"name": "GREGoR_R03_HMB_20250612_experiment_participant_id", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_experiment_participant_id", "block_contents": "participant.participant_id"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_experiment_description": {"name": "GREGoR_R03_HMB_20250612_stg_experiment_description", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_experiment_description", "block_contents": "Model for GREGoR_R03_HMB_20250612_stg_experiment."}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_experiment_experiment_id": {"name": "GREGoR_R03_HMB_20250612_stg_experiment_experiment_id", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_experiment_experiment_id", "block_contents": "table_name.experiment_id_in_table"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_experiment_table_name": {"name": "GREGoR_R03_HMB_20250612_stg_experiment_table_name", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_experiment_table_name", "block_contents": "nan"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_experiment_id_in_table": {"name": "GREGoR_R03_HMB_20250612_stg_experiment_id_in_table", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_experiment_id_in_table", "block_contents": "nan"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_experiment_participant_id": {"name": "GREGoR_R03_HMB_20250612_stg_experiment_participant_id", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_experiment_participant_id", "block_contents": "participant.participant_id"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_experiment_ingest_provenance": {"name": "GREGoR_R03_HMB_20250612_experiment_ingest_provenance", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_experiment_ingest_provenance", "block_contents": "nan"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_experiment_ingest_provenance": {"name": "GREGoR_R03_HMB_20250612_stg_experiment_ingest_provenance", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_experiment_ingest_provenance", "block_contents": "nan"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_anvil_project_description": {"name": "GREGoR_R03_HMB_20250612_anvil_project_description", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_anvil_project_description", "block_contents": "Model for GREGoR_R03_HMB_20250612_anvil_project."}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_anvil_project_project_id": {"name": "GREGoR_R03_HMB_20250612_anvil_project_project_id", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_anvil_project_project_id", "block_contents": "nan"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_anvil_project_funded_by": {"name": "GREGoR_R03_HMB_20250612_anvil_project_funded_by", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_anvil_project_funded_by", "block_contents": "nan"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_anvil_project_generated_dataset_id": {"name": "GREGoR_R03_HMB_20250612_anvil_project_generated_dataset_id", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_anvil_project_generated_dataset_id", "block_contents": "nan"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_anvil_project_principal_investigator": {"name": "GREGoR_R03_HMB_20250612_anvil_project_principal_investigator", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_anvil_project_principal_investigator", "block_contents": "nan"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_anvil_project_title": {"name": "GREGoR_R03_HMB_20250612_anvil_project_title", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_anvil_project_title", "block_contents": "nan"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_anvil_project_registered_identifier": {"name": "GREGoR_R03_HMB_20250612_anvil_project_registered_identifier", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_anvil_project_registered_identifier", "block_contents": "nan"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_anvil_project_source_datarepo_row_ids": {"name": "GREGoR_R03_HMB_20250612_anvil_project_source_datarepo_row_ids", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_anvil_project_source_datarepo_row_ids", "block_contents": "nan"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_anvil_project_description": {"name": "GREGoR_R03_HMB_20250612_stg_anvil_project_description", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_anvil_project_description", "block_contents": "Model for GREGoR_R03_HMB_20250612_stg_anvil_project."}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_anvil_project_project_id": {"name": "GREGoR_R03_HMB_20250612_stg_anvil_project_project_id", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_anvil_project_project_id", "block_contents": "nan"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_anvil_project_funded_by": {"name": "GREGoR_R03_HMB_20250612_stg_anvil_project_funded_by", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_anvil_project_funded_by", "block_contents": "nan"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_anvil_project_generated_dataset_id": {"name": "GREGoR_R03_HMB_20250612_stg_anvil_project_generated_dataset_id", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_anvil_project_generated_dataset_id", "block_contents": "nan"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_anvil_project_principal_investigator": {"name": "GREGoR_R03_HMB_20250612_stg_anvil_project_principal_investigator", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_anvil_project_principal_investigator", "block_contents": "nan"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_anvil_project_title": {"name": "GREGoR_R03_HMB_20250612_stg_anvil_project_title", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_anvil_project_title", "block_contents": "nan"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_anvil_project_registered_identifier": {"name": "GREGoR_R03_HMB_20250612_stg_anvil_project_registered_identifier", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_anvil_project_registered_identifier", "block_contents": "nan"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_anvil_project_source_datarepo_row_ids": {"name": "GREGoR_R03_HMB_20250612_stg_anvil_project_source_datarepo_row_ids", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_anvil_project_source_datarepo_row_ids", "block_contents": "nan"}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_participant": {"name": "GREGoR_R03_HMB_20250612_participant", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/model_descriptions.md", "original_file_path": "models/docs/model_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_participant", "block_contents": "Model for GREGoR_R03_HMB_20250612_participant."}, "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant": {"name": "GREGoR_R03_HMB_20250612_stg_participant", "resource_type": "doc", "package_name": "GREGoR_R03_HMB_20250612", "path": "docs/model_descriptions.md", "original_file_path": "models/docs/model_descriptions.md", "unique_id": "doc.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "block_contents": "Model for GREGoR_R03_HMB_20250612_stg_participant."}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_participant_description": {"name": "GREGoR_R03_GRU_20250612_participant_description", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_participant_description", "block_contents": "Model for GREGoR_R03_GRU_20250612_participant."}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_participant_participant_id": {"name": "GREGoR_R03_GRU_20250612_participant_participant_id", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_participant_participant_id", "block_contents": "Unique participant identifier"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_participant_affected_status": {"name": "GREGoR_R03_GRU_20250612_participant_affected_status", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_participant_affected_status", "block_contents": "Affected status of the participant"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_participant_age_at_enrollment": {"name": "GREGoR_R03_GRU_20250612_participant_age_at_enrollment", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_participant_age_at_enrollment", "block_contents": "Age at enrollment in years"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_participant_age_at_last_observation": {"name": "GREGoR_R03_GRU_20250612_participant_age_at_last_observation", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_participant_age_at_last_observation", "block_contents": "Age at the last known observation"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_participant_ancestry_detail": {"name": "GREGoR_R03_GRU_20250612_participant_ancestry_detail", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_participant_ancestry_detail", "block_contents": "Detailed ancestry description"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_participant_consent_code": {"name": "GREGoR_R03_GRU_20250612_participant_consent_code", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_participant_consent_code", "block_contents": "Consent group or code for data use"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_participant_family_id": {"name": "GREGoR_R03_GRU_20250612_participant_family_id", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_participant_family_id", "block_contents": "Family identifier"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_participant_gregor_center": {"name": "GREGoR_R03_GRU_20250612_participant_gregor_center", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_participant_gregor_center", "block_contents": "GREGOR project center identifier"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_participant_internal_project_id": {"name": "GREGoR_R03_GRU_20250612_participant_internal_project_id", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_participant_internal_project_id", "block_contents": "Internal project identifier"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_participant_maternal_id": {"name": "GREGoR_R03_GRU_20250612_participant_maternal_id", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_participant_maternal_id", "block_contents": "Maternal ID (0 if unknown)"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_participant_missing_variant_case": {"name": "GREGoR_R03_GRU_20250612_participant_missing_variant_case", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_participant_missing_variant_case", "block_contents": "Indicates if the participant is a missing variant case"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_participant_paternal_id": {"name": "GREGoR_R03_GRU_20250612_participant_paternal_id", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_participant_paternal_id", "block_contents": "Paternal ID (0 if unknown)"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_participant_phenotype_description": {"name": "GREGoR_R03_GRU_20250612_participant_phenotype_description", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_participant_phenotype_description", "block_contents": "Description of phenotype"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_participant_pmid_id": {"name": "GREGoR_R03_GRU_20250612_participant_pmid_id", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_participant_pmid_id", "block_contents": "PMID of a related publication or report"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_participant_prior_testing": {"name": "GREGoR_R03_GRU_20250612_participant_prior_testing", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_participant_prior_testing", "block_contents": "Indicates whether prior genetic testing was conducted"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_participant_proband_relationship": {"name": "GREGoR_R03_GRU_20250612_participant_proband_relationship", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_participant_proband_relationship", "block_contents": "Relationship to self (usually 'Self')"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_participant_proband_relationship_detail": {"name": "GREGoR_R03_GRU_20250612_participant_proband_relationship_detail", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_participant_proband_relationship_detail", "block_contents": "Further detail on relationship to self"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_participant_reported_ethnicity": {"name": "GREGoR_R03_GRU_20250612_participant_reported_ethnicity", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_participant_reported_ethnicity", "block_contents": "Ethnicity reported by participant or caregiver"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_participant_reported_race": {"name": "GREGoR_R03_GRU_20250612_participant_reported_race", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_participant_reported_race", "block_contents": "Race reported by participant or caregiver"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_participant_sex": {"name": "GREGoR_R03_GRU_20250612_participant_sex", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_participant_sex", "block_contents": "Reported biological sex"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_participant_sex_detail": {"name": "GREGoR_R03_GRU_20250612_participant_sex_detail", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_participant_sex_detail", "block_contents": "Additional detail about sex or gender"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_participant_solve_status": {"name": "GREGoR_R03_GRU_20250612_participant_solve_status", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_participant_solve_status", "block_contents": "Status of diagnostic resolution"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_participant_twin_id": {"name": "GREGoR_R03_GRU_20250612_participant_twin_id", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_participant_twin_id", "block_contents": "Identifier for twin if applicable"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_participant_ingest_provenance": {"name": "GREGoR_R03_GRU_20250612_participant_ingest_provenance", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_participant_ingest_provenance", "block_contents": "nan"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant_description": {"name": "GREGoR_R03_GRU_20250612_stg_participant_description", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant_description", "block_contents": "Model for GREGoR_R03_GRU_20250612_stg_participant."}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant_participant_id": {"name": "GREGoR_R03_GRU_20250612_stg_participant_participant_id", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant_participant_id", "block_contents": "Unique participant identifier"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant_affected_status": {"name": "GREGoR_R03_GRU_20250612_stg_participant_affected_status", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant_affected_status", "block_contents": "Affected status of the participant"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant_age_at_enrollment": {"name": "GREGoR_R03_GRU_20250612_stg_participant_age_at_enrollment", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant_age_at_enrollment", "block_contents": "Age at enrollment in years"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant_age_at_last_observation": {"name": "GREGoR_R03_GRU_20250612_stg_participant_age_at_last_observation", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant_age_at_last_observation", "block_contents": "Age at the last known observation"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant_ancestry_detail": {"name": "GREGoR_R03_GRU_20250612_stg_participant_ancestry_detail", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant_ancestry_detail", "block_contents": "Detailed ancestry description"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant_consent_code": {"name": "GREGoR_R03_GRU_20250612_stg_participant_consent_code", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant_consent_code", "block_contents": "Consent group or code for data use"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant_family_id": {"name": "GREGoR_R03_GRU_20250612_stg_participant_family_id", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant_family_id", "block_contents": "Family identifier"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant_gregor_center": {"name": "GREGoR_R03_GRU_20250612_stg_participant_gregor_center", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant_gregor_center", "block_contents": "GREGOR project center identifier"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant_internal_project_id": {"name": "GREGoR_R03_GRU_20250612_stg_participant_internal_project_id", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant_internal_project_id", "block_contents": "Internal project identifier"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant_maternal_id": {"name": "GREGoR_R03_GRU_20250612_stg_participant_maternal_id", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant_maternal_id", "block_contents": "Maternal ID (0 if unknown)"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant_missing_variant_case": {"name": "GREGoR_R03_GRU_20250612_stg_participant_missing_variant_case", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant_missing_variant_case", "block_contents": "Indicates if the participant is a missing variant case"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant_paternal_id": {"name": "GREGoR_R03_GRU_20250612_stg_participant_paternal_id", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant_paternal_id", "block_contents": "Paternal ID (0 if unknown)"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant_phenotype_description": {"name": "GREGoR_R03_GRU_20250612_stg_participant_phenotype_description", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant_phenotype_description", "block_contents": "Description of phenotype"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant_pmid_id": {"name": "GREGoR_R03_GRU_20250612_stg_participant_pmid_id", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant_pmid_id", "block_contents": "PMID of a related publication or report"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant_prior_testing": {"name": "GREGoR_R03_GRU_20250612_stg_participant_prior_testing", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant_prior_testing", "block_contents": "Indicates whether prior genetic testing was conducted"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant_proband_relationship": {"name": "GREGoR_R03_GRU_20250612_stg_participant_proband_relationship", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant_proband_relationship", "block_contents": "Relationship to self (usually 'Self')"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant_proband_relationship_detail": {"name": "GREGoR_R03_GRU_20250612_stg_participant_proband_relationship_detail", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant_proband_relationship_detail", "block_contents": "Further detail on relationship to self"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant_reported_ethnicity": {"name": "GREGoR_R03_GRU_20250612_stg_participant_reported_ethnicity", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant_reported_ethnicity", "block_contents": "Ethnicity reported by participant or caregiver"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant_reported_race": {"name": "GREGoR_R03_GRU_20250612_stg_participant_reported_race", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant_reported_race", "block_contents": "Race reported by participant or caregiver"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant_sex": {"name": "GREGoR_R03_GRU_20250612_stg_participant_sex", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant_sex", "block_contents": "Reported biological sex"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant_sex_detail": {"name": "GREGoR_R03_GRU_20250612_stg_participant_sex_detail", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant_sex_detail", "block_contents": "Additional detail about sex or gender"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant_solve_status": {"name": "GREGoR_R03_GRU_20250612_stg_participant_solve_status", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant_solve_status", "block_contents": "Status of diagnostic resolution"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant_twin_id": {"name": "GREGoR_R03_GRU_20250612_stg_participant_twin_id", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant_twin_id", "block_contents": "Identifier for twin if applicable"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant_ingest_provenance": {"name": "GREGoR_R03_GRU_20250612_stg_participant_ingest_provenance", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant_ingest_provenance", "block_contents": "nan"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_phenotype_description": {"name": "GREGoR_R03_GRU_20250612_phenotype_description", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_phenotype_description", "block_contents": "Model for GREGoR_R03_GRU_20250612_phenotype."}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_phenotype_phenotype_id": {"name": "GREGoR_R03_GRU_20250612_phenotype_phenotype_id", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_phenotype_phenotype_id", "block_contents": "Unique identifier for the phenotype record"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_phenotype_additional_details": {"name": "GREGoR_R03_GRU_20250612_phenotype_additional_details", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_phenotype_additional_details", "block_contents": "Free text field for extra phenotype information"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_phenotype_additional_modifiers": {"name": "GREGoR_R03_GRU_20250612_phenotype_additional_modifiers", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_phenotype_additional_modifiers", "block_contents": "Modifiers that qualify the phenotype term"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_phenotype_onset_age_range": {"name": "GREGoR_R03_GRU_20250612_phenotype_onset_age_range", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_phenotype_onset_age_range", "block_contents": "Age range when the phenotype was observed"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_phenotype_ontology": {"name": "GREGoR_R03_GRU_20250612_phenotype_ontology", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_phenotype_ontology", "block_contents": "Ontology used for the phenotype term"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_phenotype_participant_id": {"name": "GREGoR_R03_GRU_20250612_phenotype_participant_id", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_phenotype_participant_id", "block_contents": "Participant ID associated with the phenotype record"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_phenotype_presence": {"name": "GREGoR_R03_GRU_20250612_phenotype_presence", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_phenotype_presence", "block_contents": "Indicates if the phenotype is present or absent"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_phenotype_syndromic": {"name": "GREGoR_R03_GRU_20250612_phenotype_syndromic", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_phenotype_syndromic", "block_contents": "nan"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_phenotype_term_id": {"name": "GREGoR_R03_GRU_20250612_phenotype_term_id", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_phenotype_term_id", "block_contents": "Ontology identifier for the phenotype term"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype_description": {"name": "GREGoR_R03_GRU_20250612_stg_phenotype_description", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype_description", "block_contents": "Model for GREGoR_R03_GRU_20250612_stg_phenotype."}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype_phenotype_id": {"name": "GREGoR_R03_GRU_20250612_stg_phenotype_phenotype_id", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype_phenotype_id", "block_contents": "Unique identifier for the phenotype record"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype_additional_details": {"name": "GREGoR_R03_GRU_20250612_stg_phenotype_additional_details", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype_additional_details", "block_contents": "Free text field for extra phenotype information"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype_additional_modifiers": {"name": "GREGoR_R03_GRU_20250612_stg_phenotype_additional_modifiers", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype_additional_modifiers", "block_contents": "Modifiers that qualify the phenotype term"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype_onset_age_range": {"name": "GREGoR_R03_GRU_20250612_stg_phenotype_onset_age_range", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype_onset_age_range", "block_contents": "Age range when the phenotype was observed"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype_ontology": {"name": "GREGoR_R03_GRU_20250612_stg_phenotype_ontology", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype_ontology", "block_contents": "Ontology used for the phenotype term"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype_participant_id": {"name": "GREGoR_R03_GRU_20250612_stg_phenotype_participant_id", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype_participant_id", "block_contents": "Participant ID associated with the phenotype record"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype_presence": {"name": "GREGoR_R03_GRU_20250612_stg_phenotype_presence", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype_presence", "block_contents": "Indicates if the phenotype is present or absent"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype_syndromic": {"name": "GREGoR_R03_GRU_20250612_stg_phenotype_syndromic", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype_syndromic", "block_contents": "nan"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype_term_id": {"name": "GREGoR_R03_GRU_20250612_stg_phenotype_term_id", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype_term_id", "block_contents": "Ontology identifier for the phenotype term"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_experiment_description": {"name": "GREGoR_R03_GRU_20250612_experiment_description", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_experiment_description", "block_contents": "Model for GREGoR_R03_GRU_20250612_experiment."}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_experiment_experiment_id": {"name": "GREGoR_R03_GRU_20250612_experiment_experiment_id", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_experiment_experiment_id", "block_contents": "table_name.experiment_id_in_table"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_experiment_table_name": {"name": "GREGoR_R03_GRU_20250612_experiment_table_name", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_experiment_table_name", "block_contents": "nan"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_experiment_id_in_table": {"name": "GREGoR_R03_GRU_20250612_experiment_id_in_table", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_experiment_id_in_table", "block_contents": "nan"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_experiment_participant_id": {"name": "GREGoR_R03_GRU_20250612_experiment_participant_id", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_experiment_participant_id", "block_contents": "participant.participant_id"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_experiment_description": {"name": "GREGoR_R03_GRU_20250612_stg_experiment_description", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_experiment_description", "block_contents": "Model for GREGoR_R03_GRU_20250612_stg_experiment."}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_experiment_experiment_id": {"name": "GREGoR_R03_GRU_20250612_stg_experiment_experiment_id", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_experiment_experiment_id", "block_contents": "table_name.experiment_id_in_table"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_experiment_table_name": {"name": "GREGoR_R03_GRU_20250612_stg_experiment_table_name", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_experiment_table_name", "block_contents": "nan"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_experiment_id_in_table": {"name": "GREGoR_R03_GRU_20250612_stg_experiment_id_in_table", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_experiment_id_in_table", "block_contents": "nan"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_experiment_participant_id": {"name": "GREGoR_R03_GRU_20250612_stg_experiment_participant_id", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_experiment_participant_id", "block_contents": "participant.participant_id"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_experiment_ingest_provenance": {"name": "GREGoR_R03_GRU_20250612_experiment_ingest_provenance", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_experiment_ingest_provenance", "block_contents": "nan"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_experiment_ingest_provenance": {"name": "GREGoR_R03_GRU_20250612_stg_experiment_ingest_provenance", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_experiment_ingest_provenance", "block_contents": "nan"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_anvil_project_description": {"name": "GREGoR_R03_GRU_20250612_anvil_project_description", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_anvil_project_description", "block_contents": "Model for GREGoR_R03_GRU_20250612_anvil_project."}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_anvil_project_project_id": {"name": "GREGoR_R03_GRU_20250612_anvil_project_project_id", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_anvil_project_project_id", "block_contents": "nan"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_anvil_project_funded_by": {"name": "GREGoR_R03_GRU_20250612_anvil_project_funded_by", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_anvil_project_funded_by", "block_contents": "nan"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_anvil_project_generated_dataset_id": {"name": "GREGoR_R03_GRU_20250612_anvil_project_generated_dataset_id", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_anvil_project_generated_dataset_id", "block_contents": "nan"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_anvil_project_principal_investigator": {"name": "GREGoR_R03_GRU_20250612_anvil_project_principal_investigator", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_anvil_project_principal_investigator", "block_contents": "nan"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_anvil_project_title": {"name": "GREGoR_R03_GRU_20250612_anvil_project_title", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_anvil_project_title", "block_contents": "nan"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_anvil_project_registered_identifier": {"name": "GREGoR_R03_GRU_20250612_anvil_project_registered_identifier", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_anvil_project_registered_identifier", "block_contents": "nan"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_anvil_project_source_datarepo_row_ids": {"name": "GREGoR_R03_GRU_20250612_anvil_project_source_datarepo_row_ids", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_anvil_project_source_datarepo_row_ids", "block_contents": "nan"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_anvil_project_description": {"name": "GREGoR_R03_GRU_20250612_stg_anvil_project_description", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_anvil_project_description", "block_contents": "Model for GREGoR_R03_GRU_20250612_stg_anvil_project."}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_anvil_project_project_id": {"name": "GREGoR_R03_GRU_20250612_stg_anvil_project_project_id", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_anvil_project_project_id", "block_contents": "nan"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_anvil_project_funded_by": {"name": "GREGoR_R03_GRU_20250612_stg_anvil_project_funded_by", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_anvil_project_funded_by", "block_contents": "nan"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_anvil_project_generated_dataset_id": {"name": "GREGoR_R03_GRU_20250612_stg_anvil_project_generated_dataset_id", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_anvil_project_generated_dataset_id", "block_contents": "nan"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_anvil_project_principal_investigator": {"name": "GREGoR_R03_GRU_20250612_stg_anvil_project_principal_investigator", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_anvil_project_principal_investigator", "block_contents": "nan"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_anvil_project_title": {"name": "GREGoR_R03_GRU_20250612_stg_anvil_project_title", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_anvil_project_title", "block_contents": "nan"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_anvil_project_registered_identifier": {"name": "GREGoR_R03_GRU_20250612_stg_anvil_project_registered_identifier", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_anvil_project_registered_identifier", "block_contents": "nan"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_anvil_project_source_datarepo_row_ids": {"name": "GREGoR_R03_GRU_20250612_stg_anvil_project_source_datarepo_row_ids", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_anvil_project_source_datarepo_row_ids", "block_contents": "nan"}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_participant": {"name": "GREGoR_R03_GRU_20250612_participant", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/model_descriptions.md", "original_file_path": "models/docs/model_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_participant", "block_contents": "Model for GREGoR_R03_GRU_20250612_participant."}, "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant": {"name": "GREGoR_R03_GRU_20250612_stg_participant", "resource_type": "doc", "package_name": "GREGoR_R03_GRU_20250612", "path": "docs/model_descriptions.md", "original_file_path": "models/docs/model_descriptions.md", "unique_id": "doc.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "block_contents": "Model for GREGoR_R03_GRU_20250612_stg_participant."}, "doc.cmg_bh.sample_description": {"name": "sample_description", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.sample_description", "block_contents": "Model for sample."}, "doc.cmg_bh.sample_sample_id": {"name": "sample_sample_id", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.sample_sample_id", "block_contents": "None"}, "doc.cmg_bh.sample_bai": {"name": "sample_bai", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.sample_bai", "block_contents": "None"}, "doc.cmg_bh.sample_bai_md5": {"name": "sample_bai_md5", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.sample_bai_md5", "block_contents": "None"}, "doc.cmg_bh.sample_bam": {"name": "sample_bam", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.sample_bam", "block_contents": "None"}, "doc.cmg_bh.sample_bam_md5": {"name": "sample_bam_md5", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.sample_bam_md5", "block_contents": "None"}, "doc.cmg_bh.sample_subject_id": {"name": "sample_subject_id", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.sample_subject_id", "block_contents": "None"}, "doc.cmg_bh.sample_crai": {"name": "sample_crai", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.sample_crai", "block_contents": "None"}, "doc.cmg_bh.sample_cram_md5": {"name": "sample_cram_md5", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.sample_cram_md5", "block_contents": "None"}, "doc.cmg_bh.sample_ingest_provenance": {"name": "sample_ingest_provenance", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.sample_ingest_provenance", "block_contents": "None"}, "doc.cmg_bh.sample_submission_batch": {"name": "sample_submission_batch", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.sample_submission_batch", "block_contents": "None"}, "doc.cmg_bh.sample_dbgap_sample_id": {"name": "sample_dbgap_sample_id", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.sample_dbgap_sample_id", "block_contents": "None"}, "doc.cmg_bh.sample_sample_provider": {"name": "sample_sample_provider", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.sample_sample_provider", "block_contents": "None"}, "doc.cmg_bh.sample_sample_source": {"name": "sample_sample_source", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.sample_sample_source", "block_contents": "None"}, "doc.cmg_bh.sample_tissue_affected_status": {"name": "sample_tissue_affected_status", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.sample_tissue_affected_status", "block_contents": "None"}, "doc.cmg_bh.cmg_bh_stg_sample_description": {"name": "cmg_bh_stg_sample_description", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.cmg_bh_stg_sample_description", "block_contents": "Model for cmg_bh_stg_sample."}, "doc.cmg_bh.cmg_bh_stg_sample_sample_id": {"name": "cmg_bh_stg_sample_sample_id", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.cmg_bh_stg_sample_sample_id", "block_contents": "None"}, "doc.cmg_bh.cmg_bh_stg_sample_bai": {"name": "cmg_bh_stg_sample_bai", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.cmg_bh_stg_sample_bai", "block_contents": "None"}, "doc.cmg_bh.cmg_bh_stg_sample_bai_md5": {"name": "cmg_bh_stg_sample_bai_md5", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.cmg_bh_stg_sample_bai_md5", "block_contents": "None"}, "doc.cmg_bh.cmg_bh_stg_sample_bam": {"name": "cmg_bh_stg_sample_bam", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.cmg_bh_stg_sample_bam", "block_contents": "None"}, "doc.cmg_bh.cmg_bh_stg_sample_bam_md5": {"name": "cmg_bh_stg_sample_bam_md5", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.cmg_bh_stg_sample_bam_md5", "block_contents": "None"}, "doc.cmg_bh.cmg_bh_stg_sample_subject_id": {"name": "cmg_bh_stg_sample_subject_id", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.cmg_bh_stg_sample_subject_id", "block_contents": "None"}, "doc.cmg_bh.cmg_bh_stg_sample_crai": {"name": "cmg_bh_stg_sample_crai", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.cmg_bh_stg_sample_crai", "block_contents": "None"}, "doc.cmg_bh.cmg_bh_stg_sample_cram_md5": {"name": "cmg_bh_stg_sample_cram_md5", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.cmg_bh_stg_sample_cram_md5", "block_contents": "None"}, "doc.cmg_bh.cmg_bh_stg_sample_ingest_provenance": {"name": "cmg_bh_stg_sample_ingest_provenance", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.cmg_bh_stg_sample_ingest_provenance", "block_contents": "None"}, "doc.cmg_bh.cmg_bh_stg_sample_submission_batch": {"name": "cmg_bh_stg_sample_submission_batch", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.cmg_bh_stg_sample_submission_batch", "block_contents": "None"}, "doc.cmg_bh.cmg_bh_stg_sample_dbgap_sample_id": {"name": "cmg_bh_stg_sample_dbgap_sample_id", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.cmg_bh_stg_sample_dbgap_sample_id", "block_contents": "None"}, "doc.cmg_bh.cmg_bh_stg_sample_sample_provider": {"name": "cmg_bh_stg_sample_sample_provider", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.cmg_bh_stg_sample_sample_provider", "block_contents": "None"}, "doc.cmg_bh.cmg_bh_stg_sample_sample_source": {"name": "cmg_bh_stg_sample_sample_source", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.cmg_bh_stg_sample_sample_source", "block_contents": "None"}, "doc.cmg_bh.cmg_bh_stg_sample_tissue_affected_status": {"name": "cmg_bh_stg_sample_tissue_affected_status", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.cmg_bh_stg_sample_tissue_affected_status", "block_contents": "None"}, "doc.cmg_bh.subject_description": {"name": "subject_description", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.subject_description", "block_contents": "Model for subject."}, "doc.cmg_bh.subject_subject_id": {"name": "subject_subject_id", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.subject_subject_id", "block_contents": "None"}, "doc.cmg_bh.subject_submission_batch": {"name": "subject_submission_batch", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.subject_submission_batch", "block_contents": "None"}, "doc.cmg_bh.subject_affected_status": {"name": "subject_affected_status", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.subject_affected_status", "block_contents": "None"}, "doc.cmg_bh.subject_ancestry": {"name": "subject_ancestry", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.subject_ancestry", "block_contents": "None"}, "doc.cmg_bh.subject_dbgap_study_id": {"name": "subject_dbgap_study_id", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.subject_dbgap_study_id", "block_contents": "None"}, "doc.cmg_bh.subject_dbgap_submission": {"name": "subject_dbgap_submission", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.subject_dbgap_submission", "block_contents": "None"}, "doc.cmg_bh.subject_family_id": {"name": "subject_family_id", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.subject_family_id", "block_contents": "None"}, "doc.cmg_bh.subject_family_relationship": {"name": "subject_family_relationship", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.subject_family_relationship", "block_contents": "None"}, "doc.cmg_bh.subject_hpo_present": {"name": "subject_hpo_present", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.subject_hpo_present", "block_contents": "None"}, "doc.cmg_bh.subject_maternal_id": {"name": "subject_maternal_id", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.subject_maternal_id", "block_contents": "None"}, "doc.cmg_bh.subject_multiple_datasets": {"name": "subject_multiple_datasets", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.subject_multiple_datasets", "block_contents": "None"}, "doc.cmg_bh.subject_paternal_id": {"name": "subject_paternal_id", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.subject_paternal_id", "block_contents": "None"}, "doc.cmg_bh.subject_phenotype_description": {"name": "subject_phenotype_description", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.subject_phenotype_description", "block_contents": "None"}, "doc.cmg_bh.subject_phenotype_group": {"name": "subject_phenotype_group", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.subject_phenotype_group", "block_contents": "None"}, "doc.cmg_bh.subject_project_investigator": {"name": "subject_project_investigator", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.subject_project_investigator", "block_contents": "None"}, "doc.cmg_bh.subject_sex": {"name": "subject_sex", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.subject_sex", "block_contents": "None"}, "doc.cmg_bh.subject_solve_state": {"name": "subject_solve_state", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.subject_solve_state", "block_contents": "None"}, "doc.cmg_bh.subject_disease_id": {"name": "subject_disease_id", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.subject_disease_id", "block_contents": "None"}, "doc.cmg_bh.subject_ancestry_detail": {"name": "subject_ancestry_detail", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.subject_ancestry_detail", "block_contents": "None"}, "doc.cmg_bh.subject_hpo_absent": {"name": "subject_hpo_absent", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.subject_hpo_absent", "block_contents": "None"}, "doc.cmg_bh.subject_twin_id": {"name": "subject_twin_id", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.subject_twin_id", "block_contents": "None"}, "doc.cmg_bh.subject_ingest_provenance": {"name": "subject_ingest_provenance", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.subject_ingest_provenance", "block_contents": "None"}, "doc.cmg_bh.cmg_bh_stg_subject_description": {"name": "cmg_bh_stg_subject_description", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.cmg_bh_stg_subject_description", "block_contents": "Model for cmg_bh_stg_subject."}, "doc.cmg_bh.cmg_bh_stg_subject_subject_id": {"name": "cmg_bh_stg_subject_subject_id", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.cmg_bh_stg_subject_subject_id", "block_contents": "None"}, "doc.cmg_bh.cmg_bh_stg_subject_submission_batch": {"name": "cmg_bh_stg_subject_submission_batch", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.cmg_bh_stg_subject_submission_batch", "block_contents": "None"}, "doc.cmg_bh.cmg_bh_stg_subject_affected_status": {"name": "cmg_bh_stg_subject_affected_status", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.cmg_bh_stg_subject_affected_status", "block_contents": "None"}, "doc.cmg_bh.cmg_bh_stg_subject_ancestry": {"name": "cmg_bh_stg_subject_ancestry", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.cmg_bh_stg_subject_ancestry", "block_contents": "None"}, "doc.cmg_bh.cmg_bh_stg_subject_dbgap_study_id": {"name": "cmg_bh_stg_subject_dbgap_study_id", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.cmg_bh_stg_subject_dbgap_study_id", "block_contents": "None"}, "doc.cmg_bh.cmg_bh_stg_subject_dbgap_submission": {"name": "cmg_bh_stg_subject_dbgap_submission", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.cmg_bh_stg_subject_dbgap_submission", "block_contents": "None"}, "doc.cmg_bh.cmg_bh_stg_subject_family_id": {"name": "cmg_bh_stg_subject_family_id", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.cmg_bh_stg_subject_family_id", "block_contents": "None"}, "doc.cmg_bh.cmg_bh_stg_subject_family_relationship": {"name": "cmg_bh_stg_subject_family_relationship", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.cmg_bh_stg_subject_family_relationship", "block_contents": "None"}, "doc.cmg_bh.cmg_bh_stg_subject_hpo_present": {"name": "cmg_bh_stg_subject_hpo_present", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.cmg_bh_stg_subject_hpo_present", "block_contents": "None"}, "doc.cmg_bh.cmg_bh_stg_subject_maternal_id": {"name": "cmg_bh_stg_subject_maternal_id", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.cmg_bh_stg_subject_maternal_id", "block_contents": "None"}, "doc.cmg_bh.cmg_bh_stg_subject_multiple_datasets": {"name": "cmg_bh_stg_subject_multiple_datasets", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.cmg_bh_stg_subject_multiple_datasets", "block_contents": "None"}, "doc.cmg_bh.cmg_bh_stg_subject_paternal_id": {"name": "cmg_bh_stg_subject_paternal_id", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.cmg_bh_stg_subject_paternal_id", "block_contents": "None"}, "doc.cmg_bh.cmg_bh_stg_subject_phenotype_description": {"name": "cmg_bh_stg_subject_phenotype_description", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.cmg_bh_stg_subject_phenotype_description", "block_contents": "None"}, "doc.cmg_bh.cmg_bh_stg_subject_phenotype_group": {"name": "cmg_bh_stg_subject_phenotype_group", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.cmg_bh_stg_subject_phenotype_group", "block_contents": "None"}, "doc.cmg_bh.cmg_bh_stg_subject_project_investigator": {"name": "cmg_bh_stg_subject_project_investigator", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.cmg_bh_stg_subject_project_investigator", "block_contents": "None"}, "doc.cmg_bh.cmg_bh_stg_subject_sex": {"name": "cmg_bh_stg_subject_sex", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.cmg_bh_stg_subject_sex", "block_contents": "None"}, "doc.cmg_bh.cmg_bh_stg_subject_solve_state": {"name": "cmg_bh_stg_subject_solve_state", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.cmg_bh_stg_subject_solve_state", "block_contents": "None"}, "doc.cmg_bh.cmg_bh_stg_subject_disease_id": {"name": "cmg_bh_stg_subject_disease_id", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.cmg_bh_stg_subject_disease_id", "block_contents": "None"}, "doc.cmg_bh.cmg_bh_stg_subject_ancestry_detail": {"name": "cmg_bh_stg_subject_ancestry_detail", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.cmg_bh_stg_subject_ancestry_detail", "block_contents": "None"}, "doc.cmg_bh.cmg_bh_stg_subject_hpo_absent": {"name": "cmg_bh_stg_subject_hpo_absent", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.cmg_bh_stg_subject_hpo_absent", "block_contents": "None"}, "doc.cmg_bh.cmg_bh_stg_subject_twin_id": {"name": "cmg_bh_stg_subject_twin_id", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.cmg_bh_stg_subject_twin_id", "block_contents": "None"}, "doc.cmg_bh.cmg_bh_stg_subject_ingest_provenance": {"name": "cmg_bh_stg_subject_ingest_provenance", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.cmg_bh.cmg_bh_stg_subject_ingest_provenance", "block_contents": "None"}, "doc.cmg_bh.sample": {"name": "sample", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/model_descriptions.md", "original_file_path": "models/docs/model_descriptions.md", "unique_id": "doc.cmg_bh.sample", "block_contents": "Model for sample."}, "doc.cmg_bh.cmg_bh_stg_sample": {"name": "cmg_bh_stg_sample", "resource_type": "doc", "package_name": "cmg_bh", "path": "docs/model_descriptions.md", "original_file_path": "models/docs/model_descriptions.md", "unique_id": "doc.cmg_bh.cmg_bh_stg_sample", "block_contents": "Model for cmg_bh_stg_sample."}, "doc.GWAS.GWAS_BMI_DS_20201028_description": {"name": "GWAS_BMI_DS_20201028_description", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_BMI_DS_20201028_description", "block_contents": "Model for GWAS_BMI_DS_20201028."}, "doc.GWAS.GWAS_BMI_DS_20201028_subject_id": {"name": "GWAS_BMI_DS_20201028_subject_id", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_BMI_DS_20201028_subject_id", "block_contents": "None"}, "doc.GWAS.GWAS_BMI_DS_20201028_bmi_observation_age": {"name": "GWAS_BMI_DS_20201028_bmi_observation_age", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_BMI_DS_20201028_bmi_observation_age", "block_contents": "None"}, "doc.GWAS.GWAS_BMI_DS_20201028_weight": {"name": "GWAS_BMI_DS_20201028_weight", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_BMI_DS_20201028_weight", "block_contents": "None"}, "doc.GWAS.GWAS_BMI_DS_20201028_height": {"name": "GWAS_BMI_DS_20201028_height", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_BMI_DS_20201028_height", "block_contents": "None"}, "doc.GWAS.GWAS_BMI_DS_20201028_body_mass_index": {"name": "GWAS_BMI_DS_20201028_body_mass_index", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_BMI_DS_20201028_body_mass_index", "block_contents": "None"}, "doc.GWAS.GWAS_BMI_DS_20201028_visit_number": {"name": "GWAS_BMI_DS_20201028_visit_number", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_BMI_DS_20201028_visit_number", "block_contents": "None"}, "doc.GWAS.GWAS_stg_bmi_description": {"name": "GWAS_stg_bmi_description", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_stg_bmi_description", "block_contents": "Model for GWAS_stg_bmi."}, "doc.GWAS.GWAS_stg_bmi_subject_id": {"name": "GWAS_stg_bmi_subject_id", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_stg_bmi_subject_id", "block_contents": "None"}, "doc.GWAS.GWAS_stg_bmi_bmi_observation_age": {"name": "GWAS_stg_bmi_bmi_observation_age", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_stg_bmi_bmi_observation_age", "block_contents": "None"}, "doc.GWAS.GWAS_stg_bmi_weight": {"name": "GWAS_stg_bmi_weight", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_stg_bmi_weight", "block_contents": "None"}, "doc.GWAS.GWAS_stg_bmi_height": {"name": "GWAS_stg_bmi_height", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_stg_bmi_height", "block_contents": "None"}, "doc.GWAS.GWAS_stg_bmi_body_mass_index": {"name": "GWAS_stg_bmi_body_mass_index", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_stg_bmi_body_mass_index", "block_contents": "None"}, "doc.GWAS.GWAS_stg_bmi_visit_number": {"name": "GWAS_stg_bmi_visit_number", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_stg_bmi_visit_number", "block_contents": "None"}, "doc.GWAS.GWAS_Demographics_DS_20201109_description": {"name": "GWAS_Demographics_DS_20201109_description", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_Demographics_DS_20201109_description", "block_contents": "Model for GWAS_Demographics_DS_20201109."}, "doc.GWAS.GWAS_Demographics_DS_20201109_subject_id": {"name": "GWAS_Demographics_DS_20201109_subject_id", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_Demographics_DS_20201109_subject_id", "block_contents": "None"}, "doc.GWAS.GWAS_Demographics_DS_20201109_decade_birth": {"name": "GWAS_Demographics_DS_20201109_decade_birth", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_Demographics_DS_20201109_decade_birth", "block_contents": "None"}, "doc.GWAS.GWAS_Demographics_DS_20201109_year_birth": {"name": "GWAS_Demographics_DS_20201109_year_birth", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_Demographics_DS_20201109_year_birth", "block_contents": "None"}, "doc.GWAS.GWAS_Demographics_DS_20201109_sex": {"name": "GWAS_Demographics_DS_20201109_sex", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_Demographics_DS_20201109_sex", "block_contents": "None"}, "doc.GWAS.GWAS_Demographics_DS_20201109_race": {"name": "GWAS_Demographics_DS_20201109_race", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_Demographics_DS_20201109_race", "block_contents": "None"}, "doc.GWAS.GWAS_Demographics_DS_20201109_ethnicity": {"name": "GWAS_Demographics_DS_20201109_ethnicity", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_Demographics_DS_20201109_ethnicity", "block_contents": "None"}, "doc.GWAS.GWAS_stg_demographics_description": {"name": "GWAS_stg_demographics_description", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_stg_demographics_description", "block_contents": "Model for GWAS_stg_demographics."}, "doc.GWAS.GWAS_stg_demographics_subject_id": {"name": "GWAS_stg_demographics_subject_id", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_stg_demographics_subject_id", "block_contents": "None"}, "doc.GWAS.GWAS_stg_demographics_decade_birth": {"name": "GWAS_stg_demographics_decade_birth", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_stg_demographics_decade_birth", "block_contents": "None"}, "doc.GWAS.GWAS_stg_demographics_year_birth": {"name": "GWAS_stg_demographics_year_birth", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_stg_demographics_year_birth", "block_contents": "None"}, "doc.GWAS.GWAS_stg_demographics_sex": {"name": "GWAS_stg_demographics_sex", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_stg_demographics_sex", "block_contents": "None"}, "doc.GWAS.GWAS_stg_demographics_race": {"name": "GWAS_stg_demographics_race", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_stg_demographics_race", "block_contents": "None"}, "doc.GWAS.GWAS_stg_demographics_ethnicity": {"name": "GWAS_stg_demographics_ethnicity", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_stg_demographics_ethnicity", "block_contents": "None"}, "doc.GWAS.GWAS_Pedigree_DS_20200512_description": {"name": "GWAS_Pedigree_DS_20200512_description", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_Pedigree_DS_20200512_description", "block_contents": "Model for GWAS_Pedigree_DS_20200512."}, "doc.GWAS.GWAS_Pedigree_DS_20200512_family_id": {"name": "GWAS_Pedigree_DS_20200512_family_id", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_Pedigree_DS_20200512_family_id", "block_contents": "None"}, "doc.GWAS.GWAS_Pedigree_DS_20200512_subject_id": {"name": "GWAS_Pedigree_DS_20200512_subject_id", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_Pedigree_DS_20200512_subject_id", "block_contents": "None"}, "doc.GWAS.GWAS_Pedigree_DS_20200512_mother": {"name": "GWAS_Pedigree_DS_20200512_mother", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_Pedigree_DS_20200512_mother", "block_contents": "None"}, "doc.GWAS.GWAS_Pedigree_DS_20200512_father": {"name": "GWAS_Pedigree_DS_20200512_father", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_Pedigree_DS_20200512_father", "block_contents": "None"}, "doc.GWAS.GWAS_Pedigree_DS_20200512_sex": {"name": "GWAS_Pedigree_DS_20200512_sex", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_Pedigree_DS_20200512_sex", "block_contents": "None"}, "doc.GWAS.GWAS_Pedigree_DS_20200512_mz_twin_id": {"name": "GWAS_Pedigree_DS_20200512_mz_twin_id", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_Pedigree_DS_20200512_mz_twin_id", "block_contents": "None"}, "doc.GWAS.GWAS_stg_pedigree_description": {"name": "GWAS_stg_pedigree_description", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_stg_pedigree_description", "block_contents": "Model for GWAS_stg_pedigree."}, "doc.GWAS.GWAS_stg_pedigree_family_id": {"name": "GWAS_stg_pedigree_family_id", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_stg_pedigree_family_id", "block_contents": "None"}, "doc.GWAS.GWAS_stg_pedigree_subject_id": {"name": "GWAS_stg_pedigree_subject_id", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_stg_pedigree_subject_id", "block_contents": "None"}, "doc.GWAS.GWAS_stg_pedigree_mother": {"name": "GWAS_stg_pedigree_mother", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_stg_pedigree_mother", "block_contents": "None"}, "doc.GWAS.GWAS_stg_pedigree_father": {"name": "GWAS_stg_pedigree_father", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_stg_pedigree_father", "block_contents": "None"}, "doc.GWAS.GWAS_stg_pedigree_sex": {"name": "GWAS_stg_pedigree_sex", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_stg_pedigree_sex", "block_contents": "None"}, "doc.GWAS.GWAS_stg_pedigree_mz_twin_id": {"name": "GWAS_stg_pedigree_mz_twin_id", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_stg_pedigree_mz_twin_id", "block_contents": "None"}, "doc.GWAS.GWAS_Phecode_DS_20201027_description": {"name": "GWAS_Phecode_DS_20201027_description", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_Phecode_DS_20201027_description", "block_contents": "Model for GWAS_Phecode_DS_20201027."}, "doc.GWAS.GWAS_Phecode_DS_20201027_subject_id": {"name": "GWAS_Phecode_DS_20201027_subject_id", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_Phecode_DS_20201027_subject_id", "block_contents": "None"}, "doc.GWAS.GWAS_Phecode_DS_20201027_age_at_observation": {"name": "GWAS_Phecode_DS_20201027_age_at_observation", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_Phecode_DS_20201027_age_at_observation", "block_contents": "None"}, "doc.GWAS.GWAS_Phecode_DS_20201027_icd_code": {"name": "GWAS_Phecode_DS_20201027_icd_code", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_Phecode_DS_20201027_icd_code", "block_contents": "None"}, "doc.GWAS.GWAS_Phecode_DS_20201027_icd_flag": {"name": "GWAS_Phecode_DS_20201027_icd_flag", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_Phecode_DS_20201027_icd_flag", "block_contents": "None"}, "doc.GWAS.GWAS_Phecode_DS_20201027_phecode": {"name": "GWAS_Phecode_DS_20201027_phecode", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_Phecode_DS_20201027_phecode", "block_contents": "None"}, "doc.GWAS.GWAS_stg_phecode_description": {"name": "GWAS_stg_phecode_description", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_stg_phecode_description", "block_contents": "Model for GWAS_stg_phecode."}, "doc.GWAS.GWAS_stg_phecode_subject_id": {"name": "GWAS_stg_phecode_subject_id", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_stg_phecode_subject_id", "block_contents": "None"}, "doc.GWAS.GWAS_stg_phecode_age_at_observation": {"name": "GWAS_stg_phecode_age_at_observation", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_stg_phecode_age_at_observation", "block_contents": "None"}, "doc.GWAS.GWAS_stg_phecode_icd_code": {"name": "GWAS_stg_phecode_icd_code", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_stg_phecode_icd_code", "block_contents": "None"}, "doc.GWAS.GWAS_stg_phecode_icd_flag": {"name": "GWAS_stg_phecode_icd_flag", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_stg_phecode_icd_flag", "block_contents": "None"}, "doc.GWAS.GWAS_stg_phecode_phecode": {"name": "GWAS_stg_phecode_phecode", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_stg_phecode_phecode", "block_contents": "None"}, "doc.GWAS.GWAS_SampleAttributes_DS_20201027_description": {"name": "GWAS_SampleAttributes_DS_20201027_description", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_SampleAttributes_DS_20201027_description", "block_contents": "Model for GWAS_SampleAttributes_DS_20201027."}, "doc.GWAS.GWAS_SampleAttributes_DS_20201027_sample_id": {"name": "GWAS_SampleAttributes_DS_20201027_sample_id", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_SampleAttributes_DS_20201027_sample_id", "block_contents": "None"}, "doc.GWAS.GWAS_SampleAttributes_DS_20201027_analyte_type": {"name": "GWAS_SampleAttributes_DS_20201027_analyte_type", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_SampleAttributes_DS_20201027_analyte_type", "block_contents": "None"}, "doc.GWAS.GWAS_stg_sampleattributes_description": {"name": "GWAS_stg_sampleattributes_description", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_stg_sampleattributes_description", "block_contents": "Model for GWAS_stg_sampleattributes."}, "doc.GWAS.GWAS_stg_sampleattributes_sample_id": {"name": "GWAS_stg_sampleattributes_sample_id", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_stg_sampleattributes_sample_id", "block_contents": "None"}, "doc.GWAS.GWAS_stg_sampleattributes_analyte_type": {"name": "GWAS_stg_sampleattributes_analyte_type", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_stg_sampleattributes_analyte_type", "block_contents": "None"}, "doc.GWAS.GWAS_SampleSubjectMapping_DS_20201027_description": {"name": "GWAS_SampleSubjectMapping_DS_20201027_description", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_SampleSubjectMapping_DS_20201027_description", "block_contents": "Model for GWAS_SampleSubjectMapping_DS_20201027."}, "doc.GWAS.GWAS_SampleSubjectMapping_DS_20201027_subject_id": {"name": "GWAS_SampleSubjectMapping_DS_20201027_subject_id", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_SampleSubjectMapping_DS_20201027_subject_id", "block_contents": "None"}, "doc.GWAS.GWAS_SampleSubjectMapping_DS_20201027_sample_id": {"name": "GWAS_SampleSubjectMapping_DS_20201027_sample_id", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_SampleSubjectMapping_DS_20201027_sample_id", "block_contents": "None"}, "doc.GWAS.GWAS_SampleSubjectMapping_DS_20201027_samp_source": {"name": "GWAS_SampleSubjectMapping_DS_20201027_samp_source", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_SampleSubjectMapping_DS_20201027_samp_source", "block_contents": "None"}, "doc.GWAS.GWAS_SampleSubjectMapping_DS_20201027_source_sampid": {"name": "GWAS_SampleSubjectMapping_DS_20201027_source_sampid", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_SampleSubjectMapping_DS_20201027_source_sampid", "block_contents": "None"}, "doc.GWAS.GWAS_stg_samplesubjectmapping_description": {"name": "GWAS_stg_samplesubjectmapping_description", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_stg_samplesubjectmapping_description", "block_contents": "Model for GWAS_stg_samplesubjectmapping."}, "doc.GWAS.GWAS_stg_samplesubjectmapping_subject_id": {"name": "GWAS_stg_samplesubjectmapping_subject_id", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_stg_samplesubjectmapping_subject_id", "block_contents": "None"}, "doc.GWAS.GWAS_stg_samplesubjectmapping_sample_id": {"name": "GWAS_stg_samplesubjectmapping_sample_id", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_stg_samplesubjectmapping_sample_id", "block_contents": "None"}, "doc.GWAS.GWAS_stg_samplesubjectmapping_samp_source": {"name": "GWAS_stg_samplesubjectmapping_samp_source", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_stg_samplesubjectmapping_samp_source", "block_contents": "None"}, "doc.GWAS.GWAS_stg_samplesubjectmapping_source_sampid": {"name": "GWAS_stg_samplesubjectmapping_source_sampid", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_stg_samplesubjectmapping_source_sampid", "block_contents": "None"}, "doc.GWAS.GWAS_SubjectConsent_DS_20190813_description": {"name": "GWAS_SubjectConsent_DS_20190813_description", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_SubjectConsent_DS_20190813_description", "block_contents": "Model for GWAS_SubjectConsent_DS_20190813."}, "doc.GWAS.GWAS_SubjectConsent_DS_20190813_subject_id": {"name": "GWAS_SubjectConsent_DS_20190813_subject_id", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_SubjectConsent_DS_20190813_subject_id", "block_contents": "None"}, "doc.GWAS.GWAS_SubjectConsent_DS_20190813_consent": {"name": "GWAS_SubjectConsent_DS_20190813_consent", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_SubjectConsent_DS_20190813_consent", "block_contents": "None"}, "doc.GWAS.GWAS_SubjectConsent_DS_20190813_subject_source": {"name": "GWAS_SubjectConsent_DS_20190813_subject_source", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_SubjectConsent_DS_20190813_subject_source", "block_contents": "None"}, "doc.GWAS.GWAS_SubjectConsent_DS_20190813_source_subject_id": {"name": "GWAS_SubjectConsent_DS_20190813_source_subject_id", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_SubjectConsent_DS_20190813_source_subject_id", "block_contents": "None"}, "doc.GWAS.GWAS_stg_subjectconsent_description": {"name": "GWAS_stg_subjectconsent_description", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_stg_subjectconsent_description", "block_contents": "Model for GWAS_stg_subjectconsent."}, "doc.GWAS.GWAS_stg_subjectconsent_subject_id": {"name": "GWAS_stg_subjectconsent_subject_id", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_stg_subjectconsent_subject_id", "block_contents": "None"}, "doc.GWAS.GWAS_stg_subjectconsent_consent": {"name": "GWAS_stg_subjectconsent_consent", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_stg_subjectconsent_consent", "block_contents": "None"}, "doc.GWAS.GWAS_stg_subjectconsent_subject_source": {"name": "GWAS_stg_subjectconsent_subject_source", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_stg_subjectconsent_subject_source", "block_contents": "None"}, "doc.GWAS.GWAS_stg_subjectconsent_source_subject_id": {"name": "GWAS_stg_subjectconsent_source_subject_id", "resource_type": "doc", "package_name": "GWAS", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.GWAS.GWAS_stg_subjectconsent_source_subject_id", "block_contents": "None"}, "doc.GWAS.GWAS_BMI_DS_20201028": {"name": "GWAS_BMI_DS_20201028", "resource_type": "doc", "package_name": "GWAS", "path": "docs/model_descriptions.md", "original_file_path": "models/docs/model_descriptions.md", "unique_id": "doc.GWAS.GWAS_BMI_DS_20201028", "block_contents": "Model for GWAS_BMI_DS_20201028."}, "doc.GWAS.GWAS_stg_bmi": {"name": "GWAS_stg_bmi", "resource_type": "doc", "package_name": "GWAS", "path": "docs/model_descriptions.md", "original_file_path": "models/docs/model_descriptions.md", "unique_id": "doc.GWAS.GWAS_stg_bmi", "block_contents": "Model for GWAS_stg_bmi."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_subjectassertion_description": {"name": "GREGoR_R03_HMB_20250612_ftd_subjectassertion_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_subjectassertion_description", "block_contents": "Model for GREGoR_R03_HMB_20250612_ftd_subjectassertion."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_subjectassertion_assertion_type": {"name": "GREGoR_R03_HMB_20250612_ftd_subjectassertion_assertion_type", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_subjectassertion_assertion_type", "block_contents": "The semantic type of the resource, eg, Condition."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_subjectassertion_age_at_assertion": {"name": "GREGoR_R03_HMB_20250612_ftd_subjectassertion_age_at_assertion", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_subjectassertion_age_at_assertion", "block_contents": "The age in decimal years of the Subject when the assertion was made."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_subjectassertion_age_at_event": {"name": "GREGoR_R03_HMB_20250612_ftd_subjectassertion_age_at_event", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_subjectassertion_age_at_event", "block_contents": "The age in decimal years of the Subject at the time point which the assertion describes, | eg, age of onset or when a measurement was performed."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_subjectassertion_age_at_resolution": {"name": "GREGoR_R03_HMB_20250612_ftd_subjectassertion_age_at_resolution", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_subjectassertion_age_at_resolution", "block_contents": "The age in decimal years of the Subject when the asserted state was resolved."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_subjectassertion_code": {"name": "GREGoR_R03_HMB_20250612_ftd_subjectassertion_code", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_subjectassertion_code", "block_contents": "The structured term defining the meaning of the assertion."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_subjectassertion_display": {"name": "GREGoR_R03_HMB_20250612_ftd_subjectassertion_display", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_subjectassertion_display", "block_contents": "The friendly display string of the coded term"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_subjectassertion_value_code": {"name": "GREGoR_R03_HMB_20250612_ftd_subjectassertion_value_code", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_subjectassertion_value_code", "block_contents": "The structured term defining the value of the assertion."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_subjectassertion_value_display": {"name": "GREGoR_R03_HMB_20250612_ftd_subjectassertion_value_display", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_subjectassertion_value_display", "block_contents": "The friendly display string of the coded term for the value of the assertion."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_subjectassertion_value_number": {"name": "GREGoR_R03_HMB_20250612_ftd_subjectassertion_value_number", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_subjectassertion_value_number", "block_contents": "The numeric value of the assertion."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_subjectassertion_value_units": {"name": "GREGoR_R03_HMB_20250612_ftd_subjectassertion_value_units", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_subjectassertion_value_units", "block_contents": "The structured term defining the units of the value."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_subjectassertion_value_units_display": {"name": "GREGoR_R03_HMB_20250612_ftd_subjectassertion_value_units_display", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_subjectassertion_value_units_display", "block_contents": "The friendly display string of units of the value."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_subjectassertion_has_access_policy": {"name": "GREGoR_R03_HMB_20250612_ftd_subjectassertion_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_subjectassertion_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_subjectassertion_id": {"name": "GREGoR_R03_HMB_20250612_ftd_subjectassertion_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_subjectassertion_id", "block_contents": "ID associated with a class"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_subjectassertion_subject_id": {"name": "GREGoR_R03_HMB_20250612_ftd_subjectassertion_subject_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_subjectassertion_subject_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_file_external_id_description": {"name": "GREGoR_R03_HMB_20250612_ftd_file_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_file_external_id_description", "block_contents": "Model for GREGoR_R03_HMB_20250612_ftd_file_external_id."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_file_external_id_file_id": {"name": "GREGoR_R03_HMB_20250612_ftd_file_external_id_file_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_file_external_id_file_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_file_external_id_external_id": {"name": "GREGoR_R03_HMB_20250612_ftd_file_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_file_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_familymember_external_id_description": {"name": "GREGoR_R03_HMB_20250612_ftd_familymember_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_familymember_external_id_description", "block_contents": "Model for GREGoR_R03_HMB_20250612_ftd_familymember_external_id."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_familymember_external_id_familymember_id": {"name": "GREGoR_R03_HMB_20250612_ftd_familymember_external_id_familymember_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_familymember_external_id_familymember_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_familymember_external_id_external_id": {"name": "GREGoR_R03_HMB_20250612_ftd_familymember_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_familymember_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_filemetadata_description": {"name": "GREGoR_R03_HMB_20250612_ftd_filemetadata_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_filemetadata_description", "block_contents": "Model for GREGoR_R03_HMB_20250612_ftd_filemetadata."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_filemetadata_code": {"name": "GREGoR_R03_HMB_20250612_ftd_filemetadata_code", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_filemetadata_code", "block_contents": "The structured term defining the meaning of the assertion."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_filemetadata_display": {"name": "GREGoR_R03_HMB_20250612_ftd_filemetadata_display", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_filemetadata_display", "block_contents": "The friendly display string of the coded term"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_filemetadata_value_code": {"name": "GREGoR_R03_HMB_20250612_ftd_filemetadata_value_code", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_filemetadata_value_code", "block_contents": "The structured term defining the value of the assertion."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_filemetadata_value_display": {"name": "GREGoR_R03_HMB_20250612_ftd_filemetadata_value_display", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_filemetadata_value_display", "block_contents": "The friendly display string of the coded term for the value of the assertion."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_filemetadata_id": {"name": "GREGoR_R03_HMB_20250612_ftd_filemetadata_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_filemetadata_id", "block_contents": "ID associated with a class"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_subject_description": {"name": "GREGoR_R03_HMB_20250612_ftd_subject_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_subject_description", "block_contents": "Model for GREGoR_R03_HMB_20250612_ftd_subject."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_subject_subject_type": {"name": "GREGoR_R03_HMB_20250612_ftd_subject_subject_type", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_subject_subject_type", "block_contents": "Type of entity this record represents"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_subject_organism_type": {"name": "GREGoR_R03_HMB_20250612_ftd_subject_organism_type", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_subject_organism_type", "block_contents": "Organism Type Label"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_subject_has_access_policy": {"name": "GREGoR_R03_HMB_20250612_ftd_subject_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_subject_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_subject_id": {"name": "GREGoR_R03_HMB_20250612_ftd_subject_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_subject_id", "block_contents": "ID associated with a class"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_subject_has_demographics_id": {"name": "GREGoR_R03_HMB_20250612_ftd_subject_has_demographics_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_subject_has_demographics_id", "block_contents": "A demographic summary of the participant."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_study_external_id_description": {"name": "GREGoR_R03_HMB_20250612_ftd_study_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_study_external_id_description", "block_contents": "Model for GREGoR_R03_HMB_20250612_ftd_study_external_id."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_study_external_id_study_id": {"name": "GREGoR_R03_HMB_20250612_ftd_study_external_id_study_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_study_external_id_study_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_study_external_id_external_id": {"name": "GREGoR_R03_HMB_20250612_ftd_study_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_study_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_subjectassertion_source_data_description": {"name": "GREGoR_R03_HMB_20250612_ftd_subjectassertion_source_data_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_subjectassertion_source_data_description", "block_contents": "Model for GREGoR_R03_HMB_20250612_ftd_subjectassertion_source_data."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_subjectassertion_source_data_subjectassertion_id": {"name": "GREGoR_R03_HMB_20250612_ftd_subjectassertion_source_data_subjectassertion_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_subjectassertion_source_data_subjectassertion_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_subjectassertion_source_data_source_data_id": {"name": "GREGoR_R03_HMB_20250612_ftd_subjectassertion_source_data_source_data_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_subjectassertion_source_data_source_data_id", "block_contents": "The sources from which this assertion was derived"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_family_description": {"name": "GREGoR_R03_HMB_20250612_ftd_family_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_family_description", "block_contents": "Model for GREGoR_R03_HMB_20250612_ftd_family."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_family_family_type": {"name": "GREGoR_R03_HMB_20250612_ftd_family_family_type", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_family_family_type", "block_contents": "Describes the 'type' of study family, eg, trio."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_family_family_description": {"name": "GREGoR_R03_HMB_20250612_ftd_family_family_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_family_family_description", "block_contents": "Free title describing the study family, such as potential inheritance or details about consanguinity"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_family_consanguinity": {"name": "GREGoR_R03_HMB_20250612_ftd_family_consanguinity", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_family_consanguinity", "block_contents": "Is there known or suspected consanguinity in this study family?"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_family_family_study_focus": {"name": "GREGoR_R03_HMB_20250612_ftd_family_family_study_focus", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_family_family_study_focus", "block_contents": "What is this study family investigating? EG, a specific condition. The code should be prefixed with a recognizable curie."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_family_has_access_policy": {"name": "GREGoR_R03_HMB_20250612_ftd_family_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_family_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_family_id": {"name": "GREGoR_R03_HMB_20250612_ftd_family_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_family_id", "block_contents": "ID associated with a class"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_subjectassertion_external_id_description": {"name": "GREGoR_R03_HMB_20250612_ftd_subjectassertion_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_subjectassertion_external_id_description", "block_contents": "Model for GREGoR_R03_HMB_20250612_ftd_subjectassertion_external_id."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_subjectassertion_external_id_subjectassertion_id": {"name": "GREGoR_R03_HMB_20250612_ftd_subjectassertion_external_id_subjectassertion_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_subjectassertion_external_id_subjectassertion_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_subjectassertion_external_id_external_id": {"name": "GREGoR_R03_HMB_20250612_ftd_subjectassertion_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_subjectassertion_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_accesspolicy_external_id_description": {"name": "GREGoR_R03_HMB_20250612_ftd_accesspolicy_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_accesspolicy_external_id_description", "block_contents": "Model for GREGoR_R03_HMB_20250612_ftd_accesspolicy_external_id."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_accesspolicy_external_id_accesspolicy_id": {"name": "GREGoR_R03_HMB_20250612_ftd_accesspolicy_external_id_accesspolicy_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_accesspolicy_external_id_accesspolicy_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_accesspolicy_external_id_external_id": {"name": "GREGoR_R03_HMB_20250612_ftd_accesspolicy_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_accesspolicy_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_family_external_id_description": {"name": "GREGoR_R03_HMB_20250612_ftd_family_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_family_external_id_description", "block_contents": "Model for GREGoR_R03_HMB_20250612_ftd_family_external_id."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_family_external_id_family_id": {"name": "GREGoR_R03_HMB_20250612_ftd_family_external_id_family_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_family_external_id_family_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_family_external_id_external_id": {"name": "GREGoR_R03_HMB_20250612_ftd_family_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_family_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_familyrelationship_description": {"name": "GREGoR_R03_HMB_20250612_ftd_familyrelationship_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_familyrelationship_description", "block_contents": "Model for GREGoR_R03_HMB_20250612_ftd_familyrelationship."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_familyrelationship_family_member": {"name": "GREGoR_R03_HMB_20250612_ftd_familyrelationship_family_member", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_familyrelationship_family_member", "block_contents": "The family member Subject who is the relationship \"subject\"."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_familyrelationship_other_family_member": {"name": "GREGoR_R03_HMB_20250612_ftd_familyrelationship_other_family_member", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_familyrelationship_other_family_member", "block_contents": "The family member Subject for the relationship \"object\"."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_familyrelationship_relationship_code": {"name": "GREGoR_R03_HMB_20250612_ftd_familyrelationship_relationship_code", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_familyrelationship_relationship_code", "block_contents": "Code definting the relationship predicate. Relationship of the \"Family Member\" to the \"Other Family Member\" (i.e. mother, father, etc). Code must be from the HL7 [FamilyMember ValueSet](https://terminology.hl7.org/6.2.0/ValueSet-v3-FamilyMember.html)"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_familyrelationship_has_access_policy": {"name": "GREGoR_R03_HMB_20250612_ftd_familyrelationship_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_familyrelationship_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_familyrelationship_id": {"name": "GREGoR_R03_HMB_20250612_ftd_familyrelationship_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_familyrelationship_id", "block_contents": "ID associated with a class"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_accesscontrolledrecord_external_id_description": {"name": "GREGoR_R03_HMB_20250612_ftd_accesscontrolledrecord_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_accesscontrolledrecord_external_id_description", "block_contents": "Model for GREGoR_R03_HMB_20250612_ftd_accesscontrolledrecord_external_id."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_accesscontrolledrecord_external_id_accesscontrolledrecord_id": {"name": "GREGoR_R03_HMB_20250612_ftd_accesscontrolledrecord_external_id_accesscontrolledrecord_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_accesscontrolledrecord_external_id_accesscontrolledrecord_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_accesscontrolledrecord_external_id_external_id": {"name": "GREGoR_R03_HMB_20250612_ftd_accesscontrolledrecord_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_accesscontrolledrecord_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_study_funding_source_description": {"name": "GREGoR_R03_HMB_20250612_ftd_study_funding_source_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_study_funding_source_description", "block_contents": "Model for GREGoR_R03_HMB_20250612_ftd_study_funding_source."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_study_funding_source_study_id": {"name": "GREGoR_R03_HMB_20250612_ftd_study_funding_source_study_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_study_funding_source_study_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_study_funding_source_funding_source": {"name": "GREGoR_R03_HMB_20250612_ftd_study_funding_source_funding_source", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_study_funding_source_funding_source", "block_contents": "Funding Source"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_thing_external_id_description": {"name": "GREGoR_R03_HMB_20250612_ftd_thing_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_thing_external_id_description", "block_contents": "Model for GREGoR_R03_HMB_20250612_ftd_thing_external_id."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_thing_external_id_thing_id": {"name": "GREGoR_R03_HMB_20250612_ftd_thing_external_id_thing_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_thing_external_id_thing_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_thing_external_id_external_id": {"name": "GREGoR_R03_HMB_20250612_ftd_thing_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_thing_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_aliquot_description": {"name": "GREGoR_R03_HMB_20250612_ftd_aliquot_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_aliquot_description", "block_contents": "Model for GREGoR_R03_HMB_20250612_ftd_aliquot."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_aliquot_availablity_status": {"name": "GREGoR_R03_HMB_20250612_ftd_aliquot_availablity_status", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_aliquot_availablity_status", "block_contents": "Can this Sample be requested for further analysis?"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_aliquot_quantity_number": {"name": "GREGoR_R03_HMB_20250612_ftd_aliquot_quantity_number", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_aliquot_quantity_number", "block_contents": "The total quantity of the specimen"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_aliquot_quantity_units": {"name": "GREGoR_R03_HMB_20250612_ftd_aliquot_quantity_units", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_aliquot_quantity_units", "block_contents": "The structured term defining the units of the quantity."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_aliquot_concentration_number": {"name": "GREGoR_R03_HMB_20250612_ftd_aliquot_concentration_number", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_aliquot_concentration_number", "block_contents": "What is the concentration of the analyte in the Aliquot?"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_aliquot_concentration_unit": {"name": "GREGoR_R03_HMB_20250612_ftd_aliquot_concentration_unit", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_aliquot_concentration_unit", "block_contents": "Units associated with the concentration of the analyte in the Aliquot? UCUM coding preferred (with curie, UCUM)"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_aliquot_has_access_policy": {"name": "GREGoR_R03_HMB_20250612_ftd_aliquot_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_aliquot_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_aliquot_id": {"name": "GREGoR_R03_HMB_20250612_ftd_aliquot_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_aliquot_id", "block_contents": "ID associated with a class"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_aliquot_sample_id": {"name": "GREGoR_R03_HMB_20250612_ftd_aliquot_sample_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_aliquot_sample_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_sourcedata_description": {"name": "GREGoR_R03_HMB_20250612_ftd_sourcedata_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_sourcedata_description", "block_contents": "Model for GREGoR_R03_HMB_20250612_ftd_sourcedata."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_sourcedata_code": {"name": "GREGoR_R03_HMB_20250612_ftd_sourcedata_code", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_sourcedata_code", "block_contents": "The structured term defining the meaning of the assertion."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_sourcedata_display": {"name": "GREGoR_R03_HMB_20250612_ftd_sourcedata_display", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_sourcedata_display", "block_contents": "The friendly display string of the coded term"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_sourcedata_value_code": {"name": "GREGoR_R03_HMB_20250612_ftd_sourcedata_value_code", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_sourcedata_value_code", "block_contents": "The structured term defining the value of the assertion."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_sourcedata_value_display": {"name": "GREGoR_R03_HMB_20250612_ftd_sourcedata_value_display", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_sourcedata_value_display", "block_contents": "The friendly display string of the coded term for the value of the assertion."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_sourcedata_value_number": {"name": "GREGoR_R03_HMB_20250612_ftd_sourcedata_value_number", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_sourcedata_value_number", "block_contents": "The numeric value of the assertion."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_sourcedata_value_units": {"name": "GREGoR_R03_HMB_20250612_ftd_sourcedata_value_units", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_sourcedata_value_units", "block_contents": "The structured term defining the units of the value."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_sourcedata_value_units_display": {"name": "GREGoR_R03_HMB_20250612_ftd_sourcedata_value_units_display", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_sourcedata_value_units_display", "block_contents": "The friendly display string of units of the value."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_sourcedata_has_access_policy": {"name": "GREGoR_R03_HMB_20250612_ftd_sourcedata_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_sourcedata_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_sourcedata_id": {"name": "GREGoR_R03_HMB_20250612_ftd_sourcedata_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_sourcedata_id", "block_contents": "ID associated with a class"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_subject_external_id_description": {"name": "GREGoR_R03_HMB_20250612_ftd_subject_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_subject_external_id_description", "block_contents": "Model for GREGoR_R03_HMB_20250612_ftd_subject_external_id."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_subject_external_id_subject_id": {"name": "GREGoR_R03_HMB_20250612_ftd_subject_external_id_subject_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_subject_external_id_subject_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_subject_external_id_external_id": {"name": "GREGoR_R03_HMB_20250612_ftd_subject_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_subject_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_sourcedata_external_id_description": {"name": "GREGoR_R03_HMB_20250612_ftd_sourcedata_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_sourcedata_external_id_description", "block_contents": "Model for GREGoR_R03_HMB_20250612_ftd_sourcedata_external_id."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_sourcedata_external_id_sourcedata_id": {"name": "GREGoR_R03_HMB_20250612_ftd_sourcedata_external_id_sourcedata_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_sourcedata_external_id_sourcedata_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_sourcedata_external_id_external_id": {"name": "GREGoR_R03_HMB_20250612_ftd_sourcedata_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_sourcedata_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_file_sample_description": {"name": "GREGoR_R03_HMB_20250612_ftd_file_sample_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_file_sample_description", "block_contents": "Model for GREGoR_R03_HMB_20250612_ftd_file_sample."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_file_sample_file_id": {"name": "GREGoR_R03_HMB_20250612_ftd_file_sample_file_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_file_sample_file_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_file_sample_sample_id": {"name": "GREGoR_R03_HMB_20250612_ftd_file_sample_sample_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_file_sample_sample_id", "block_contents": "The Samples(s) used to generate data in this file."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_description": {"name": "GREGoR_R03_HMB_20250612_ftd_demographics_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_description", "block_contents": "Model for GREGoR_R03_HMB_20250612_ftd_demographics."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_date_of_birth": {"name": "GREGoR_R03_HMB_20250612_ftd_demographics_date_of_birth", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_date_of_birth", "block_contents": "Date at which the individual was born. May be impacted by privacy rules described in date_of_birth_type."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_date_of_birth_type": {"name": "GREGoR_R03_HMB_20250612_ftd_demographics_date_of_birth_type", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_date_of_birth_type", "block_contents": "Privacy rule modification applied to date_of_birth."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_sex": {"name": "GREGoR_R03_HMB_20250612_ftd_demographics_sex", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_sex", "block_contents": "Sex of the individual"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_sex_display": {"name": "GREGoR_R03_HMB_20250612_ftd_demographics_sex_display", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_sex_display", "block_contents": "The friendly display string of the coded term for Sex"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_race_display": {"name": "GREGoR_R03_HMB_20250612_ftd_demographics_race_display", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_race_display", "block_contents": "The friendly display string of the coded term(s) for Race"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_ethnicity": {"name": "GREGoR_R03_HMB_20250612_ftd_demographics_ethnicity", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_ethnicity", "block_contents": "Reported ethnicity as defined by the 1997 OMB directives."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_ethnicity_display": {"name": "GREGoR_R03_HMB_20250612_ftd_demographics_ethnicity_display", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_ethnicity_display", "block_contents": "The friendly display string of the coded term for Ethnicity"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_age_at_last_vital_status": {"name": "GREGoR_R03_HMB_20250612_ftd_demographics_age_at_last_vital_status", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_age_at_last_vital_status", "block_contents": "Age at last vital status in decimal years."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_vital_status": {"name": "GREGoR_R03_HMB_20250612_ftd_demographics_vital_status", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_vital_status", "block_contents": "Vital Status"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_has_access_policy": {"name": "GREGoR_R03_HMB_20250612_ftd_demographics_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_id": {"name": "GREGoR_R03_HMB_20250612_ftd_demographics_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_id", "block_contents": "ID associated with a class"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_accesspolicy_data_access_type_description": {"name": "GREGoR_R03_HMB_20250612_ftd_accesspolicy_data_access_type_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_accesspolicy_data_access_type_description", "block_contents": "Model for GREGoR_R03_HMB_20250612_ftd_accesspolicy_data_access_type."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_accesspolicy_data_access_type_accesspolicy_id": {"name": "GREGoR_R03_HMB_20250612_ftd_accesspolicy_data_access_type_accesspolicy_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_accesspolicy_data_access_type_accesspolicy_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_accesspolicy_data_access_type_data_access_type": {"name": "GREGoR_R03_HMB_20250612_ftd_accesspolicy_data_access_type_data_access_type", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_accesspolicy_data_access_type_data_access_type", "block_contents": "Data Access Type"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_sample_processing_description": {"name": "GREGoR_R03_HMB_20250612_ftd_sample_processing_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_sample_processing_description", "block_contents": "Model for GREGoR_R03_HMB_20250612_ftd_sample_processing."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_sample_processing_sample_id": {"name": "GREGoR_R03_HMB_20250612_ftd_sample_processing_sample_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_sample_processing_sample_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_sample_processing_processing": {"name": "GREGoR_R03_HMB_20250612_ftd_sample_processing_processing", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_sample_processing_processing", "block_contents": "Processing that was applied to the Parent Sample or from the Biospecimen Collection that yielded this distinct sample"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_study_principal_investigator_description": {"name": "GREGoR_R03_HMB_20250612_ftd_study_principal_investigator_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_study_principal_investigator_description", "block_contents": "Model for GREGoR_R03_HMB_20250612_ftd_study_principal_investigator."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_study_principal_investigator_study_id": {"name": "GREGoR_R03_HMB_20250612_ftd_study_principal_investigator_study_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_study_principal_investigator_study_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_study_principal_investigator_principal_investigator": {"name": "GREGoR_R03_HMB_20250612_ftd_study_principal_investigator_principal_investigator", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_study_principal_investigator_principal_investigator", "block_contents": "Principal Investigator"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_file_description": {"name": "GREGoR_R03_HMB_20250612_ftd_file_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_file_description", "block_contents": "Model for GREGoR_R03_HMB_20250612_ftd_file."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_file_filename": {"name": "GREGoR_R03_HMB_20250612_ftd_file_filename", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_file_filename", "block_contents": "The name of the file."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_file_format": {"name": "GREGoR_R03_HMB_20250612_ftd_file_format", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_file_format", "block_contents": "The format of the file."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_file_data_type": {"name": "GREGoR_R03_HMB_20250612_ftd_file_data_type", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_file_data_type", "block_contents": "The type of data within this file."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_file_size": {"name": "GREGoR_R03_HMB_20250612_ftd_file_size", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_file_size", "block_contents": "Size of the file, in Bytes."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_file_drs_uri": {"name": "GREGoR_R03_HMB_20250612_ftd_file_drs_uri", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_file_drs_uri", "block_contents": "DRS location to access the data."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_file_file_metadata": {"name": "GREGoR_R03_HMB_20250612_ftd_file_file_metadata", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_file_file_metadata", "block_contents": "Additional metadata about the contents of the file, eg, genome reference build."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_file_has_access_policy": {"name": "GREGoR_R03_HMB_20250612_ftd_file_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_file_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_file_id": {"name": "GREGoR_R03_HMB_20250612_ftd_file_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_file_id", "block_contents": "ID associated with a class"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_sample_storage_method_description": {"name": "GREGoR_R03_HMB_20250612_ftd_sample_storage_method_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_sample_storage_method_description", "block_contents": "Model for GREGoR_R03_HMB_20250612_ftd_sample_storage_method."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_sample_storage_method_sample_id": {"name": "GREGoR_R03_HMB_20250612_ftd_sample_storage_method_sample_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_sample_storage_method_sample_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_sample_storage_method_storage_method": {"name": "GREGoR_R03_HMB_20250612_ftd_sample_storage_method_storage_method", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_sample_storage_method_storage_method", "block_contents": "Sample storage method, eg, Frozen or with additives"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_study_external_study_id_description": {"name": "GREGoR_R03_HMB_20250612_ftd_study_external_study_id_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_study_external_study_id_description", "block_contents": "Model for GREGoR_R03_HMB_20250612_ftd_study_external_study_id."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_study_external_study_id_study_id": {"name": "GREGoR_R03_HMB_20250612_ftd_study_external_study_id_study_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_study_external_study_id_study_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_study_external_study_id_external_study_id": {"name": "GREGoR_R03_HMB_20250612_ftd_study_external_study_id_external_study_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_study_external_study_id_external_study_id", "block_contents": "External Study ID"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_accesscontrolledrecord_description": {"name": "GREGoR_R03_HMB_20250612_ftd_accesscontrolledrecord_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_accesscontrolledrecord_description", "block_contents": "Model for GREGoR_R03_HMB_20250612_ftd_accesscontrolledrecord."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_accesscontrolledrecord_has_access_policy": {"name": "GREGoR_R03_HMB_20250612_ftd_accesscontrolledrecord_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_accesscontrolledrecord_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_accesscontrolledrecord_id": {"name": "GREGoR_R03_HMB_20250612_ftd_accesscontrolledrecord_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_accesscontrolledrecord_id", "block_contents": "ID associated with a class"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_biospecimencollection_description": {"name": "GREGoR_R03_HMB_20250612_ftd_biospecimencollection_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_biospecimencollection_description", "block_contents": "Model for GREGoR_R03_HMB_20250612_ftd_biospecimencollection."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_biospecimencollection_age_at_collection": {"name": "GREGoR_R03_HMB_20250612_ftd_biospecimencollection_age_at_collection", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_biospecimencollection_age_at_collection", "block_contents": "The age at which this biospecimen was collected."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_biospecimencollection_method": {"name": "GREGoR_R03_HMB_20250612_ftd_biospecimencollection_method", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_biospecimencollection_method", "block_contents": "The approach used to collect the biospecimen."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_biospecimencollection_site": {"name": "GREGoR_R03_HMB_20250612_ftd_biospecimencollection_site", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_biospecimencollection_site", "block_contents": "The location of the specimen collection."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_biospecimencollection_spatial_qualifier": {"name": "GREGoR_R03_HMB_20250612_ftd_biospecimencollection_spatial_qualifier", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_biospecimencollection_spatial_qualifier", "block_contents": "Any spatial/location qualifiers"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_biospecimencollection_laterality": {"name": "GREGoR_R03_HMB_20250612_ftd_biospecimencollection_laterality", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_biospecimencollection_laterality", "block_contents": "Laterality information for the site"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_biospecimencollection_has_access_policy": {"name": "GREGoR_R03_HMB_20250612_ftd_biospecimencollection_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_biospecimencollection_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_biospecimencollection_id": {"name": "GREGoR_R03_HMB_20250612_ftd_biospecimencollection_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_biospecimencollection_id", "block_contents": "ID associated with a class"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_source_data_description": {"name": "GREGoR_R03_HMB_20250612_ftd_demographics_source_data_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_source_data_description", "block_contents": "Model for GREGoR_R03_HMB_20250612_ftd_demographics_source_data."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_source_data_demographics_id": {"name": "GREGoR_R03_HMB_20250612_ftd_demographics_source_data_demographics_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_source_data_demographics_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_source_data_source_data_id": {"name": "GREGoR_R03_HMB_20250612_ftd_demographics_source_data_source_data_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_source_data_source_data_id", "block_contents": "The sources from which this assertion was derived"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_sample_description": {"name": "GREGoR_R03_HMB_20250612_ftd_sample_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_sample_description", "block_contents": "Model for GREGoR_R03_HMB_20250612_ftd_sample."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_sample_parent_sample": {"name": "GREGoR_R03_HMB_20250612_ftd_sample_parent_sample", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_sample_parent_sample", "block_contents": "Sample from which this sample is derived"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_sample_sample_type": {"name": "GREGoR_R03_HMB_20250612_ftd_sample_sample_type", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_sample_sample_type", "block_contents": "Type of material of which this Sample is comprised"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_sample_availablity_status": {"name": "GREGoR_R03_HMB_20250612_ftd_sample_availablity_status", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_sample_availablity_status", "block_contents": "Can this Sample be requested for further analysis?"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_sample_quantity_number": {"name": "GREGoR_R03_HMB_20250612_ftd_sample_quantity_number", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_sample_quantity_number", "block_contents": "The total quantity of the specimen"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_sample_quantity_units": {"name": "GREGoR_R03_HMB_20250612_ftd_sample_quantity_units", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_sample_quantity_units", "block_contents": "The structured term defining the units of the quantity."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_sample_has_access_policy": {"name": "GREGoR_R03_HMB_20250612_ftd_sample_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_sample_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_sample_id": {"name": "GREGoR_R03_HMB_20250612_ftd_sample_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_sample_id", "block_contents": "ID associated with a class"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_sample_subject_id": {"name": "GREGoR_R03_HMB_20250612_ftd_sample_subject_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_sample_subject_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_sample_biospecimen_collection_id": {"name": "GREGoR_R03_HMB_20250612_ftd_sample_biospecimen_collection_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_sample_biospecimen_collection_id", "block_contents": "Biospecimen Collection that generated this sample."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_accesspolicy_description": {"name": "GREGoR_R03_HMB_20250612_ftd_accesspolicy_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_accesspolicy_description", "block_contents": "Model for GREGoR_R03_HMB_20250612_ftd_accesspolicy."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_accesspolicy_disease_limitation": {"name": "GREGoR_R03_HMB_20250612_ftd_accesspolicy_disease_limitation", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_accesspolicy_disease_limitation", "block_contents": "Disease Use Limitations"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_accesspolicy_website": {"name": "GREGoR_R03_HMB_20250612_ftd_accesspolicy_website", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_accesspolicy_website", "block_contents": "Website"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_accesspolicy_id": {"name": "GREGoR_R03_HMB_20250612_ftd_accesspolicy_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_accesspolicy_id", "block_contents": "ID associated with a class"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_file_subject_description": {"name": "GREGoR_R03_HMB_20250612_ftd_file_subject_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_file_subject_description", "block_contents": "Model for GREGoR_R03_HMB_20250612_ftd_file_subject."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_file_subject_file_id": {"name": "GREGoR_R03_HMB_20250612_ftd_file_subject_file_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_file_subject_file_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_file_subject_subject_id": {"name": "GREGoR_R03_HMB_20250612_ftd_file_subject_subject_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_file_subject_subject_id", "block_contents": "The Subject(s) which this file describes."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_study_description": {"name": "GREGoR_R03_HMB_20250612_ftd_study_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_study_description", "block_contents": "Model for GREGoR_R03_HMB_20250612_ftd_study."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_study_parent_study_id": {"name": "GREGoR_R03_HMB_20250612_ftd_study_parent_study_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_study_parent_study_id", "block_contents": "Parent Study ID"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_study_study_title": {"name": "GREGoR_R03_HMB_20250612_ftd_study_study_title", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_study_study_title", "block_contents": "Study Title"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_study_id": {"name": "GREGoR_R03_HMB_20250612_ftd_study_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_study_id", "block_contents": "ID associated with a class"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_family_family_relationships_description": {"name": "GREGoR_R03_HMB_20250612_ftd_family_family_relationships_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_family_family_relationships_description", "block_contents": "Model for GREGoR_R03_HMB_20250612_ftd_family_family_relationships."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_family_family_relationships_family_id": {"name": "GREGoR_R03_HMB_20250612_ftd_family_family_relationships_family_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_family_family_relationships_family_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_family_family_relationships_family_relationships_id": {"name": "GREGoR_R03_HMB_20250612_ftd_family_family_relationships_family_relationships_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_family_family_relationships_family_relationships_id", "block_contents": "Family relationships associated with this family."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_familymember_description": {"name": "GREGoR_R03_HMB_20250612_ftd_familymember_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_familymember_description", "block_contents": "Model for GREGoR_R03_HMB_20250612_ftd_familymember."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_familymember_family_member": {"name": "GREGoR_R03_HMB_20250612_ftd_familymember_family_member", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_familymember_family_member", "block_contents": "The family member Subject who is the relationship \"subject\"."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_familymember_family_role": {"name": "GREGoR_R03_HMB_20250612_ftd_familymember_family_role", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_familymember_family_role", "block_contents": "The \"role\" of this indiviudal in this family."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_familymember_has_access_policy": {"name": "GREGoR_R03_HMB_20250612_ftd_familymember_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_familymember_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_familymember_id": {"name": "GREGoR_R03_HMB_20250612_ftd_familymember_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_familymember_id", "block_contents": "ID associated with a class"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_familymember_family_id": {"name": "GREGoR_R03_HMB_20250612_ftd_familymember_family_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_familymember_family_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_race_description": {"name": "GREGoR_R03_HMB_20250612_ftd_demographics_race_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_race_description", "block_contents": "Model for GREGoR_R03_HMB_20250612_ftd_demographics_race."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_race_demographics_id": {"name": "GREGoR_R03_HMB_20250612_ftd_demographics_race_demographics_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_race_demographics_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_race_race": {"name": "GREGoR_R03_HMB_20250612_ftd_demographics_race_race", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_race_race", "block_contents": "Reported race as defined by the 1997 OMB directives."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_sample_external_id_description": {"name": "GREGoR_R03_HMB_20250612_ftd_sample_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_sample_external_id_description", "block_contents": "Model for GREGoR_R03_HMB_20250612_ftd_sample_external_id."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_sample_external_id_sample_id": {"name": "GREGoR_R03_HMB_20250612_ftd_sample_external_id_sample_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_sample_external_id_sample_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_sample_external_id_external_id": {"name": "GREGoR_R03_HMB_20250612_ftd_sample_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_sample_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_familyrelationship_external_id_description": {"name": "GREGoR_R03_HMB_20250612_ftd_familyrelationship_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_familyrelationship_external_id_description", "block_contents": "Model for GREGoR_R03_HMB_20250612_ftd_familyrelationship_external_id."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_familyrelationship_external_id_familyrelationship_id": {"name": "GREGoR_R03_HMB_20250612_ftd_familyrelationship_external_id_familyrelationship_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_familyrelationship_external_id_familyrelationship_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_familyrelationship_external_id_external_id": {"name": "GREGoR_R03_HMB_20250612_ftd_familyrelationship_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_familyrelationship_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code_description": {"name": "GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code_description", "block_contents": "Model for GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code_accesspolicy_id": {"name": "GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code_accesspolicy_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code_accesspolicy_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code_access_policy_code": {"name": "GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code_access_policy_code", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code_access_policy_code", "block_contents": "Access Policy Code"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_external_id_description": {"name": "GREGoR_R03_HMB_20250612_ftd_demographics_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_external_id_description", "block_contents": "Model for GREGoR_R03_HMB_20250612_ftd_demographics_external_id."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_external_id_demographics_id": {"name": "GREGoR_R03_HMB_20250612_ftd_demographics_external_id_demographics_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_external_id_demographics_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_external_id_external_id": {"name": "GREGoR_R03_HMB_20250612_ftd_demographics_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_biospecimencollection_external_id_description": {"name": "GREGoR_R03_HMB_20250612_ftd_biospecimencollection_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_biospecimencollection_external_id_description", "block_contents": "Model for GREGoR_R03_HMB_20250612_ftd_biospecimencollection_external_id."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_biospecimencollection_external_id_biospecimencollection_id": {"name": "GREGoR_R03_HMB_20250612_ftd_biospecimencollection_external_id_biospecimencollection_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_biospecimencollection_external_id_biospecimencollection_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_biospecimencollection_external_id_external_id": {"name": "GREGoR_R03_HMB_20250612_ftd_biospecimencollection_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_biospecimencollection_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_filemetadata_external_id_description": {"name": "GREGoR_R03_HMB_20250612_ftd_filemetadata_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_filemetadata_external_id_description", "block_contents": "Model for GREGoR_R03_HMB_20250612_ftd_filemetadata_external_id."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_filemetadata_external_id_filemetadata_id": {"name": "GREGoR_R03_HMB_20250612_ftd_filemetadata_external_id_filemetadata_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_filemetadata_external_id_filemetadata_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_filemetadata_external_id_external_id": {"name": "GREGoR_R03_HMB_20250612_ftd_filemetadata_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_filemetadata_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_aliquot_external_id_description": {"name": "GREGoR_R03_HMB_20250612_ftd_aliquot_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_aliquot_external_id_description", "block_contents": "Model for GREGoR_R03_HMB_20250612_ftd_aliquot_external_id."}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_aliquot_external_id_aliquot_id": {"name": "GREGoR_R03_HMB_20250612_ftd_aliquot_external_id_aliquot_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_aliquot_external_id_aliquot_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_HMB_20250612_ftd_aliquot_external_id_external_id": {"name": "GREGoR_R03_HMB_20250612_ftd_aliquot_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_HMB_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_HMB_20250612_ftd_aliquot_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_subjectassertion_description": {"name": "GREGoR_R03_GRU_20250612_ftd_subjectassertion_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_subjectassertion_description", "block_contents": "Model for GREGoR_R03_GRU_20250612_ftd_subjectassertion."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_subjectassertion_assertion_type": {"name": "GREGoR_R03_GRU_20250612_ftd_subjectassertion_assertion_type", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_subjectassertion_assertion_type", "block_contents": "The semantic type of the resource, eg, Condition."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_subjectassertion_age_at_assertion": {"name": "GREGoR_R03_GRU_20250612_ftd_subjectassertion_age_at_assertion", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_subjectassertion_age_at_assertion", "block_contents": "The age in decimal years of the Subject when the assertion was made."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_subjectassertion_age_at_event": {"name": "GREGoR_R03_GRU_20250612_ftd_subjectassertion_age_at_event", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_subjectassertion_age_at_event", "block_contents": "The age in decimal years of the Subject at the time point which the assertion describes, | eg, age of onset or when a measurement was performed."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_subjectassertion_age_at_resolution": {"name": "GREGoR_R03_GRU_20250612_ftd_subjectassertion_age_at_resolution", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_subjectassertion_age_at_resolution", "block_contents": "The age in decimal years of the Subject when the asserted state was resolved."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_subjectassertion_code": {"name": "GREGoR_R03_GRU_20250612_ftd_subjectassertion_code", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_subjectassertion_code", "block_contents": "The structured term defining the meaning of the assertion."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_subjectassertion_display": {"name": "GREGoR_R03_GRU_20250612_ftd_subjectassertion_display", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_subjectassertion_display", "block_contents": "The friendly display string of the coded term"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_subjectassertion_value_code": {"name": "GREGoR_R03_GRU_20250612_ftd_subjectassertion_value_code", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_subjectassertion_value_code", "block_contents": "The structured term defining the value of the assertion."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_subjectassertion_value_display": {"name": "GREGoR_R03_GRU_20250612_ftd_subjectassertion_value_display", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_subjectassertion_value_display", "block_contents": "The friendly display string of the coded term for the value of the assertion."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_subjectassertion_value_number": {"name": "GREGoR_R03_GRU_20250612_ftd_subjectassertion_value_number", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_subjectassertion_value_number", "block_contents": "The numeric value of the assertion."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_subjectassertion_value_units": {"name": "GREGoR_R03_GRU_20250612_ftd_subjectassertion_value_units", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_subjectassertion_value_units", "block_contents": "The structured term defining the units of the value."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_subjectassertion_value_units_display": {"name": "GREGoR_R03_GRU_20250612_ftd_subjectassertion_value_units_display", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_subjectassertion_value_units_display", "block_contents": "The friendly display string of units of the value."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_subjectassertion_has_access_policy": {"name": "GREGoR_R03_GRU_20250612_ftd_subjectassertion_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_subjectassertion_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_subjectassertion_id": {"name": "GREGoR_R03_GRU_20250612_ftd_subjectassertion_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_subjectassertion_id", "block_contents": "ID associated with a class"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_subjectassertion_subject_id": {"name": "GREGoR_R03_GRU_20250612_ftd_subjectassertion_subject_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_subjectassertion_subject_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_file_external_id_description": {"name": "GREGoR_R03_GRU_20250612_ftd_file_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_file_external_id_description", "block_contents": "Model for GREGoR_R03_GRU_20250612_ftd_file_external_id."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_file_external_id_file_id": {"name": "GREGoR_R03_GRU_20250612_ftd_file_external_id_file_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_file_external_id_file_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_file_external_id_external_id": {"name": "GREGoR_R03_GRU_20250612_ftd_file_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_file_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_familymember_external_id_description": {"name": "GREGoR_R03_GRU_20250612_ftd_familymember_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_familymember_external_id_description", "block_contents": "Model for GREGoR_R03_GRU_20250612_ftd_familymember_external_id."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_familymember_external_id_familymember_id": {"name": "GREGoR_R03_GRU_20250612_ftd_familymember_external_id_familymember_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_familymember_external_id_familymember_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_familymember_external_id_external_id": {"name": "GREGoR_R03_GRU_20250612_ftd_familymember_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_familymember_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sourcedata_query_parameter_description": {"name": "GREGoR_R03_GRU_20250612_ftd_sourcedata_query_parameter_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sourcedata_query_parameter_description", "block_contents": "Model for GREGoR_R03_GRU_20250612_ftd_sourcedata_query_parameter."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sourcedata_query_parameter_sourcedata_id": {"name": "GREGoR_R03_GRU_20250612_ftd_sourcedata_query_parameter_sourcedata_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sourcedata_query_parameter_sourcedata_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sourcedata_query_parameter_query_parameter": {"name": "GREGoR_R03_GRU_20250612_ftd_sourcedata_query_parameter_query_parameter", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sourcedata_query_parameter_query_parameter", "block_contents": "One or more query parameters used to select the specific row. It will leverage the parameterized_query defined by a data_source. This should be formatted according to (https://cloud.google.com/bigquery/docs/parameterized-queries)[BigQuery instructions], specifically the bq CLI version with named parameters, ie, \"<parameter name>:<data type>:<value>\"."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_filemetadata_description": {"name": "GREGoR_R03_GRU_20250612_ftd_filemetadata_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_filemetadata_description", "block_contents": "Model for GREGoR_R03_GRU_20250612_ftd_filemetadata."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_filemetadata_code": {"name": "GREGoR_R03_GRU_20250612_ftd_filemetadata_code", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_filemetadata_code", "block_contents": "The structured term defining the meaning of the assertion."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_filemetadata_display": {"name": "GREGoR_R03_GRU_20250612_ftd_filemetadata_display", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_filemetadata_display", "block_contents": "The friendly display string of the coded term"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_filemetadata_value_code": {"name": "GREGoR_R03_GRU_20250612_ftd_filemetadata_value_code", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_filemetadata_value_code", "block_contents": "The structured term defining the value of the assertion."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_filemetadata_value_display": {"name": "GREGoR_R03_GRU_20250612_ftd_filemetadata_value_display", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_filemetadata_value_display", "block_contents": "The friendly display string of the coded term for the value of the assertion."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_filemetadata_id": {"name": "GREGoR_R03_GRU_20250612_ftd_filemetadata_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_filemetadata_id", "block_contents": "ID associated with a class"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_subject_description": {"name": "GREGoR_R03_GRU_20250612_ftd_subject_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_subject_description", "block_contents": "Model for GREGoR_R03_GRU_20250612_ftd_subject."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_subject_subject_type": {"name": "GREGoR_R03_GRU_20250612_ftd_subject_subject_type", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_subject_subject_type", "block_contents": "Type of entity this record represents"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_subject_organism_type": {"name": "GREGoR_R03_GRU_20250612_ftd_subject_organism_type", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_subject_organism_type", "block_contents": "Organism Type Label"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_subject_has_access_policy": {"name": "GREGoR_R03_GRU_20250612_ftd_subject_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_subject_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_subject_id": {"name": "GREGoR_R03_GRU_20250612_ftd_subject_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_subject_id", "block_contents": "ID associated with a class"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_subject_has_demographics_id": {"name": "GREGoR_R03_GRU_20250612_ftd_subject_has_demographics_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_subject_has_demographics_id", "block_contents": "A demographic summary of the participant."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_study_external_id_description": {"name": "GREGoR_R03_GRU_20250612_ftd_study_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_study_external_id_description", "block_contents": "Model for GREGoR_R03_GRU_20250612_ftd_study_external_id."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_study_external_id_study_id": {"name": "GREGoR_R03_GRU_20250612_ftd_study_external_id_study_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_study_external_id_study_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_study_external_id_external_id": {"name": "GREGoR_R03_GRU_20250612_ftd_study_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_study_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_subjectassertion_source_data_description": {"name": "GREGoR_R03_GRU_20250612_ftd_subjectassertion_source_data_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_subjectassertion_source_data_description", "block_contents": "Model for GREGoR_R03_GRU_20250612_ftd_subjectassertion_source_data."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_subjectassertion_source_data_subjectassertion_id": {"name": "GREGoR_R03_GRU_20250612_ftd_subjectassertion_source_data_subjectassertion_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_subjectassertion_source_data_subjectassertion_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_subjectassertion_source_data_source_data_id": {"name": "GREGoR_R03_GRU_20250612_ftd_subjectassertion_source_data_source_data_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_subjectassertion_source_data_source_data_id", "block_contents": "The sources from which this assertion was derived"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_family_description": {"name": "GREGoR_R03_GRU_20250612_ftd_family_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_family_description", "block_contents": "Model for GREGoR_R03_GRU_20250612_ftd_family."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_family_family_type": {"name": "GREGoR_R03_GRU_20250612_ftd_family_family_type", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_family_family_type", "block_contents": "Describes the 'type' of study family, eg, trio."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_family_family_description": {"name": "GREGoR_R03_GRU_20250612_ftd_family_family_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_family_family_description", "block_contents": "Free title describing the study family, such as potential inheritance or details about consanguinity"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_family_consanguinity": {"name": "GREGoR_R03_GRU_20250612_ftd_family_consanguinity", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_family_consanguinity", "block_contents": "Is there known or suspected consanguinity in this study family?"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_family_family_study_focus": {"name": "GREGoR_R03_GRU_20250612_ftd_family_family_study_focus", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_family_family_study_focus", "block_contents": "What is this study family investigating? EG, a specific condition. The code should be prefixed with a recognizable curie."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_family_has_access_policy": {"name": "GREGoR_R03_GRU_20250612_ftd_family_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_family_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_family_id": {"name": "GREGoR_R03_GRU_20250612_ftd_family_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_family_id", "block_contents": "ID associated with a class"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_subjectassertion_external_id_description": {"name": "GREGoR_R03_GRU_20250612_ftd_subjectassertion_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_subjectassertion_external_id_description", "block_contents": "Model for GREGoR_R03_GRU_20250612_ftd_subjectassertion_external_id."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_subjectassertion_external_id_subjectassertion_id": {"name": "GREGoR_R03_GRU_20250612_ftd_subjectassertion_external_id_subjectassertion_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_subjectassertion_external_id_subjectassertion_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_subjectassertion_external_id_external_id": {"name": "GREGoR_R03_GRU_20250612_ftd_subjectassertion_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_subjectassertion_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_accesspolicy_external_id_description": {"name": "GREGoR_R03_GRU_20250612_ftd_accesspolicy_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_accesspolicy_external_id_description", "block_contents": "Model for GREGoR_R03_GRU_20250612_ftd_accesspolicy_external_id."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_accesspolicy_external_id_accesspolicy_id": {"name": "GREGoR_R03_GRU_20250612_ftd_accesspolicy_external_id_accesspolicy_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_accesspolicy_external_id_accesspolicy_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_accesspolicy_external_id_external_id": {"name": "GREGoR_R03_GRU_20250612_ftd_accesspolicy_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_accesspolicy_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_family_external_id_description": {"name": "GREGoR_R03_GRU_20250612_ftd_family_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_family_external_id_description", "block_contents": "Model for GREGoR_R03_GRU_20250612_ftd_family_external_id."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_family_external_id_family_id": {"name": "GREGoR_R03_GRU_20250612_ftd_family_external_id_family_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_family_external_id_family_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_family_external_id_external_id": {"name": "GREGoR_R03_GRU_20250612_ftd_family_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_family_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_familyrelationship_description": {"name": "GREGoR_R03_GRU_20250612_ftd_familyrelationship_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_familyrelationship_description", "block_contents": "Model for GREGoR_R03_GRU_20250612_ftd_familyrelationship."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_familyrelationship_family_member": {"name": "GREGoR_R03_GRU_20250612_ftd_familyrelationship_family_member", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_familyrelationship_family_member", "block_contents": "The family member Subject who is the relationship \"subject\"."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_familyrelationship_other_family_member": {"name": "GREGoR_R03_GRU_20250612_ftd_familyrelationship_other_family_member", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_familyrelationship_other_family_member", "block_contents": "The family member Subject for the relationship \"object\"."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_familyrelationship_relationship_code": {"name": "GREGoR_R03_GRU_20250612_ftd_familyrelationship_relationship_code", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_familyrelationship_relationship_code", "block_contents": "Code definting the relationship predicate. Relationship of the \"Family Member\" to the \"Other Family Member\" (i.e. mother, father, etc). Code must be from the HL7 [FamilyMember ValueSet](https://terminology.hl7.org/6.2.0/ValueSet-v3-FamilyMember.html)"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_familyrelationship_has_access_policy": {"name": "GREGoR_R03_GRU_20250612_ftd_familyrelationship_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_familyrelationship_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_familyrelationship_id": {"name": "GREGoR_R03_GRU_20250612_ftd_familyrelationship_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_familyrelationship_id", "block_contents": "ID associated with a class"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_accesscontrolledrecord_external_id_description": {"name": "GREGoR_R03_GRU_20250612_ftd_accesscontrolledrecord_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_accesscontrolledrecord_external_id_description", "block_contents": "Model for GREGoR_R03_GRU_20250612_ftd_accesscontrolledrecord_external_id."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_accesscontrolledrecord_external_id_accesscontrolledrecord_id": {"name": "GREGoR_R03_GRU_20250612_ftd_accesscontrolledrecord_external_id_accesscontrolledrecord_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_accesscontrolledrecord_external_id_accesscontrolledrecord_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_accesscontrolledrecord_external_id_external_id": {"name": "GREGoR_R03_GRU_20250612_ftd_accesscontrolledrecord_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_accesscontrolledrecord_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_study_funding_source_description": {"name": "GREGoR_R03_GRU_20250612_ftd_study_funding_source_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_study_funding_source_description", "block_contents": "Model for GREGoR_R03_GRU_20250612_ftd_study_funding_source."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_study_funding_source_study_id": {"name": "GREGoR_R03_GRU_20250612_ftd_study_funding_source_study_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_study_funding_source_study_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_study_funding_source_funding_source": {"name": "GREGoR_R03_GRU_20250612_ftd_study_funding_source_funding_source", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_study_funding_source_funding_source", "block_contents": "Funding Source"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_thing_external_id_description": {"name": "GREGoR_R03_GRU_20250612_ftd_thing_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_thing_external_id_description", "block_contents": "Model for GREGoR_R03_GRU_20250612_ftd_thing_external_id."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_thing_external_id_thing_id": {"name": "GREGoR_R03_GRU_20250612_ftd_thing_external_id_thing_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_thing_external_id_thing_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_thing_external_id_external_id": {"name": "GREGoR_R03_GRU_20250612_ftd_thing_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_thing_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_aliquot_description": {"name": "GREGoR_R03_GRU_20250612_ftd_aliquot_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_aliquot_description", "block_contents": "Model for GREGoR_R03_GRU_20250612_ftd_aliquot."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_aliquot_availablity_status": {"name": "GREGoR_R03_GRU_20250612_ftd_aliquot_availablity_status", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_aliquot_availablity_status", "block_contents": "Can this Sample be requested for further analysis?"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_aliquot_quantity_number": {"name": "GREGoR_R03_GRU_20250612_ftd_aliquot_quantity_number", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_aliquot_quantity_number", "block_contents": "The total quantity of the specimen"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_aliquot_quantity_units": {"name": "GREGoR_R03_GRU_20250612_ftd_aliquot_quantity_units", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_aliquot_quantity_units", "block_contents": "The structured term defining the units of the quantity."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_aliquot_concentration_number": {"name": "GREGoR_R03_GRU_20250612_ftd_aliquot_concentration_number", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_aliquot_concentration_number", "block_contents": "What is the concentration of the analyte in the Aliquot?"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_aliquot_concentration_unit": {"name": "GREGoR_R03_GRU_20250612_ftd_aliquot_concentration_unit", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_aliquot_concentration_unit", "block_contents": "Units associated with the concentration of the analyte in the Aliquot? UCUM coding preferred (with curie, UCUM)"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_aliquot_has_access_policy": {"name": "GREGoR_R03_GRU_20250612_ftd_aliquot_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_aliquot_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_aliquot_id": {"name": "GREGoR_R03_GRU_20250612_ftd_aliquot_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_aliquot_id", "block_contents": "ID associated with a class"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_aliquot_sample_id": {"name": "GREGoR_R03_GRU_20250612_ftd_aliquot_sample_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_aliquot_sample_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sourcedata_description": {"name": "GREGoR_R03_GRU_20250612_ftd_sourcedata_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sourcedata_description", "block_contents": "Model for GREGoR_R03_GRU_20250612_ftd_sourcedata."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sourcedata_code": {"name": "GREGoR_R03_GRU_20250612_ftd_sourcedata_code", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sourcedata_code", "block_contents": "The structured term defining the meaning of the assertion."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sourcedata_display": {"name": "GREGoR_R03_GRU_20250612_ftd_sourcedata_display", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sourcedata_display", "block_contents": "The friendly display string of the coded term"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sourcedata_value_code": {"name": "GREGoR_R03_GRU_20250612_ftd_sourcedata_value_code", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sourcedata_value_code", "block_contents": "The structured term defining the value of the assertion."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sourcedata_value_display": {"name": "GREGoR_R03_GRU_20250612_ftd_sourcedata_value_display", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sourcedata_value_display", "block_contents": "The friendly display string of the coded term for the value of the assertion."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sourcedata_value_number": {"name": "GREGoR_R03_GRU_20250612_ftd_sourcedata_value_number", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sourcedata_value_number", "block_contents": "The numeric value of the assertion."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sourcedata_value_units": {"name": "GREGoR_R03_GRU_20250612_ftd_sourcedata_value_units", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sourcedata_value_units", "block_contents": "The structured term defining the units of the value."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sourcedata_value_units_display": {"name": "GREGoR_R03_GRU_20250612_ftd_sourcedata_value_units_display", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sourcedata_value_units_display", "block_contents": "The friendly display string of units of the value."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sourcedata_has_access_policy": {"name": "GREGoR_R03_GRU_20250612_ftd_sourcedata_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sourcedata_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sourcedata_id": {"name": "GREGoR_R03_GRU_20250612_ftd_sourcedata_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sourcedata_id", "block_contents": "ID associated with a class"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_subject_external_id_description": {"name": "GREGoR_R03_GRU_20250612_ftd_subject_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_subject_external_id_description", "block_contents": "Model for GREGoR_R03_GRU_20250612_ftd_subject_external_id."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_subject_external_id_subject_id": {"name": "GREGoR_R03_GRU_20250612_ftd_subject_external_id_subject_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_subject_external_id_subject_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_subject_external_id_external_id": {"name": "GREGoR_R03_GRU_20250612_ftd_subject_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_subject_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sourcedata_external_id_description": {"name": "GREGoR_R03_GRU_20250612_ftd_sourcedata_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sourcedata_external_id_description", "block_contents": "Model for GREGoR_R03_GRU_20250612_ftd_sourcedata_external_id."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sourcedata_external_id_sourcedata_id": {"name": "GREGoR_R03_GRU_20250612_ftd_sourcedata_external_id_sourcedata_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sourcedata_external_id_sourcedata_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sourcedata_external_id_external_id": {"name": "GREGoR_R03_GRU_20250612_ftd_sourcedata_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sourcedata_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_file_sample_description": {"name": "GREGoR_R03_GRU_20250612_ftd_file_sample_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_file_sample_description", "block_contents": "Model for GREGoR_R03_GRU_20250612_ftd_file_sample."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_file_sample_file_id": {"name": "GREGoR_R03_GRU_20250612_ftd_file_sample_file_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_file_sample_file_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_file_sample_sample_id": {"name": "GREGoR_R03_GRU_20250612_ftd_file_sample_sample_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_file_sample_sample_id", "block_contents": "The Samples(s) used to generate data in this file."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_description": {"name": "GREGoR_R03_GRU_20250612_ftd_demographics_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_description", "block_contents": "Model for GREGoR_R03_GRU_20250612_ftd_demographics."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_date_of_birth": {"name": "GREGoR_R03_GRU_20250612_ftd_demographics_date_of_birth", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_date_of_birth", "block_contents": "Date at which the individual was born. May be impacted by privacy rules described in date_of_birth_type."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_date_of_birth_type": {"name": "GREGoR_R03_GRU_20250612_ftd_demographics_date_of_birth_type", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_date_of_birth_type", "block_contents": "Privacy rule modification applied to date_of_birth."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_sex": {"name": "GREGoR_R03_GRU_20250612_ftd_demographics_sex", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_sex", "block_contents": "Sex of the individual"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_sex_display": {"name": "GREGoR_R03_GRU_20250612_ftd_demographics_sex_display", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_sex_display", "block_contents": "The friendly display string of the coded term for Sex"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_race_display": {"name": "GREGoR_R03_GRU_20250612_ftd_demographics_race_display", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_race_display", "block_contents": "The friendly display string of the coded term(s) for Race"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_ethnicity": {"name": "GREGoR_R03_GRU_20250612_ftd_demographics_ethnicity", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_ethnicity", "block_contents": "Reported ethnicity as defined by the 1997 OMB directives."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_ethnicity_display": {"name": "GREGoR_R03_GRU_20250612_ftd_demographics_ethnicity_display", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_ethnicity_display", "block_contents": "The friendly display string of the coded term for Ethnicity"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_age_at_last_vital_status": {"name": "GREGoR_R03_GRU_20250612_ftd_demographics_age_at_last_vital_status", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_age_at_last_vital_status", "block_contents": "Age at last vital status in decimal years."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_vital_status": {"name": "GREGoR_R03_GRU_20250612_ftd_demographics_vital_status", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_vital_status", "block_contents": "Vital Status"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_has_access_policy": {"name": "GREGoR_R03_GRU_20250612_ftd_demographics_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_id": {"name": "GREGoR_R03_GRU_20250612_ftd_demographics_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_id", "block_contents": "ID associated with a class"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_accesspolicy_data_access_type_description": {"name": "GREGoR_R03_GRU_20250612_ftd_accesspolicy_data_access_type_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_accesspolicy_data_access_type_description", "block_contents": "Model for GREGoR_R03_GRU_20250612_ftd_accesspolicy_data_access_type."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_accesspolicy_data_access_type_accesspolicy_id": {"name": "GREGoR_R03_GRU_20250612_ftd_accesspolicy_data_access_type_accesspolicy_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_accesspolicy_data_access_type_accesspolicy_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_accesspolicy_data_access_type_data_access_type": {"name": "GREGoR_R03_GRU_20250612_ftd_accesspolicy_data_access_type_data_access_type", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_accesspolicy_data_access_type_data_access_type", "block_contents": "Data Access Type"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sample_processing_description": {"name": "GREGoR_R03_GRU_20250612_ftd_sample_processing_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sample_processing_description", "block_contents": "Model for GREGoR_R03_GRU_20250612_ftd_sample_processing."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sample_processing_sample_id": {"name": "GREGoR_R03_GRU_20250612_ftd_sample_processing_sample_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sample_processing_sample_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sample_processing_processing": {"name": "GREGoR_R03_GRU_20250612_ftd_sample_processing_processing", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sample_processing_processing", "block_contents": "Processing that was applied to the Parent Sample or from the Biospecimen Collection that yielded this distinct sample"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_study_principal_investigator_description": {"name": "GREGoR_R03_GRU_20250612_ftd_study_principal_investigator_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_study_principal_investigator_description", "block_contents": "Model for GREGoR_R03_GRU_20250612_ftd_study_principal_investigator."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_study_principal_investigator_study_id": {"name": "GREGoR_R03_GRU_20250612_ftd_study_principal_investigator_study_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_study_principal_investigator_study_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_study_principal_investigator_principal_investigator": {"name": "GREGoR_R03_GRU_20250612_ftd_study_principal_investigator_principal_investigator", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_study_principal_investigator_principal_investigator", "block_contents": "Principal Investigator"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_file_description": {"name": "GREGoR_R03_GRU_20250612_ftd_file_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_file_description", "block_contents": "Model for GREGoR_R03_GRU_20250612_ftd_file."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_file_filename": {"name": "GREGoR_R03_GRU_20250612_ftd_file_filename", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_file_filename", "block_contents": "The name of the file."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_file_format": {"name": "GREGoR_R03_GRU_20250612_ftd_file_format", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_file_format", "block_contents": "The format of the file."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_file_data_type": {"name": "GREGoR_R03_GRU_20250612_ftd_file_data_type", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_file_data_type", "block_contents": "The type of data within this file."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_file_size": {"name": "GREGoR_R03_GRU_20250612_ftd_file_size", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_file_size", "block_contents": "Size of the file, in Bytes."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_file_drs_uri": {"name": "GREGoR_R03_GRU_20250612_ftd_file_drs_uri", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_file_drs_uri", "block_contents": "DRS location to access the data."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_file_file_metadata": {"name": "GREGoR_R03_GRU_20250612_ftd_file_file_metadata", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_file_file_metadata", "block_contents": "Additional metadata about the contents of the file, eg, genome reference build."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_file_has_access_policy": {"name": "GREGoR_R03_GRU_20250612_ftd_file_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_file_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_file_id": {"name": "GREGoR_R03_GRU_20250612_ftd_file_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_file_id", "block_contents": "ID associated with a class"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sample_storage_method_description": {"name": "GREGoR_R03_GRU_20250612_ftd_sample_storage_method_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sample_storage_method_description", "block_contents": "Model for GREGoR_R03_GRU_20250612_ftd_sample_storage_method."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sample_storage_method_sample_id": {"name": "GREGoR_R03_GRU_20250612_ftd_sample_storage_method_sample_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sample_storage_method_sample_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sample_storage_method_storage_method": {"name": "GREGoR_R03_GRU_20250612_ftd_sample_storage_method_storage_method", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sample_storage_method_storage_method", "block_contents": "Sample storage method, eg, Frozen or with additives"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_accesscontrolledrecord_description": {"name": "GREGoR_R03_GRU_20250612_ftd_accesscontrolledrecord_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_accesscontrolledrecord_description", "block_contents": "Model for GREGoR_R03_GRU_20250612_ftd_accesscontrolledrecord."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_accesscontrolledrecord_has_access_policy": {"name": "GREGoR_R03_GRU_20250612_ftd_accesscontrolledrecord_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_accesscontrolledrecord_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_accesscontrolledrecord_id": {"name": "GREGoR_R03_GRU_20250612_ftd_accesscontrolledrecord_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_accesscontrolledrecord_id", "block_contents": "ID associated with a class"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_biospecimencollection_description": {"name": "GREGoR_R03_GRU_20250612_ftd_biospecimencollection_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_biospecimencollection_description", "block_contents": "Model for GREGoR_R03_GRU_20250612_ftd_biospecimencollection."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_biospecimencollection_age_at_collection": {"name": "GREGoR_R03_GRU_20250612_ftd_biospecimencollection_age_at_collection", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_biospecimencollection_age_at_collection", "block_contents": "The age at which this biospecimen was collected."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_biospecimencollection_method": {"name": "GREGoR_R03_GRU_20250612_ftd_biospecimencollection_method", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_biospecimencollection_method", "block_contents": "The approach used to collect the biospecimen."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_biospecimencollection_site": {"name": "GREGoR_R03_GRU_20250612_ftd_biospecimencollection_site", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_biospecimencollection_site", "block_contents": "The location of the specimen collection."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_biospecimencollection_spatial_qualifier": {"name": "GREGoR_R03_GRU_20250612_ftd_biospecimencollection_spatial_qualifier", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_biospecimencollection_spatial_qualifier", "block_contents": "Any spatial/location qualifiers"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_biospecimencollection_laterality": {"name": "GREGoR_R03_GRU_20250612_ftd_biospecimencollection_laterality", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_biospecimencollection_laterality", "block_contents": "Laterality information for the site"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_biospecimencollection_has_access_policy": {"name": "GREGoR_R03_GRU_20250612_ftd_biospecimencollection_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_biospecimencollection_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_biospecimencollection_id": {"name": "GREGoR_R03_GRU_20250612_ftd_biospecimencollection_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_biospecimencollection_id", "block_contents": "ID associated with a class"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_source_data_description": {"name": "GREGoR_R03_GRU_20250612_ftd_demographics_source_data_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_source_data_description", "block_contents": "Model for GREGoR_R03_GRU_20250612_ftd_demographics_source_data."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_source_data_demographics_id": {"name": "GREGoR_R03_GRU_20250612_ftd_demographics_source_data_demographics_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_source_data_demographics_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_source_data_source_data_id": {"name": "GREGoR_R03_GRU_20250612_ftd_demographics_source_data_source_data_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_source_data_source_data_id", "block_contents": "The sources from which this assertion was derived"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_datasource_description": {"name": "GREGoR_R03_GRU_20250612_ftd_datasource_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_datasource_description", "block_contents": "Model for GREGoR_R03_GRU_20250612_ftd_datasource."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_datasource_snapshot_id": {"name": "GREGoR_R03_GRU_20250612_ftd_datasource_snapshot_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_datasource_snapshot_id", "block_contents": "The Terra Data Repository Snapshot ID."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_datasource_google_data_project": {"name": "GREGoR_R03_GRU_20250612_ftd_datasource_google_data_project", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_datasource_google_data_project", "block_contents": "The Google Data Project needed to query this snapshot in BigQuery."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_datasource_snapshot_dataset": {"name": "GREGoR_R03_GRU_20250612_ftd_datasource_snapshot_dataset", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_datasource_snapshot_dataset", "block_contents": "The Dataset within BigQuery where the table can be queried."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_datasource_table": {"name": "GREGoR_R03_GRU_20250612_ftd_datasource_table", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_datasource_table", "block_contents": "The table in the dataset that contains the row of interest."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_datasource_parameterized_query": {"name": "GREGoR_R03_GRU_20250612_ftd_datasource_parameterized_query", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_datasource_parameterized_query", "block_contents": "A parameterized query that contains the primary key fields and can be used to select specific rows. This should be formatted according to (https://cloud.google.com/bigquery/docs/parameterized-queries)[BigQuery instructions], including using named parameters."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_datasource_id": {"name": "GREGoR_R03_GRU_20250612_ftd_datasource_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_datasource_id", "block_contents": "ID associated with a class"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sample_description": {"name": "GREGoR_R03_GRU_20250612_ftd_sample_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sample_description", "block_contents": "Model for GREGoR_R03_GRU_20250612_ftd_sample."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sample_parent_sample": {"name": "GREGoR_R03_GRU_20250612_ftd_sample_parent_sample", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sample_parent_sample", "block_contents": "Sample from which this sample is derived"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sample_sample_type": {"name": "GREGoR_R03_GRU_20250612_ftd_sample_sample_type", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sample_sample_type", "block_contents": "Type of material of which this Sample is comprised"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sample_availablity_status": {"name": "GREGoR_R03_GRU_20250612_ftd_sample_availablity_status", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sample_availablity_status", "block_contents": "Can this Sample be requested for further analysis?"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sample_quantity_number": {"name": "GREGoR_R03_GRU_20250612_ftd_sample_quantity_number", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sample_quantity_number", "block_contents": "The total quantity of the specimen"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sample_quantity_units": {"name": "GREGoR_R03_GRU_20250612_ftd_sample_quantity_units", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sample_quantity_units", "block_contents": "The structured term defining the units of the quantity."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sample_has_access_policy": {"name": "GREGoR_R03_GRU_20250612_ftd_sample_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sample_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sample_id": {"name": "GREGoR_R03_GRU_20250612_ftd_sample_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sample_id", "block_contents": "ID associated with a class"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sample_subject_id": {"name": "GREGoR_R03_GRU_20250612_ftd_sample_subject_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sample_subject_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sample_biospecimen_collection_id": {"name": "GREGoR_R03_GRU_20250612_ftd_sample_biospecimen_collection_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sample_biospecimen_collection_id", "block_contents": "Biospecimen Collection that generated this sample."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_accesspolicy_description": {"name": "GREGoR_R03_GRU_20250612_ftd_accesspolicy_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_accesspolicy_description", "block_contents": "Model for GREGoR_R03_GRU_20250612_ftd_accesspolicy."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_accesspolicy_disease_limitation": {"name": "GREGoR_R03_GRU_20250612_ftd_accesspolicy_disease_limitation", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_accesspolicy_disease_limitation", "block_contents": "Disease Use Limitations"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_accesspolicy_website": {"name": "GREGoR_R03_GRU_20250612_ftd_accesspolicy_website", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_accesspolicy_website", "block_contents": "Website"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_accesspolicy_id": {"name": "GREGoR_R03_GRU_20250612_ftd_accesspolicy_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_accesspolicy_id", "block_contents": "ID associated with a class"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_file_subject_description": {"name": "GREGoR_R03_GRU_20250612_ftd_file_subject_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_file_subject_description", "block_contents": "Model for GREGoR_R03_GRU_20250612_ftd_file_subject."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_file_subject_file_id": {"name": "GREGoR_R03_GRU_20250612_ftd_file_subject_file_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_file_subject_file_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_file_subject_subject_id": {"name": "GREGoR_R03_GRU_20250612_ftd_file_subject_subject_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_file_subject_subject_id", "block_contents": "The Subject(s) which this file describes."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_study_description": {"name": "GREGoR_R03_GRU_20250612_ftd_study_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_study_description", "block_contents": "Model for GREGoR_R03_GRU_20250612_ftd_study."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_study_parent_study_id": {"name": "GREGoR_R03_GRU_20250612_ftd_study_parent_study_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_study_parent_study_id", "block_contents": "Parent Study ID"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_study_study_title": {"name": "GREGoR_R03_GRU_20250612_ftd_study_study_title", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_study_study_title", "block_contents": "Study Title"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_study_id": {"name": "GREGoR_R03_GRU_20250612_ftd_study_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_study_id", "block_contents": "ID associated with a class"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_family_family_relationships_description": {"name": "GREGoR_R03_GRU_20250612_ftd_family_family_relationships_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_family_family_relationships_description", "block_contents": "Model for GREGoR_R03_GRU_20250612_ftd_family_family_relationships."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_family_family_relationships_family_id": {"name": "GREGoR_R03_GRU_20250612_ftd_family_family_relationships_family_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_family_family_relationships_family_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_family_family_relationships_family_relationships_id": {"name": "GREGoR_R03_GRU_20250612_ftd_family_family_relationships_family_relationships_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_family_family_relationships_family_relationships_id", "block_contents": "Family relationships associated with this family."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_datasource_external_id_description": {"name": "GREGoR_R03_GRU_20250612_ftd_datasource_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_datasource_external_id_description", "block_contents": "Model for GREGoR_R03_GRU_20250612_ftd_datasource_external_id."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_datasource_external_id_datasource_id": {"name": "GREGoR_R03_GRU_20250612_ftd_datasource_external_id_datasource_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_datasource_external_id_datasource_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_datasource_external_id_external_id": {"name": "GREGoR_R03_GRU_20250612_ftd_datasource_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_datasource_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_familymember_description": {"name": "GREGoR_R03_GRU_20250612_ftd_familymember_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_familymember_description", "block_contents": "Model for GREGoR_R03_GRU_20250612_ftd_familymember."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_familymember_family_member": {"name": "GREGoR_R03_GRU_20250612_ftd_familymember_family_member", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_familymember_family_member", "block_contents": "The family member Subject who is the relationship \"subject\"."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_familymember_family_role": {"name": "GREGoR_R03_GRU_20250612_ftd_familymember_family_role", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_familymember_family_role", "block_contents": "The \"role\" of this indiviudal in this family."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_familymember_has_access_policy": {"name": "GREGoR_R03_GRU_20250612_ftd_familymember_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_familymember_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_familymember_id": {"name": "GREGoR_R03_GRU_20250612_ftd_familymember_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_familymember_id", "block_contents": "ID associated with a class"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_familymember_family_id": {"name": "GREGoR_R03_GRU_20250612_ftd_familymember_family_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_familymember_family_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_race_description": {"name": "GREGoR_R03_GRU_20250612_ftd_demographics_race_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_race_description", "block_contents": "Model for GREGoR_R03_GRU_20250612_ftd_demographics_race."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_race_demographics_id": {"name": "GREGoR_R03_GRU_20250612_ftd_demographics_race_demographics_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_race_demographics_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_race_race": {"name": "GREGoR_R03_GRU_20250612_ftd_demographics_race_race", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_race_race", "block_contents": "Reported race as defined by the 1997 OMB directives."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sample_external_id_description": {"name": "GREGoR_R03_GRU_20250612_ftd_sample_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sample_external_id_description", "block_contents": "Model for GREGoR_R03_GRU_20250612_ftd_sample_external_id."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sample_external_id_sample_id": {"name": "GREGoR_R03_GRU_20250612_ftd_sample_external_id_sample_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sample_external_id_sample_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sample_external_id_external_id": {"name": "GREGoR_R03_GRU_20250612_ftd_sample_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_sample_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_familyrelationship_external_id_description": {"name": "GREGoR_R03_GRU_20250612_ftd_familyrelationship_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_familyrelationship_external_id_description", "block_contents": "Model for GREGoR_R03_GRU_20250612_ftd_familyrelationship_external_id."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_familyrelationship_external_id_familyrelationship_id": {"name": "GREGoR_R03_GRU_20250612_ftd_familyrelationship_external_id_familyrelationship_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_familyrelationship_external_id_familyrelationship_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_familyrelationship_external_id_external_id": {"name": "GREGoR_R03_GRU_20250612_ftd_familyrelationship_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_familyrelationship_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code_description": {"name": "GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code_description", "block_contents": "Model for GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code_accesspolicy_id": {"name": "GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code_accesspolicy_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code_accesspolicy_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code_access_policy_code": {"name": "GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code_access_policy_code", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code_access_policy_code", "block_contents": "Access Policy Code"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_external_id_description": {"name": "GREGoR_R03_GRU_20250612_ftd_demographics_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_external_id_description", "block_contents": "Model for GREGoR_R03_GRU_20250612_ftd_demographics_external_id."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_external_id_demographics_id": {"name": "GREGoR_R03_GRU_20250612_ftd_demographics_external_id_demographics_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_external_id_demographics_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_external_id_external_id": {"name": "GREGoR_R03_GRU_20250612_ftd_demographics_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_biospecimencollection_external_id_description": {"name": "GREGoR_R03_GRU_20250612_ftd_biospecimencollection_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_biospecimencollection_external_id_description", "block_contents": "Model for GREGoR_R03_GRU_20250612_ftd_biospecimencollection_external_id."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_biospecimencollection_external_id_biospecimencollection_id": {"name": "GREGoR_R03_GRU_20250612_ftd_biospecimencollection_external_id_biospecimencollection_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_biospecimencollection_external_id_biospecimencollection_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_biospecimencollection_external_id_external_id": {"name": "GREGoR_R03_GRU_20250612_ftd_biospecimencollection_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_biospecimencollection_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_filemetadata_external_id_description": {"name": "GREGoR_R03_GRU_20250612_ftd_filemetadata_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_filemetadata_external_id_description", "block_contents": "Model for GREGoR_R03_GRU_20250612_ftd_filemetadata_external_id."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_filemetadata_external_id_filemetadata_id": {"name": "GREGoR_R03_GRU_20250612_ftd_filemetadata_external_id_filemetadata_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_filemetadata_external_id_filemetadata_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_filemetadata_external_id_external_id": {"name": "GREGoR_R03_GRU_20250612_ftd_filemetadata_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_filemetadata_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_aliquot_external_id_description": {"name": "GREGoR_R03_GRU_20250612_ftd_aliquot_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_aliquot_external_id_description", "block_contents": "Model for GREGoR_R03_GRU_20250612_ftd_aliquot_external_id."}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_aliquot_external_id_aliquot_id": {"name": "GREGoR_R03_GRU_20250612_ftd_aliquot_external_id_aliquot_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_aliquot_external_id_aliquot_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GREGoR_R03_GRU_20250612_ftd_aliquot_external_id_external_id": {"name": "GREGoR_R03_GRU_20250612_ftd_aliquot_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "original_file_path": "models/GREGoR_R03_GRU_20250612/docs/column_descriptions.md", "unique_id": "doc.ftd.GREGoR_R03_GRU_20250612_ftd_aliquot_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.cmg_bh_ftd_subject_external_id_description": {"name": "cmg_bh_ftd_subject_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_subject_external_id_description", "block_contents": "Model for cmg_bh_ftd_subject_external_id."}, "doc.ftd.cmg_bh_ftd_subject_external_id_subject_id": {"name": "cmg_bh_ftd_subject_external_id_subject_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_subject_external_id_subject_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.cmg_bh_ftd_subject_external_id_external_id": {"name": "cmg_bh_ftd_subject_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_subject_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.cmg_bh_ftd_file_sample_description": {"name": "cmg_bh_ftd_file_sample_description", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_file_sample_description", "block_contents": "Model for cmg_bh_ftd_file_sample."}, "doc.ftd.cmg_bh_ftd_file_sample_file_id": {"name": "cmg_bh_ftd_file_sample_file_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_file_sample_file_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.cmg_bh_ftd_file_sample_sample_id": {"name": "cmg_bh_ftd_file_sample_sample_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_file_sample_sample_id", "block_contents": "The Samples(s) used to generate data in this file."}, "doc.ftd.cmg_bh_ftd_filemetadata_description": {"name": "cmg_bh_ftd_filemetadata_description", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_filemetadata_description", "block_contents": "Model for cmg_bh_ftd_filemetadata."}, "doc.ftd.cmg_bh_ftd_filemetadata_code": {"name": "cmg_bh_ftd_filemetadata_code", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_filemetadata_code", "block_contents": "The structured term defining the meaning of the assertion."}, "doc.ftd.cmg_bh_ftd_filemetadata_display": {"name": "cmg_bh_ftd_filemetadata_display", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_filemetadata_display", "block_contents": "The friendly display string of the coded term"}, "doc.ftd.cmg_bh_ftd_filemetadata_value_code": {"name": "cmg_bh_ftd_filemetadata_value_code", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_filemetadata_value_code", "block_contents": "The structured term defining the value of the assertion."}, "doc.ftd.cmg_bh_ftd_filemetadata_value_display": {"name": "cmg_bh_ftd_filemetadata_value_display", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_filemetadata_value_display", "block_contents": "The friendly display string of the coded term for the value of the assertion."}, "doc.ftd.cmg_bh_ftd_filemetadata_id": {"name": "cmg_bh_ftd_filemetadata_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_filemetadata_id", "block_contents": "ID associated with a class"}, "doc.ftd.cmg_bh_ftd_sample_external_id_description": {"name": "cmg_bh_ftd_sample_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_sample_external_id_description", "block_contents": "Model for cmg_bh_ftd_sample_external_id."}, "doc.ftd.cmg_bh_ftd_sample_external_id_sample_id": {"name": "cmg_bh_ftd_sample_external_id_sample_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_sample_external_id_sample_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.cmg_bh_ftd_sample_external_id_external_id": {"name": "cmg_bh_ftd_sample_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_sample_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.cmg_bh_ftd_file_description": {"name": "cmg_bh_ftd_file_description", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_file_description", "block_contents": "Model for cmg_bh_ftd_file."}, "doc.ftd.cmg_bh_ftd_file_filename": {"name": "cmg_bh_ftd_file_filename", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_file_filename", "block_contents": "The name of the file."}, "doc.ftd.cmg_bh_ftd_file_format": {"name": "cmg_bh_ftd_file_format", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_file_format", "block_contents": "The format of the file."}, "doc.ftd.cmg_bh_ftd_file_data_type": {"name": "cmg_bh_ftd_file_data_type", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_file_data_type", "block_contents": "The type of data within this file."}, "doc.ftd.cmg_bh_ftd_file_size": {"name": "cmg_bh_ftd_file_size", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_file_size", "block_contents": "Size of the file, in Bytes."}, "doc.ftd.cmg_bh_ftd_file_drs_uri": {"name": "cmg_bh_ftd_file_drs_uri", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_file_drs_uri", "block_contents": "DRS location to access the data."}, "doc.ftd.cmg_bh_ftd_file_file_metadata": {"name": "cmg_bh_ftd_file_file_metadata", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_file_file_metadata", "block_contents": "Additional metadata about the contents of the file, eg, genome reference build."}, "doc.ftd.cmg_bh_ftd_file_has_access_policy": {"name": "cmg_bh_ftd_file_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_file_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.cmg_bh_ftd_file_id": {"name": "cmg_bh_ftd_file_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_file_id", "block_contents": "ID associated with a class"}, "doc.ftd.cmg_bh_ftd_familymember_description": {"name": "cmg_bh_ftd_familymember_description", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_familymember_description", "block_contents": "Model for cmg_bh_ftd_familymember."}, "doc.ftd.cmg_bh_ftd_familymember_family_member": {"name": "cmg_bh_ftd_familymember_family_member", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_familymember_family_member", "block_contents": "The family member Subject who is the relationship \"subject\"."}, "doc.ftd.cmg_bh_ftd_familymember_family_role": {"name": "cmg_bh_ftd_familymember_family_role", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_familymember_family_role", "block_contents": "The \"role\" of this indiviudal in this family."}, "doc.ftd.cmg_bh_ftd_familymember_has_access_policy": {"name": "cmg_bh_ftd_familymember_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_familymember_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.cmg_bh_ftd_familymember_id": {"name": "cmg_bh_ftd_familymember_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_familymember_id", "block_contents": "ID associated with a class"}, "doc.ftd.cmg_bh_ftd_familymember_family_id": {"name": "cmg_bh_ftd_familymember_family_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_familymember_family_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.cmg_bh_ftd_subjectassertion_source_data_description": {"name": "cmg_bh_ftd_subjectassertion_source_data_description", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_subjectassertion_source_data_description", "block_contents": "Model for cmg_bh_ftd_subjectassertion_source_data."}, "doc.ftd.cmg_bh_ftd_subjectassertion_source_data_subjectassertion_id": {"name": "cmg_bh_ftd_subjectassertion_source_data_subjectassertion_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_subjectassertion_source_data_subjectassertion_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.cmg_bh_ftd_subjectassertion_source_data_source_data_id": {"name": "cmg_bh_ftd_subjectassertion_source_data_source_data_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_subjectassertion_source_data_source_data_id", "block_contents": "The sources from which this assertion was derived"}, "doc.ftd.cmg_bh_ftd_study_external_id_description": {"name": "cmg_bh_ftd_study_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_study_external_id_description", "block_contents": "Model for cmg_bh_ftd_study_external_id."}, "doc.ftd.cmg_bh_ftd_study_external_id_study_id": {"name": "cmg_bh_ftd_study_external_id_study_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_study_external_id_study_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.cmg_bh_ftd_study_external_id_external_id": {"name": "cmg_bh_ftd_study_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_study_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.cmg_bh_ftd_sourcedata_external_id_description": {"name": "cmg_bh_ftd_sourcedata_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_sourcedata_external_id_description", "block_contents": "Model for cmg_bh_ftd_sourcedata_external_id."}, "doc.ftd.cmg_bh_ftd_sourcedata_external_id_sourcedata_id": {"name": "cmg_bh_ftd_sourcedata_external_id_sourcedata_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_sourcedata_external_id_sourcedata_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.cmg_bh_ftd_sourcedata_external_id_external_id": {"name": "cmg_bh_ftd_sourcedata_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_sourcedata_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.cmg_bh_ftd_sample_storage_method_description": {"name": "cmg_bh_ftd_sample_storage_method_description", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_sample_storage_method_description", "block_contents": "Model for cmg_bh_ftd_sample_storage_method."}, "doc.ftd.cmg_bh_ftd_sample_storage_method_sample_id": {"name": "cmg_bh_ftd_sample_storage_method_sample_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_sample_storage_method_sample_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.cmg_bh_ftd_sample_storage_method_storage_method": {"name": "cmg_bh_ftd_sample_storage_method_storage_method", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_sample_storage_method_storage_method", "block_contents": "Sample storage method, eg, Frozen or with additives"}, "doc.ftd.cmg_bh_ftd_sourcedata_query_parameter_description": {"name": "cmg_bh_ftd_sourcedata_query_parameter_description", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_sourcedata_query_parameter_description", "block_contents": "Model for cmg_bh_ftd_sourcedata_query_parameter."}, "doc.ftd.cmg_bh_ftd_sourcedata_query_parameter_sourcedata_id": {"name": "cmg_bh_ftd_sourcedata_query_parameter_sourcedata_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_sourcedata_query_parameter_sourcedata_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.cmg_bh_ftd_sourcedata_query_parameter_query_parameter": {"name": "cmg_bh_ftd_sourcedata_query_parameter_query_parameter", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_sourcedata_query_parameter_query_parameter", "block_contents": "One or more query parameters used to select the specific row. It will leverage the parameterized_query defined by a data_source. This should be formatted according to (https://cloud.google.com/bigquery/docs/parameterized-queries)[BigQuery instructions], specifically the bq CLI version with named parameters, ie, \"<parameter name>:<data type>:<value>\"."}, "doc.ftd.cmg_bh_ftd_biospecimencollection_external_id_description": {"name": "cmg_bh_ftd_biospecimencollection_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_biospecimencollection_external_id_description", "block_contents": "Model for cmg_bh_ftd_biospecimencollection_external_id."}, "doc.ftd.cmg_bh_ftd_biospecimencollection_external_id_biospecimencollection_id": {"name": "cmg_bh_ftd_biospecimencollection_external_id_biospecimencollection_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_biospecimencollection_external_id_biospecimencollection_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.cmg_bh_ftd_biospecimencollection_external_id_external_id": {"name": "cmg_bh_ftd_biospecimencollection_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_biospecimencollection_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.cmg_bh_ftd_datasource_external_id_description": {"name": "cmg_bh_ftd_datasource_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_datasource_external_id_description", "block_contents": "Model for cmg_bh_ftd_datasource_external_id."}, "doc.ftd.cmg_bh_ftd_datasource_external_id_datasource_id": {"name": "cmg_bh_ftd_datasource_external_id_datasource_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_datasource_external_id_datasource_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.cmg_bh_ftd_datasource_external_id_external_id": {"name": "cmg_bh_ftd_datasource_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_datasource_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.cmg_bh_ftd_sample_processing_description": {"name": "cmg_bh_ftd_sample_processing_description", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_sample_processing_description", "block_contents": "Model for cmg_bh_ftd_sample_processing."}, "doc.ftd.cmg_bh_ftd_sample_processing_sample_id": {"name": "cmg_bh_ftd_sample_processing_sample_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_sample_processing_sample_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.cmg_bh_ftd_sample_processing_processing": {"name": "cmg_bh_ftd_sample_processing_processing", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_sample_processing_processing", "block_contents": "Processing that was applied to the Parent Sample or from the Biospecimen Collection that yielded this distinct sample"}, "doc.ftd.cmg_bh_ftd_subject_description": {"name": "cmg_bh_ftd_subject_description", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_subject_description", "block_contents": "Model for cmg_bh_ftd_subject."}, "doc.ftd.cmg_bh_ftd_subject_subject_type": {"name": "cmg_bh_ftd_subject_subject_type", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_subject_subject_type", "block_contents": "Type of entity this record represents"}, "doc.ftd.cmg_bh_ftd_subject_organism_type": {"name": "cmg_bh_ftd_subject_organism_type", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_subject_organism_type", "block_contents": "Organism Type Label"}, "doc.ftd.cmg_bh_ftd_subject_has_access_policy": {"name": "cmg_bh_ftd_subject_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_subject_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.cmg_bh_ftd_subject_id": {"name": "cmg_bh_ftd_subject_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_subject_id", "block_contents": "ID associated with a class"}, "doc.ftd.cmg_bh_ftd_subject_has_demographics_id": {"name": "cmg_bh_ftd_subject_has_demographics_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_subject_has_demographics_id", "block_contents": "A demographic summary of the participant."}, "doc.ftd.cmg_bh_ftd_accesspolicy_description": {"name": "cmg_bh_ftd_accesspolicy_description", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_accesspolicy_description", "block_contents": "Model for cmg_bh_ftd_accesspolicy."}, "doc.ftd.cmg_bh_ftd_accesspolicy_disease_limitation": {"name": "cmg_bh_ftd_accesspolicy_disease_limitation", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_accesspolicy_disease_limitation", "block_contents": "Disease Use Limitations"}, "doc.ftd.cmg_bh_ftd_accesspolicy_website": {"name": "cmg_bh_ftd_accesspolicy_website", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_accesspolicy_website", "block_contents": "Website"}, "doc.ftd.cmg_bh_ftd_accesspolicy_id": {"name": "cmg_bh_ftd_accesspolicy_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_accesspolicy_id", "block_contents": "ID associated with a class"}, "doc.ftd.cmg_bh_ftd_accesspolicy_data_access_type_description": {"name": "cmg_bh_ftd_accesspolicy_data_access_type_description", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_accesspolicy_data_access_type_description", "block_contents": "Model for cmg_bh_ftd_accesspolicy_data_access_type."}, "doc.ftd.cmg_bh_ftd_accesspolicy_data_access_type_accesspolicy_id": {"name": "cmg_bh_ftd_accesspolicy_data_access_type_accesspolicy_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_accesspolicy_data_access_type_accesspolicy_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.cmg_bh_ftd_accesspolicy_data_access_type_data_access_type": {"name": "cmg_bh_ftd_accesspolicy_data_access_type_data_access_type", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_accesspolicy_data_access_type_data_access_type", "block_contents": "Data Access Type"}, "doc.ftd.cmg_bh_ftd_demographics_source_data_description": {"name": "cmg_bh_ftd_demographics_source_data_description", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_demographics_source_data_description", "block_contents": "Model for cmg_bh_ftd_demographics_source_data."}, "doc.ftd.cmg_bh_ftd_demographics_source_data_demographics_id": {"name": "cmg_bh_ftd_demographics_source_data_demographics_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_demographics_source_data_demographics_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.cmg_bh_ftd_demographics_source_data_source_data_id": {"name": "cmg_bh_ftd_demographics_source_data_source_data_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_demographics_source_data_source_data_id", "block_contents": "The sources from which this assertion was derived"}, "doc.ftd.cmg_bh_ftd_sample_description": {"name": "cmg_bh_ftd_sample_description", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_sample_description", "block_contents": "Model for cmg_bh_ftd_sample."}, "doc.ftd.cmg_bh_ftd_sample_parent_sample": {"name": "cmg_bh_ftd_sample_parent_sample", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_sample_parent_sample", "block_contents": "Sample from which this sample is derived"}, "doc.ftd.cmg_bh_ftd_sample_sample_type": {"name": "cmg_bh_ftd_sample_sample_type", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_sample_sample_type", "block_contents": "Type of material of which this Sample is comprised"}, "doc.ftd.cmg_bh_ftd_sample_availablity_status": {"name": "cmg_bh_ftd_sample_availablity_status", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_sample_availablity_status", "block_contents": "Can this Sample be requested for further analysis?"}, "doc.ftd.cmg_bh_ftd_sample_quantity_number": {"name": "cmg_bh_ftd_sample_quantity_number", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_sample_quantity_number", "block_contents": "The total quantity of the specimen"}, "doc.ftd.cmg_bh_ftd_sample_quantity_units": {"name": "cmg_bh_ftd_sample_quantity_units", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_sample_quantity_units", "block_contents": "The structured term defining the units of the quantity."}, "doc.ftd.cmg_bh_ftd_sample_has_access_policy": {"name": "cmg_bh_ftd_sample_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_sample_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.cmg_bh_ftd_sample_id": {"name": "cmg_bh_ftd_sample_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_sample_id", "block_contents": "ID associated with a class"}, "doc.ftd.cmg_bh_ftd_sample_subject_id": {"name": "cmg_bh_ftd_sample_subject_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_sample_subject_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.cmg_bh_ftd_sample_biospecimen_collection_id": {"name": "cmg_bh_ftd_sample_biospecimen_collection_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_sample_biospecimen_collection_id", "block_contents": "Biospecimen Collection that generated this sample."}, "doc.ftd.cmg_bh_ftd_familyrelationship_description": {"name": "cmg_bh_ftd_familyrelationship_description", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_familyrelationship_description", "block_contents": "Model for cmg_bh_ftd_familyrelationship."}, "doc.ftd.cmg_bh_ftd_familyrelationship_family_member": {"name": "cmg_bh_ftd_familyrelationship_family_member", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_familyrelationship_family_member", "block_contents": "The family member Subject who is the relationship \"subject\"."}, "doc.ftd.cmg_bh_ftd_familyrelationship_other_family_member": {"name": "cmg_bh_ftd_familyrelationship_other_family_member", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_familyrelationship_other_family_member", "block_contents": "The family member Subject for the relationship \"object\"."}, "doc.ftd.cmg_bh_ftd_familyrelationship_relationship_code": {"name": "cmg_bh_ftd_familyrelationship_relationship_code", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_familyrelationship_relationship_code", "block_contents": "Code definting the relationship predicate. Relationship of the \"Family Member\" to the \"Other Family Member\" (i.e. mother, father, etc). Code must be from the HL7 [FamilyMember ValueSet](https://terminology.hl7.org/6.2.0/ValueSet-v3-FamilyMember.html)"}, "doc.ftd.cmg_bh_ftd_familyrelationship_has_access_policy": {"name": "cmg_bh_ftd_familyrelationship_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_familyrelationship_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.cmg_bh_ftd_familyrelationship_id": {"name": "cmg_bh_ftd_familyrelationship_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_familyrelationship_id", "block_contents": "ID associated with a class"}, "doc.ftd.cmg_bh_ftd_familymember_external_id_description": {"name": "cmg_bh_ftd_familymember_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_familymember_external_id_description", "block_contents": "Model for cmg_bh_ftd_familymember_external_id."}, "doc.ftd.cmg_bh_ftd_familymember_external_id_familymember_id": {"name": "cmg_bh_ftd_familymember_external_id_familymember_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_familymember_external_id_familymember_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.cmg_bh_ftd_familymember_external_id_external_id": {"name": "cmg_bh_ftd_familymember_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_familymember_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.cmg_bh_ftd_family_family_relationships_description": {"name": "cmg_bh_ftd_family_family_relationships_description", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_family_family_relationships_description", "block_contents": "Model for cmg_bh_ftd_family_family_relationships."}, "doc.ftd.cmg_bh_ftd_family_family_relationships_family_id": {"name": "cmg_bh_ftd_family_family_relationships_family_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_family_family_relationships_family_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.cmg_bh_ftd_family_family_relationships_family_relationships_id": {"name": "cmg_bh_ftd_family_family_relationships_family_relationships_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_family_family_relationships_family_relationships_id", "block_contents": "Family relationships associated with this family."}, "doc.ftd.cmg_bh_ftd_study_description": {"name": "cmg_bh_ftd_study_description", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_study_description", "block_contents": "Model for cmg_bh_ftd_study."}, "doc.ftd.cmg_bh_ftd_study_parent_study_id": {"name": "cmg_bh_ftd_study_parent_study_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_study_parent_study_id", "block_contents": "Parent Study ID"}, "doc.ftd.cmg_bh_ftd_study_study_title": {"name": "cmg_bh_ftd_study_study_title", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_study_study_title", "block_contents": "Study Title"}, "doc.ftd.cmg_bh_ftd_study_id": {"name": "cmg_bh_ftd_study_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_study_id", "block_contents": "ID associated with a class"}, "doc.ftd.cmg_bh_ftd_sourcedata_description": {"name": "cmg_bh_ftd_sourcedata_description", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_sourcedata_description", "block_contents": "Model for cmg_bh_ftd_sourcedata."}, "doc.ftd.cmg_bh_ftd_sourcedata_data_source": {"name": "cmg_bh_ftd_sourcedata_data_source", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_sourcedata_data_source", "block_contents": "Defines the location of data and how to query it."}, "doc.ftd.cmg_bh_ftd_sourcedata_has_access_policy": {"name": "cmg_bh_ftd_sourcedata_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_sourcedata_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.cmg_bh_ftd_sourcedata_id": {"name": "cmg_bh_ftd_sourcedata_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_sourcedata_id", "block_contents": "ID associated with a class"}, "doc.ftd.cmg_bh_ftd_file_subject_description": {"name": "cmg_bh_ftd_file_subject_description", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_file_subject_description", "block_contents": "Model for cmg_bh_ftd_file_subject."}, "doc.ftd.cmg_bh_ftd_file_subject_file_id": {"name": "cmg_bh_ftd_file_subject_file_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_file_subject_file_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.cmg_bh_ftd_file_subject_subject_id": {"name": "cmg_bh_ftd_file_subject_subject_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_file_subject_subject_id", "block_contents": "The Subject(s) which this file describes."}, "doc.ftd.cmg_bh_ftd_datasource_description": {"name": "cmg_bh_ftd_datasource_description", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_datasource_description", "block_contents": "Model for cmg_bh_ftd_datasource."}, "doc.ftd.cmg_bh_ftd_datasource_snapshot_id": {"name": "cmg_bh_ftd_datasource_snapshot_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_datasource_snapshot_id", "block_contents": "The Terra Data Repository Snapshot ID."}, "doc.ftd.cmg_bh_ftd_datasource_google_data_project": {"name": "cmg_bh_ftd_datasource_google_data_project", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_datasource_google_data_project", "block_contents": "The Google Data Project needed to query this snapshot in BigQuery."}, "doc.ftd.cmg_bh_ftd_datasource_snapshot_dataset": {"name": "cmg_bh_ftd_datasource_snapshot_dataset", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_datasource_snapshot_dataset", "block_contents": "The Dataset within BigQuery where the table can be queried."}, "doc.ftd.cmg_bh_ftd_datasource_table": {"name": "cmg_bh_ftd_datasource_table", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_datasource_table", "block_contents": "The table in the dataset that contains the row of interest."}, "doc.ftd.cmg_bh_ftd_datasource_parameterized_query": {"name": "cmg_bh_ftd_datasource_parameterized_query", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_datasource_parameterized_query", "block_contents": "A parameterized query that contains the primary key fields and can be used to select specific rows. This should be formatted according to (https://cloud.google.com/bigquery/docs/parameterized-queries)[BigQuery instructions], including using named parameters."}, "doc.ftd.cmg_bh_ftd_datasource_id": {"name": "cmg_bh_ftd_datasource_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_datasource_id", "block_contents": "ID associated with a class"}, "doc.ftd.cmg_bh_ftd_accesscontrolledrecord_description": {"name": "cmg_bh_ftd_accesscontrolledrecord_description", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_accesscontrolledrecord_description", "block_contents": "Model for cmg_bh_ftd_accesscontrolledrecord."}, "doc.ftd.cmg_bh_ftd_accesscontrolledrecord_has_access_policy": {"name": "cmg_bh_ftd_accesscontrolledrecord_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_accesscontrolledrecord_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.cmg_bh_ftd_accesscontrolledrecord_id": {"name": "cmg_bh_ftd_accesscontrolledrecord_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_accesscontrolledrecord_id", "block_contents": "ID associated with a class"}, "doc.ftd.cmg_bh_ftd_demographics_race_description": {"name": "cmg_bh_ftd_demographics_race_description", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_demographics_race_description", "block_contents": "Model for cmg_bh_ftd_demographics_race."}, "doc.ftd.cmg_bh_ftd_demographics_race_demographics_id": {"name": "cmg_bh_ftd_demographics_race_demographics_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_demographics_race_demographics_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.cmg_bh_ftd_demographics_race_race": {"name": "cmg_bh_ftd_demographics_race_race", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_demographics_race_race", "block_contents": "Reported race as defined by the 1997 OMB directives."}, "doc.ftd.cmg_bh_ftd_family_external_id_description": {"name": "cmg_bh_ftd_family_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_family_external_id_description", "block_contents": "Model for cmg_bh_ftd_family_external_id."}, "doc.ftd.cmg_bh_ftd_family_external_id_family_id": {"name": "cmg_bh_ftd_family_external_id_family_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_family_external_id_family_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.cmg_bh_ftd_family_external_id_external_id": {"name": "cmg_bh_ftd_family_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_family_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.cmg_bh_ftd_demographics_description": {"name": "cmg_bh_ftd_demographics_description", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_demographics_description", "block_contents": "Model for cmg_bh_ftd_demographics."}, "doc.ftd.cmg_bh_ftd_demographics_date_of_birth": {"name": "cmg_bh_ftd_demographics_date_of_birth", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_demographics_date_of_birth", "block_contents": "Date at which the individual was born. May be impacted by privacy rules described in date_of_birth_type."}, "doc.ftd.cmg_bh_ftd_demographics_date_of_birth_type": {"name": "cmg_bh_ftd_demographics_date_of_birth_type", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_demographics_date_of_birth_type", "block_contents": "Privacy rule modification applied to date_of_birth."}, "doc.ftd.cmg_bh_ftd_demographics_sex": {"name": "cmg_bh_ftd_demographics_sex", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_demographics_sex", "block_contents": "Sex of the individual"}, "doc.ftd.cmg_bh_ftd_demographics_sex_display": {"name": "cmg_bh_ftd_demographics_sex_display", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_demographics_sex_display", "block_contents": "The friendly display string of the coded term for Sex"}, "doc.ftd.cmg_bh_ftd_demographics_race_display": {"name": "cmg_bh_ftd_demographics_race_display", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_demographics_race_display", "block_contents": "The friendly display string of the coded term(s) for Race"}, "doc.ftd.cmg_bh_ftd_demographics_ethnicity": {"name": "cmg_bh_ftd_demographics_ethnicity", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_demographics_ethnicity", "block_contents": "Reported ethnicity as defined by the 1997 OMB directives."}, "doc.ftd.cmg_bh_ftd_demographics_ethnicity_display": {"name": "cmg_bh_ftd_demographics_ethnicity_display", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_demographics_ethnicity_display", "block_contents": "The friendly display string of the coded term for Ethnicity"}, "doc.ftd.cmg_bh_ftd_demographics_age_at_last_vital_status": {"name": "cmg_bh_ftd_demographics_age_at_last_vital_status", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_demographics_age_at_last_vital_status", "block_contents": "Age at last vital status in decimal years."}, "doc.ftd.cmg_bh_ftd_demographics_vital_status": {"name": "cmg_bh_ftd_demographics_vital_status", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_demographics_vital_status", "block_contents": "Vital Status"}, "doc.ftd.cmg_bh_ftd_demographics_has_access_policy": {"name": "cmg_bh_ftd_demographics_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_demographics_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.cmg_bh_ftd_demographics_id": {"name": "cmg_bh_ftd_demographics_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_demographics_id", "block_contents": "ID associated with a class"}, "doc.ftd.cmg_bh_ftd_subjectassertion_external_id_description": {"name": "cmg_bh_ftd_subjectassertion_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_subjectassertion_external_id_description", "block_contents": "Model for cmg_bh_ftd_subjectassertion_external_id."}, "doc.ftd.cmg_bh_ftd_subjectassertion_external_id_subjectassertion_id": {"name": "cmg_bh_ftd_subjectassertion_external_id_subjectassertion_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_subjectassertion_external_id_subjectassertion_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.cmg_bh_ftd_subjectassertion_external_id_external_id": {"name": "cmg_bh_ftd_subjectassertion_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_subjectassertion_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.cmg_bh_ftd_study_principal_investigator_description": {"name": "cmg_bh_ftd_study_principal_investigator_description", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_study_principal_investigator_description", "block_contents": "Model for cmg_bh_ftd_study_principal_investigator."}, "doc.ftd.cmg_bh_ftd_study_principal_investigator_study_id": {"name": "cmg_bh_ftd_study_principal_investigator_study_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_study_principal_investigator_study_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.cmg_bh_ftd_study_principal_investigator_principal_investigator": {"name": "cmg_bh_ftd_study_principal_investigator_principal_investigator", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_study_principal_investigator_principal_investigator", "block_contents": "Principal Investigator"}, "doc.ftd.cmg_bh_ftd_accesspolicy_external_id_description": {"name": "cmg_bh_ftd_accesspolicy_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_accesspolicy_external_id_description", "block_contents": "Model for cmg_bh_ftd_accesspolicy_external_id."}, "doc.ftd.cmg_bh_ftd_accesspolicy_external_id_accesspolicy_id": {"name": "cmg_bh_ftd_accesspolicy_external_id_accesspolicy_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_accesspolicy_external_id_accesspolicy_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.cmg_bh_ftd_accesspolicy_external_id_external_id": {"name": "cmg_bh_ftd_accesspolicy_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_accesspolicy_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.cmg_bh_ftd_filemetadata_external_id_description": {"name": "cmg_bh_ftd_filemetadata_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_filemetadata_external_id_description", "block_contents": "Model for cmg_bh_ftd_filemetadata_external_id."}, "doc.ftd.cmg_bh_ftd_filemetadata_external_id_filemetadata_id": {"name": "cmg_bh_ftd_filemetadata_external_id_filemetadata_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_filemetadata_external_id_filemetadata_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.cmg_bh_ftd_filemetadata_external_id_external_id": {"name": "cmg_bh_ftd_filemetadata_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_filemetadata_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.cmg_bh_ftd_familyrelationship_external_id_description": {"name": "cmg_bh_ftd_familyrelationship_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_familyrelationship_external_id_description", "block_contents": "Model for cmg_bh_ftd_familyrelationship_external_id."}, "doc.ftd.cmg_bh_ftd_familyrelationship_external_id_familyrelationship_id": {"name": "cmg_bh_ftd_familyrelationship_external_id_familyrelationship_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_familyrelationship_external_id_familyrelationship_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.cmg_bh_ftd_familyrelationship_external_id_external_id": {"name": "cmg_bh_ftd_familyrelationship_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_familyrelationship_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.cmg_bh_ftd_file_external_id_description": {"name": "cmg_bh_ftd_file_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_file_external_id_description", "block_contents": "Model for cmg_bh_ftd_file_external_id."}, "doc.ftd.cmg_bh_ftd_file_external_id_file_id": {"name": "cmg_bh_ftd_file_external_id_file_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_file_external_id_file_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.cmg_bh_ftd_file_external_id_external_id": {"name": "cmg_bh_ftd_file_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_file_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.cmg_bh_ftd_accesscontrolledrecord_external_id_description": {"name": "cmg_bh_ftd_accesscontrolledrecord_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_accesscontrolledrecord_external_id_description", "block_contents": "Model for cmg_bh_ftd_accesscontrolledrecord_external_id."}, "doc.ftd.cmg_bh_ftd_accesscontrolledrecord_external_id_accesscontrolledrecord_id": {"name": "cmg_bh_ftd_accesscontrolledrecord_external_id_accesscontrolledrecord_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_accesscontrolledrecord_external_id_accesscontrolledrecord_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.cmg_bh_ftd_accesscontrolledrecord_external_id_external_id": {"name": "cmg_bh_ftd_accesscontrolledrecord_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_accesscontrolledrecord_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.cmg_bh_ftd_accesspolicy_access_policy_code_description": {"name": "cmg_bh_ftd_accesspolicy_access_policy_code_description", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_accesspolicy_access_policy_code_description", "block_contents": "Model for cmg_bh_ftd_accesspolicy_access_policy_code."}, "doc.ftd.cmg_bh_ftd_accesspolicy_access_policy_code_accesspolicy_id": {"name": "cmg_bh_ftd_accesspolicy_access_policy_code_accesspolicy_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_accesspolicy_access_policy_code_accesspolicy_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.cmg_bh_ftd_accesspolicy_access_policy_code_access_policy_code": {"name": "cmg_bh_ftd_accesspolicy_access_policy_code_access_policy_code", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_accesspolicy_access_policy_code_access_policy_code", "block_contents": "Access Policy Code"}, "doc.ftd.cmg_bh_ftd_demographics_external_id_description": {"name": "cmg_bh_ftd_demographics_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_demographics_external_id_description", "block_contents": "Model for cmg_bh_ftd_demographics_external_id."}, "doc.ftd.cmg_bh_ftd_demographics_external_id_demographics_id": {"name": "cmg_bh_ftd_demographics_external_id_demographics_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_demographics_external_id_demographics_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.cmg_bh_ftd_demographics_external_id_external_id": {"name": "cmg_bh_ftd_demographics_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_demographics_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.cmg_bh_ftd_aliquot_external_id_description": {"name": "cmg_bh_ftd_aliquot_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_aliquot_external_id_description", "block_contents": "Model for cmg_bh_ftd_aliquot_external_id."}, "doc.ftd.cmg_bh_ftd_aliquot_external_id_aliquot_id": {"name": "cmg_bh_ftd_aliquot_external_id_aliquot_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_aliquot_external_id_aliquot_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.cmg_bh_ftd_aliquot_external_id_external_id": {"name": "cmg_bh_ftd_aliquot_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_aliquot_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.cmg_bh_ftd_family_description": {"name": "cmg_bh_ftd_family_description", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_family_description", "block_contents": "Model for cmg_bh_ftd_family."}, "doc.ftd.cmg_bh_ftd_family_family_type": {"name": "cmg_bh_ftd_family_family_type", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_family_family_type", "block_contents": "Describes the 'type' of study family, eg, trio."}, "doc.ftd.cmg_bh_ftd_family_family_description": {"name": "cmg_bh_ftd_family_family_description", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_family_family_description", "block_contents": "Free title describing the study family, such as potential inheritance or details about consanguinity"}, "doc.ftd.cmg_bh_ftd_family_consanguinity": {"name": "cmg_bh_ftd_family_consanguinity", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_family_consanguinity", "block_contents": "Is there known or suspected consanguinity in this study family?"}, "doc.ftd.cmg_bh_ftd_family_family_study_focus": {"name": "cmg_bh_ftd_family_family_study_focus", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_family_family_study_focus", "block_contents": "What is this study family investigating? EG, a specific condition. The code should be prefixed with a recognizable curie."}, "doc.ftd.cmg_bh_ftd_family_has_access_policy": {"name": "cmg_bh_ftd_family_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_family_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.cmg_bh_ftd_family_id": {"name": "cmg_bh_ftd_family_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_family_id", "block_contents": "ID associated with a class"}, "doc.ftd.cmg_bh_ftd_study_funding_source_description": {"name": "cmg_bh_ftd_study_funding_source_description", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_study_funding_source_description", "block_contents": "Model for cmg_bh_ftd_study_funding_source."}, "doc.ftd.cmg_bh_ftd_study_funding_source_study_id": {"name": "cmg_bh_ftd_study_funding_source_study_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_study_funding_source_study_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.cmg_bh_ftd_study_funding_source_funding_source": {"name": "cmg_bh_ftd_study_funding_source_funding_source", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_study_funding_source_funding_source", "block_contents": "Funding Source"}, "doc.ftd.cmg_bh_ftd_aliquot_description": {"name": "cmg_bh_ftd_aliquot_description", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_aliquot_description", "block_contents": "Model for cmg_bh_ftd_aliquot."}, "doc.ftd.cmg_bh_ftd_aliquot_availablity_status": {"name": "cmg_bh_ftd_aliquot_availablity_status", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_aliquot_availablity_status", "block_contents": "Can this Sample be requested for further analysis?"}, "doc.ftd.cmg_bh_ftd_aliquot_quantity_number": {"name": "cmg_bh_ftd_aliquot_quantity_number", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_aliquot_quantity_number", "block_contents": "The total quantity of the specimen"}, "doc.ftd.cmg_bh_ftd_aliquot_quantity_units": {"name": "cmg_bh_ftd_aliquot_quantity_units", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_aliquot_quantity_units", "block_contents": "The structured term defining the units of the quantity."}, "doc.ftd.cmg_bh_ftd_aliquot_concentration_number": {"name": "cmg_bh_ftd_aliquot_concentration_number", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_aliquot_concentration_number", "block_contents": "What is the concentration of the analyte in the Aliquot?"}, "doc.ftd.cmg_bh_ftd_aliquot_concentration_unit": {"name": "cmg_bh_ftd_aliquot_concentration_unit", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_aliquot_concentration_unit", "block_contents": "Units associated with the concentration of the analyte in the Aliquot? UCUM coding preferred (with curie, UCUM)"}, "doc.ftd.cmg_bh_ftd_aliquot_has_access_policy": {"name": "cmg_bh_ftd_aliquot_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_aliquot_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.cmg_bh_ftd_aliquot_id": {"name": "cmg_bh_ftd_aliquot_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_aliquot_id", "block_contents": "ID associated with a class"}, "doc.ftd.cmg_bh_ftd_aliquot_sample_id": {"name": "cmg_bh_ftd_aliquot_sample_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_aliquot_sample_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.cmg_bh_ftd_subjectassertion_description": {"name": "cmg_bh_ftd_subjectassertion_description", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_subjectassertion_description", "block_contents": "Model for cmg_bh_ftd_subjectassertion."}, "doc.ftd.cmg_bh_ftd_subjectassertion_assertion_type": {"name": "cmg_bh_ftd_subjectassertion_assertion_type", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_subjectassertion_assertion_type", "block_contents": "The semantic type of the resource, eg, Condition."}, "doc.ftd.cmg_bh_ftd_subjectassertion_age_at_assertion": {"name": "cmg_bh_ftd_subjectassertion_age_at_assertion", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_subjectassertion_age_at_assertion", "block_contents": "The age in decimal years of the Subject when the assertion was made."}, "doc.ftd.cmg_bh_ftd_subjectassertion_age_at_event": {"name": "cmg_bh_ftd_subjectassertion_age_at_event", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_subjectassertion_age_at_event", "block_contents": "The age in decimal years of the Subject at the time point which the assertion describes, | eg, age of onset or when a measurement was performed."}, "doc.ftd.cmg_bh_ftd_subjectassertion_age_at_resolution": {"name": "cmg_bh_ftd_subjectassertion_age_at_resolution", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_subjectassertion_age_at_resolution", "block_contents": "The age in decimal years of the Subject when the asserted state was resolved."}, "doc.ftd.cmg_bh_ftd_subjectassertion_code": {"name": "cmg_bh_ftd_subjectassertion_code", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_subjectassertion_code", "block_contents": "The structured term defining the meaning of the assertion."}, "doc.ftd.cmg_bh_ftd_subjectassertion_display": {"name": "cmg_bh_ftd_subjectassertion_display", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_subjectassertion_display", "block_contents": "The friendly display string of the coded term"}, "doc.ftd.cmg_bh_ftd_subjectassertion_value_code": {"name": "cmg_bh_ftd_subjectassertion_value_code", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_subjectassertion_value_code", "block_contents": "The structured term defining the value of the assertion."}, "doc.ftd.cmg_bh_ftd_subjectassertion_value_display": {"name": "cmg_bh_ftd_subjectassertion_value_display", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_subjectassertion_value_display", "block_contents": "The friendly display string of the coded term for the value of the assertion."}, "doc.ftd.cmg_bh_ftd_subjectassertion_value_number": {"name": "cmg_bh_ftd_subjectassertion_value_number", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_subjectassertion_value_number", "block_contents": "The numeric value of the assertion."}, "doc.ftd.cmg_bh_ftd_subjectassertion_value_units": {"name": "cmg_bh_ftd_subjectassertion_value_units", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_subjectassertion_value_units", "block_contents": "The structured term defining the units of the value."}, "doc.ftd.cmg_bh_ftd_subjectassertion_value_units_display": {"name": "cmg_bh_ftd_subjectassertion_value_units_display", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_subjectassertion_value_units_display", "block_contents": "The friendly display string of units of the value."}, "doc.ftd.cmg_bh_ftd_subjectassertion_has_access_policy": {"name": "cmg_bh_ftd_subjectassertion_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_subjectassertion_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.cmg_bh_ftd_subjectassertion_id": {"name": "cmg_bh_ftd_subjectassertion_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_subjectassertion_id", "block_contents": "ID associated with a class"}, "doc.ftd.cmg_bh_ftd_subjectassertion_subject_id": {"name": "cmg_bh_ftd_subjectassertion_subject_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_subjectassertion_subject_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.cmg_bh_ftd_biospecimencollection_description": {"name": "cmg_bh_ftd_biospecimencollection_description", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_biospecimencollection_description", "block_contents": "Model for cmg_bh_ftd_biospecimencollection."}, "doc.ftd.cmg_bh_ftd_biospecimencollection_age_at_collection": {"name": "cmg_bh_ftd_biospecimencollection_age_at_collection", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_biospecimencollection_age_at_collection", "block_contents": "The age at which this biospecimen was collected."}, "doc.ftd.cmg_bh_ftd_biospecimencollection_method": {"name": "cmg_bh_ftd_biospecimencollection_method", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_biospecimencollection_method", "block_contents": "The approach used to collect the biospecimen."}, "doc.ftd.cmg_bh_ftd_biospecimencollection_site": {"name": "cmg_bh_ftd_biospecimencollection_site", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_biospecimencollection_site", "block_contents": "The location of the specimen collection."}, "doc.ftd.cmg_bh_ftd_biospecimencollection_spatial_qualifier": {"name": "cmg_bh_ftd_biospecimencollection_spatial_qualifier", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_biospecimencollection_spatial_qualifier", "block_contents": "Any spatial/location qualifiers"}, "doc.ftd.cmg_bh_ftd_biospecimencollection_laterality": {"name": "cmg_bh_ftd_biospecimencollection_laterality", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_biospecimencollection_laterality", "block_contents": "Laterality information for the site"}, "doc.ftd.cmg_bh_ftd_biospecimencollection_has_access_policy": {"name": "cmg_bh_ftd_biospecimencollection_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_biospecimencollection_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.cmg_bh_ftd_biospecimencollection_id": {"name": "cmg_bh_ftd_biospecimencollection_id", "resource_type": "doc", "package_name": "ftd", "path": "cmg_bh/docs/column_descriptions.md", "original_file_path": "models/cmg_bh/docs/column_descriptions.md", "unique_id": "doc.ftd.cmg_bh_ftd_biospecimencollection_id", "block_contents": "ID associated with a class"}, "doc.ftd.GWAS_ftd_datasource_external_id_description": {"name": "GWAS_ftd_datasource_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_datasource_external_id_description", "block_contents": "Model for GWAS_ftd_datasource_external_id."}, "doc.ftd.GWAS_ftd_datasource_external_id_datasource_id": {"name": "GWAS_ftd_datasource_external_id_datasource_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_datasource_external_id_datasource_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GWAS_ftd_datasource_external_id_external_id": {"name": "GWAS_ftd_datasource_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_datasource_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.GWAS_ftd_sample_description": {"name": "GWAS_ftd_sample_description", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_sample_description", "block_contents": "Model for GWAS_ftd_sample."}, "doc.ftd.GWAS_ftd_sample_parent_sample": {"name": "GWAS_ftd_sample_parent_sample", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_sample_parent_sample", "block_contents": "Sample from which this sample is derived"}, "doc.ftd.GWAS_ftd_sample_sample_type": {"name": "GWAS_ftd_sample_sample_type", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_sample_sample_type", "block_contents": "Type of material of which this Sample is comprised"}, "doc.ftd.GWAS_ftd_sample_availablity_status": {"name": "GWAS_ftd_sample_availablity_status", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_sample_availablity_status", "block_contents": "Can this Sample be requested for further analysis?"}, "doc.ftd.GWAS_ftd_sample_quantity_number": {"name": "GWAS_ftd_sample_quantity_number", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_sample_quantity_number", "block_contents": "The total quantity of the specimen"}, "doc.ftd.GWAS_ftd_sample_quantity_units": {"name": "GWAS_ftd_sample_quantity_units", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_sample_quantity_units", "block_contents": "The structured term defining the units of the quantity."}, "doc.ftd.GWAS_ftd_sample_has_access_policy": {"name": "GWAS_ftd_sample_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_sample_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.GWAS_ftd_sample_id": {"name": "GWAS_ftd_sample_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_sample_id", "block_contents": "ID associated with a class"}, "doc.ftd.GWAS_ftd_sample_subject_id": {"name": "GWAS_ftd_sample_subject_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_sample_subject_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GWAS_ftd_sample_biospecimen_collection_id": {"name": "GWAS_ftd_sample_biospecimen_collection_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_sample_biospecimen_collection_id", "block_contents": "Biospecimen Collection that generated this sample."}, "doc.ftd.GWAS_ftd_demographics_source_data_description": {"name": "GWAS_ftd_demographics_source_data_description", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_demographics_source_data_description", "block_contents": "Model for GWAS_ftd_demographics_source_data."}, "doc.ftd.GWAS_ftd_demographics_source_data_demographics_id": {"name": "GWAS_ftd_demographics_source_data_demographics_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_demographics_source_data_demographics_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GWAS_ftd_demographics_source_data_source_data_id": {"name": "GWAS_ftd_demographics_source_data_source_data_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_demographics_source_data_source_data_id", "block_contents": "The sources from which this assertion was derived"}, "doc.ftd.GWAS_ftd_family_description": {"name": "GWAS_ftd_family_description", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_family_description", "block_contents": "Model for GWAS_ftd_family."}, "doc.ftd.GWAS_ftd_family_family_type": {"name": "GWAS_ftd_family_family_type", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_family_family_type", "block_contents": "Describes the 'type' of study family, eg, trio."}, "doc.ftd.GWAS_ftd_family_family_description": {"name": "GWAS_ftd_family_family_description", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_family_family_description", "block_contents": "Free title describing the study family, such as potential inheritance or details about consanguinity"}, "doc.ftd.GWAS_ftd_family_consanguinity": {"name": "GWAS_ftd_family_consanguinity", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_family_consanguinity", "block_contents": "Is there known or suspected consanguinity in this study family?"}, "doc.ftd.GWAS_ftd_family_family_study_focus": {"name": "GWAS_ftd_family_family_study_focus", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_family_family_study_focus", "block_contents": "What is this study family investigating? EG, a specific condition. The code should be prefixed with a recognizable curie."}, "doc.ftd.GWAS_ftd_family_has_access_policy": {"name": "GWAS_ftd_family_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_family_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.GWAS_ftd_family_id": {"name": "GWAS_ftd_family_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_family_id", "block_contents": "ID associated with a class"}, "doc.ftd.GWAS_ftd_accesscontrolledrecord_description": {"name": "GWAS_ftd_accesscontrolledrecord_description", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_accesscontrolledrecord_description", "block_contents": "Model for GWAS_ftd_accesscontrolledrecord."}, "doc.ftd.GWAS_ftd_accesscontrolledrecord_has_access_policy": {"name": "GWAS_ftd_accesscontrolledrecord_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_accesscontrolledrecord_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.GWAS_ftd_accesscontrolledrecord_id": {"name": "GWAS_ftd_accesscontrolledrecord_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_accesscontrolledrecord_id", "block_contents": "ID associated with a class"}, "doc.ftd.GWAS_ftd_biospecimencollection_external_id_description": {"name": "GWAS_ftd_biospecimencollection_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_biospecimencollection_external_id_description", "block_contents": "Model for GWAS_ftd_biospecimencollection_external_id."}, "doc.ftd.GWAS_ftd_biospecimencollection_external_id_biospecimencollection_id": {"name": "GWAS_ftd_biospecimencollection_external_id_biospecimencollection_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_biospecimencollection_external_id_biospecimencollection_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GWAS_ftd_biospecimencollection_external_id_external_id": {"name": "GWAS_ftd_biospecimencollection_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_biospecimencollection_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.GWAS_ftd_datasource_description": {"name": "GWAS_ftd_datasource_description", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_datasource_description", "block_contents": "Model for GWAS_ftd_datasource."}, "doc.ftd.GWAS_ftd_datasource_snapshot_id": {"name": "GWAS_ftd_datasource_snapshot_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_datasource_snapshot_id", "block_contents": "The Terra Data Repository Snapshot ID."}, "doc.ftd.GWAS_ftd_datasource_google_data_project": {"name": "GWAS_ftd_datasource_google_data_project", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_datasource_google_data_project", "block_contents": "The Google Data Project needed to query this snapshot in BigQuery."}, "doc.ftd.GWAS_ftd_datasource_snapshot_dataset": {"name": "GWAS_ftd_datasource_snapshot_dataset", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_datasource_snapshot_dataset", "block_contents": "The Dataset within BigQuery where the table can be queried."}, "doc.ftd.GWAS_ftd_datasource_table": {"name": "GWAS_ftd_datasource_table", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_datasource_table", "block_contents": "The table in the dataset that contains the row of interest."}, "doc.ftd.GWAS_ftd_datasource_parameterized_query": {"name": "GWAS_ftd_datasource_parameterized_query", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_datasource_parameterized_query", "block_contents": "A parameterized query that contains the primary key fields and can be used to select specific rows. This should be formatted according to (https://cloud.google.com/bigquery/docs/parameterized-queries)[BigQuery instructions], including using named parameters."}, "doc.ftd.GWAS_ftd_datasource_id": {"name": "GWAS_ftd_datasource_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_datasource_id", "block_contents": "ID associated with a class"}, "doc.ftd.GWAS_ftd_subjectassertion_description": {"name": "GWAS_ftd_subjectassertion_description", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_subjectassertion_description", "block_contents": "Model for GWAS_ftd_subjectassertion."}, "doc.ftd.GWAS_ftd_subjectassertion_assertion_type": {"name": "GWAS_ftd_subjectassertion_assertion_type", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_subjectassertion_assertion_type", "block_contents": "The semantic type of the resource, eg, Condition."}, "doc.ftd.GWAS_ftd_subjectassertion_age_at_assertion": {"name": "GWAS_ftd_subjectassertion_age_at_assertion", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_subjectassertion_age_at_assertion", "block_contents": "The age in decimal years of the Subject when the assertion was made."}, "doc.ftd.GWAS_ftd_subjectassertion_age_at_event": {"name": "GWAS_ftd_subjectassertion_age_at_event", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_subjectassertion_age_at_event", "block_contents": "The age in decimal years of the Subject at the time point which the assertion describes, | eg, age of onset or when a measurement was performed."}, "doc.ftd.GWAS_ftd_subjectassertion_age_at_resolution": {"name": "GWAS_ftd_subjectassertion_age_at_resolution", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_subjectassertion_age_at_resolution", "block_contents": "The age in decimal years of the Subject when the asserted state was resolved."}, "doc.ftd.GWAS_ftd_subjectassertion_code": {"name": "GWAS_ftd_subjectassertion_code", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_subjectassertion_code", "block_contents": "The structured term defining the meaning of the assertion."}, "doc.ftd.GWAS_ftd_subjectassertion_display": {"name": "GWAS_ftd_subjectassertion_display", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_subjectassertion_display", "block_contents": "The friendly display string of the coded term"}, "doc.ftd.GWAS_ftd_subjectassertion_value_code": {"name": "GWAS_ftd_subjectassertion_value_code", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_subjectassertion_value_code", "block_contents": "The structured term defining the value of the assertion."}, "doc.ftd.GWAS_ftd_subjectassertion_value_display": {"name": "GWAS_ftd_subjectassertion_value_display", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_subjectassertion_value_display", "block_contents": "The friendly display string of the coded term for the value of the assertion."}, "doc.ftd.GWAS_ftd_subjectassertion_value_number": {"name": "GWAS_ftd_subjectassertion_value_number", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_subjectassertion_value_number", "block_contents": "The numeric value of the assertion."}, "doc.ftd.GWAS_ftd_subjectassertion_value_units": {"name": "GWAS_ftd_subjectassertion_value_units", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_subjectassertion_value_units", "block_contents": "The structured term defining the units of the value."}, "doc.ftd.GWAS_ftd_subjectassertion_value_units_display": {"name": "GWAS_ftd_subjectassertion_value_units_display", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_subjectassertion_value_units_display", "block_contents": "The friendly display string of units of the value."}, "doc.ftd.GWAS_ftd_subjectassertion_has_access_policy": {"name": "GWAS_ftd_subjectassertion_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_subjectassertion_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.GWAS_ftd_subjectassertion_id": {"name": "GWAS_ftd_subjectassertion_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_subjectassertion_id", "block_contents": "ID associated with a class"}, "doc.ftd.GWAS_ftd_subjectassertion_subject_id": {"name": "GWAS_ftd_subjectassertion_subject_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_subjectassertion_subject_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GWAS_ftd_accesspolicy_description": {"name": "GWAS_ftd_accesspolicy_description", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_accesspolicy_description", "block_contents": "Model for GWAS_ftd_accesspolicy."}, "doc.ftd.GWAS_ftd_accesspolicy_disease_limitation": {"name": "GWAS_ftd_accesspolicy_disease_limitation", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_accesspolicy_disease_limitation", "block_contents": "Disease Use Limitations"}, "doc.ftd.GWAS_ftd_accesspolicy_website": {"name": "GWAS_ftd_accesspolicy_website", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_accesspolicy_website", "block_contents": "Website"}, "doc.ftd.GWAS_ftd_accesspolicy_id": {"name": "GWAS_ftd_accesspolicy_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_accesspolicy_id", "block_contents": "ID associated with a class"}, "doc.ftd.GWAS_ftd_filemetadata_description": {"name": "GWAS_ftd_filemetadata_description", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_filemetadata_description", "block_contents": "Model for GWAS_ftd_filemetadata."}, "doc.ftd.GWAS_ftd_filemetadata_code": {"name": "GWAS_ftd_filemetadata_code", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_filemetadata_code", "block_contents": "The structured term defining the meaning of the assertion."}, "doc.ftd.GWAS_ftd_filemetadata_display": {"name": "GWAS_ftd_filemetadata_display", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_filemetadata_display", "block_contents": "The friendly display string of the coded term"}, "doc.ftd.GWAS_ftd_filemetadata_value_code": {"name": "GWAS_ftd_filemetadata_value_code", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_filemetadata_value_code", "block_contents": "The structured term defining the value of the assertion."}, "doc.ftd.GWAS_ftd_filemetadata_value_display": {"name": "GWAS_ftd_filemetadata_value_display", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_filemetadata_value_display", "block_contents": "The friendly display string of the coded term for the value of the assertion."}, "doc.ftd.GWAS_ftd_filemetadata_id": {"name": "GWAS_ftd_filemetadata_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_filemetadata_id", "block_contents": "ID associated with a class"}, "doc.ftd.GWAS_ftd_file_description": {"name": "GWAS_ftd_file_description", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_file_description", "block_contents": "Model for GWAS_ftd_file."}, "doc.ftd.GWAS_ftd_file_filename": {"name": "GWAS_ftd_file_filename", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_file_filename", "block_contents": "The name of the file."}, "doc.ftd.GWAS_ftd_file_format": {"name": "GWAS_ftd_file_format", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_file_format", "block_contents": "The format of the file."}, "doc.ftd.GWAS_ftd_file_data_type": {"name": "GWAS_ftd_file_data_type", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_file_data_type", "block_contents": "The type of data within this file."}, "doc.ftd.GWAS_ftd_file_size": {"name": "GWAS_ftd_file_size", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_file_size", "block_contents": "Size of the file, in Bytes."}, "doc.ftd.GWAS_ftd_file_drs_uri": {"name": "GWAS_ftd_file_drs_uri", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_file_drs_uri", "block_contents": "DRS location to access the data."}, "doc.ftd.GWAS_ftd_file_file_metadata": {"name": "GWAS_ftd_file_file_metadata", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_file_file_metadata", "block_contents": "Additional metadata about the contents of the file, eg, genome reference build."}, "doc.ftd.GWAS_ftd_file_has_access_policy": {"name": "GWAS_ftd_file_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_file_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.GWAS_ftd_file_id": {"name": "GWAS_ftd_file_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_file_id", "block_contents": "ID associated with a class"}, "doc.ftd.GWAS_ftd_sample_processing_description": {"name": "GWAS_ftd_sample_processing_description", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_sample_processing_description", "block_contents": "Model for GWAS_ftd_sample_processing."}, "doc.ftd.GWAS_ftd_sample_processing_sample_id": {"name": "GWAS_ftd_sample_processing_sample_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_sample_processing_sample_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GWAS_ftd_sample_processing_processing": {"name": "GWAS_ftd_sample_processing_processing", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_sample_processing_processing", "block_contents": "Processing that was applied to the Parent Sample or from the Biospecimen Collection that yielded this distinct sample"}, "doc.ftd.GWAS_ftd_file_sample_description": {"name": "GWAS_ftd_file_sample_description", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_file_sample_description", "block_contents": "Model for GWAS_ftd_file_sample."}, "doc.ftd.GWAS_ftd_file_sample_file_id": {"name": "GWAS_ftd_file_sample_file_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_file_sample_file_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GWAS_ftd_file_sample_sample_id": {"name": "GWAS_ftd_file_sample_sample_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_file_sample_sample_id", "block_contents": "The Samples(s) used to generate data in this file."}, "doc.ftd.GWAS_ftd_filemetadata_external_id_description": {"name": "GWAS_ftd_filemetadata_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_filemetadata_external_id_description", "block_contents": "Model for GWAS_ftd_filemetadata_external_id."}, "doc.ftd.GWAS_ftd_filemetadata_external_id_filemetadata_id": {"name": "GWAS_ftd_filemetadata_external_id_filemetadata_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_filemetadata_external_id_filemetadata_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GWAS_ftd_filemetadata_external_id_external_id": {"name": "GWAS_ftd_filemetadata_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_filemetadata_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.GWAS_ftd_subject_description": {"name": "GWAS_ftd_subject_description", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_subject_description", "block_contents": "Model for GWAS_ftd_subject."}, "doc.ftd.GWAS_ftd_subject_subject_type": {"name": "GWAS_ftd_subject_subject_type", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_subject_subject_type", "block_contents": "Type of entity this record represents"}, "doc.ftd.GWAS_ftd_subject_organism_type": {"name": "GWAS_ftd_subject_organism_type", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_subject_organism_type", "block_contents": "Organism Type Label"}, "doc.ftd.GWAS_ftd_subject_has_access_policy": {"name": "GWAS_ftd_subject_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_subject_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.GWAS_ftd_subject_id": {"name": "GWAS_ftd_subject_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_subject_id", "block_contents": "ID associated with a class"}, "doc.ftd.GWAS_ftd_subject_has_demographics_id": {"name": "GWAS_ftd_subject_has_demographics_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_subject_has_demographics_id", "block_contents": "A demographic summary of the participant."}, "doc.ftd.GWAS_ftd_sourcedata_query_parameter_description": {"name": "GWAS_ftd_sourcedata_query_parameter_description", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_sourcedata_query_parameter_description", "block_contents": "Model for GWAS_ftd_sourcedata_query_parameter."}, "doc.ftd.GWAS_ftd_sourcedata_query_parameter_sourcedata_id": {"name": "GWAS_ftd_sourcedata_query_parameter_sourcedata_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_sourcedata_query_parameter_sourcedata_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GWAS_ftd_sourcedata_query_parameter_query_parameter": {"name": "GWAS_ftd_sourcedata_query_parameter_query_parameter", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_sourcedata_query_parameter_query_parameter", "block_contents": "One or more query parameters used to select the specific row. It will leverage the parameterized_query defined by a data_source. This should be formatted according to (https://cloud.google.com/bigquery/docs/parameterized-queries)[BigQuery instructions], specifically the bq CLI version with named parameters, ie, \"<parameter name>:<data type>:<value>\"."}, "doc.ftd.GWAS_ftd_sample_storage_method_description": {"name": "GWAS_ftd_sample_storage_method_description", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_sample_storage_method_description", "block_contents": "Model for GWAS_ftd_sample_storage_method."}, "doc.ftd.GWAS_ftd_sample_storage_method_sample_id": {"name": "GWAS_ftd_sample_storage_method_sample_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_sample_storage_method_sample_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GWAS_ftd_sample_storage_method_storage_method": {"name": "GWAS_ftd_sample_storage_method_storage_method", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_sample_storage_method_storage_method", "block_contents": "Sample storage method, eg, Frozen or with additives"}, "doc.ftd.GWAS_ftd_sample_external_id_description": {"name": "GWAS_ftd_sample_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_sample_external_id_description", "block_contents": "Model for GWAS_ftd_sample_external_id."}, "doc.ftd.GWAS_ftd_sample_external_id_sample_id": {"name": "GWAS_ftd_sample_external_id_sample_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_sample_external_id_sample_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GWAS_ftd_sample_external_id_external_id": {"name": "GWAS_ftd_sample_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_sample_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.GWAS_ftd_familyrelationship_external_id_description": {"name": "GWAS_ftd_familyrelationship_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_familyrelationship_external_id_description", "block_contents": "Model for GWAS_ftd_familyrelationship_external_id."}, "doc.ftd.GWAS_ftd_familyrelationship_external_id_familyrelationship_id": {"name": "GWAS_ftd_familyrelationship_external_id_familyrelationship_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_familyrelationship_external_id_familyrelationship_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GWAS_ftd_familyrelationship_external_id_external_id": {"name": "GWAS_ftd_familyrelationship_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_familyrelationship_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.GWAS_ftd_family_family_relationships_description": {"name": "GWAS_ftd_family_family_relationships_description", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_family_family_relationships_description", "block_contents": "Model for GWAS_ftd_family_family_relationships."}, "doc.ftd.GWAS_ftd_family_family_relationships_family_id": {"name": "GWAS_ftd_family_family_relationships_family_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_family_family_relationships_family_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GWAS_ftd_family_family_relationships_family_relationships_id": {"name": "GWAS_ftd_family_family_relationships_family_relationships_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_family_family_relationships_family_relationships_id", "block_contents": "Family relationships associated with this family."}, "doc.ftd.GWAS_ftd_demographics_race_description": {"name": "GWAS_ftd_demographics_race_description", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_demographics_race_description", "block_contents": "Model for GWAS_ftd_demographics_race."}, "doc.ftd.GWAS_ftd_demographics_race_demographics_id": {"name": "GWAS_ftd_demographics_race_demographics_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_demographics_race_demographics_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GWAS_ftd_demographics_race_race": {"name": "GWAS_ftd_demographics_race_race", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_demographics_race_race", "block_contents": "Reported race as defined by the 1997 OMB directives."}, "doc.ftd.GWAS_ftd_study_funding_source_description": {"name": "GWAS_ftd_study_funding_source_description", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_study_funding_source_description", "block_contents": "Model for GWAS_ftd_study_funding_source."}, "doc.ftd.GWAS_ftd_study_funding_source_study_id": {"name": "GWAS_ftd_study_funding_source_study_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_study_funding_source_study_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GWAS_ftd_study_funding_source_funding_source": {"name": "GWAS_ftd_study_funding_source_funding_source", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_study_funding_source_funding_source", "block_contents": "Funding Source"}, "doc.ftd.GWAS_ftd_family_external_id_description": {"name": "GWAS_ftd_family_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_family_external_id_description", "block_contents": "Model for GWAS_ftd_family_external_id."}, "doc.ftd.GWAS_ftd_family_external_id_family_id": {"name": "GWAS_ftd_family_external_id_family_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_family_external_id_family_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GWAS_ftd_family_external_id_external_id": {"name": "GWAS_ftd_family_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_family_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.GWAS_ftd_accesspolicy_external_id_description": {"name": "GWAS_ftd_accesspolicy_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_accesspolicy_external_id_description", "block_contents": "Model for GWAS_ftd_accesspolicy_external_id."}, "doc.ftd.GWAS_ftd_accesspolicy_external_id_accesspolicy_id": {"name": "GWAS_ftd_accesspolicy_external_id_accesspolicy_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_accesspolicy_external_id_accesspolicy_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GWAS_ftd_accesspolicy_external_id_external_id": {"name": "GWAS_ftd_accesspolicy_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_accesspolicy_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.GWAS_ftd_aliquot_description": {"name": "GWAS_ftd_aliquot_description", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_aliquot_description", "block_contents": "Model for GWAS_ftd_aliquot."}, "doc.ftd.GWAS_ftd_aliquot_availablity_status": {"name": "GWAS_ftd_aliquot_availablity_status", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_aliquot_availablity_status", "block_contents": "Can this Sample be requested for further analysis?"}, "doc.ftd.GWAS_ftd_aliquot_quantity_number": {"name": "GWAS_ftd_aliquot_quantity_number", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_aliquot_quantity_number", "block_contents": "The total quantity of the specimen"}, "doc.ftd.GWAS_ftd_aliquot_quantity_units": {"name": "GWAS_ftd_aliquot_quantity_units", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_aliquot_quantity_units", "block_contents": "The structured term defining the units of the quantity."}, "doc.ftd.GWAS_ftd_aliquot_concentration_number": {"name": "GWAS_ftd_aliquot_concentration_number", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_aliquot_concentration_number", "block_contents": "What is the concentration of the analyte in the Aliquot?"}, "doc.ftd.GWAS_ftd_aliquot_concentration_unit": {"name": "GWAS_ftd_aliquot_concentration_unit", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_aliquot_concentration_unit", "block_contents": "Units associated with the concentration of the analyte in the Aliquot? UCUM coding preferred (with curie, UCUM)"}, "doc.ftd.GWAS_ftd_aliquot_has_access_policy": {"name": "GWAS_ftd_aliquot_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_aliquot_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.GWAS_ftd_aliquot_id": {"name": "GWAS_ftd_aliquot_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_aliquot_id", "block_contents": "ID associated with a class"}, "doc.ftd.GWAS_ftd_aliquot_sample_id": {"name": "GWAS_ftd_aliquot_sample_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_aliquot_sample_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GWAS_ftd_demographics_description": {"name": "GWAS_ftd_demographics_description", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_demographics_description", "block_contents": "Model for GWAS_ftd_demographics."}, "doc.ftd.GWAS_ftd_demographics_date_of_birth": {"name": "GWAS_ftd_demographics_date_of_birth", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_demographics_date_of_birth", "block_contents": "Date at which the individual was born. May be impacted by privacy rules described in date_of_birth_type."}, "doc.ftd.GWAS_ftd_demographics_date_of_birth_type": {"name": "GWAS_ftd_demographics_date_of_birth_type", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_demographics_date_of_birth_type", "block_contents": "Privacy rule modification applied to date_of_birth."}, "doc.ftd.GWAS_ftd_demographics_sex": {"name": "GWAS_ftd_demographics_sex", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_demographics_sex", "block_contents": "Sex of the individual"}, "doc.ftd.GWAS_ftd_demographics_sex_display": {"name": "GWAS_ftd_demographics_sex_display", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_demographics_sex_display", "block_contents": "The friendly display string of the coded term for Sex"}, "doc.ftd.GWAS_ftd_demographics_race_display": {"name": "GWAS_ftd_demographics_race_display", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_demographics_race_display", "block_contents": "The friendly display string of the coded term(s) for Race"}, "doc.ftd.GWAS_ftd_demographics_ethnicity": {"name": "GWAS_ftd_demographics_ethnicity", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_demographics_ethnicity", "block_contents": "Reported ethnicity as defined by the 1997 OMB directives."}, "doc.ftd.GWAS_ftd_demographics_ethnicity_display": {"name": "GWAS_ftd_demographics_ethnicity_display", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_demographics_ethnicity_display", "block_contents": "The friendly display string of the coded term for Ethnicity"}, "doc.ftd.GWAS_ftd_demographics_age_at_last_vital_status": {"name": "GWAS_ftd_demographics_age_at_last_vital_status", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_demographics_age_at_last_vital_status", "block_contents": "Age at last vital status in decimal years."}, "doc.ftd.GWAS_ftd_demographics_vital_status": {"name": "GWAS_ftd_demographics_vital_status", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_demographics_vital_status", "block_contents": "Vital Status"}, "doc.ftd.GWAS_ftd_demographics_has_access_policy": {"name": "GWAS_ftd_demographics_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_demographics_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.GWAS_ftd_demographics_id": {"name": "GWAS_ftd_demographics_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_demographics_id", "block_contents": "ID associated with a class"}, "doc.ftd.GWAS_ftd_familymember_external_id_description": {"name": "GWAS_ftd_familymember_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_familymember_external_id_description", "block_contents": "Model for GWAS_ftd_familymember_external_id."}, "doc.ftd.GWAS_ftd_familymember_external_id_familymember_id": {"name": "GWAS_ftd_familymember_external_id_familymember_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_familymember_external_id_familymember_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GWAS_ftd_familymember_external_id_external_id": {"name": "GWAS_ftd_familymember_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_familymember_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.GWAS_ftd_accesspolicy_access_policy_code_description": {"name": "GWAS_ftd_accesspolicy_access_policy_code_description", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_accesspolicy_access_policy_code_description", "block_contents": "Model for GWAS_ftd_accesspolicy_access_policy_code."}, "doc.ftd.GWAS_ftd_accesspolicy_access_policy_code_accesspolicy_id": {"name": "GWAS_ftd_accesspolicy_access_policy_code_accesspolicy_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_accesspolicy_access_policy_code_accesspolicy_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GWAS_ftd_accesspolicy_access_policy_code_access_policy_code": {"name": "GWAS_ftd_accesspolicy_access_policy_code_access_policy_code", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_accesspolicy_access_policy_code_access_policy_code", "block_contents": "Access Policy Code"}, "doc.ftd.GWAS_ftd_study_description": {"name": "GWAS_ftd_study_description", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_study_description", "block_contents": "Model for GWAS_ftd_study."}, "doc.ftd.GWAS_ftd_study_parent_study_id": {"name": "GWAS_ftd_study_parent_study_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_study_parent_study_id", "block_contents": "Parent Study ID"}, "doc.ftd.GWAS_ftd_study_study_title": {"name": "GWAS_ftd_study_study_title", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_study_study_title", "block_contents": "Study Title"}, "doc.ftd.GWAS_ftd_study_id": {"name": "GWAS_ftd_study_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_study_id", "block_contents": "ID associated with a class"}, "doc.ftd.GWAS_ftd_subjectassertion_external_id_description": {"name": "GWAS_ftd_subjectassertion_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_subjectassertion_external_id_description", "block_contents": "Model for GWAS_ftd_subjectassertion_external_id."}, "doc.ftd.GWAS_ftd_subjectassertion_external_id_subjectassertion_id": {"name": "GWAS_ftd_subjectassertion_external_id_subjectassertion_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_subjectassertion_external_id_subjectassertion_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GWAS_ftd_subjectassertion_external_id_external_id": {"name": "GWAS_ftd_subjectassertion_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_subjectassertion_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.GWAS_ftd_biospecimencollection_description": {"name": "GWAS_ftd_biospecimencollection_description", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_biospecimencollection_description", "block_contents": "Model for GWAS_ftd_biospecimencollection."}, "doc.ftd.GWAS_ftd_biospecimencollection_age_at_collection": {"name": "GWAS_ftd_biospecimencollection_age_at_collection", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_biospecimencollection_age_at_collection", "block_contents": "The age at which this biospecimen was collected."}, "doc.ftd.GWAS_ftd_biospecimencollection_method": {"name": "GWAS_ftd_biospecimencollection_method", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_biospecimencollection_method", "block_contents": "The approach used to collect the biospecimen."}, "doc.ftd.GWAS_ftd_biospecimencollection_site": {"name": "GWAS_ftd_biospecimencollection_site", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_biospecimencollection_site", "block_contents": "The location of the specimen collection."}, "doc.ftd.GWAS_ftd_biospecimencollection_spatial_qualifier": {"name": "GWAS_ftd_biospecimencollection_spatial_qualifier", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_biospecimencollection_spatial_qualifier", "block_contents": "Any spatial/location qualifiers"}, "doc.ftd.GWAS_ftd_biospecimencollection_laterality": {"name": "GWAS_ftd_biospecimencollection_laterality", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_biospecimencollection_laterality", "block_contents": "Laterality information for the site"}, "doc.ftd.GWAS_ftd_biospecimencollection_has_access_policy": {"name": "GWAS_ftd_biospecimencollection_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_biospecimencollection_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.GWAS_ftd_biospecimencollection_id": {"name": "GWAS_ftd_biospecimencollection_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_biospecimencollection_id", "block_contents": "ID associated with a class"}, "doc.ftd.GWAS_ftd_familyrelationship_description": {"name": "GWAS_ftd_familyrelationship_description", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_familyrelationship_description", "block_contents": "Model for GWAS_ftd_familyrelationship."}, "doc.ftd.GWAS_ftd_familyrelationship_family_member": {"name": "GWAS_ftd_familyrelationship_family_member", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_familyrelationship_family_member", "block_contents": "The family member Subject who is the relationship \"subject\"."}, "doc.ftd.GWAS_ftd_familyrelationship_other_family_member": {"name": "GWAS_ftd_familyrelationship_other_family_member", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_familyrelationship_other_family_member", "block_contents": "The family member Subject for the relationship \"object\"."}, "doc.ftd.GWAS_ftd_familyrelationship_relationship_code": {"name": "GWAS_ftd_familyrelationship_relationship_code", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_familyrelationship_relationship_code", "block_contents": "Code definting the relationship predicate. Relationship of the \"Family Member\" to the \"Other Family Member\" (i.e. mother, father, etc). Code must be from the HL7 [FamilyMember ValueSet](https://terminology.hl7.org/6.2.0/ValueSet-v3-FamilyMember.html)"}, "doc.ftd.GWAS_ftd_familyrelationship_has_access_policy": {"name": "GWAS_ftd_familyrelationship_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_familyrelationship_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.GWAS_ftd_familyrelationship_id": {"name": "GWAS_ftd_familyrelationship_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_familyrelationship_id", "block_contents": "ID associated with a class"}, "doc.ftd.GWAS_ftd_aliquot_external_id_description": {"name": "GWAS_ftd_aliquot_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_aliquot_external_id_description", "block_contents": "Model for GWAS_ftd_aliquot_external_id."}, "doc.ftd.GWAS_ftd_aliquot_external_id_aliquot_id": {"name": "GWAS_ftd_aliquot_external_id_aliquot_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_aliquot_external_id_aliquot_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GWAS_ftd_aliquot_external_id_external_id": {"name": "GWAS_ftd_aliquot_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_aliquot_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.GWAS_ftd_familymember_description": {"name": "GWAS_ftd_familymember_description", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_familymember_description", "block_contents": "Model for GWAS_ftd_familymember."}, "doc.ftd.GWAS_ftd_familymember_family_member": {"name": "GWAS_ftd_familymember_family_member", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_familymember_family_member", "block_contents": "The family member Subject who is the relationship \"subject\"."}, "doc.ftd.GWAS_ftd_familymember_family_role": {"name": "GWAS_ftd_familymember_family_role", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_familymember_family_role", "block_contents": "The \"role\" of this indiviudal in this family."}, "doc.ftd.GWAS_ftd_familymember_has_access_policy": {"name": "GWAS_ftd_familymember_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_familymember_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.GWAS_ftd_familymember_id": {"name": "GWAS_ftd_familymember_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_familymember_id", "block_contents": "ID associated with a class"}, "doc.ftd.GWAS_ftd_familymember_family_id": {"name": "GWAS_ftd_familymember_family_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_familymember_family_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GWAS_ftd_subject_external_id_description": {"name": "GWAS_ftd_subject_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_subject_external_id_description", "block_contents": "Model for GWAS_ftd_subject_external_id."}, "doc.ftd.GWAS_ftd_subject_external_id_subject_id": {"name": "GWAS_ftd_subject_external_id_subject_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_subject_external_id_subject_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GWAS_ftd_subject_external_id_external_id": {"name": "GWAS_ftd_subject_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_subject_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.GWAS_ftd_file_external_id_description": {"name": "GWAS_ftd_file_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_file_external_id_description", "block_contents": "Model for GWAS_ftd_file_external_id."}, "doc.ftd.GWAS_ftd_file_external_id_file_id": {"name": "GWAS_ftd_file_external_id_file_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_file_external_id_file_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GWAS_ftd_file_external_id_external_id": {"name": "GWAS_ftd_file_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_file_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.GWAS_ftd_demographics_external_id_description": {"name": "GWAS_ftd_demographics_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_demographics_external_id_description", "block_contents": "Model for GWAS_ftd_demographics_external_id."}, "doc.ftd.GWAS_ftd_demographics_external_id_demographics_id": {"name": "GWAS_ftd_demographics_external_id_demographics_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_demographics_external_id_demographics_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GWAS_ftd_demographics_external_id_external_id": {"name": "GWAS_ftd_demographics_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_demographics_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.GWAS_ftd_subjectassertion_source_data_description": {"name": "GWAS_ftd_subjectassertion_source_data_description", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_subjectassertion_source_data_description", "block_contents": "Model for GWAS_ftd_subjectassertion_source_data."}, "doc.ftd.GWAS_ftd_subjectassertion_source_data_subjectassertion_id": {"name": "GWAS_ftd_subjectassertion_source_data_subjectassertion_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_subjectassertion_source_data_subjectassertion_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GWAS_ftd_subjectassertion_source_data_source_data_id": {"name": "GWAS_ftd_subjectassertion_source_data_source_data_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_subjectassertion_source_data_source_data_id", "block_contents": "The sources from which this assertion was derived"}, "doc.ftd.GWAS_ftd_file_subject_description": {"name": "GWAS_ftd_file_subject_description", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_file_subject_description", "block_contents": "Model for GWAS_ftd_file_subject."}, "doc.ftd.GWAS_ftd_file_subject_file_id": {"name": "GWAS_ftd_file_subject_file_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_file_subject_file_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GWAS_ftd_file_subject_subject_id": {"name": "GWAS_ftd_file_subject_subject_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_file_subject_subject_id", "block_contents": "The Subject(s) which this file describes."}, "doc.ftd.GWAS_ftd_accesspolicy_data_access_type_description": {"name": "GWAS_ftd_accesspolicy_data_access_type_description", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_accesspolicy_data_access_type_description", "block_contents": "Model for GWAS_ftd_accesspolicy_data_access_type."}, "doc.ftd.GWAS_ftd_accesspolicy_data_access_type_accesspolicy_id": {"name": "GWAS_ftd_accesspolicy_data_access_type_accesspolicy_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_accesspolicy_data_access_type_accesspolicy_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GWAS_ftd_accesspolicy_data_access_type_data_access_type": {"name": "GWAS_ftd_accesspolicy_data_access_type_data_access_type", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_accesspolicy_data_access_type_data_access_type", "block_contents": "Data Access Type"}, "doc.ftd.GWAS_ftd_accesscontrolledrecord_external_id_description": {"name": "GWAS_ftd_accesscontrolledrecord_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_accesscontrolledrecord_external_id_description", "block_contents": "Model for GWAS_ftd_accesscontrolledrecord_external_id."}, "doc.ftd.GWAS_ftd_accesscontrolledrecord_external_id_accesscontrolledrecord_id": {"name": "GWAS_ftd_accesscontrolledrecord_external_id_accesscontrolledrecord_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_accesscontrolledrecord_external_id_accesscontrolledrecord_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GWAS_ftd_accesscontrolledrecord_external_id_external_id": {"name": "GWAS_ftd_accesscontrolledrecord_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_accesscontrolledrecord_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.GWAS_ftd_sourcedata_description": {"name": "GWAS_ftd_sourcedata_description", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_sourcedata_description", "block_contents": "Model for GWAS_ftd_sourcedata."}, "doc.ftd.GWAS_ftd_sourcedata_data_source": {"name": "GWAS_ftd_sourcedata_data_source", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_sourcedata_data_source", "block_contents": "Defines the location of data and how to query it."}, "doc.ftd.GWAS_ftd_sourcedata_has_access_policy": {"name": "GWAS_ftd_sourcedata_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_sourcedata_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.GWAS_ftd_sourcedata_id": {"name": "GWAS_ftd_sourcedata_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_sourcedata_id", "block_contents": "ID associated with a class"}, "doc.ftd.GWAS_ftd_sourcedata_external_id_description": {"name": "GWAS_ftd_sourcedata_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_sourcedata_external_id_description", "block_contents": "Model for GWAS_ftd_sourcedata_external_id."}, "doc.ftd.GWAS_ftd_sourcedata_external_id_sourcedata_id": {"name": "GWAS_ftd_sourcedata_external_id_sourcedata_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_sourcedata_external_id_sourcedata_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GWAS_ftd_sourcedata_external_id_external_id": {"name": "GWAS_ftd_sourcedata_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_sourcedata_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.GWAS_ftd_study_principal_investigator_description": {"name": "GWAS_ftd_study_principal_investigator_description", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_study_principal_investigator_description", "block_contents": "Model for GWAS_ftd_study_principal_investigator."}, "doc.ftd.GWAS_ftd_study_principal_investigator_study_id": {"name": "GWAS_ftd_study_principal_investigator_study_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_study_principal_investigator_study_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GWAS_ftd_study_principal_investigator_principal_investigator": {"name": "GWAS_ftd_study_principal_investigator_principal_investigator", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_study_principal_investigator_principal_investigator", "block_contents": "Principal Investigator"}, "doc.ftd.GWAS_ftd_study_external_id_description": {"name": "GWAS_ftd_study_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_study_external_id_description", "block_contents": "Model for GWAS_ftd_study_external_id."}, "doc.ftd.GWAS_ftd_study_external_id_study_id": {"name": "GWAS_ftd_study_external_id_study_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_study_external_id_study_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.GWAS_ftd_study_external_id_external_id": {"name": "GWAS_ftd_study_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "GWAS/docs/column_descriptions.md", "original_file_path": "models/GWAS/docs/column_descriptions.md", "unique_id": "doc.ftd.GWAS_ftd_study_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.gregor_synthetic_ftd_sample_storage_method_description": {"name": "gregor_synthetic_ftd_sample_storage_method_description", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_sample_storage_method_description", "block_contents": "Model for gregor_synthetic_ftd_sample_storage_method."}, "doc.ftd.gregor_synthetic_ftd_sample_storage_method_sample_id": {"name": "gregor_synthetic_ftd_sample_storage_method_sample_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_sample_storage_method_sample_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.gregor_synthetic_ftd_sample_storage_method_storage_method": {"name": "gregor_synthetic_ftd_sample_storage_method_storage_method", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_sample_storage_method_storage_method", "block_contents": "Sample storage method, eg, Frozen or with additives"}, "doc.ftd.gregor_synthetic_ftd_subject_external_id_description": {"name": "gregor_synthetic_ftd_subject_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_subject_external_id_description", "block_contents": "Model for gregor_synthetic_ftd_subject_external_id."}, "doc.ftd.gregor_synthetic_ftd_subject_external_id_subject_id": {"name": "gregor_synthetic_ftd_subject_external_id_subject_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_subject_external_id_subject_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.gregor_synthetic_ftd_subject_external_id_external_id": {"name": "gregor_synthetic_ftd_subject_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_subject_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.gregor_synthetic_ftd_subjectassertion_external_id_description": {"name": "gregor_synthetic_ftd_subjectassertion_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_subjectassertion_external_id_description", "block_contents": "Model for gregor_synthetic_ftd_subjectassertion_external_id."}, "doc.ftd.gregor_synthetic_ftd_subjectassertion_external_id_subjectassertion_id": {"name": "gregor_synthetic_ftd_subjectassertion_external_id_subjectassertion_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_subjectassertion_external_id_subjectassertion_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.gregor_synthetic_ftd_subjectassertion_external_id_external_id": {"name": "gregor_synthetic_ftd_subjectassertion_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_subjectassertion_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.gregor_synthetic_ftd_family_external_id_description": {"name": "gregor_synthetic_ftd_family_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_family_external_id_description", "block_contents": "Model for gregor_synthetic_ftd_family_external_id."}, "doc.ftd.gregor_synthetic_ftd_family_external_id_family_id": {"name": "gregor_synthetic_ftd_family_external_id_family_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_family_external_id_family_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.gregor_synthetic_ftd_family_external_id_external_id": {"name": "gregor_synthetic_ftd_family_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_family_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.gregor_synthetic_ftd_study_external_study_id_description": {"name": "gregor_synthetic_ftd_study_external_study_id_description", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_study_external_study_id_description", "block_contents": "Model for gregor_synthetic_ftd_study_external_study_id."}, "doc.ftd.gregor_synthetic_ftd_study_external_study_id_study_id": {"name": "gregor_synthetic_ftd_study_external_study_id_study_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_study_external_study_id_study_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.gregor_synthetic_ftd_study_external_study_id_external_study_id": {"name": "gregor_synthetic_ftd_study_external_study_id_external_study_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_study_external_study_id_external_study_id", "block_contents": "External Study ID"}, "doc.ftd.gregor_synthetic_ftd_study_principal_investigator_description": {"name": "gregor_synthetic_ftd_study_principal_investigator_description", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_study_principal_investigator_description", "block_contents": "Model for gregor_synthetic_ftd_study_principal_investigator."}, "doc.ftd.gregor_synthetic_ftd_study_principal_investigator_study_id": {"name": "gregor_synthetic_ftd_study_principal_investigator_study_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_study_principal_investigator_study_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.gregor_synthetic_ftd_study_principal_investigator_principal_investigator": {"name": "gregor_synthetic_ftd_study_principal_investigator_principal_investigator", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_study_principal_investigator_principal_investigator", "block_contents": "Principal Investigator"}, "doc.ftd.gregor_synthetic_ftd_accesspolicy_external_id_description": {"name": "gregor_synthetic_ftd_accesspolicy_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_accesspolicy_external_id_description", "block_contents": "Model for gregor_synthetic_ftd_accesspolicy_external_id."}, "doc.ftd.gregor_synthetic_ftd_accesspolicy_external_id_accesspolicy_id": {"name": "gregor_synthetic_ftd_accesspolicy_external_id_accesspolicy_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_accesspolicy_external_id_accesspolicy_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.gregor_synthetic_ftd_accesspolicy_external_id_external_id": {"name": "gregor_synthetic_ftd_accesspolicy_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_accesspolicy_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.gregor_synthetic_ftd_family_family_relationships_description": {"name": "gregor_synthetic_ftd_family_family_relationships_description", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_family_family_relationships_description", "block_contents": "Model for gregor_synthetic_ftd_family_family_relationships."}, "doc.ftd.gregor_synthetic_ftd_family_family_relationships_family_id": {"name": "gregor_synthetic_ftd_family_family_relationships_family_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_family_family_relationships_family_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.gregor_synthetic_ftd_family_family_relationships_family_relationships_id": {"name": "gregor_synthetic_ftd_family_family_relationships_family_relationships_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_family_family_relationships_family_relationships_id", "block_contents": "Family relationships associated with this family."}, "doc.ftd.gregor_synthetic_ftd_file_description": {"name": "gregor_synthetic_ftd_file_description", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_file_description", "block_contents": "Model for gregor_synthetic_ftd_file."}, "doc.ftd.gregor_synthetic_ftd_file_filename": {"name": "gregor_synthetic_ftd_file_filename", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_file_filename", "block_contents": "The name of the file."}, "doc.ftd.gregor_synthetic_ftd_file_format": {"name": "gregor_synthetic_ftd_file_format", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_file_format", "block_contents": "The format of the file."}, "doc.ftd.gregor_synthetic_ftd_file_data_type": {"name": "gregor_synthetic_ftd_file_data_type", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_file_data_type", "block_contents": "The type of data within this file."}, "doc.ftd.gregor_synthetic_ftd_file_size": {"name": "gregor_synthetic_ftd_file_size", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_file_size", "block_contents": "Size of the file, in Bytes."}, "doc.ftd.gregor_synthetic_ftd_file_drs_uri": {"name": "gregor_synthetic_ftd_file_drs_uri", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_file_drs_uri", "block_contents": "DRS location to access the data."}, "doc.ftd.gregor_synthetic_ftd_file_file_metadata": {"name": "gregor_synthetic_ftd_file_file_metadata", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_file_file_metadata", "block_contents": "Additional metadata about the contents of the file, eg, genome reference build."}, "doc.ftd.gregor_synthetic_ftd_file_has_access_policy": {"name": "gregor_synthetic_ftd_file_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_file_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.gregor_synthetic_ftd_file_id": {"name": "gregor_synthetic_ftd_file_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_file_id", "block_contents": "ID associated with a class"}, "doc.ftd.gregor_synthetic_ftd_familyrelationship_description": {"name": "gregor_synthetic_ftd_familyrelationship_description", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_familyrelationship_description", "block_contents": "Model for gregor_synthetic_ftd_familyrelationship."}, "doc.ftd.gregor_synthetic_ftd_familyrelationship_family_member": {"name": "gregor_synthetic_ftd_familyrelationship_family_member", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_familyrelationship_family_member", "block_contents": "The family member Subject who is the relationship \"subject\"."}, "doc.ftd.gregor_synthetic_ftd_familyrelationship_other_family_member": {"name": "gregor_synthetic_ftd_familyrelationship_other_family_member", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_familyrelationship_other_family_member", "block_contents": "The family member Subject for the relationship \"object\"."}, "doc.ftd.gregor_synthetic_ftd_familyrelationship_relationship_code": {"name": "gregor_synthetic_ftd_familyrelationship_relationship_code", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_familyrelationship_relationship_code", "block_contents": "Code definting the relationship predicate. Relationship of the \"Family Member\" to the \"Other Family Member\" (i.e. mother, father, etc). Code must be from the HL7 [FamilyMember ValueSet](https://terminology.hl7.org/6.2.0/ValueSet-v3-FamilyMember.html)"}, "doc.ftd.gregor_synthetic_ftd_familyrelationship_has_access_policy": {"name": "gregor_synthetic_ftd_familyrelationship_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_familyrelationship_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.gregor_synthetic_ftd_familyrelationship_id": {"name": "gregor_synthetic_ftd_familyrelationship_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_familyrelationship_id", "block_contents": "ID associated with a class"}, "doc.ftd.gregor_synthetic_ftd_file_sample_description": {"name": "gregor_synthetic_ftd_file_sample_description", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_file_sample_description", "block_contents": "Model for gregor_synthetic_ftd_file_sample."}, "doc.ftd.gregor_synthetic_ftd_file_sample_file_id": {"name": "gregor_synthetic_ftd_file_sample_file_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_file_sample_file_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.gregor_synthetic_ftd_file_sample_sample_id": {"name": "gregor_synthetic_ftd_file_sample_sample_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_file_sample_sample_id", "block_contents": "The Samples(s) used to generate data in this file."}, "doc.ftd.gregor_synthetic_ftd_study_external_id_description": {"name": "gregor_synthetic_ftd_study_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_study_external_id_description", "block_contents": "Model for gregor_synthetic_ftd_study_external_id."}, "doc.ftd.gregor_synthetic_ftd_study_external_id_study_id": {"name": "gregor_synthetic_ftd_study_external_id_study_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_study_external_id_study_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.gregor_synthetic_ftd_study_external_id_external_id": {"name": "gregor_synthetic_ftd_study_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_study_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.gregor_synthetic_ftd_sourcedata_description": {"name": "gregor_synthetic_ftd_sourcedata_description", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_sourcedata_description", "block_contents": "Model for gregor_synthetic_ftd_sourcedata."}, "doc.ftd.gregor_synthetic_ftd_sourcedata_code": {"name": "gregor_synthetic_ftd_sourcedata_code", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_sourcedata_code", "block_contents": "The structured term defining the meaning of the assertion."}, "doc.ftd.gregor_synthetic_ftd_sourcedata_display": {"name": "gregor_synthetic_ftd_sourcedata_display", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_sourcedata_display", "block_contents": "The friendly display string of the coded term"}, "doc.ftd.gregor_synthetic_ftd_sourcedata_value_code": {"name": "gregor_synthetic_ftd_sourcedata_value_code", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_sourcedata_value_code", "block_contents": "The structured term defining the value of the assertion."}, "doc.ftd.gregor_synthetic_ftd_sourcedata_value_display": {"name": "gregor_synthetic_ftd_sourcedata_value_display", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_sourcedata_value_display", "block_contents": "The friendly display string of the coded term for the value of the assertion."}, "doc.ftd.gregor_synthetic_ftd_sourcedata_value_number": {"name": "gregor_synthetic_ftd_sourcedata_value_number", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_sourcedata_value_number", "block_contents": "The numeric value of the assertion."}, "doc.ftd.gregor_synthetic_ftd_sourcedata_value_units": {"name": "gregor_synthetic_ftd_sourcedata_value_units", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_sourcedata_value_units", "block_contents": "The structured term defining the units of the value."}, "doc.ftd.gregor_synthetic_ftd_sourcedata_value_units_display": {"name": "gregor_synthetic_ftd_sourcedata_value_units_display", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_sourcedata_value_units_display", "block_contents": "The friendly display string of units of the value."}, "doc.ftd.gregor_synthetic_ftd_sourcedata_has_access_policy": {"name": "gregor_synthetic_ftd_sourcedata_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_sourcedata_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.gregor_synthetic_ftd_sourcedata_id": {"name": "gregor_synthetic_ftd_sourcedata_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_sourcedata_id", "block_contents": "ID associated with a class"}, "doc.ftd.gregor_synthetic_ftd_aliquot_external_id_description": {"name": "gregor_synthetic_ftd_aliquot_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_aliquot_external_id_description", "block_contents": "Model for gregor_synthetic_ftd_aliquot_external_id."}, "doc.ftd.gregor_synthetic_ftd_aliquot_external_id_aliquot_id": {"name": "gregor_synthetic_ftd_aliquot_external_id_aliquot_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_aliquot_external_id_aliquot_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.gregor_synthetic_ftd_aliquot_external_id_external_id": {"name": "gregor_synthetic_ftd_aliquot_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_aliquot_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.gregor_synthetic_ftd_accesscontrolledrecord_external_id_description": {"name": "gregor_synthetic_ftd_accesscontrolledrecord_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_accesscontrolledrecord_external_id_description", "block_contents": "Model for gregor_synthetic_ftd_accesscontrolledrecord_external_id."}, "doc.ftd.gregor_synthetic_ftd_accesscontrolledrecord_external_id_accesscontrolledrecord_id": {"name": "gregor_synthetic_ftd_accesscontrolledrecord_external_id_accesscontrolledrecord_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_accesscontrolledrecord_external_id_accesscontrolledrecord_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.gregor_synthetic_ftd_accesscontrolledrecord_external_id_external_id": {"name": "gregor_synthetic_ftd_accesscontrolledrecord_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_accesscontrolledrecord_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.gregor_synthetic_ftd_file_external_id_description": {"name": "gregor_synthetic_ftd_file_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_file_external_id_description", "block_contents": "Model for gregor_synthetic_ftd_file_external_id."}, "doc.ftd.gregor_synthetic_ftd_file_external_id_file_id": {"name": "gregor_synthetic_ftd_file_external_id_file_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_file_external_id_file_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.gregor_synthetic_ftd_file_external_id_external_id": {"name": "gregor_synthetic_ftd_file_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_file_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.gregor_synthetic_ftd_study_description": {"name": "gregor_synthetic_ftd_study_description", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_study_description", "block_contents": "Model for gregor_synthetic_ftd_study."}, "doc.ftd.gregor_synthetic_ftd_study_parent_study_id": {"name": "gregor_synthetic_ftd_study_parent_study_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_study_parent_study_id", "block_contents": "Parent Study ID"}, "doc.ftd.gregor_synthetic_ftd_study_study_title": {"name": "gregor_synthetic_ftd_study_study_title", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_study_study_title", "block_contents": "Study Title"}, "doc.ftd.gregor_synthetic_ftd_study_id": {"name": "gregor_synthetic_ftd_study_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_study_id", "block_contents": "ID associated with a class"}, "doc.ftd.gregor_synthetic_ftd_demographics_external_id_description": {"name": "gregor_synthetic_ftd_demographics_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_demographics_external_id_description", "block_contents": "Model for gregor_synthetic_ftd_demographics_external_id."}, "doc.ftd.gregor_synthetic_ftd_demographics_external_id_demographics_id": {"name": "gregor_synthetic_ftd_demographics_external_id_demographics_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_demographics_external_id_demographics_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.gregor_synthetic_ftd_demographics_external_id_external_id": {"name": "gregor_synthetic_ftd_demographics_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_demographics_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.gregor_synthetic_ftd_subject_description": {"name": "gregor_synthetic_ftd_subject_description", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_subject_description", "block_contents": "Model for gregor_synthetic_ftd_subject."}, "doc.ftd.gregor_synthetic_ftd_subject_subject_type": {"name": "gregor_synthetic_ftd_subject_subject_type", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_subject_subject_type", "block_contents": "Type of entity this record represents"}, "doc.ftd.gregor_synthetic_ftd_subject_organism_type": {"name": "gregor_synthetic_ftd_subject_organism_type", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_subject_organism_type", "block_contents": "Organism Type Label"}, "doc.ftd.gregor_synthetic_ftd_subject_has_access_policy": {"name": "gregor_synthetic_ftd_subject_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_subject_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.gregor_synthetic_ftd_subject_id": {"name": "gregor_synthetic_ftd_subject_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_subject_id", "block_contents": "ID associated with a class"}, "doc.ftd.gregor_synthetic_ftd_subject_has_demographics_id": {"name": "gregor_synthetic_ftd_subject_has_demographics_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_subject_has_demographics_id", "block_contents": "A demographic summary of the participant."}, "doc.ftd.gregor_synthetic_ftd_family_description": {"name": "gregor_synthetic_ftd_family_description", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_family_description", "block_contents": "Model for gregor_synthetic_ftd_family."}, "doc.ftd.gregor_synthetic_ftd_family_family_type": {"name": "gregor_synthetic_ftd_family_family_type", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_family_family_type", "block_contents": "Describes the 'type' of study family, eg, trio."}, "doc.ftd.gregor_synthetic_ftd_family_family_description": {"name": "gregor_synthetic_ftd_family_family_description", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_family_family_description", "block_contents": "Free title describing the study family, such as potential inheritance or details about consanguinity"}, "doc.ftd.gregor_synthetic_ftd_family_consanguinity": {"name": "gregor_synthetic_ftd_family_consanguinity", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_family_consanguinity", "block_contents": "Is there known or suspected consanguinity in this study family?"}, "doc.ftd.gregor_synthetic_ftd_family_family_study_focus": {"name": "gregor_synthetic_ftd_family_family_study_focus", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_family_family_study_focus", "block_contents": "What is this study family investigating? EG, a specific condition. The code should be prefixed with a recognizable curie."}, "doc.ftd.gregor_synthetic_ftd_family_has_access_policy": {"name": "gregor_synthetic_ftd_family_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_family_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.gregor_synthetic_ftd_family_id": {"name": "gregor_synthetic_ftd_family_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_family_id", "block_contents": "ID associated with a class"}, "doc.ftd.gregor_synthetic_ftd_biospecimencollection_external_id_description": {"name": "gregor_synthetic_ftd_biospecimencollection_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_biospecimencollection_external_id_description", "block_contents": "Model for gregor_synthetic_ftd_biospecimencollection_external_id."}, "doc.ftd.gregor_synthetic_ftd_biospecimencollection_external_id_biospecimencollection_id": {"name": "gregor_synthetic_ftd_biospecimencollection_external_id_biospecimencollection_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_biospecimencollection_external_id_biospecimencollection_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.gregor_synthetic_ftd_biospecimencollection_external_id_external_id": {"name": "gregor_synthetic_ftd_biospecimencollection_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_biospecimencollection_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.gregor_synthetic_ftd_subjectassertion_source_data_description": {"name": "gregor_synthetic_ftd_subjectassertion_source_data_description", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_subjectassertion_source_data_description", "block_contents": "Model for gregor_synthetic_ftd_subjectassertion_source_data."}, "doc.ftd.gregor_synthetic_ftd_subjectassertion_source_data_subjectassertion_id": {"name": "gregor_synthetic_ftd_subjectassertion_source_data_subjectassertion_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_subjectassertion_source_data_subjectassertion_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.gregor_synthetic_ftd_subjectassertion_source_data_source_data_id": {"name": "gregor_synthetic_ftd_subjectassertion_source_data_source_data_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_subjectassertion_source_data_source_data_id", "block_contents": "The sources from which this assertion was derived"}, "doc.ftd.gregor_synthetic_ftd_demographics_source_data_description": {"name": "gregor_synthetic_ftd_demographics_source_data_description", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_demographics_source_data_description", "block_contents": "Model for gregor_synthetic_ftd_demographics_source_data."}, "doc.ftd.gregor_synthetic_ftd_demographics_source_data_demographics_id": {"name": "gregor_synthetic_ftd_demographics_source_data_demographics_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_demographics_source_data_demographics_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.gregor_synthetic_ftd_demographics_source_data_source_data_id": {"name": "gregor_synthetic_ftd_demographics_source_data_source_data_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_demographics_source_data_source_data_id", "block_contents": "The sources from which this assertion was derived"}, "doc.ftd.gregor_synthetic_ftd_demographics_race_description": {"name": "gregor_synthetic_ftd_demographics_race_description", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_demographics_race_description", "block_contents": "Model for gregor_synthetic_ftd_demographics_race."}, "doc.ftd.gregor_synthetic_ftd_demographics_race_demographics_id": {"name": "gregor_synthetic_ftd_demographics_race_demographics_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_demographics_race_demographics_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.gregor_synthetic_ftd_demographics_race_race": {"name": "gregor_synthetic_ftd_demographics_race_race", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_demographics_race_race", "block_contents": "Reported race as defined by the 1997 OMB directives."}, "doc.ftd.gregor_synthetic_ftd_sample_description": {"name": "gregor_synthetic_ftd_sample_description", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_sample_description", "block_contents": "Model for gregor_synthetic_ftd_sample."}, "doc.ftd.gregor_synthetic_ftd_sample_parent_sample": {"name": "gregor_synthetic_ftd_sample_parent_sample", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_sample_parent_sample", "block_contents": "Sample from which this sample is derived"}, "doc.ftd.gregor_synthetic_ftd_sample_sample_type": {"name": "gregor_synthetic_ftd_sample_sample_type", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_sample_sample_type", "block_contents": "Type of material of which this Sample is comprised"}, "doc.ftd.gregor_synthetic_ftd_sample_availablity_status": {"name": "gregor_synthetic_ftd_sample_availablity_status", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_sample_availablity_status", "block_contents": "Can this Sample be requested for further analysis?"}, "doc.ftd.gregor_synthetic_ftd_sample_quantity_number": {"name": "gregor_synthetic_ftd_sample_quantity_number", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_sample_quantity_number", "block_contents": "The total quantity of the specimen"}, "doc.ftd.gregor_synthetic_ftd_sample_quantity_units": {"name": "gregor_synthetic_ftd_sample_quantity_units", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_sample_quantity_units", "block_contents": "The structured term defining the units of the quantity."}, "doc.ftd.gregor_synthetic_ftd_sample_has_access_policy": {"name": "gregor_synthetic_ftd_sample_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_sample_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.gregor_synthetic_ftd_sample_id": {"name": "gregor_synthetic_ftd_sample_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_sample_id", "block_contents": "ID associated with a class"}, "doc.ftd.gregor_synthetic_ftd_sample_subject_id": {"name": "gregor_synthetic_ftd_sample_subject_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_sample_subject_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.gregor_synthetic_ftd_sample_biospecimen_collection_id": {"name": "gregor_synthetic_ftd_sample_biospecimen_collection_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_sample_biospecimen_collection_id", "block_contents": "Biospecimen Collection that generated this sample."}, "doc.ftd.gregor_synthetic_ftd_file_subject_description": {"name": "gregor_synthetic_ftd_file_subject_description", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_file_subject_description", "block_contents": "Model for gregor_synthetic_ftd_file_subject."}, "doc.ftd.gregor_synthetic_ftd_file_subject_file_id": {"name": "gregor_synthetic_ftd_file_subject_file_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_file_subject_file_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.gregor_synthetic_ftd_file_subject_subject_id": {"name": "gregor_synthetic_ftd_file_subject_subject_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_file_subject_subject_id", "block_contents": "The Subject(s) which this file describes."}, "doc.ftd.gregor_synthetic_ftd_thing_external_id_description": {"name": "gregor_synthetic_ftd_thing_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_thing_external_id_description", "block_contents": "Model for gregor_synthetic_ftd_thing_external_id."}, "doc.ftd.gregor_synthetic_ftd_thing_external_id_thing_id": {"name": "gregor_synthetic_ftd_thing_external_id_thing_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_thing_external_id_thing_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.gregor_synthetic_ftd_thing_external_id_external_id": {"name": "gregor_synthetic_ftd_thing_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_thing_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.gregor_synthetic_ftd_familyrelationship_external_id_description": {"name": "gregor_synthetic_ftd_familyrelationship_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_familyrelationship_external_id_description", "block_contents": "Model for gregor_synthetic_ftd_familyrelationship_external_id."}, "doc.ftd.gregor_synthetic_ftd_familyrelationship_external_id_familyrelationship_id": {"name": "gregor_synthetic_ftd_familyrelationship_external_id_familyrelationship_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_familyrelationship_external_id_familyrelationship_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.gregor_synthetic_ftd_familyrelationship_external_id_external_id": {"name": "gregor_synthetic_ftd_familyrelationship_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_familyrelationship_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.gregor_synthetic_ftd_accesspolicy_access_policy_code_description": {"name": "gregor_synthetic_ftd_accesspolicy_access_policy_code_description", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_accesspolicy_access_policy_code_description", "block_contents": "Model for gregor_synthetic_ftd_accesspolicy_access_policy_code."}, "doc.ftd.gregor_synthetic_ftd_accesspolicy_access_policy_code_accesspolicy_id": {"name": "gregor_synthetic_ftd_accesspolicy_access_policy_code_accesspolicy_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_accesspolicy_access_policy_code_accesspolicy_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.gregor_synthetic_ftd_accesspolicy_access_policy_code_access_policy_code": {"name": "gregor_synthetic_ftd_accesspolicy_access_policy_code_access_policy_code", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_accesspolicy_access_policy_code_access_policy_code", "block_contents": "Access Policy Code"}, "doc.ftd.gregor_synthetic_ftd_sample_processing_description": {"name": "gregor_synthetic_ftd_sample_processing_description", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_sample_processing_description", "block_contents": "Model for gregor_synthetic_ftd_sample_processing."}, "doc.ftd.gregor_synthetic_ftd_sample_processing_sample_id": {"name": "gregor_synthetic_ftd_sample_processing_sample_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_sample_processing_sample_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.gregor_synthetic_ftd_sample_processing_processing": {"name": "gregor_synthetic_ftd_sample_processing_processing", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_sample_processing_processing", "block_contents": "Processing that was applied to the Parent Sample or from the Biospecimen Collection that yielded this distinct sample"}, "doc.ftd.gregor_synthetic_ftd_demographics_description": {"name": "gregor_synthetic_ftd_demographics_description", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_demographics_description", "block_contents": "Model for gregor_synthetic_ftd_demographics."}, "doc.ftd.gregor_synthetic_ftd_demographics_date_of_birth": {"name": "gregor_synthetic_ftd_demographics_date_of_birth", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_demographics_date_of_birth", "block_contents": "Date at which the individual was born. May be impacted by privacy rules described in date_of_birth_type."}, "doc.ftd.gregor_synthetic_ftd_demographics_date_of_birth_type": {"name": "gregor_synthetic_ftd_demographics_date_of_birth_type", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_demographics_date_of_birth_type", "block_contents": "Privacy rule modification applied to date_of_birth."}, "doc.ftd.gregor_synthetic_ftd_demographics_sex": {"name": "gregor_synthetic_ftd_demographics_sex", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_demographics_sex", "block_contents": "Sex of the individual"}, "doc.ftd.gregor_synthetic_ftd_demographics_sex_display": {"name": "gregor_synthetic_ftd_demographics_sex_display", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_demographics_sex_display", "block_contents": "The friendly display string of the coded term for Sex"}, "doc.ftd.gregor_synthetic_ftd_demographics_race_display": {"name": "gregor_synthetic_ftd_demographics_race_display", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_demographics_race_display", "block_contents": "The friendly display string of the coded term(s) for Race"}, "doc.ftd.gregor_synthetic_ftd_demographics_ethnicity": {"name": "gregor_synthetic_ftd_demographics_ethnicity", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_demographics_ethnicity", "block_contents": "Reported ethnicity as defined by the 1997 OMB directives."}, "doc.ftd.gregor_synthetic_ftd_demographics_ethnicity_display": {"name": "gregor_synthetic_ftd_demographics_ethnicity_display", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_demographics_ethnicity_display", "block_contents": "The friendly display string of the coded term for Ethnicity"}, "doc.ftd.gregor_synthetic_ftd_demographics_age_at_last_vital_status": {"name": "gregor_synthetic_ftd_demographics_age_at_last_vital_status", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_demographics_age_at_last_vital_status", "block_contents": "Age at last vital status in decimal years."}, "doc.ftd.gregor_synthetic_ftd_demographics_vital_status": {"name": "gregor_synthetic_ftd_demographics_vital_status", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_demographics_vital_status", "block_contents": "Vital Status"}, "doc.ftd.gregor_synthetic_ftd_demographics_has_access_policy": {"name": "gregor_synthetic_ftd_demographics_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_demographics_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.gregor_synthetic_ftd_demographics_id": {"name": "gregor_synthetic_ftd_demographics_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_demographics_id", "block_contents": "ID associated with a class"}, "doc.ftd.gregor_synthetic_ftd_aliquot_description": {"name": "gregor_synthetic_ftd_aliquot_description", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_aliquot_description", "block_contents": "Model for gregor_synthetic_ftd_aliquot."}, "doc.ftd.gregor_synthetic_ftd_aliquot_availablity_status": {"name": "gregor_synthetic_ftd_aliquot_availablity_status", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_aliquot_availablity_status", "block_contents": "Can this Sample be requested for further analysis?"}, "doc.ftd.gregor_synthetic_ftd_aliquot_quantity_number": {"name": "gregor_synthetic_ftd_aliquot_quantity_number", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_aliquot_quantity_number", "block_contents": "The total quantity of the specimen"}, "doc.ftd.gregor_synthetic_ftd_aliquot_quantity_units": {"name": "gregor_synthetic_ftd_aliquot_quantity_units", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_aliquot_quantity_units", "block_contents": "The structured term defining the units of the quantity."}, "doc.ftd.gregor_synthetic_ftd_aliquot_concentration_number": {"name": "gregor_synthetic_ftd_aliquot_concentration_number", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_aliquot_concentration_number", "block_contents": "What is the concentration of the analyte in the Aliquot?"}, "doc.ftd.gregor_synthetic_ftd_aliquot_concentration_unit": {"name": "gregor_synthetic_ftd_aliquot_concentration_unit", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_aliquot_concentration_unit", "block_contents": "Units associated with the concentration of the analyte in the Aliquot? UCUM coding preferred (with curie, UCUM)"}, "doc.ftd.gregor_synthetic_ftd_aliquot_has_access_policy": {"name": "gregor_synthetic_ftd_aliquot_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_aliquot_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.gregor_synthetic_ftd_aliquot_id": {"name": "gregor_synthetic_ftd_aliquot_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_aliquot_id", "block_contents": "ID associated with a class"}, "doc.ftd.gregor_synthetic_ftd_aliquot_sample_id": {"name": "gregor_synthetic_ftd_aliquot_sample_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_aliquot_sample_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.gregor_synthetic_ftd_subjectassertion_description": {"name": "gregor_synthetic_ftd_subjectassertion_description", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_subjectassertion_description", "block_contents": "Model for gregor_synthetic_ftd_subjectassertion."}, "doc.ftd.gregor_synthetic_ftd_subjectassertion_assertion_type": {"name": "gregor_synthetic_ftd_subjectassertion_assertion_type", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_subjectassertion_assertion_type", "block_contents": "The semantic type of the resource, eg, Condition."}, "doc.ftd.gregor_synthetic_ftd_subjectassertion_age_at_assertion": {"name": "gregor_synthetic_ftd_subjectassertion_age_at_assertion", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_subjectassertion_age_at_assertion", "block_contents": "The age in decimal years of the Subject when the assertion was made."}, "doc.ftd.gregor_synthetic_ftd_subjectassertion_age_at_event": {"name": "gregor_synthetic_ftd_subjectassertion_age_at_event", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_subjectassertion_age_at_event", "block_contents": "The age in decimal years of the Subject at the time point which the assertion describes, | eg, age of onset or when a measurement was performed."}, "doc.ftd.gregor_synthetic_ftd_subjectassertion_age_at_resolution": {"name": "gregor_synthetic_ftd_subjectassertion_age_at_resolution", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_subjectassertion_age_at_resolution", "block_contents": "The age in decimal years of the Subject when the asserted state was resolved."}, "doc.ftd.gregor_synthetic_ftd_subjectassertion_code": {"name": "gregor_synthetic_ftd_subjectassertion_code", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_subjectassertion_code", "block_contents": "The structured term defining the meaning of the assertion."}, "doc.ftd.gregor_synthetic_ftd_subjectassertion_display": {"name": "gregor_synthetic_ftd_subjectassertion_display", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_subjectassertion_display", "block_contents": "The friendly display string of the coded term"}, "doc.ftd.gregor_synthetic_ftd_subjectassertion_value_code": {"name": "gregor_synthetic_ftd_subjectassertion_value_code", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_subjectassertion_value_code", "block_contents": "The structured term defining the value of the assertion."}, "doc.ftd.gregor_synthetic_ftd_subjectassertion_value_display": {"name": "gregor_synthetic_ftd_subjectassertion_value_display", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_subjectassertion_value_display", "block_contents": "The friendly display string of the coded term for the value of the assertion."}, "doc.ftd.gregor_synthetic_ftd_subjectassertion_value_number": {"name": "gregor_synthetic_ftd_subjectassertion_value_number", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_subjectassertion_value_number", "block_contents": "The numeric value of the assertion."}, "doc.ftd.gregor_synthetic_ftd_subjectassertion_value_units": {"name": "gregor_synthetic_ftd_subjectassertion_value_units", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_subjectassertion_value_units", "block_contents": "The structured term defining the units of the value."}, "doc.ftd.gregor_synthetic_ftd_subjectassertion_value_units_display": {"name": "gregor_synthetic_ftd_subjectassertion_value_units_display", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_subjectassertion_value_units_display", "block_contents": "The friendly display string of units of the value."}, "doc.ftd.gregor_synthetic_ftd_subjectassertion_has_access_policy": {"name": "gregor_synthetic_ftd_subjectassertion_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_subjectassertion_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.gregor_synthetic_ftd_subjectassertion_id": {"name": "gregor_synthetic_ftd_subjectassertion_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_subjectassertion_id", "block_contents": "ID associated with a class"}, "doc.ftd.gregor_synthetic_ftd_subjectassertion_subject_id": {"name": "gregor_synthetic_ftd_subjectassertion_subject_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_subjectassertion_subject_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.gregor_synthetic_ftd_accesscontrolledrecord_description": {"name": "gregor_synthetic_ftd_accesscontrolledrecord_description", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_accesscontrolledrecord_description", "block_contents": "Model for gregor_synthetic_ftd_accesscontrolledrecord."}, "doc.ftd.gregor_synthetic_ftd_accesscontrolledrecord_has_access_policy": {"name": "gregor_synthetic_ftd_accesscontrolledrecord_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_accesscontrolledrecord_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.gregor_synthetic_ftd_accesscontrolledrecord_id": {"name": "gregor_synthetic_ftd_accesscontrolledrecord_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_accesscontrolledrecord_id", "block_contents": "ID associated with a class"}, "doc.ftd.gregor_synthetic_ftd_filemetadata_description": {"name": "gregor_synthetic_ftd_filemetadata_description", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_filemetadata_description", "block_contents": "Model for gregor_synthetic_ftd_filemetadata."}, "doc.ftd.gregor_synthetic_ftd_filemetadata_code": {"name": "gregor_synthetic_ftd_filemetadata_code", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_filemetadata_code", "block_contents": "The structured term defining the meaning of the assertion."}, "doc.ftd.gregor_synthetic_ftd_filemetadata_display": {"name": "gregor_synthetic_ftd_filemetadata_display", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_filemetadata_display", "block_contents": "The friendly display string of the coded term"}, "doc.ftd.gregor_synthetic_ftd_filemetadata_value_code": {"name": "gregor_synthetic_ftd_filemetadata_value_code", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_filemetadata_value_code", "block_contents": "The structured term defining the value of the assertion."}, "doc.ftd.gregor_synthetic_ftd_filemetadata_value_display": {"name": "gregor_synthetic_ftd_filemetadata_value_display", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_filemetadata_value_display", "block_contents": "The friendly display string of the coded term for the value of the assertion."}, "doc.ftd.gregor_synthetic_ftd_filemetadata_id": {"name": "gregor_synthetic_ftd_filemetadata_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_filemetadata_id", "block_contents": "ID associated with a class"}, "doc.ftd.gregor_synthetic_ftd_filemetadata_external_id_description": {"name": "gregor_synthetic_ftd_filemetadata_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_filemetadata_external_id_description", "block_contents": "Model for gregor_synthetic_ftd_filemetadata_external_id."}, "doc.ftd.gregor_synthetic_ftd_filemetadata_external_id_filemetadata_id": {"name": "gregor_synthetic_ftd_filemetadata_external_id_filemetadata_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_filemetadata_external_id_filemetadata_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.gregor_synthetic_ftd_filemetadata_external_id_external_id": {"name": "gregor_synthetic_ftd_filemetadata_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_filemetadata_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.gregor_synthetic_ftd_familymember_external_id_description": {"name": "gregor_synthetic_ftd_familymember_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_familymember_external_id_description", "block_contents": "Model for gregor_synthetic_ftd_familymember_external_id."}, "doc.ftd.gregor_synthetic_ftd_familymember_external_id_familymember_id": {"name": "gregor_synthetic_ftd_familymember_external_id_familymember_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_familymember_external_id_familymember_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.gregor_synthetic_ftd_familymember_external_id_external_id": {"name": "gregor_synthetic_ftd_familymember_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_familymember_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.gregor_synthetic_ftd_study_funding_source_description": {"name": "gregor_synthetic_ftd_study_funding_source_description", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_study_funding_source_description", "block_contents": "Model for gregor_synthetic_ftd_study_funding_source."}, "doc.ftd.gregor_synthetic_ftd_study_funding_source_study_id": {"name": "gregor_synthetic_ftd_study_funding_source_study_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_study_funding_source_study_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.gregor_synthetic_ftd_study_funding_source_funding_source": {"name": "gregor_synthetic_ftd_study_funding_source_funding_source", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_study_funding_source_funding_source", "block_contents": "Funding Source"}, "doc.ftd.gregor_synthetic_ftd_accesspolicy_description": {"name": "gregor_synthetic_ftd_accesspolicy_description", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_accesspolicy_description", "block_contents": "Model for gregor_synthetic_ftd_accesspolicy."}, "doc.ftd.gregor_synthetic_ftd_accesspolicy_disease_limitation": {"name": "gregor_synthetic_ftd_accesspolicy_disease_limitation", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_accesspolicy_disease_limitation", "block_contents": "Disease Use Limitations"}, "doc.ftd.gregor_synthetic_ftd_accesspolicy_website": {"name": "gregor_synthetic_ftd_accesspolicy_website", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_accesspolicy_website", "block_contents": "Website"}, "doc.ftd.gregor_synthetic_ftd_accesspolicy_id": {"name": "gregor_synthetic_ftd_accesspolicy_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_accesspolicy_id", "block_contents": "ID associated with a class"}, "doc.ftd.gregor_synthetic_ftd_familymember_description": {"name": "gregor_synthetic_ftd_familymember_description", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_familymember_description", "block_contents": "Model for gregor_synthetic_ftd_familymember."}, "doc.ftd.gregor_synthetic_ftd_familymember_family_member": {"name": "gregor_synthetic_ftd_familymember_family_member", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_familymember_family_member", "block_contents": "The family member Subject who is the relationship \"subject\"."}, "doc.ftd.gregor_synthetic_ftd_familymember_family_role": {"name": "gregor_synthetic_ftd_familymember_family_role", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_familymember_family_role", "block_contents": "The \"role\" of this indiviudal in this family."}, "doc.ftd.gregor_synthetic_ftd_familymember_has_access_policy": {"name": "gregor_synthetic_ftd_familymember_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_familymember_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.gregor_synthetic_ftd_familymember_id": {"name": "gregor_synthetic_ftd_familymember_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_familymember_id", "block_contents": "ID associated with a class"}, "doc.ftd.gregor_synthetic_ftd_familymember_family_id": {"name": "gregor_synthetic_ftd_familymember_family_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_familymember_family_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.gregor_synthetic_ftd_sourcedata_external_id_description": {"name": "gregor_synthetic_ftd_sourcedata_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_sourcedata_external_id_description", "block_contents": "Model for gregor_synthetic_ftd_sourcedata_external_id."}, "doc.ftd.gregor_synthetic_ftd_sourcedata_external_id_sourcedata_id": {"name": "gregor_synthetic_ftd_sourcedata_external_id_sourcedata_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_sourcedata_external_id_sourcedata_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.gregor_synthetic_ftd_sourcedata_external_id_external_id": {"name": "gregor_synthetic_ftd_sourcedata_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_sourcedata_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.gregor_synthetic_ftd_sample_external_id_description": {"name": "gregor_synthetic_ftd_sample_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_sample_external_id_description", "block_contents": "Model for gregor_synthetic_ftd_sample_external_id."}, "doc.ftd.gregor_synthetic_ftd_sample_external_id_sample_id": {"name": "gregor_synthetic_ftd_sample_external_id_sample_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_sample_external_id_sample_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.gregor_synthetic_ftd_sample_external_id_external_id": {"name": "gregor_synthetic_ftd_sample_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_sample_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.gregor_synthetic_ftd_biospecimencollection_description": {"name": "gregor_synthetic_ftd_biospecimencollection_description", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_biospecimencollection_description", "block_contents": "Model for gregor_synthetic_ftd_biospecimencollection."}, "doc.ftd.gregor_synthetic_ftd_biospecimencollection_age_at_collection": {"name": "gregor_synthetic_ftd_biospecimencollection_age_at_collection", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_biospecimencollection_age_at_collection", "block_contents": "The age at which this biospecimen was collected."}, "doc.ftd.gregor_synthetic_ftd_biospecimencollection_method": {"name": "gregor_synthetic_ftd_biospecimencollection_method", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_biospecimencollection_method", "block_contents": "The approach used to collect the biospecimen."}, "doc.ftd.gregor_synthetic_ftd_biospecimencollection_site": {"name": "gregor_synthetic_ftd_biospecimencollection_site", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_biospecimencollection_site", "block_contents": "The location of the specimen collection."}, "doc.ftd.gregor_synthetic_ftd_biospecimencollection_spatial_qualifier": {"name": "gregor_synthetic_ftd_biospecimencollection_spatial_qualifier", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_biospecimencollection_spatial_qualifier", "block_contents": "Any spatial/location qualifiers"}, "doc.ftd.gregor_synthetic_ftd_biospecimencollection_laterality": {"name": "gregor_synthetic_ftd_biospecimencollection_laterality", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_biospecimencollection_laterality", "block_contents": "Laterality information for the site"}, "doc.ftd.gregor_synthetic_ftd_biospecimencollection_has_access_policy": {"name": "gregor_synthetic_ftd_biospecimencollection_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_biospecimencollection_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.gregor_synthetic_ftd_biospecimencollection_id": {"name": "gregor_synthetic_ftd_biospecimencollection_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_biospecimencollection_id", "block_contents": "ID associated with a class"}, "doc.ftd.gregor_synthetic_ftd_accesspolicy_data_access_type_description": {"name": "gregor_synthetic_ftd_accesspolicy_data_access_type_description", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_accesspolicy_data_access_type_description", "block_contents": "Model for gregor_synthetic_ftd_accesspolicy_data_access_type."}, "doc.ftd.gregor_synthetic_ftd_accesspolicy_data_access_type_accesspolicy_id": {"name": "gregor_synthetic_ftd_accesspolicy_data_access_type_accesspolicy_id", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_accesspolicy_data_access_type_accesspolicy_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.gregor_synthetic_ftd_accesspolicy_data_access_type_data_access_type": {"name": "gregor_synthetic_ftd_accesspolicy_data_access_type_data_access_type", "resource_type": "doc", "package_name": "ftd", "path": "gregor_synthetic/docs/column_descriptions.md", "original_file_path": "models/gregor_synthetic/docs/column_descriptions.md", "unique_id": "doc.ftd.gregor_synthetic_ftd_accesspolicy_data_access_type_data_access_type", "block_contents": "Data Access Type"}, "doc.ftd.eMERGEseq_ftd_datasource_external_id_description": {"name": "eMERGEseq_ftd_datasource_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_datasource_external_id_description", "block_contents": "Model for eMERGEseq_ftd_datasource_external_id."}, "doc.ftd.eMERGEseq_ftd_datasource_external_id_datasource_id": {"name": "eMERGEseq_ftd_datasource_external_id_datasource_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_datasource_external_id_datasource_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.eMERGEseq_ftd_datasource_external_id_external_id": {"name": "eMERGEseq_ftd_datasource_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_datasource_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.eMERGEseq_ftd_sample_description": {"name": "eMERGEseq_ftd_sample_description", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_sample_description", "block_contents": "Model for eMERGEseq_ftd_sample."}, "doc.ftd.eMERGEseq_ftd_sample_parent_sample": {"name": "eMERGEseq_ftd_sample_parent_sample", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_sample_parent_sample", "block_contents": "Sample from which this sample is derived"}, "doc.ftd.eMERGEseq_ftd_sample_sample_type": {"name": "eMERGEseq_ftd_sample_sample_type", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_sample_sample_type", "block_contents": "Type of material of which this Sample is comprised"}, "doc.ftd.eMERGEseq_ftd_sample_availablity_status": {"name": "eMERGEseq_ftd_sample_availablity_status", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_sample_availablity_status", "block_contents": "Can this Sample be requested for further analysis?"}, "doc.ftd.eMERGEseq_ftd_sample_quantity_number": {"name": "eMERGEseq_ftd_sample_quantity_number", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_sample_quantity_number", "block_contents": "The total quantity of the specimen"}, "doc.ftd.eMERGEseq_ftd_sample_quantity_units": {"name": "eMERGEseq_ftd_sample_quantity_units", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_sample_quantity_units", "block_contents": "The structured term defining the units of the quantity."}, "doc.ftd.eMERGEseq_ftd_sample_has_access_policy": {"name": "eMERGEseq_ftd_sample_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_sample_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.eMERGEseq_ftd_sample_id": {"name": "eMERGEseq_ftd_sample_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_sample_id", "block_contents": "ID associated with a class"}, "doc.ftd.eMERGEseq_ftd_sample_subject_id": {"name": "eMERGEseq_ftd_sample_subject_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_sample_subject_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.eMERGEseq_ftd_sample_biospecimen_collection_id": {"name": "eMERGEseq_ftd_sample_biospecimen_collection_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_sample_biospecimen_collection_id", "block_contents": "Biospecimen Collection that generated this sample."}, "doc.ftd.eMERGEseq_ftd_demographics_source_data_description": {"name": "eMERGEseq_ftd_demographics_source_data_description", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_demographics_source_data_description", "block_contents": "Model for eMERGEseq_ftd_demographics_source_data."}, "doc.ftd.eMERGEseq_ftd_demographics_source_data_demographics_id": {"name": "eMERGEseq_ftd_demographics_source_data_demographics_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_demographics_source_data_demographics_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.eMERGEseq_ftd_demographics_source_data_source_data_id": {"name": "eMERGEseq_ftd_demographics_source_data_source_data_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_demographics_source_data_source_data_id", "block_contents": "The sources from which this assertion was derived"}, "doc.ftd.eMERGEseq_ftd_family_description": {"name": "eMERGEseq_ftd_family_description", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_family_description", "block_contents": "Model for eMERGEseq_ftd_family."}, "doc.ftd.eMERGEseq_ftd_family_family_type": {"name": "eMERGEseq_ftd_family_family_type", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_family_family_type", "block_contents": "Describes the 'type' of study family, eg, trio."}, "doc.ftd.eMERGEseq_ftd_family_family_description": {"name": "eMERGEseq_ftd_family_family_description", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_family_family_description", "block_contents": "Free title describing the study family, such as potential inheritance or details about consanguinity"}, "doc.ftd.eMERGEseq_ftd_family_consanguinity": {"name": "eMERGEseq_ftd_family_consanguinity", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_family_consanguinity", "block_contents": "Is there known or suspected consanguinity in this study family?"}, "doc.ftd.eMERGEseq_ftd_family_family_study_focus": {"name": "eMERGEseq_ftd_family_family_study_focus", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_family_family_study_focus", "block_contents": "What is this study family investigating? EG, a specific condition. The code should be prefixed with a recognizable curie."}, "doc.ftd.eMERGEseq_ftd_family_has_access_policy": {"name": "eMERGEseq_ftd_family_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_family_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.eMERGEseq_ftd_family_id": {"name": "eMERGEseq_ftd_family_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_family_id", "block_contents": "ID associated with a class"}, "doc.ftd.eMERGEseq_ftd_accesscontrolledrecord_description": {"name": "eMERGEseq_ftd_accesscontrolledrecord_description", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_accesscontrolledrecord_description", "block_contents": "Model for eMERGEseq_ftd_accesscontrolledrecord."}, "doc.ftd.eMERGEseq_ftd_accesscontrolledrecord_has_access_policy": {"name": "eMERGEseq_ftd_accesscontrolledrecord_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_accesscontrolledrecord_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.eMERGEseq_ftd_accesscontrolledrecord_id": {"name": "eMERGEseq_ftd_accesscontrolledrecord_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_accesscontrolledrecord_id", "block_contents": "ID associated with a class"}, "doc.ftd.eMERGEseq_ftd_biospecimencollection_external_id_description": {"name": "eMERGEseq_ftd_biospecimencollection_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_biospecimencollection_external_id_description", "block_contents": "Model for eMERGEseq_ftd_biospecimencollection_external_id."}, "doc.ftd.eMERGEseq_ftd_biospecimencollection_external_id_biospecimencollection_id": {"name": "eMERGEseq_ftd_biospecimencollection_external_id_biospecimencollection_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_biospecimencollection_external_id_biospecimencollection_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.eMERGEseq_ftd_biospecimencollection_external_id_external_id": {"name": "eMERGEseq_ftd_biospecimencollection_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_biospecimencollection_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.eMERGEseq_ftd_datasource_description": {"name": "eMERGEseq_ftd_datasource_description", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_datasource_description", "block_contents": "Model for eMERGEseq_ftd_datasource."}, "doc.ftd.eMERGEseq_ftd_datasource_snapshot_id": {"name": "eMERGEseq_ftd_datasource_snapshot_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_datasource_snapshot_id", "block_contents": "The Terra Data Repository Snapshot ID."}, "doc.ftd.eMERGEseq_ftd_datasource_google_data_project": {"name": "eMERGEseq_ftd_datasource_google_data_project", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_datasource_google_data_project", "block_contents": "The Google Data Project needed to query this snapshot in BigQuery."}, "doc.ftd.eMERGEseq_ftd_datasource_snapshot_dataset": {"name": "eMERGEseq_ftd_datasource_snapshot_dataset", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_datasource_snapshot_dataset", "block_contents": "The Dataset within BigQuery where the table can be queried."}, "doc.ftd.eMERGEseq_ftd_datasource_table": {"name": "eMERGEseq_ftd_datasource_table", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_datasource_table", "block_contents": "The table in the dataset that contains the row of interest."}, "doc.ftd.eMERGEseq_ftd_datasource_parameterized_query": {"name": "eMERGEseq_ftd_datasource_parameterized_query", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_datasource_parameterized_query", "block_contents": "A parameterized query that contains the primary key fields and can be used to select specific rows. This should be formatted according to (https://cloud.google.com/bigquery/docs/parameterized-queries)[BigQuery instructions], including using named parameters."}, "doc.ftd.eMERGEseq_ftd_datasource_id": {"name": "eMERGEseq_ftd_datasource_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_datasource_id", "block_contents": "ID associated with a class"}, "doc.ftd.eMERGEseq_ftd_subjectassertion_description": {"name": "eMERGEseq_ftd_subjectassertion_description", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_subjectassertion_description", "block_contents": "Model for eMERGEseq_ftd_subjectassertion."}, "doc.ftd.eMERGEseq_ftd_subjectassertion_assertion_type": {"name": "eMERGEseq_ftd_subjectassertion_assertion_type", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_subjectassertion_assertion_type", "block_contents": "The semantic type of the resource, eg, Condition."}, "doc.ftd.eMERGEseq_ftd_subjectassertion_age_at_assertion": {"name": "eMERGEseq_ftd_subjectassertion_age_at_assertion", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_subjectassertion_age_at_assertion", "block_contents": "The age in decimal years of the Subject when the assertion was made."}, "doc.ftd.eMERGEseq_ftd_subjectassertion_age_at_event": {"name": "eMERGEseq_ftd_subjectassertion_age_at_event", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_subjectassertion_age_at_event", "block_contents": "The age in decimal years of the Subject at the time point which the assertion describes, | eg, age of onset or when a measurement was performed."}, "doc.ftd.eMERGEseq_ftd_subjectassertion_age_at_resolution": {"name": "eMERGEseq_ftd_subjectassertion_age_at_resolution", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_subjectassertion_age_at_resolution", "block_contents": "The age in decimal years of the Subject when the asserted state was resolved."}, "doc.ftd.eMERGEseq_ftd_subjectassertion_code": {"name": "eMERGEseq_ftd_subjectassertion_code", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_subjectassertion_code", "block_contents": "The structured term defining the meaning of the assertion."}, "doc.ftd.eMERGEseq_ftd_subjectassertion_display": {"name": "eMERGEseq_ftd_subjectassertion_display", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_subjectassertion_display", "block_contents": "The friendly display string of the coded term"}, "doc.ftd.eMERGEseq_ftd_subjectassertion_value_code": {"name": "eMERGEseq_ftd_subjectassertion_value_code", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_subjectassertion_value_code", "block_contents": "The structured term defining the value of the assertion."}, "doc.ftd.eMERGEseq_ftd_subjectassertion_value_display": {"name": "eMERGEseq_ftd_subjectassertion_value_display", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_subjectassertion_value_display", "block_contents": "The friendly display string of the coded term for the value of the assertion."}, "doc.ftd.eMERGEseq_ftd_subjectassertion_value_number": {"name": "eMERGEseq_ftd_subjectassertion_value_number", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_subjectassertion_value_number", "block_contents": "The numeric value of the assertion."}, "doc.ftd.eMERGEseq_ftd_subjectassertion_value_units": {"name": "eMERGEseq_ftd_subjectassertion_value_units", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_subjectassertion_value_units", "block_contents": "The structured term defining the units of the value."}, "doc.ftd.eMERGEseq_ftd_subjectassertion_value_units_display": {"name": "eMERGEseq_ftd_subjectassertion_value_units_display", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_subjectassertion_value_units_display", "block_contents": "The friendly display string of units of the value."}, "doc.ftd.eMERGEseq_ftd_subjectassertion_has_access_policy": {"name": "eMERGEseq_ftd_subjectassertion_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_subjectassertion_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.eMERGEseq_ftd_subjectassertion_id": {"name": "eMERGEseq_ftd_subjectassertion_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_subjectassertion_id", "block_contents": "ID associated with a class"}, "doc.ftd.eMERGEseq_ftd_subjectassertion_subject_id": {"name": "eMERGEseq_ftd_subjectassertion_subject_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_subjectassertion_subject_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.eMERGEseq_ftd_accesspolicy_description": {"name": "eMERGEseq_ftd_accesspolicy_description", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_accesspolicy_description", "block_contents": "Model for eMERGEseq_ftd_accesspolicy."}, "doc.ftd.eMERGEseq_ftd_accesspolicy_disease_limitation": {"name": "eMERGEseq_ftd_accesspolicy_disease_limitation", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_accesspolicy_disease_limitation", "block_contents": "Disease Use Limitations"}, "doc.ftd.eMERGEseq_ftd_accesspolicy_website": {"name": "eMERGEseq_ftd_accesspolicy_website", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_accesspolicy_website", "block_contents": "Website"}, "doc.ftd.eMERGEseq_ftd_accesspolicy_id": {"name": "eMERGEseq_ftd_accesspolicy_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_accesspolicy_id", "block_contents": "ID associated with a class"}, "doc.ftd.eMERGEseq_ftd_filemetadata_description": {"name": "eMERGEseq_ftd_filemetadata_description", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_filemetadata_description", "block_contents": "Model for eMERGEseq_ftd_filemetadata."}, "doc.ftd.eMERGEseq_ftd_filemetadata_code": {"name": "eMERGEseq_ftd_filemetadata_code", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_filemetadata_code", "block_contents": "The structured term defining the meaning of the assertion."}, "doc.ftd.eMERGEseq_ftd_filemetadata_display": {"name": "eMERGEseq_ftd_filemetadata_display", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_filemetadata_display", "block_contents": "The friendly display string of the coded term"}, "doc.ftd.eMERGEseq_ftd_filemetadata_value_code": {"name": "eMERGEseq_ftd_filemetadata_value_code", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_filemetadata_value_code", "block_contents": "The structured term defining the value of the assertion."}, "doc.ftd.eMERGEseq_ftd_filemetadata_value_display": {"name": "eMERGEseq_ftd_filemetadata_value_display", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_filemetadata_value_display", "block_contents": "The friendly display string of the coded term for the value of the assertion."}, "doc.ftd.eMERGEseq_ftd_filemetadata_id": {"name": "eMERGEseq_ftd_filemetadata_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_filemetadata_id", "block_contents": "ID associated with a class"}, "doc.ftd.eMERGEseq_ftd_file_description": {"name": "eMERGEseq_ftd_file_description", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_file_description", "block_contents": "Model for eMERGEseq_ftd_file."}, "doc.ftd.eMERGEseq_ftd_file_filename": {"name": "eMERGEseq_ftd_file_filename", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_file_filename", "block_contents": "The name of the file."}, "doc.ftd.eMERGEseq_ftd_file_format": {"name": "eMERGEseq_ftd_file_format", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_file_format", "block_contents": "The format of the file."}, "doc.ftd.eMERGEseq_ftd_file_data_type": {"name": "eMERGEseq_ftd_file_data_type", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_file_data_type", "block_contents": "The type of data within this file."}, "doc.ftd.eMERGEseq_ftd_file_size": {"name": "eMERGEseq_ftd_file_size", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_file_size", "block_contents": "Size of the file, in Bytes."}, "doc.ftd.eMERGEseq_ftd_file_drs_uri": {"name": "eMERGEseq_ftd_file_drs_uri", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_file_drs_uri", "block_contents": "DRS location to access the data."}, "doc.ftd.eMERGEseq_ftd_file_file_metadata": {"name": "eMERGEseq_ftd_file_file_metadata", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_file_file_metadata", "block_contents": "Additional metadata about the contents of the file, eg, genome reference build."}, "doc.ftd.eMERGEseq_ftd_file_has_access_policy": {"name": "eMERGEseq_ftd_file_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_file_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.eMERGEseq_ftd_file_id": {"name": "eMERGEseq_ftd_file_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_file_id", "block_contents": "ID associated with a class"}, "doc.ftd.eMERGEseq_ftd_sample_processing_description": {"name": "eMERGEseq_ftd_sample_processing_description", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_sample_processing_description", "block_contents": "Model for eMERGEseq_ftd_sample_processing."}, "doc.ftd.eMERGEseq_ftd_sample_processing_sample_id": {"name": "eMERGEseq_ftd_sample_processing_sample_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_sample_processing_sample_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.eMERGEseq_ftd_sample_processing_processing": {"name": "eMERGEseq_ftd_sample_processing_processing", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_sample_processing_processing", "block_contents": "Processing that was applied to the Parent Sample or from the Biospecimen Collection that yielded this distinct sample"}, "doc.ftd.eMERGEseq_ftd_file_sample_description": {"name": "eMERGEseq_ftd_file_sample_description", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_file_sample_description", "block_contents": "Model for eMERGEseq_ftd_file_sample."}, "doc.ftd.eMERGEseq_ftd_file_sample_file_id": {"name": "eMERGEseq_ftd_file_sample_file_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_file_sample_file_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.eMERGEseq_ftd_file_sample_sample_id": {"name": "eMERGEseq_ftd_file_sample_sample_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_file_sample_sample_id", "block_contents": "The Samples(s) used to generate data in this file."}, "doc.ftd.eMERGEseq_ftd_filemetadata_external_id_description": {"name": "eMERGEseq_ftd_filemetadata_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_filemetadata_external_id_description", "block_contents": "Model for eMERGEseq_ftd_filemetadata_external_id."}, "doc.ftd.eMERGEseq_ftd_filemetadata_external_id_filemetadata_id": {"name": "eMERGEseq_ftd_filemetadata_external_id_filemetadata_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_filemetadata_external_id_filemetadata_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.eMERGEseq_ftd_filemetadata_external_id_external_id": {"name": "eMERGEseq_ftd_filemetadata_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_filemetadata_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.eMERGEseq_ftd_subject_description": {"name": "eMERGEseq_ftd_subject_description", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_subject_description", "block_contents": "Model for eMERGEseq_ftd_subject."}, "doc.ftd.eMERGEseq_ftd_subject_subject_type": {"name": "eMERGEseq_ftd_subject_subject_type", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_subject_subject_type", "block_contents": "Type of entity this record represents"}, "doc.ftd.eMERGEseq_ftd_subject_organism_type": {"name": "eMERGEseq_ftd_subject_organism_type", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_subject_organism_type", "block_contents": "Organism Type Label"}, "doc.ftd.eMERGEseq_ftd_subject_has_access_policy": {"name": "eMERGEseq_ftd_subject_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_subject_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.eMERGEseq_ftd_subject_id": {"name": "eMERGEseq_ftd_subject_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_subject_id", "block_contents": "ID associated with a class"}, "doc.ftd.eMERGEseq_ftd_subject_has_demographics_id": {"name": "eMERGEseq_ftd_subject_has_demographics_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_subject_has_demographics_id", "block_contents": "A demographic summary of the participant."}, "doc.ftd.eMERGEseq_ftd_sourcedata_query_parameter_description": {"name": "eMERGEseq_ftd_sourcedata_query_parameter_description", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_sourcedata_query_parameter_description", "block_contents": "Model for eMERGEseq_ftd_sourcedata_query_parameter."}, "doc.ftd.eMERGEseq_ftd_sourcedata_query_parameter_sourcedata_id": {"name": "eMERGEseq_ftd_sourcedata_query_parameter_sourcedata_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_sourcedata_query_parameter_sourcedata_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.eMERGEseq_ftd_sourcedata_query_parameter_query_parameter": {"name": "eMERGEseq_ftd_sourcedata_query_parameter_query_parameter", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_sourcedata_query_parameter_query_parameter", "block_contents": "One or more query parameters used to select the specific row. It will leverage the parameterized_query defined by a data_source. This should be formatted according to (https://cloud.google.com/bigquery/docs/parameterized-queries)[BigQuery instructions], specifically the bq CLI version with named parameters, ie, \"<parameter name>:<data type>:<value>\"."}, "doc.ftd.eMERGEseq_ftd_sample_storage_method_description": {"name": "eMERGEseq_ftd_sample_storage_method_description", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_sample_storage_method_description", "block_contents": "Model for eMERGEseq_ftd_sample_storage_method."}, "doc.ftd.eMERGEseq_ftd_sample_storage_method_sample_id": {"name": "eMERGEseq_ftd_sample_storage_method_sample_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_sample_storage_method_sample_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.eMERGEseq_ftd_sample_storage_method_storage_method": {"name": "eMERGEseq_ftd_sample_storage_method_storage_method", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_sample_storage_method_storage_method", "block_contents": "Sample storage method, eg, Frozen or with additives"}, "doc.ftd.eMERGEseq_ftd_sample_external_id_description": {"name": "eMERGEseq_ftd_sample_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_sample_external_id_description", "block_contents": "Model for eMERGEseq_ftd_sample_external_id."}, "doc.ftd.eMERGEseq_ftd_sample_external_id_sample_id": {"name": "eMERGEseq_ftd_sample_external_id_sample_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_sample_external_id_sample_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.eMERGEseq_ftd_sample_external_id_external_id": {"name": "eMERGEseq_ftd_sample_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_sample_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.eMERGEseq_ftd_familyrelationship_external_id_description": {"name": "eMERGEseq_ftd_familyrelationship_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_familyrelationship_external_id_description", "block_contents": "Model for eMERGEseq_ftd_familyrelationship_external_id."}, "doc.ftd.eMERGEseq_ftd_familyrelationship_external_id_familyrelationship_id": {"name": "eMERGEseq_ftd_familyrelationship_external_id_familyrelationship_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_familyrelationship_external_id_familyrelationship_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.eMERGEseq_ftd_familyrelationship_external_id_external_id": {"name": "eMERGEseq_ftd_familyrelationship_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_familyrelationship_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.eMERGEseq_ftd_family_family_relationships_description": {"name": "eMERGEseq_ftd_family_family_relationships_description", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_family_family_relationships_description", "block_contents": "Model for eMERGEseq_ftd_family_family_relationships."}, "doc.ftd.eMERGEseq_ftd_family_family_relationships_family_id": {"name": "eMERGEseq_ftd_family_family_relationships_family_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_family_family_relationships_family_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.eMERGEseq_ftd_family_family_relationships_family_relationships_id": {"name": "eMERGEseq_ftd_family_family_relationships_family_relationships_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_family_family_relationships_family_relationships_id", "block_contents": "Family relationships associated with this family."}, "doc.ftd.eMERGEseq_ftd_demographics_race_description": {"name": "eMERGEseq_ftd_demographics_race_description", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_demographics_race_description", "block_contents": "Model for eMERGEseq_ftd_demographics_race."}, "doc.ftd.eMERGEseq_ftd_demographics_race_demographics_id": {"name": "eMERGEseq_ftd_demographics_race_demographics_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_demographics_race_demographics_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.eMERGEseq_ftd_demographics_race_race": {"name": "eMERGEseq_ftd_demographics_race_race", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_demographics_race_race", "block_contents": "Reported race as defined by the 1997 OMB directives."}, "doc.ftd.eMERGEseq_ftd_study_funding_source_description": {"name": "eMERGEseq_ftd_study_funding_source_description", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_study_funding_source_description", "block_contents": "Model for eMERGEseq_ftd_study_funding_source."}, "doc.ftd.eMERGEseq_ftd_study_funding_source_study_id": {"name": "eMERGEseq_ftd_study_funding_source_study_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_study_funding_source_study_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.eMERGEseq_ftd_study_funding_source_funding_source": {"name": "eMERGEseq_ftd_study_funding_source_funding_source", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_study_funding_source_funding_source", "block_contents": "Funding Source"}, "doc.ftd.eMERGEseq_ftd_family_external_id_description": {"name": "eMERGEseq_ftd_family_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_family_external_id_description", "block_contents": "Model for eMERGEseq_ftd_family_external_id."}, "doc.ftd.eMERGEseq_ftd_family_external_id_family_id": {"name": "eMERGEseq_ftd_family_external_id_family_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_family_external_id_family_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.eMERGEseq_ftd_family_external_id_external_id": {"name": "eMERGEseq_ftd_family_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_family_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.eMERGEseq_ftd_accesspolicy_external_id_description": {"name": "eMERGEseq_ftd_accesspolicy_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_accesspolicy_external_id_description", "block_contents": "Model for eMERGEseq_ftd_accesspolicy_external_id."}, "doc.ftd.eMERGEseq_ftd_accesspolicy_external_id_accesspolicy_id": {"name": "eMERGEseq_ftd_accesspolicy_external_id_accesspolicy_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_accesspolicy_external_id_accesspolicy_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.eMERGEseq_ftd_accesspolicy_external_id_external_id": {"name": "eMERGEseq_ftd_accesspolicy_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_accesspolicy_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.eMERGEseq_ftd_aliquot_description": {"name": "eMERGEseq_ftd_aliquot_description", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_aliquot_description", "block_contents": "Model for eMERGEseq_ftd_aliquot."}, "doc.ftd.eMERGEseq_ftd_aliquot_availablity_status": {"name": "eMERGEseq_ftd_aliquot_availablity_status", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_aliquot_availablity_status", "block_contents": "Can this Sample be requested for further analysis?"}, "doc.ftd.eMERGEseq_ftd_aliquot_quantity_number": {"name": "eMERGEseq_ftd_aliquot_quantity_number", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_aliquot_quantity_number", "block_contents": "The total quantity of the specimen"}, "doc.ftd.eMERGEseq_ftd_aliquot_quantity_units": {"name": "eMERGEseq_ftd_aliquot_quantity_units", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_aliquot_quantity_units", "block_contents": "The structured term defining the units of the quantity."}, "doc.ftd.eMERGEseq_ftd_aliquot_concentration_number": {"name": "eMERGEseq_ftd_aliquot_concentration_number", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_aliquot_concentration_number", "block_contents": "What is the concentration of the analyte in the Aliquot?"}, "doc.ftd.eMERGEseq_ftd_aliquot_concentration_unit": {"name": "eMERGEseq_ftd_aliquot_concentration_unit", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_aliquot_concentration_unit", "block_contents": "Units associated with the concentration of the analyte in the Aliquot? UCUM coding preferred (with curie, UCUM)"}, "doc.ftd.eMERGEseq_ftd_aliquot_has_access_policy": {"name": "eMERGEseq_ftd_aliquot_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_aliquot_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.eMERGEseq_ftd_aliquot_id": {"name": "eMERGEseq_ftd_aliquot_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_aliquot_id", "block_contents": "ID associated with a class"}, "doc.ftd.eMERGEseq_ftd_aliquot_sample_id": {"name": "eMERGEseq_ftd_aliquot_sample_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_aliquot_sample_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.eMERGEseq_ftd_demographics_description": {"name": "eMERGEseq_ftd_demographics_description", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_demographics_description", "block_contents": "Model for eMERGEseq_ftd_demographics."}, "doc.ftd.eMERGEseq_ftd_demographics_date_of_birth": {"name": "eMERGEseq_ftd_demographics_date_of_birth", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_demographics_date_of_birth", "block_contents": "Date at which the individual was born. May be impacted by privacy rules described in date_of_birth_type."}, "doc.ftd.eMERGEseq_ftd_demographics_date_of_birth_type": {"name": "eMERGEseq_ftd_demographics_date_of_birth_type", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_demographics_date_of_birth_type", "block_contents": "Privacy rule modification applied to date_of_birth."}, "doc.ftd.eMERGEseq_ftd_demographics_sex": {"name": "eMERGEseq_ftd_demographics_sex", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_demographics_sex", "block_contents": "Sex of the individual"}, "doc.ftd.eMERGEseq_ftd_demographics_sex_display": {"name": "eMERGEseq_ftd_demographics_sex_display", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_demographics_sex_display", "block_contents": "The friendly display string of the coded term for Sex"}, "doc.ftd.eMERGEseq_ftd_demographics_race_display": {"name": "eMERGEseq_ftd_demographics_race_display", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_demographics_race_display", "block_contents": "The friendly display string of the coded term(s) for Race"}, "doc.ftd.eMERGEseq_ftd_demographics_ethnicity": {"name": "eMERGEseq_ftd_demographics_ethnicity", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_demographics_ethnicity", "block_contents": "Reported ethnicity as defined by the 1997 OMB directives."}, "doc.ftd.eMERGEseq_ftd_demographics_ethnicity_display": {"name": "eMERGEseq_ftd_demographics_ethnicity_display", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_demographics_ethnicity_display", "block_contents": "The friendly display string of the coded term for Ethnicity"}, "doc.ftd.eMERGEseq_ftd_demographics_age_at_last_vital_status": {"name": "eMERGEseq_ftd_demographics_age_at_last_vital_status", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_demographics_age_at_last_vital_status", "block_contents": "Age at last vital status in decimal years."}, "doc.ftd.eMERGEseq_ftd_demographics_vital_status": {"name": "eMERGEseq_ftd_demographics_vital_status", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_demographics_vital_status", "block_contents": "Vital Status"}, "doc.ftd.eMERGEseq_ftd_demographics_has_access_policy": {"name": "eMERGEseq_ftd_demographics_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_demographics_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.eMERGEseq_ftd_demographics_id": {"name": "eMERGEseq_ftd_demographics_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_demographics_id", "block_contents": "ID associated with a class"}, "doc.ftd.eMERGEseq_ftd_familymember_external_id_description": {"name": "eMERGEseq_ftd_familymember_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_familymember_external_id_description", "block_contents": "Model for eMERGEseq_ftd_familymember_external_id."}, "doc.ftd.eMERGEseq_ftd_familymember_external_id_familymember_id": {"name": "eMERGEseq_ftd_familymember_external_id_familymember_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_familymember_external_id_familymember_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.eMERGEseq_ftd_familymember_external_id_external_id": {"name": "eMERGEseq_ftd_familymember_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_familymember_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.eMERGEseq_ftd_accesspolicy_access_policy_code_description": {"name": "eMERGEseq_ftd_accesspolicy_access_policy_code_description", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_accesspolicy_access_policy_code_description", "block_contents": "Model for eMERGEseq_ftd_accesspolicy_access_policy_code."}, "doc.ftd.eMERGEseq_ftd_accesspolicy_access_policy_code_accesspolicy_id": {"name": "eMERGEseq_ftd_accesspolicy_access_policy_code_accesspolicy_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_accesspolicy_access_policy_code_accesspolicy_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.eMERGEseq_ftd_accesspolicy_access_policy_code_access_policy_code": {"name": "eMERGEseq_ftd_accesspolicy_access_policy_code_access_policy_code", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_accesspolicy_access_policy_code_access_policy_code", "block_contents": "Access Policy Code"}, "doc.ftd.eMERGEseq_ftd_thing_external_id_description": {"name": "eMERGEseq_ftd_thing_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_thing_external_id_description", "block_contents": "Model for eMERGEseq_ftd_thing_external_id."}, "doc.ftd.eMERGEseq_ftd_thing_external_id_thing_id": {"name": "eMERGEseq_ftd_thing_external_id_thing_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_thing_external_id_thing_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.eMERGEseq_ftd_thing_external_id_external_id": {"name": "eMERGEseq_ftd_thing_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_thing_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.eMERGEseq_ftd_study_description": {"name": "eMERGEseq_ftd_study_description", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_study_description", "block_contents": "Model for eMERGEseq_ftd_study."}, "doc.ftd.eMERGEseq_ftd_study_parent_study_id": {"name": "eMERGEseq_ftd_study_parent_study_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_study_parent_study_id", "block_contents": "Parent Study ID"}, "doc.ftd.eMERGEseq_ftd_study_study_title": {"name": "eMERGEseq_ftd_study_study_title", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_study_study_title", "block_contents": "Study Title"}, "doc.ftd.eMERGEseq_ftd_study_id": {"name": "eMERGEseq_ftd_study_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_study_id", "block_contents": "ID associated with a class"}, "doc.ftd.eMERGEseq_ftd_subjectassertion_external_id_description": {"name": "eMERGEseq_ftd_subjectassertion_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_subjectassertion_external_id_description", "block_contents": "Model for eMERGEseq_ftd_subjectassertion_external_id."}, "doc.ftd.eMERGEseq_ftd_subjectassertion_external_id_subjectassertion_id": {"name": "eMERGEseq_ftd_subjectassertion_external_id_subjectassertion_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_subjectassertion_external_id_subjectassertion_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.eMERGEseq_ftd_subjectassertion_external_id_external_id": {"name": "eMERGEseq_ftd_subjectassertion_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_subjectassertion_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.eMERGEseq_ftd_biospecimencollection_description": {"name": "eMERGEseq_ftd_biospecimencollection_description", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_biospecimencollection_description", "block_contents": "Model for eMERGEseq_ftd_biospecimencollection."}, "doc.ftd.eMERGEseq_ftd_biospecimencollection_age_at_collection": {"name": "eMERGEseq_ftd_biospecimencollection_age_at_collection", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_biospecimencollection_age_at_collection", "block_contents": "The age at which this biospecimen was collected."}, "doc.ftd.eMERGEseq_ftd_biospecimencollection_method": {"name": "eMERGEseq_ftd_biospecimencollection_method", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_biospecimencollection_method", "block_contents": "The approach used to collect the biospecimen."}, "doc.ftd.eMERGEseq_ftd_biospecimencollection_site": {"name": "eMERGEseq_ftd_biospecimencollection_site", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_biospecimencollection_site", "block_contents": "The location of the specimen collection."}, "doc.ftd.eMERGEseq_ftd_biospecimencollection_spatial_qualifier": {"name": "eMERGEseq_ftd_biospecimencollection_spatial_qualifier", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_biospecimencollection_spatial_qualifier", "block_contents": "Any spatial/location qualifiers"}, "doc.ftd.eMERGEseq_ftd_biospecimencollection_laterality": {"name": "eMERGEseq_ftd_biospecimencollection_laterality", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_biospecimencollection_laterality", "block_contents": "Laterality information for the site"}, "doc.ftd.eMERGEseq_ftd_biospecimencollection_has_access_policy": {"name": "eMERGEseq_ftd_biospecimencollection_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_biospecimencollection_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.eMERGEseq_ftd_biospecimencollection_id": {"name": "eMERGEseq_ftd_biospecimencollection_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_biospecimencollection_id", "block_contents": "ID associated with a class"}, "doc.ftd.eMERGEseq_ftd_familyrelationship_description": {"name": "eMERGEseq_ftd_familyrelationship_description", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_familyrelationship_description", "block_contents": "Model for eMERGEseq_ftd_familyrelationship."}, "doc.ftd.eMERGEseq_ftd_familyrelationship_family_member": {"name": "eMERGEseq_ftd_familyrelationship_family_member", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_familyrelationship_family_member", "block_contents": "The family member Subject who is the relationship \"subject\"."}, "doc.ftd.eMERGEseq_ftd_familyrelationship_other_family_member": {"name": "eMERGEseq_ftd_familyrelationship_other_family_member", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_familyrelationship_other_family_member", "block_contents": "The family member Subject for the relationship \"object\"."}, "doc.ftd.eMERGEseq_ftd_familyrelationship_relationship_code": {"name": "eMERGEseq_ftd_familyrelationship_relationship_code", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_familyrelationship_relationship_code", "block_contents": "Code definting the relationship predicate. Relationship of the \"Family Member\" to the \"Other Family Member\" (i.e. mother, father, etc). Code must be from the HL7 [FamilyMember ValueSet](https://terminology.hl7.org/6.2.0/ValueSet-v3-FamilyMember.html)"}, "doc.ftd.eMERGEseq_ftd_familyrelationship_has_access_policy": {"name": "eMERGEseq_ftd_familyrelationship_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_familyrelationship_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.eMERGEseq_ftd_familyrelationship_id": {"name": "eMERGEseq_ftd_familyrelationship_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_familyrelationship_id", "block_contents": "ID associated with a class"}, "doc.ftd.eMERGEseq_ftd_aliquot_external_id_description": {"name": "eMERGEseq_ftd_aliquot_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_aliquot_external_id_description", "block_contents": "Model for eMERGEseq_ftd_aliquot_external_id."}, "doc.ftd.eMERGEseq_ftd_aliquot_external_id_aliquot_id": {"name": "eMERGEseq_ftd_aliquot_external_id_aliquot_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_aliquot_external_id_aliquot_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.eMERGEseq_ftd_aliquot_external_id_external_id": {"name": "eMERGEseq_ftd_aliquot_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_aliquot_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.eMERGEseq_ftd_familymember_description": {"name": "eMERGEseq_ftd_familymember_description", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_familymember_description", "block_contents": "Model for eMERGEseq_ftd_familymember."}, "doc.ftd.eMERGEseq_ftd_familymember_family_member": {"name": "eMERGEseq_ftd_familymember_family_member", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_familymember_family_member", "block_contents": "The family member Subject who is the relationship \"subject\"."}, "doc.ftd.eMERGEseq_ftd_familymember_family_role": {"name": "eMERGEseq_ftd_familymember_family_role", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_familymember_family_role", "block_contents": "The \"role\" of this indiviudal in this family."}, "doc.ftd.eMERGEseq_ftd_familymember_has_access_policy": {"name": "eMERGEseq_ftd_familymember_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_familymember_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.eMERGEseq_ftd_familymember_id": {"name": "eMERGEseq_ftd_familymember_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_familymember_id", "block_contents": "ID associated with a class"}, "doc.ftd.eMERGEseq_ftd_familymember_family_id": {"name": "eMERGEseq_ftd_familymember_family_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_familymember_family_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.eMERGEseq_ftd_subject_external_id_description": {"name": "eMERGEseq_ftd_subject_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_subject_external_id_description", "block_contents": "Model for eMERGEseq_ftd_subject_external_id."}, "doc.ftd.eMERGEseq_ftd_subject_external_id_subject_id": {"name": "eMERGEseq_ftd_subject_external_id_subject_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_subject_external_id_subject_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.eMERGEseq_ftd_subject_external_id_external_id": {"name": "eMERGEseq_ftd_subject_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_subject_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.eMERGEseq_ftd_file_external_id_description": {"name": "eMERGEseq_ftd_file_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_file_external_id_description", "block_contents": "Model for eMERGEseq_ftd_file_external_id."}, "doc.ftd.eMERGEseq_ftd_file_external_id_file_id": {"name": "eMERGEseq_ftd_file_external_id_file_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_file_external_id_file_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.eMERGEseq_ftd_file_external_id_external_id": {"name": "eMERGEseq_ftd_file_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_file_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.eMERGEseq_ftd_demographics_external_id_description": {"name": "eMERGEseq_ftd_demographics_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_demographics_external_id_description", "block_contents": "Model for eMERGEseq_ftd_demographics_external_id."}, "doc.ftd.eMERGEseq_ftd_demographics_external_id_demographics_id": {"name": "eMERGEseq_ftd_demographics_external_id_demographics_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_demographics_external_id_demographics_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.eMERGEseq_ftd_demographics_external_id_external_id": {"name": "eMERGEseq_ftd_demographics_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_demographics_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.eMERGEseq_ftd_subjectassertion_source_data_description": {"name": "eMERGEseq_ftd_subjectassertion_source_data_description", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_subjectassertion_source_data_description", "block_contents": "Model for eMERGEseq_ftd_subjectassertion_source_data."}, "doc.ftd.eMERGEseq_ftd_subjectassertion_source_data_subjectassertion_id": {"name": "eMERGEseq_ftd_subjectassertion_source_data_subjectassertion_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_subjectassertion_source_data_subjectassertion_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.eMERGEseq_ftd_subjectassertion_source_data_source_data_id": {"name": "eMERGEseq_ftd_subjectassertion_source_data_source_data_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_subjectassertion_source_data_source_data_id", "block_contents": "The sources from which this assertion was derived"}, "doc.ftd.eMERGEseq_ftd_file_subject_description": {"name": "eMERGEseq_ftd_file_subject_description", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_file_subject_description", "block_contents": "Model for eMERGEseq_ftd_file_subject."}, "doc.ftd.eMERGEseq_ftd_file_subject_file_id": {"name": "eMERGEseq_ftd_file_subject_file_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_file_subject_file_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.eMERGEseq_ftd_file_subject_subject_id": {"name": "eMERGEseq_ftd_file_subject_subject_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_file_subject_subject_id", "block_contents": "The Subject(s) which this file describes."}, "doc.ftd.eMERGEseq_ftd_accesspolicy_data_access_type_description": {"name": "eMERGEseq_ftd_accesspolicy_data_access_type_description", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_accesspolicy_data_access_type_description", "block_contents": "Model for eMERGEseq_ftd_accesspolicy_data_access_type."}, "doc.ftd.eMERGEseq_ftd_accesspolicy_data_access_type_accesspolicy_id": {"name": "eMERGEseq_ftd_accesspolicy_data_access_type_accesspolicy_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_accesspolicy_data_access_type_accesspolicy_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.eMERGEseq_ftd_accesspolicy_data_access_type_data_access_type": {"name": "eMERGEseq_ftd_accesspolicy_data_access_type_data_access_type", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_accesspolicy_data_access_type_data_access_type", "block_contents": "Data Access Type"}, "doc.ftd.eMERGEseq_ftd_accesscontrolledrecord_external_id_description": {"name": "eMERGEseq_ftd_accesscontrolledrecord_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_accesscontrolledrecord_external_id_description", "block_contents": "Model for eMERGEseq_ftd_accesscontrolledrecord_external_id."}, "doc.ftd.eMERGEseq_ftd_accesscontrolledrecord_external_id_accesscontrolledrecord_id": {"name": "eMERGEseq_ftd_accesscontrolledrecord_external_id_accesscontrolledrecord_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_accesscontrolledrecord_external_id_accesscontrolledrecord_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.eMERGEseq_ftd_accesscontrolledrecord_external_id_external_id": {"name": "eMERGEseq_ftd_accesscontrolledrecord_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_accesscontrolledrecord_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.eMERGEseq_ftd_sourcedata_description": {"name": "eMERGEseq_ftd_sourcedata_description", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_sourcedata_description", "block_contents": "Model for eMERGEseq_ftd_sourcedata."}, "doc.ftd.eMERGEseq_ftd_sourcedata_code": {"name": "eMERGEseq_ftd_sourcedata_code", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_sourcedata_code", "block_contents": "The structured term defining the meaning of the assertion."}, "doc.ftd.eMERGEseq_ftd_sourcedata_display": {"name": "eMERGEseq_ftd_sourcedata_display", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_sourcedata_display", "block_contents": "The friendly display string of the coded term"}, "doc.ftd.eMERGEseq_ftd_sourcedata_value_code": {"name": "eMERGEseq_ftd_sourcedata_value_code", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_sourcedata_value_code", "block_contents": "The structured term defining the value of the assertion."}, "doc.ftd.eMERGEseq_ftd_sourcedata_value_display": {"name": "eMERGEseq_ftd_sourcedata_value_display", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_sourcedata_value_display", "block_contents": "The friendly display string of the coded term for the value of the assertion."}, "doc.ftd.eMERGEseq_ftd_sourcedata_value_number": {"name": "eMERGEseq_ftd_sourcedata_value_number", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_sourcedata_value_number", "block_contents": "The numeric value of the assertion."}, "doc.ftd.eMERGEseq_ftd_sourcedata_value_units": {"name": "eMERGEseq_ftd_sourcedata_value_units", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_sourcedata_value_units", "block_contents": "The structured term defining the units of the value."}, "doc.ftd.eMERGEseq_ftd_sourcedata_value_units_display": {"name": "eMERGEseq_ftd_sourcedata_value_units_display", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_sourcedata_value_units_display", "block_contents": "The friendly display string of units of the value."}, "doc.ftd.eMERGEseq_ftd_sourcedata_has_access_policy": {"name": "eMERGEseq_ftd_sourcedata_has_access_policy", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_sourcedata_has_access_policy", "block_contents": "Which access policy applies to this element?"}, "doc.ftd.eMERGEseq_ftd_sourcedata_id": {"name": "eMERGEseq_ftd_sourcedata_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_sourcedata_id", "block_contents": "ID associated with a class"}, "doc.ftd.eMERGEseq_ftd_sourcedata_external_id_description": {"name": "eMERGEseq_ftd_sourcedata_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_sourcedata_external_id_description", "block_contents": "Model for eMERGEseq_ftd_sourcedata_external_id."}, "doc.ftd.eMERGEseq_ftd_sourcedata_external_id_sourcedata_id": {"name": "eMERGEseq_ftd_sourcedata_external_id_sourcedata_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_sourcedata_external_id_sourcedata_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.eMERGEseq_ftd_sourcedata_external_id_external_id": {"name": "eMERGEseq_ftd_sourcedata_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_sourcedata_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.ftd.eMERGEseq_ftd_study_principal_investigator_description": {"name": "eMERGEseq_ftd_study_principal_investigator_description", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_study_principal_investigator_description", "block_contents": "Model for eMERGEseq_ftd_study_principal_investigator."}, "doc.ftd.eMERGEseq_ftd_study_principal_investigator_study_id": {"name": "eMERGEseq_ftd_study_principal_investigator_study_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_study_principal_investigator_study_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.eMERGEseq_ftd_study_principal_investigator_principal_investigator": {"name": "eMERGEseq_ftd_study_principal_investigator_principal_investigator", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_study_principal_investigator_principal_investigator", "block_contents": "Principal Investigator"}, "doc.ftd.eMERGEseq_ftd_study_external_id_description": {"name": "eMERGEseq_ftd_study_external_id_description", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_study_external_id_description", "block_contents": "Model for eMERGEseq_ftd_study_external_id."}, "doc.ftd.eMERGEseq_ftd_study_external_id_study_id": {"name": "eMERGEseq_ftd_study_external_id_study_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_study_external_id_study_id", "block_contents": "Autocreated FK slot"}, "doc.ftd.eMERGEseq_ftd_study_external_id_external_id": {"name": "eMERGEseq_ftd_study_external_id_external_id", "resource_type": "doc", "package_name": "ftd", "path": "eMERGEseq/docs/column_descriptions.md", "original_file_path": "models/eMERGEseq/docs/column_descriptions.md", "unique_id": "doc.ftd.eMERGEseq_ftd_study_external_id_external_id", "block_contents": "Other identifiers for this entity, eg, from the submitting study or in systems link dbGaP"}, "doc.gregor_synthetic.GREGoR_synthetic_participant_revised07Aug2024_description": {"name": "GREGoR_synthetic_participant_revised07Aug2024_description", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.GREGoR_synthetic_participant_revised07Aug2024_description", "block_contents": "Model for GREGoR_synthetic_participant_revised07Aug2024."}, "doc.gregor_synthetic.GREGoR_synthetic_participant_revised07Aug2024_participant_id": {"name": "GREGoR_synthetic_participant_revised07Aug2024_participant_id", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.GREGoR_synthetic_participant_revised07Aug2024_participant_id", "block_contents": "Unique participant identifier"}, "doc.gregor_synthetic.GREGoR_synthetic_participant_revised07Aug2024_affected_status": {"name": "GREGoR_synthetic_participant_revised07Aug2024_affected_status", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.GREGoR_synthetic_participant_revised07Aug2024_affected_status", "block_contents": "Affected status of the participant"}, "doc.gregor_synthetic.GREGoR_synthetic_participant_revised07Aug2024_age_at_enrollment": {"name": "GREGoR_synthetic_participant_revised07Aug2024_age_at_enrollment", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.GREGoR_synthetic_participant_revised07Aug2024_age_at_enrollment", "block_contents": "Age at enrollment in years"}, "doc.gregor_synthetic.GREGoR_synthetic_participant_revised07Aug2024_age_at_last_observation": {"name": "GREGoR_synthetic_participant_revised07Aug2024_age_at_last_observation", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.GREGoR_synthetic_participant_revised07Aug2024_age_at_last_observation", "block_contents": "Age at the last known observation"}, "doc.gregor_synthetic.GREGoR_synthetic_participant_revised07Aug2024_ancestry_detail": {"name": "GREGoR_synthetic_participant_revised07Aug2024_ancestry_detail", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.GREGoR_synthetic_participant_revised07Aug2024_ancestry_detail", "block_contents": "Detailed ancestry description"}, "doc.gregor_synthetic.GREGoR_synthetic_participant_revised07Aug2024_consent_code": {"name": "GREGoR_synthetic_participant_revised07Aug2024_consent_code", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.GREGoR_synthetic_participant_revised07Aug2024_consent_code", "block_contents": "Consent group or code for data use"}, "doc.gregor_synthetic.GREGoR_synthetic_participant_revised07Aug2024_family_id": {"name": "GREGoR_synthetic_participant_revised07Aug2024_family_id", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.GREGoR_synthetic_participant_revised07Aug2024_family_id", "block_contents": "Family identifier"}, "doc.gregor_synthetic.GREGoR_synthetic_participant_revised07Aug2024_gregor_center": {"name": "GREGoR_synthetic_participant_revised07Aug2024_gregor_center", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.GREGoR_synthetic_participant_revised07Aug2024_gregor_center", "block_contents": "GREGOR project center identifier"}, "doc.gregor_synthetic.GREGoR_synthetic_participant_revised07Aug2024_internal_project_id": {"name": "GREGoR_synthetic_participant_revised07Aug2024_internal_project_id", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.GREGoR_synthetic_participant_revised07Aug2024_internal_project_id", "block_contents": "Internal project identifier"}, "doc.gregor_synthetic.GREGoR_synthetic_participant_revised07Aug2024_maternal_id": {"name": "GREGoR_synthetic_participant_revised07Aug2024_maternal_id", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.GREGoR_synthetic_participant_revised07Aug2024_maternal_id", "block_contents": "Maternal ID (0 if unknown)"}, "doc.gregor_synthetic.GREGoR_synthetic_participant_revised07Aug2024_missing_variant_case": {"name": "GREGoR_synthetic_participant_revised07Aug2024_missing_variant_case", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.GREGoR_synthetic_participant_revised07Aug2024_missing_variant_case", "block_contents": "Indicates if the participant is a missing variant case"}, "doc.gregor_synthetic.GREGoR_synthetic_participant_revised07Aug2024_paternal_id": {"name": "GREGoR_synthetic_participant_revised07Aug2024_paternal_id", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.GREGoR_synthetic_participant_revised07Aug2024_paternal_id", "block_contents": "Paternal ID (0 if unknown)"}, "doc.gregor_synthetic.GREGoR_synthetic_participant_revised07Aug2024_phenotype_description": {"name": "GREGoR_synthetic_participant_revised07Aug2024_phenotype_description", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.GREGoR_synthetic_participant_revised07Aug2024_phenotype_description", "block_contents": "Description of phenotype"}, "doc.gregor_synthetic.GREGoR_synthetic_participant_revised07Aug2024_pmid_id": {"name": "GREGoR_synthetic_participant_revised07Aug2024_pmid_id", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.GREGoR_synthetic_participant_revised07Aug2024_pmid_id", "block_contents": "PMID of a related publication or report"}, "doc.gregor_synthetic.GREGoR_synthetic_participant_revised07Aug2024_prior_testing": {"name": "GREGoR_synthetic_participant_revised07Aug2024_prior_testing", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.GREGoR_synthetic_participant_revised07Aug2024_prior_testing", "block_contents": "Indicates whether prior genetic testing was conducted"}, "doc.gregor_synthetic.GREGoR_synthetic_participant_revised07Aug2024_proband_relationship": {"name": "GREGoR_synthetic_participant_revised07Aug2024_proband_relationship", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.GREGoR_synthetic_participant_revised07Aug2024_proband_relationship", "block_contents": "Relationship to self (usually 'Self')"}, "doc.gregor_synthetic.GREGoR_synthetic_participant_revised07Aug2024_proband_relationship_detail": {"name": "GREGoR_synthetic_participant_revised07Aug2024_proband_relationship_detail", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.GREGoR_synthetic_participant_revised07Aug2024_proband_relationship_detail", "block_contents": "Further detail on relationship to self"}, "doc.gregor_synthetic.GREGoR_synthetic_participant_revised07Aug2024_reported_ethnicity": {"name": "GREGoR_synthetic_participant_revised07Aug2024_reported_ethnicity", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.GREGoR_synthetic_participant_revised07Aug2024_reported_ethnicity", "block_contents": "Ethnicity reported by participant or caregiver"}, "doc.gregor_synthetic.GREGoR_synthetic_participant_revised07Aug2024_reported_race": {"name": "GREGoR_synthetic_participant_revised07Aug2024_reported_race", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.GREGoR_synthetic_participant_revised07Aug2024_reported_race", "block_contents": "Race reported by participant or caregiver"}, "doc.gregor_synthetic.GREGoR_synthetic_participant_revised07Aug2024_sex": {"name": "GREGoR_synthetic_participant_revised07Aug2024_sex", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.GREGoR_synthetic_participant_revised07Aug2024_sex", "block_contents": "Reported biological sex"}, "doc.gregor_synthetic.GREGoR_synthetic_participant_revised07Aug2024_sex_detail": {"name": "GREGoR_synthetic_participant_revised07Aug2024_sex_detail", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.GREGoR_synthetic_participant_revised07Aug2024_sex_detail", "block_contents": "Additional detail about sex or gender"}, "doc.gregor_synthetic.GREGoR_synthetic_participant_revised07Aug2024_solve_status": {"name": "GREGoR_synthetic_participant_revised07Aug2024_solve_status", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.GREGoR_synthetic_participant_revised07Aug2024_solve_status", "block_contents": "Status of diagnostic resolution"}, "doc.gregor_synthetic.GREGoR_synthetic_participant_revised07Aug2024_twin_id": {"name": "GREGoR_synthetic_participant_revised07Aug2024_twin_id", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.GREGoR_synthetic_participant_revised07Aug2024_twin_id", "block_contents": "Identifier for twin if applicable"}, "doc.gregor_synthetic.gregor_synthetic_stg_participant_description": {"name": "gregor_synthetic_stg_participant_description", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.gregor_synthetic_stg_participant_description", "block_contents": "Model for gregor_synthetic_stg_participant."}, "doc.gregor_synthetic.gregor_synthetic_stg_participant_participant_id": {"name": "gregor_synthetic_stg_participant_participant_id", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.gregor_synthetic_stg_participant_participant_id", "block_contents": "Unique participant identifier"}, "doc.gregor_synthetic.gregor_synthetic_stg_participant_affected_status": {"name": "gregor_synthetic_stg_participant_affected_status", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.gregor_synthetic_stg_participant_affected_status", "block_contents": "Affected status of the participant"}, "doc.gregor_synthetic.gregor_synthetic_stg_participant_age_at_enrollment": {"name": "gregor_synthetic_stg_participant_age_at_enrollment", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.gregor_synthetic_stg_participant_age_at_enrollment", "block_contents": "Age at enrollment in years"}, "doc.gregor_synthetic.gregor_synthetic_stg_participant_age_at_last_observation": {"name": "gregor_synthetic_stg_participant_age_at_last_observation", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.gregor_synthetic_stg_participant_age_at_last_observation", "block_contents": "Age at the last known observation"}, "doc.gregor_synthetic.gregor_synthetic_stg_participant_ancestry_detail": {"name": "gregor_synthetic_stg_participant_ancestry_detail", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.gregor_synthetic_stg_participant_ancestry_detail", "block_contents": "Detailed ancestry description"}, "doc.gregor_synthetic.gregor_synthetic_stg_participant_consent_code": {"name": "gregor_synthetic_stg_participant_consent_code", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.gregor_synthetic_stg_participant_consent_code", "block_contents": "Consent group or code for data use"}, "doc.gregor_synthetic.gregor_synthetic_stg_participant_family_id": {"name": "gregor_synthetic_stg_participant_family_id", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.gregor_synthetic_stg_participant_family_id", "block_contents": "Family identifier"}, "doc.gregor_synthetic.gregor_synthetic_stg_participant_gregor_center": {"name": "gregor_synthetic_stg_participant_gregor_center", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.gregor_synthetic_stg_participant_gregor_center", "block_contents": "GREGOR project center identifier"}, "doc.gregor_synthetic.gregor_synthetic_stg_participant_internal_project_id": {"name": "gregor_synthetic_stg_participant_internal_project_id", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.gregor_synthetic_stg_participant_internal_project_id", "block_contents": "Internal project identifier"}, "doc.gregor_synthetic.gregor_synthetic_stg_participant_maternal_id": {"name": "gregor_synthetic_stg_participant_maternal_id", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.gregor_synthetic_stg_participant_maternal_id", "block_contents": "Maternal ID (0 if unknown)"}, "doc.gregor_synthetic.gregor_synthetic_stg_participant_missing_variant_case": {"name": "gregor_synthetic_stg_participant_missing_variant_case", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.gregor_synthetic_stg_participant_missing_variant_case", "block_contents": "Indicates if the participant is a missing variant case"}, "doc.gregor_synthetic.gregor_synthetic_stg_participant_paternal_id": {"name": "gregor_synthetic_stg_participant_paternal_id", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.gregor_synthetic_stg_participant_paternal_id", "block_contents": "Paternal ID (0 if unknown)"}, "doc.gregor_synthetic.gregor_synthetic_stg_participant_phenotype_description": {"name": "gregor_synthetic_stg_participant_phenotype_description", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.gregor_synthetic_stg_participant_phenotype_description", "block_contents": "Description of phenotype"}, "doc.gregor_synthetic.gregor_synthetic_stg_participant_pmid_id": {"name": "gregor_synthetic_stg_participant_pmid_id", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.gregor_synthetic_stg_participant_pmid_id", "block_contents": "PMID of a related publication or report"}, "doc.gregor_synthetic.gregor_synthetic_stg_participant_prior_testing": {"name": "gregor_synthetic_stg_participant_prior_testing", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.gregor_synthetic_stg_participant_prior_testing", "block_contents": "Indicates whether prior genetic testing was conducted"}, "doc.gregor_synthetic.gregor_synthetic_stg_participant_proband_relationship": {"name": "gregor_synthetic_stg_participant_proband_relationship", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.gregor_synthetic_stg_participant_proband_relationship", "block_contents": "Relationship to self (usually 'Self')"}, "doc.gregor_synthetic.gregor_synthetic_stg_participant_proband_relationship_detail": {"name": "gregor_synthetic_stg_participant_proband_relationship_detail", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.gregor_synthetic_stg_participant_proband_relationship_detail", "block_contents": "Further detail on relationship to self"}, "doc.gregor_synthetic.gregor_synthetic_stg_participant_reported_ethnicity": {"name": "gregor_synthetic_stg_participant_reported_ethnicity", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.gregor_synthetic_stg_participant_reported_ethnicity", "block_contents": "Ethnicity reported by participant or caregiver"}, "doc.gregor_synthetic.gregor_synthetic_stg_participant_reported_race": {"name": "gregor_synthetic_stg_participant_reported_race", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.gregor_synthetic_stg_participant_reported_race", "block_contents": "Race reported by participant or caregiver"}, "doc.gregor_synthetic.gregor_synthetic_stg_participant_sex": {"name": "gregor_synthetic_stg_participant_sex", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.gregor_synthetic_stg_participant_sex", "block_contents": "Reported biological sex"}, "doc.gregor_synthetic.gregor_synthetic_stg_participant_sex_detail": {"name": "gregor_synthetic_stg_participant_sex_detail", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.gregor_synthetic_stg_participant_sex_detail", "block_contents": "Additional detail about sex or gender"}, "doc.gregor_synthetic.gregor_synthetic_stg_participant_solve_status": {"name": "gregor_synthetic_stg_participant_solve_status", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.gregor_synthetic_stg_participant_solve_status", "block_contents": "Status of diagnostic resolution"}, "doc.gregor_synthetic.gregor_synthetic_stg_participant_twin_id": {"name": "gregor_synthetic_stg_participant_twin_id", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.gregor_synthetic_stg_participant_twin_id", "block_contents": "Identifier for twin if applicable"}, "doc.gregor_synthetic.GREGoR_synthetic_phenotype_description": {"name": "GREGoR_synthetic_phenotype_description", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.GREGoR_synthetic_phenotype_description", "block_contents": "Model for GREGoR_synthetic_phenotype."}, "doc.gregor_synthetic.GREGoR_synthetic_phenotype_phenotype_id": {"name": "GREGoR_synthetic_phenotype_phenotype_id", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.GREGoR_synthetic_phenotype_phenotype_id", "block_contents": "Unique identifier for the phenotype record"}, "doc.gregor_synthetic.GREGoR_synthetic_phenotype_additional_details": {"name": "GREGoR_synthetic_phenotype_additional_details", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.GREGoR_synthetic_phenotype_additional_details", "block_contents": "Free text field for extra phenotype information"}, "doc.gregor_synthetic.GREGoR_synthetic_phenotype_additional_modifiers": {"name": "GREGoR_synthetic_phenotype_additional_modifiers", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.GREGoR_synthetic_phenotype_additional_modifiers", "block_contents": "Modifiers that qualify the phenotype term"}, "doc.gregor_synthetic.GREGoR_synthetic_phenotype_onset_age_range": {"name": "GREGoR_synthetic_phenotype_onset_age_range", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.GREGoR_synthetic_phenotype_onset_age_range", "block_contents": "Age range when the phenotype was observed"}, "doc.gregor_synthetic.GREGoR_synthetic_phenotype_ontology": {"name": "GREGoR_synthetic_phenotype_ontology", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.GREGoR_synthetic_phenotype_ontology", "block_contents": "Ontology used for the phenotype term"}, "doc.gregor_synthetic.GREGoR_synthetic_phenotype_participant_id": {"name": "GREGoR_synthetic_phenotype_participant_id", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.GREGoR_synthetic_phenotype_participant_id", "block_contents": "Participant ID associated with the phenotype record"}, "doc.gregor_synthetic.GREGoR_synthetic_phenotype_presence": {"name": "GREGoR_synthetic_phenotype_presence", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.GREGoR_synthetic_phenotype_presence", "block_contents": "Indicates if the phenotype is present or absent"}, "doc.gregor_synthetic.GREGoR_synthetic_phenotype_term_id": {"name": "GREGoR_synthetic_phenotype_term_id", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.GREGoR_synthetic_phenotype_term_id", "block_contents": "Ontology identifier for the phenotype term"}, "doc.gregor_synthetic.gregor_synthetic_stg_phenotype_description": {"name": "gregor_synthetic_stg_phenotype_description", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.gregor_synthetic_stg_phenotype_description", "block_contents": "Model for gregor_synthetic_stg_phenotype."}, "doc.gregor_synthetic.gregor_synthetic_stg_phenotype_phenotype_id": {"name": "gregor_synthetic_stg_phenotype_phenotype_id", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.gregor_synthetic_stg_phenotype_phenotype_id", "block_contents": "Unique identifier for the phenotype record"}, "doc.gregor_synthetic.gregor_synthetic_stg_phenotype_additional_details": {"name": "gregor_synthetic_stg_phenotype_additional_details", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.gregor_synthetic_stg_phenotype_additional_details", "block_contents": "Free text field for extra phenotype information"}, "doc.gregor_synthetic.gregor_synthetic_stg_phenotype_additional_modifiers": {"name": "gregor_synthetic_stg_phenotype_additional_modifiers", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.gregor_synthetic_stg_phenotype_additional_modifiers", "block_contents": "Modifiers that qualify the phenotype term"}, "doc.gregor_synthetic.gregor_synthetic_stg_phenotype_onset_age_range": {"name": "gregor_synthetic_stg_phenotype_onset_age_range", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.gregor_synthetic_stg_phenotype_onset_age_range", "block_contents": "Age range when the phenotype was observed"}, "doc.gregor_synthetic.gregor_synthetic_stg_phenotype_ontology": {"name": "gregor_synthetic_stg_phenotype_ontology", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.gregor_synthetic_stg_phenotype_ontology", "block_contents": "Ontology used for the phenotype term"}, "doc.gregor_synthetic.gregor_synthetic_stg_phenotype_participant_id": {"name": "gregor_synthetic_stg_phenotype_participant_id", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.gregor_synthetic_stg_phenotype_participant_id", "block_contents": "Participant ID associated with the phenotype record"}, "doc.gregor_synthetic.gregor_synthetic_stg_phenotype_presence": {"name": "gregor_synthetic_stg_phenotype_presence", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.gregor_synthetic_stg_phenotype_presence", "block_contents": "Indicates if the phenotype is present or absent"}, "doc.gregor_synthetic.gregor_synthetic_stg_phenotype_term_id": {"name": "gregor_synthetic_stg_phenotype_term_id", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.gregor_synthetic.gregor_synthetic_stg_phenotype_term_id", "block_contents": "Ontology identifier for the phenotype term"}, "doc.gregor_synthetic.GREGoR_synthetic_participant_revised07Aug2024": {"name": "GREGoR_synthetic_participant_revised07Aug2024", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/model_descriptions.md", "original_file_path": "models/docs/model_descriptions.md", "unique_id": "doc.gregor_synthetic.GREGoR_synthetic_participant_revised07Aug2024", "block_contents": "Model for GREGoR_synthetic_participant_revised07Aug2024."}, "doc.gregor_synthetic.gregor_synthetic_stg_participant": {"name": "gregor_synthetic_stg_participant", "resource_type": "doc", "package_name": "gregor_synthetic", "path": "docs/model_descriptions.md", "original_file_path": "models/docs/model_descriptions.md", "unique_id": "doc.gregor_synthetic.gregor_synthetic_stg_participant", "block_contents": "Model for gregor_synthetic_stg_participant."}, "doc.eMERGEseq.eMERGEseq_Demographics_DS_20200925_description": {"name": "eMERGEseq_Demographics_DS_20200925_description", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_Demographics_DS_20200925_description", "block_contents": "Model for eMERGEseq_Demographics_DS_20200925."}, "doc.eMERGEseq.eMERGEseq_Demographics_DS_20200925_subject_id": {"name": "eMERGEseq_Demographics_DS_20200925_subject_id", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_Demographics_DS_20200925_subject_id", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_Demographics_DS_20200925_sex": {"name": "eMERGEseq_Demographics_DS_20200925_sex", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_Demographics_DS_20200925_sex", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_Demographics_DS_20200925_decade_birth": {"name": "eMERGEseq_Demographics_DS_20200925_decade_birth", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_Demographics_DS_20200925_decade_birth", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_Demographics_DS_20200925_year_birth": {"name": "eMERGEseq_Demographics_DS_20200925_year_birth", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_Demographics_DS_20200925_year_birth", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_Demographics_DS_20200925_ethnicity": {"name": "eMERGEseq_Demographics_DS_20200925_ethnicity", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_Demographics_DS_20200925_ethnicity", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_Demographics_DS_20200925_race": {"name": "eMERGEseq_Demographics_DS_20200925_race", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_Demographics_DS_20200925_race", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_stg_demographics_description": {"name": "eMERGEseq_stg_demographics_description", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_stg_demographics_description", "block_contents": "Model for eMERGEseq_stg_demographics."}, "doc.eMERGEseq.eMERGEseq_stg_demographics_subject_id": {"name": "eMERGEseq_stg_demographics_subject_id", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_stg_demographics_subject_id", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_stg_demographics_sex": {"name": "eMERGEseq_stg_demographics_sex", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_stg_demographics_sex", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_stg_demographics_decade_birth": {"name": "eMERGEseq_stg_demographics_decade_birth", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_stg_demographics_decade_birth", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_stg_demographics_year_birth": {"name": "eMERGEseq_stg_demographics_year_birth", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_stg_demographics_year_birth", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_stg_demographics_ethnicity": {"name": "eMERGEseq_stg_demographics_ethnicity", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_stg_demographics_ethnicity", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_stg_demographics_race": {"name": "eMERGEseq_stg_demographics_race", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_stg_demographics_race", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_Phecode_DS_20200925_description": {"name": "eMERGEseq_Phecode_DS_20200925_description", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_Phecode_DS_20200925_description", "block_contents": "Model for eMERGEseq_Phecode_DS_20200925."}, "doc.eMERGEseq.eMERGEseq_Phecode_DS_20200925_subject_id": {"name": "eMERGEseq_Phecode_DS_20200925_subject_id", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_Phecode_DS_20200925_subject_id", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_Phecode_DS_20200925_phe_401_1": {"name": "eMERGEseq_Phecode_DS_20200925_phe_401_1", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_Phecode_DS_20200925_phe_401_1", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_Phecode_DS_20200925_phe_250_2": {"name": "eMERGEseq_Phecode_DS_20200925_phe_250_2", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_Phecode_DS_20200925_phe_250_2", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_Phecode_DS_20200925_phe_272_1": {"name": "eMERGEseq_Phecode_DS_20200925_phe_272_1", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_Phecode_DS_20200925_phe_272_1", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_Phecode_DS_20200925_phe_411_4": {"name": "eMERGEseq_Phecode_DS_20200925_phe_411_4", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_Phecode_DS_20200925_phe_411_4", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_Phecode_DS_20200925_phe_495": {"name": "eMERGEseq_Phecode_DS_20200925_phe_495", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_Phecode_DS_20200925_phe_495", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_Phecode_DS_20200925_phe_427_21": {"name": "eMERGEseq_Phecode_DS_20200925_phe_427_21", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_Phecode_DS_20200925_phe_427_21", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_Phecode_DS_20200925_phe_530_11": {"name": "eMERGEseq_Phecode_DS_20200925_phe_530_11", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_Phecode_DS_20200925_phe_530_11", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_Phecode_DS_20200925_phe_296_22": {"name": "eMERGEseq_Phecode_DS_20200925_phe_296_22", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_Phecode_DS_20200925_phe_296_22", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_Phecode_DS_20200925_phe_313_1": {"name": "eMERGEseq_Phecode_DS_20200925_phe_313_1", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_Phecode_DS_20200925_phe_313_1", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_Phecode_DS_20200925_phe_244_4": {"name": "eMERGEseq_Phecode_DS_20200925_phe_244_4", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_Phecode_DS_20200925_phe_244_4", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_Phecode_DS_20200925_phe_476": {"name": "eMERGEseq_Phecode_DS_20200925_phe_476", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_Phecode_DS_20200925_phe_476", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_Phecode_DS_20200925_phe_272_11": {"name": "eMERGEseq_Phecode_DS_20200925_phe_272_11", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_Phecode_DS_20200925_phe_272_11", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_Phecode_DS_20200925_phe_278_1": {"name": "eMERGEseq_Phecode_DS_20200925_phe_278_1", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_Phecode_DS_20200925_phe_278_1", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_Phecode_DS_20200925_phe_174_11": {"name": "eMERGEseq_Phecode_DS_20200925_phe_174_11", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_Phecode_DS_20200925_phe_174_11", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_Phecode_DS_20200925_phe_296_2": {"name": "eMERGEseq_Phecode_DS_20200925_phe_296_2", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_Phecode_DS_20200925_phe_296_2", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_Phecode_DS_20200925_phe_306": {"name": "eMERGEseq_Phecode_DS_20200925_phe_306", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_Phecode_DS_20200925_phe_306", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_Phecode_DS_20200925_phe_327_32": {"name": "eMERGEseq_Phecode_DS_20200925_phe_327_32", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_Phecode_DS_20200925_phe_327_32", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_Phecode_DS_20200925_phe_313_3": {"name": "eMERGEseq_Phecode_DS_20200925_phe_313_3", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_Phecode_DS_20200925_phe_313_3", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_Phecode_DS_20200925_phe_278_11": {"name": "eMERGEseq_Phecode_DS_20200925_phe_278_11", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_Phecode_DS_20200925_phe_278_11", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_Phecode_DS_20200925_phe_272_13": {"name": "eMERGEseq_Phecode_DS_20200925_phe_272_13", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_Phecode_DS_20200925_phe_272_13", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_Phecode_DS_20200925_phe_587": {"name": "eMERGEseq_Phecode_DS_20200925_phe_587", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_Phecode_DS_20200925_phe_587", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_stg_phecode_description": {"name": "eMERGEseq_stg_phecode_description", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_stg_phecode_description", "block_contents": "Model for eMERGEseq_stg_phecode."}, "doc.eMERGEseq.eMERGEseq_stg_phecode_subject_id": {"name": "eMERGEseq_stg_phecode_subject_id", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_stg_phecode_subject_id", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_stg_phecode_phe_401_1": {"name": "eMERGEseq_stg_phecode_phe_401_1", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_stg_phecode_phe_401_1", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_stg_phecode_phe_250_2": {"name": "eMERGEseq_stg_phecode_phe_250_2", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_stg_phecode_phe_250_2", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_stg_phecode_phe_272_1": {"name": "eMERGEseq_stg_phecode_phe_272_1", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_stg_phecode_phe_272_1", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_stg_phecode_phe_411_4": {"name": "eMERGEseq_stg_phecode_phe_411_4", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_stg_phecode_phe_411_4", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_stg_phecode_phe_495": {"name": "eMERGEseq_stg_phecode_phe_495", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_stg_phecode_phe_495", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_stg_phecode_phe_427_21": {"name": "eMERGEseq_stg_phecode_phe_427_21", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_stg_phecode_phe_427_21", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_stg_phecode_phe_530_11": {"name": "eMERGEseq_stg_phecode_phe_530_11", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_stg_phecode_phe_530_11", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_stg_phecode_phe_296_22": {"name": "eMERGEseq_stg_phecode_phe_296_22", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_stg_phecode_phe_296_22", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_stg_phecode_phe_313_1": {"name": "eMERGEseq_stg_phecode_phe_313_1", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_stg_phecode_phe_313_1", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_stg_phecode_phe_244_4": {"name": "eMERGEseq_stg_phecode_phe_244_4", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_stg_phecode_phe_244_4", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_stg_phecode_phe_476": {"name": "eMERGEseq_stg_phecode_phe_476", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_stg_phecode_phe_476", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_stg_phecode_phe_272_11": {"name": "eMERGEseq_stg_phecode_phe_272_11", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_stg_phecode_phe_272_11", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_stg_phecode_phe_278_1": {"name": "eMERGEseq_stg_phecode_phe_278_1", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_stg_phecode_phe_278_1", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_stg_phecode_phe_174_11": {"name": "eMERGEseq_stg_phecode_phe_174_11", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_stg_phecode_phe_174_11", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_stg_phecode_phe_296_2": {"name": "eMERGEseq_stg_phecode_phe_296_2", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_stg_phecode_phe_296_2", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_stg_phecode_phe_306": {"name": "eMERGEseq_stg_phecode_phe_306", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_stg_phecode_phe_306", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_stg_phecode_phe_327_32": {"name": "eMERGEseq_stg_phecode_phe_327_32", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_stg_phecode_phe_327_32", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_stg_phecode_phe_313_3": {"name": "eMERGEseq_stg_phecode_phe_313_3", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_stg_phecode_phe_313_3", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_stg_phecode_phe_278_11": {"name": "eMERGEseq_stg_phecode_phe_278_11", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_stg_phecode_phe_278_11", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_stg_phecode_phe_272_13": {"name": "eMERGEseq_stg_phecode_phe_272_13", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_stg_phecode_phe_272_13", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_stg_phecode_phe_587": {"name": "eMERGEseq_stg_phecode_phe_587", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_stg_phecode_phe_587", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_SampleAttributes_DS_20200925_description": {"name": "eMERGEseq_SampleAttributes_DS_20200925_description", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_SampleAttributes_DS_20200925_description", "block_contents": "Model for eMERGEseq_SampleAttributes_DS_20200925."}, "doc.eMERGEseq.eMERGEseq_SampleAttributes_DS_20200925_sample_id": {"name": "eMERGEseq_SampleAttributes_DS_20200925_sample_id", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_SampleAttributes_DS_20200925_sample_id", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_SampleAttributes_DS_20200925_analyte_type": {"name": "eMERGEseq_SampleAttributes_DS_20200925_analyte_type", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_SampleAttributes_DS_20200925_analyte_type", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_SampleAttributes_DS_20200925_sequencing_center": {"name": "eMERGEseq_SampleAttributes_DS_20200925_sequencing_center", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_SampleAttributes_DS_20200925_sequencing_center", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_stg_sampleattributes_description": {"name": "eMERGEseq_stg_sampleattributes_description", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_stg_sampleattributes_description", "block_contents": "Model for eMERGEseq_stg_sampleattributes."}, "doc.eMERGEseq.eMERGEseq_stg_sampleattributes_sample_id": {"name": "eMERGEseq_stg_sampleattributes_sample_id", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_stg_sampleattributes_sample_id", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_stg_sampleattributes_analyte_type": {"name": "eMERGEseq_stg_sampleattributes_analyte_type", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_stg_sampleattributes_analyte_type", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_stg_sampleattributes_sequencing_center": {"name": "eMERGEseq_stg_sampleattributes_sequencing_center", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_stg_sampleattributes_sequencing_center", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_SampleSubjectMapping_DS_20200925_description": {"name": "eMERGEseq_SampleSubjectMapping_DS_20200925_description", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_SampleSubjectMapping_DS_20200925_description", "block_contents": "Model for eMERGEseq_SampleSubjectMapping_DS_20200925."}, "doc.eMERGEseq.eMERGEseq_SampleSubjectMapping_DS_20200925_subject_id": {"name": "eMERGEseq_SampleSubjectMapping_DS_20200925_subject_id", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_SampleSubjectMapping_DS_20200925_subject_id", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_SampleSubjectMapping_DS_20200925_sample_id": {"name": "eMERGEseq_SampleSubjectMapping_DS_20200925_sample_id", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_SampleSubjectMapping_DS_20200925_sample_id", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_SampleSubjectMapping_DS_20200925_sample_source": {"name": "eMERGEseq_SampleSubjectMapping_DS_20200925_sample_source", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_SampleSubjectMapping_DS_20200925_sample_source", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_stg_samplesubjectmapping_description": {"name": "eMERGEseq_stg_samplesubjectmapping_description", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_stg_samplesubjectmapping_description", "block_contents": "Model for eMERGEseq_stg_samplesubjectmapping."}, "doc.eMERGEseq.eMERGEseq_stg_samplesubjectmapping_subject_id": {"name": "eMERGEseq_stg_samplesubjectmapping_subject_id", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_stg_samplesubjectmapping_subject_id", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_stg_samplesubjectmapping_sample_id": {"name": "eMERGEseq_stg_samplesubjectmapping_sample_id", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_stg_samplesubjectmapping_sample_id", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_stg_samplesubjectmapping_sample_source": {"name": "eMERGEseq_stg_samplesubjectmapping_sample_source", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_stg_samplesubjectmapping_sample_source", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_SubjectConsent_DS_20201020_description": {"name": "eMERGEseq_SubjectConsent_DS_20201020_description", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_SubjectConsent_DS_20201020_description", "block_contents": "Model for eMERGEseq_SubjectConsent_DS_20201020."}, "doc.eMERGEseq.eMERGEseq_SubjectConsent_DS_20201020_subject_id": {"name": "eMERGEseq_SubjectConsent_DS_20201020_subject_id", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_SubjectConsent_DS_20201020_subject_id", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_SubjectConsent_DS_20201020_consent": {"name": "eMERGEseq_SubjectConsent_DS_20201020_consent", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_SubjectConsent_DS_20201020_consent", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_SubjectConsent_DS_20201020_subject_source": {"name": "eMERGEseq_SubjectConsent_DS_20201020_subject_source", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_SubjectConsent_DS_20201020_subject_source", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_stg_subjectconsent_description": {"name": "eMERGEseq_stg_subjectconsent_description", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_stg_subjectconsent_description", "block_contents": "Model for eMERGEseq_stg_subjectconsent."}, "doc.eMERGEseq.eMERGEseq_stg_subjectconsent_subject_id": {"name": "eMERGEseq_stg_subjectconsent_subject_id", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_stg_subjectconsent_subject_id", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_stg_subjectconsent_consent": {"name": "eMERGEseq_stg_subjectconsent_consent", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_stg_subjectconsent_consent", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_stg_subjectconsent_subject_source": {"name": "eMERGEseq_stg_subjectconsent_subject_source", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_stg_subjectconsent_subject_source", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_BMI_DS_20200925_description": {"name": "eMERGEseq_BMI_DS_20200925_description", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_BMI_DS_20200925_description", "block_contents": "Model for eMERGEseq_BMI_DS_20200925."}, "doc.eMERGEseq.eMERGEseq_BMI_DS_20200925_subject_id": {"name": "eMERGEseq_BMI_DS_20200925_subject_id", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_BMI_DS_20200925_subject_id", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_BMI_DS_20200925_age_at_observation": {"name": "eMERGEseq_BMI_DS_20200925_age_at_observation", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_BMI_DS_20200925_age_at_observation", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_BMI_DS_20200925_weight": {"name": "eMERGEseq_BMI_DS_20200925_weight", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_BMI_DS_20200925_weight", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_BMI_DS_20200925_height": {"name": "eMERGEseq_BMI_DS_20200925_height", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_BMI_DS_20200925_height", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_BMI_DS_20200925_body_mass_index": {"name": "eMERGEseq_BMI_DS_20200925_body_mass_index", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_BMI_DS_20200925_body_mass_index", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_BMI_DS_20200925_visit_number": {"name": "eMERGEseq_BMI_DS_20200925_visit_number", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_BMI_DS_20200925_visit_number", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_stg_bmi_description": {"name": "eMERGEseq_stg_bmi_description", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_stg_bmi_description", "block_contents": "Model for eMERGEseq_stg_bmi."}, "doc.eMERGEseq.eMERGEseq_stg_bmi_subject_id": {"name": "eMERGEseq_stg_bmi_subject_id", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_stg_bmi_subject_id", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_stg_bmi_age_at_observation": {"name": "eMERGEseq_stg_bmi_age_at_observation", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_stg_bmi_age_at_observation", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_stg_bmi_weight": {"name": "eMERGEseq_stg_bmi_weight", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_stg_bmi_weight", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_stg_bmi_height": {"name": "eMERGEseq_stg_bmi_height", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_stg_bmi_height", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_stg_bmi_body_mass_index": {"name": "eMERGEseq_stg_bmi_body_mass_index", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_stg_bmi_body_mass_index", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_stg_bmi_visit_number": {"name": "eMERGEseq_stg_bmi_visit_number", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_stg_bmi_visit_number", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_Pedigree_DS_20200925_description": {"name": "eMERGEseq_Pedigree_DS_20200925_description", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_Pedigree_DS_20200925_description", "block_contents": "Model for eMERGEseq_Pedigree_DS_20200925."}, "doc.eMERGEseq.eMERGEseq_Pedigree_DS_20200925_family_id": {"name": "eMERGEseq_Pedigree_DS_20200925_family_id", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_Pedigree_DS_20200925_family_id", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_Pedigree_DS_20200925_subject_id": {"name": "eMERGEseq_Pedigree_DS_20200925_subject_id", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_Pedigree_DS_20200925_subject_id", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_Pedigree_DS_20200925_mother": {"name": "eMERGEseq_Pedigree_DS_20200925_mother", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_Pedigree_DS_20200925_mother", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_Pedigree_DS_20200925_father": {"name": "eMERGEseq_Pedigree_DS_20200925_father", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_Pedigree_DS_20200925_father", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_Pedigree_DS_20200925_sex": {"name": "eMERGEseq_Pedigree_DS_20200925_sex", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_Pedigree_DS_20200925_sex", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_Pedigree_DS_20200925_mz_twin_id": {"name": "eMERGEseq_Pedigree_DS_20200925_mz_twin_id", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_Pedigree_DS_20200925_mz_twin_id", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_stg_pedigree_description": {"name": "eMERGEseq_stg_pedigree_description", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_stg_pedigree_description", "block_contents": "Model for eMERGEseq_stg_pedigree."}, "doc.eMERGEseq.eMERGEseq_stg_pedigree_family_id": {"name": "eMERGEseq_stg_pedigree_family_id", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_stg_pedigree_family_id", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_stg_pedigree_subject_id": {"name": "eMERGEseq_stg_pedigree_subject_id", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_stg_pedigree_subject_id", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_stg_pedigree_mother": {"name": "eMERGEseq_stg_pedigree_mother", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_stg_pedigree_mother", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_stg_pedigree_father": {"name": "eMERGEseq_stg_pedigree_father", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_stg_pedigree_father", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_stg_pedigree_sex": {"name": "eMERGEseq_stg_pedigree_sex", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_stg_pedigree_sex", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_stg_pedigree_mz_twin_id": {"name": "eMERGEseq_stg_pedigree_mz_twin_id", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/column_descriptions.md", "original_file_path": "models/docs/column_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_stg_pedigree_mz_twin_id", "block_contents": "None"}, "doc.eMERGEseq.eMERGEseq_Demographics_DS_20200925": {"name": "eMERGEseq_Demographics_DS_20200925", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/model_descriptions.md", "original_file_path": "models/docs/model_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_Demographics_DS_20200925", "block_contents": "Model for eMERGEseq_Demographics_DS_20200925."}, "doc.eMERGEseq.eMERGEseq_stg_demographics": {"name": "eMERGEseq_stg_demographics", "resource_type": "doc", "package_name": "eMERGEseq", "path": "docs/model_descriptions.md", "original_file_path": "models/docs/model_descriptions.md", "unique_id": "doc.eMERGEseq.eMERGEseq_stg_demographics", "block_contents": "Model for eMERGEseq_stg_demographics."}}, "exposures": {}, "metrics": {}, "groups": {}, "selectors": {}, "disabled": {}, "parent_map": {"seed.base.phecode_seed": [], "seed.base.consent_codes": [], "seed.base.fm_family_role": [], "seed.base.fr_relationship_code": [], "seed.base.cmg_bh_annotations_code": [], "seed.base.subject_mappings": [], "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_experiment": ["source.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_experiment"], "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant": ["source.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_participant"], "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype": ["source.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_phenotype"], "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_anvil_project": ["source.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_anvil_project"], "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_experiment": ["source.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_experiment"], "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant": ["source.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_participant"], "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype": ["source.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_phenotype"], "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_anvil_project": ["source.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_anvil_project"], "model.cmg_bh.cmg_bh_stg_subject": ["source.cmg_bh.cmg_bh.subject"], "model.cmg_bh.cmg_bh_stg_sample": ["source.cmg_bh.cmg_bh.sample"], "model.GWAS.GWAS_stg_demographics": ["source.GWAS.GWAS.GWAS_Demographics_DS_20201109"], "model.GWAS.GWAS_stg_sampleattributes": ["source.GWAS.GWAS.GWAS_SampleAttributes_DS_20201027"], "model.GWAS.GWAS_stg_subjectconsent": ["source.GWAS.GWAS.GWAS_SubjectConsent_DS_20190813"], "model.GWAS.GWAS_stg_phecode": ["source.GWAS.GWAS.GWAS_Phecode_DS_20201027"], "model.GWAS.GWAS_stg_bmi": ["source.GWAS.GWAS.GWAS_BMI_DS_20201028"], "model.GWAS.GWAS_stg_pedigree": ["source.GWAS.GWAS.GWAS_Pedigree_DS_20200512"], "model.GWAS.GWAS_stg_samplesubjectmapping": ["source.GWAS.GWAS.GWAS_SampleSubjectMapping_DS_20201027"], "model.ftd.GREGoR_R03_HMB_20250612_ftd_sourcedata": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_HMB_20250612_ftd_familyrelationship": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant"], "model.ftd.GREGoR_R03_HMB_20250612_ftd_subjectassertion": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_HMB_20250612_ftd_subjectassertion_source_data": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_HMB_20250612_ftd_sample": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_HMB_20250612_ftd_thing_external_id": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_HMB_20250612_ftd_accesscontrolledrecord_external_id": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_HMB_20250612_ftd_aliquot": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_HMB_20250612_ftd_aliquot_external_id": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_HMB_20250612_ftd_file_subject": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_HMB_20250612_ftd_family_family_relationships": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_HMB_20250612_ftd_familymember_external_id": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant"], "model.ftd.GREGoR_R03_HMB_20250612_ftd_filemetadata": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_source_data": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_race": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant"], "model.ftd.GREGoR_R03_HMB_20250612_ftd_sample_storage_method": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_HMB_20250612_ftd_study_funding_source": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_HMB_20250612_ftd_sample_external_id": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_HMB_20250612_ftd_biospecimencollection": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_HMB_20250612_ftd_biospecimencollection_external_id": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_HMB_20250612_ftd_accesspolicy_data_access_type": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_external_id": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_HMB_20250612_ftd_subject_external_id": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant"], "model.ftd.GREGoR_R03_HMB_20250612_ftd_file": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_HMB_20250612_ftd_family_external_id": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_HMB_20250612_ftd_accesspolicy": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant"], "model.ftd.GREGoR_R03_HMB_20250612_ftd_familymember": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant"], "model.ftd.GREGoR_R03_HMB_20250612_ftd_file_external_id": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_HMB_20250612_ftd_subjectassertion_external_id": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_HMB_20250612_ftd_sourcedata_external_id": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_HMB_20250612_ftd_study": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_anvil_project"], "model.ftd.GREGoR_R03_HMB_20250612_ftd_filemetadata_external_id": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_HMB_20250612_ftd_study_principal_investigator": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_HMB_20250612_ftd_file_sample": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_HMB_20250612_ftd_accesscontrolledrecord": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_HMB_20250612_ftd_familyrelationship_external_id": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_HMB_20250612_ftd_accesspolicy_external_id": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_HMB_20250612_ftd_study_external_id": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_anvil_project"], "model.ftd.GREGoR_R03_HMB_20250612_ftd_subject": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_experiment", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant"], "model.ftd.GREGoR_R03_HMB_20250612_ftd_family": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_HMB_20250612_ftd_study_external_study_id": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_HMB_20250612_ftd_demographics": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant"], "model.ftd.GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant"], "model.ftd.GREGoR_R03_HMB_20250612_ftd_sample_processing": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant", "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_GRU_20250612_ftd_accesspolicy_external_id": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_GRU_20250612_ftd_file_external_id": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_GRU_20250612_ftd_family_family_relationships": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_GRU_20250612_ftd_sample_storage_method": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_GRU_20250612_ftd_sourcedata_external_id": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_GRU_20250612_ftd_sample_processing": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_GRU_20250612_ftd_family_external_id": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_GRU_20250612_ftd_accesscontrolledrecord": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_GRU_20250612_ftd_familymember": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant"], "model.ftd.GREGoR_R03_GRU_20250612_ftd_sourcedata_query_parameter": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_anvil_project", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_experiment", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_GRU_20250612_ftd_subject": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_experiment", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant"], "model.ftd.GREGoR_R03_GRU_20250612_ftd_study_external_id": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_anvil_project"], "model.ftd.GREGoR_R03_GRU_20250612_ftd_subject_external_id": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant"], "model.ftd.GREGoR_R03_GRU_20250612_ftd_subjectassertion_external_id": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_GRU_20250612_ftd_accesspolicy": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant"], "model.ftd.GREGoR_R03_GRU_20250612_ftd_accesscontrolledrecord_external_id": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_GRU_20250612_ftd_familymember_external_id": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant"], "model.ftd.GREGoR_R03_GRU_20250612_ftd_filemetadata": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant"], "model.ftd.GREGoR_R03_GRU_20250612_ftd_family": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_GRU_20250612_ftd_aliquot": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_GRU_20250612_ftd_biospecimencollection_external_id": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_GRU_20250612_ftd_study_funding_source": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_GRU_20250612_ftd_sourcedata": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_race": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant"], "model.ftd.GREGoR_R03_GRU_20250612_ftd_study": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_anvil_project"], "model.ftd.GREGoR_R03_GRU_20250612_ftd_filemetadata_external_id": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_GRU_20250612_ftd_file": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_source_data": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_GRU_20250612_ftd_accesspolicy_data_access_type": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_GRU_20250612_ftd_datasource": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_anvil_project", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_experiment", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_GRU_20250612_ftd_sample": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_GRU_20250612_ftd_thing_external_id": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_GRU_20250612_ftd_study_external_study_id": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_GRU_20250612_ftd_file_sample": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_GRU_20250612_ftd_subjectassertion_source_data": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_GRU_20250612_ftd_familyrelationship": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant"], "model.ftd.GREGoR_R03_GRU_20250612_ftd_biospecimencollection": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_GRU_20250612_ftd_aliquot_external_id": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_GRU_20250612_ftd_sample_external_id": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_GRU_20250612_ftd_demographics": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant"], "model.ftd.GREGoR_R03_GRU_20250612_ftd_subjectassertion": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_GRU_20250612_ftd_datasource_external_id": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_anvil_project", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_experiment", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_GRU_20250612_ftd_file_subject": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_GRU_20250612_ftd_study_principal_investigator": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_external_id": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"], "model.ftd.GREGoR_R03_GRU_20250612_ftd_familyrelationship_external_id": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"], "model.ftd.cmg_bh_ftd_sample": ["model.cmg_bh.cmg_bh_stg_sample", "model.cmg_bh.cmg_bh_stg_subject"], "model.ftd.cmg_bh_ftd_demographics_source_data": ["model.cmg_bh.cmg_bh_stg_subject"], "model.ftd.cmg_bh_ftd_sourcedata": ["model.cmg_bh.cmg_bh_stg_subject"], "model.ftd.cmg_bh_ftd_study_external_id": ["model.cmg_bh.cmg_bh_stg_subject"], "model.ftd.cmg_bh_ftd_file_subject": ["model.cmg_bh.cmg_bh_stg_sample"], "model.ftd.cmg_bh_ftd_sample_external_id": ["model.cmg_bh.cmg_bh_stg_sample", "model.cmg_bh.cmg_bh_stg_subject"], "model.ftd.cmg_bh_ftd_demographics": ["model.cmg_bh.cmg_bh_stg_subject"], "model.ftd.cmg_bh_ftd_file_external_id": ["model.cmg_bh.cmg_bh_stg_sample"], "model.ftd.cmg_bh_ftd_familymember_external_id": ["model.cmg_bh.cmg_bh_stg_subject"], "model.ftd.cmg_bh_ftd_family_external_id": ["model.cmg_bh.cmg_bh_stg_subject"], "model.ftd.cmg_bh_ftd_accesspolicy_external_id": ["model.cmg_bh.cmg_bh_stg_subject"], "model.ftd.cmg_bh_ftd_family": ["model.cmg_bh.cmg_bh_stg_subject"], "model.ftd.cmg_bh_ftd_file": ["model.cmg_bh.cmg_bh_stg_sample"], "model.ftd.cmg_bh_ftd_accesspolicy": ["model.cmg_bh.cmg_bh_stg_subject"], "model.ftd.cmg_bh_ftd_file_sample": ["model.cmg_bh.cmg_bh_stg_sample"], "model.ftd.cmg_bh_ftd_accesspolicy_access_policy_code": ["model.cmg_bh.cmg_bh_stg_subject"], "model.ftd.cmg_bh_ftd_subjectassertion": ["model.cmg_bh.cmg_bh_stg_subject", "seed.base.cmg_bh_annotations_code", "seed.base.subject_mappings"], "model.ftd.cmg_bh_ftd_family_family_relationships": ["model.cmg_bh.cmg_bh_stg_subject"], "model.ftd.cmg_bh_ftd_subject_external_id": ["model.cmg_bh.cmg_bh_stg_subject"], "model.ftd.cmg_bh_ftd_familyrelationship": ["model.cmg_bh.cmg_bh_stg_subject"], "model.ftd.cmg_bh_ftd_accesspolicy_data_access_type": ["model.cmg_bh.cmg_bh_stg_subject"], "model.ftd.cmg_bh_ftd_subjectassertion_source_data": ["model.cmg_bh.cmg_bh_stg_subject"], "model.ftd.cmg_bh_ftd_familyrelationship_external_id": ["model.cmg_bh.cmg_bh_stg_subject"], "model.ftd.cmg_bh_ftd_datasource": ["model.cmg_bh.cmg_bh_stg_subject"], "model.ftd.cmg_bh_ftd_subjectassertion_external_id": ["model.cmg_bh.cmg_bh_stg_subject", "seed.base.cmg_bh_annotations_code", "seed.base.subject_mappings"], "model.ftd.cmg_bh_ftd_subject": ["model.cmg_bh.cmg_bh_stg_subject"], "model.ftd.cmg_bh_ftd_demographics_race": ["model.cmg_bh.cmg_bh_stg_subject"], "model.ftd.cmg_bh_ftd_demographics_external_id": ["model.cmg_bh.cmg_bh_stg_subject"], "model.ftd.cmg_bh_ftd_sourcedata_external_id": ["model.cmg_bh.cmg_bh_stg_subject"], "model.ftd.cmg_bh_ftd_study_principal_investigator": ["model.cmg_bh.cmg_bh_stg_subject"], "model.ftd.cmg_bh_ftd_study_funding_source": ["model.cmg_bh.cmg_bh_stg_subject"], "model.ftd.cmg_bh_ftd_datasource_external_id": ["model.cmg_bh.cmg_bh_stg_subject"], "model.ftd.cmg_bh_ftd_sourcedata_query_parameter": ["model.cmg_bh.cmg_bh_stg_subject"], "model.ftd.cmg_bh_ftd_familymember": ["model.cmg_bh.cmg_bh_stg_subject"], "model.ftd.cmg_bh_ftd_study": ["model.cmg_bh.cmg_bh_stg_subject"], "model.ftd.cmg_bh_ftd_sample_processing": ["model.cmg_bh.cmg_bh_stg_sample", "model.cmg_bh.cmg_bh_stg_subject"], "model.ftd.cmg_bh_ftd_biospecimencollection_external_id": ["model.cmg_bh.cmg_bh_stg_sample", "model.cmg_bh.cmg_bh_stg_subject"], "model.ftd.cmg_bh_ftd_aliquot_external_id": ["model.cmg_bh.cmg_bh_stg_sample", "model.cmg_bh.cmg_bh_stg_subject"], "model.ftd.cmg_bh_ftd_sample_storage_method": ["model.cmg_bh.cmg_bh_stg_sample", "model.cmg_bh.cmg_bh_stg_subject"], "model.ftd.cmg_bh_ftd_filemetadata_external_id": ["model.cmg_bh.cmg_bh_stg_sample", "model.cmg_bh.cmg_bh_stg_subject"], "model.ftd.cmg_bh_ftd_filemetadata": ["model.cmg_bh.cmg_bh_stg_sample", "model.cmg_bh.cmg_bh_stg_subject"], "model.ftd.cmg_bh_ftd_biospecimencollection": ["model.cmg_bh.cmg_bh_stg_sample", "model.cmg_bh.cmg_bh_stg_subject"], "model.ftd.cmg_bh_ftd_aliquot": ["model.cmg_bh.cmg_bh_stg_sample", "model.cmg_bh.cmg_bh_stg_subject"], "model.ftd.cmg_bh_ftd_accesscontrolledrecord": ["model.cmg_bh.cmg_bh_stg_sample", "model.cmg_bh.cmg_bh_stg_subject"], "model.ftd.cmg_bh_ftd_accesscontrolledrecord_external_id": ["model.cmg_bh.cmg_bh_stg_sample", "model.cmg_bh.cmg_bh_stg_subject"], "model.ftd.GWAS_ftd_sample": ["model.GWAS.GWAS_stg_sampleattributes", "model.GWAS.GWAS_stg_samplesubjectmapping", "model.GWAS.GWAS_stg_subjectconsent"], "model.ftd.GWAS_ftd_subject_external_id": ["model.GWAS.GWAS_stg_demographics"], "model.ftd.GWAS_ftd_familymember_external_id": ["model.GWAS.GWAS_stg_pedigree"], "model.ftd.GWAS_ftd_demographics_race": ["model.GWAS.GWAS_stg_demographics"], "model.ftd.GWAS_ftd_sample_external_id": ["model.GWAS.GWAS_stg_samplesubjectmapping"], "model.ftd.GWAS_ftd_demographics": ["model.GWAS.GWAS_stg_demographics", "model.GWAS.GWAS_stg_subjectconsent"], "model.ftd.GWAS_ftd_familymember": ["model.GWAS.GWAS_stg_pedigree", "model.GWAS.GWAS_stg_subjectconsent"], "model.ftd.GWAS_ftd_familyrelationship": ["model.GWAS.GWAS_stg_pedigree", "model.GWAS.GWAS_stg_subjectconsent"], "model.ftd.GWAS_ftd_accesspolicy_access_policy_code": ["model.GWAS.GWAS_stg_subjectconsent"], "model.ftd.GWAS_ftd_accesspolicy": ["model.GWAS.GWAS_stg_subjectconsent"], "model.ftd.GWAS_ftd_subjectassertion": ["model.GWAS.GWAS_stg_bmi", "model.GWAS.GWAS_stg_phecode", "model.GWAS.GWAS_stg_subjectconsent"], "model.ftd.GWAS_ftd_demographics_external_id": ["model.GWAS.GWAS_stg_demographics"], "model.ftd.GWAS_ftd_subject": ["model.GWAS.GWAS_stg_demographics", "model.GWAS.GWAS_stg_subjectconsent"], "model.ftd.GWAS_ftd_study_principal_investigator": [], "model.ftd.GWAS_ftd_biospecimencollection": [], "model.ftd.GWAS_ftd_accesspolicy_data_access_type": [], "model.ftd.GWAS_ftd_file_external_id": [], "model.ftd.GWAS_ftd_study": [], "model.ftd.GWAS_ftd_familyrelationship_external_id": [], "model.ftd.GWAS_ftd_accesspolicy_external_id": [], "model.ftd.GWAS_ftd_accesscontrolledrecord_external_id": [], "model.ftd.GWAS_ftd_file_subject": [], "model.ftd.GWAS_ftd_family_external_id": [], "model.ftd.GWAS_ftd_family": [], "model.ftd.GWAS_ftd_demographics_source_data": [], "model.ftd.GWAS_ftd_accesscontrolledrecord": [], "model.ftd.GWAS_ftd_filemetadata": [], "model.ftd.GWAS_ftd_aliquot_external_id": [], "model.ftd.GWAS_ftd_file": [], "model.ftd.GWAS_ftd_sourcedata_query_parameter": [], "model.ftd.GWAS_ftd_subjectassertion_external_id": [], "model.ftd.GWAS_ftd_sourcedata_external_id": [], "model.ftd.GWAS_ftd_family_family_relationships": [], "model.ftd.GWAS_ftd_aliquot": [], "model.ftd.GWAS_ftd_biospecimencollection_external_id": [], "model.ftd.GWAS_ftd_datasource": [], "model.ftd.GWAS_ftd_sample_storage_method": [], "model.ftd.GWAS_ftd_study_external_id": [], "model.ftd.GWAS_ftd_sample_processing": [], "model.ftd.GWAS_ftd_sourcedata": [], "model.ftd.GWAS_ftd_datasource_external_id": [], "model.ftd.GWAS_ftd_filemetadata_external_id": [], "model.ftd.GWAS_ftd_file_sample": [], "model.ftd.GWAS_ftd_subjectassertion_source_data": [], "model.ftd.GWAS_ftd_study_funding_source": [], "model.ftd.gregor_synthetic_ftd_thing_external_id": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"], "model.ftd.gregor_synthetic_ftd_study_external_id": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"], "model.ftd.gregor_synthetic_ftd_familymember_external_id": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"], "model.ftd.gregor_synthetic_ftd_biospecimencollection_external_id": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"], "model.ftd.gregor_synthetic_ftd_accesscontrolledrecord": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"], "model.ftd.gregor_synthetic_ftd_demographics_source_data": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"], "model.ftd.gregor_synthetic_ftd_sourcedata": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"], "model.ftd.gregor_synthetic_ftd_demographics": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"], "model.ftd.gregor_synthetic_ftd_study": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"], "model.ftd.gregor_synthetic_ftd_sample": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"], "model.ftd.gregor_synthetic_ftd_filemetadata": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"], "model.ftd.gregor_synthetic_ftd_accesspolicy_data_access_type": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"], "model.ftd.gregor_synthetic_ftd_accesspolicy": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"], "model.ftd.gregor_synthetic_ftd_subjectassertion_external_id": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"], "model.ftd.gregor_synthetic_ftd_sample_storage_method": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"], "model.ftd.gregor_synthetic_ftd_study_external_study_id": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"], "model.ftd.gregor_synthetic_ftd_aliquot": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"], "model.ftd.gregor_synthetic_ftd_biospecimencollection": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"], "model.ftd.gregor_synthetic_ftd_sample_processing": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"], "model.ftd.gregor_synthetic_ftd_sample_external_id": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"], "model.ftd.gregor_synthetic_ftd_accesscontrolledrecord_external_id": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"], "model.ftd.gregor_synthetic_ftd_family_external_id": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"], "model.ftd.gregor_synthetic_ftd_accesspolicy_access_policy_code": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"], "model.ftd.gregor_synthetic_ftd_subjectassertion_source_data": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"], "model.ftd.gregor_synthetic_ftd_family_family_relationships": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"], "model.ftd.gregor_synthetic_ftd_accesspolicy_external_id": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"], "model.ftd.gregor_synthetic_ftd_familyrelationship": ["model.gregor_synthetic.gregor_synthetic_stg_participant"], "model.ftd.gregor_synthetic_ftd_familymember": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"], "model.ftd.gregor_synthetic_ftd_subject": ["model.gregor_synthetic.gregor_synthetic_stg_participant"], "model.ftd.gregor_synthetic_ftd_family": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"], "model.ftd.gregor_synthetic_ftd_file": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"], "model.ftd.gregor_synthetic_ftd_file_sample": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"], "model.ftd.gregor_synthetic_ftd_subjectassertion": ["model.ftd.gregor_synthetic_ftd_accesspolicy", "model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"], "model.ftd.gregor_synthetic_ftd_familyrelationship_external_id": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"], "model.ftd.gregor_synthetic_ftd_aliquot_external_id": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"], "model.ftd.gregor_synthetic_ftd_filemetadata_external_id": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"], "model.ftd.gregor_synthetic_ftd_demographics_external_id": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"], "model.ftd.gregor_synthetic_ftd_study_principal_investigator": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"], "model.ftd.gregor_synthetic_ftd_file_external_id": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"], "model.ftd.gregor_synthetic_ftd_sourcedata_external_id": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"], "model.ftd.gregor_synthetic_ftd_demographics_race": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"], "model.ftd.gregor_synthetic_ftd_study_funding_source": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"], "model.ftd.gregor_synthetic_ftd_file_subject": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_experiment", "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant"], "model.ftd.gregor_synthetic_ftd_subject_external_id": ["model.gregor_synthetic.gregor_synthetic_stg_participant", "model.gregor_synthetic.gregor_synthetic_stg_phenotype"], "model.ftd.eMERGEseq_ftd_biospecimencollection_external_id": ["model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_sampleattributes", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_subjectconsent"], "model.ftd.eMERGEseq_ftd_study_funding_source": ["model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_sampleattributes", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_subjectconsent"], "model.ftd.eMERGEseq_ftd_subjectassertion_external_id": ["model.eMERGEseq.eMERGEseq_stg_bmi", "model.eMERGEseq.eMERGEseq_stg_phecode", "seed.base.phecode_seed"], "model.ftd.eMERGEseq_ftd_sample": ["model.eMERGEseq.eMERGEseq_stg_sampleattributes", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_subjectconsent"], "model.ftd.eMERGEseq_ftd_study_external_study_id": ["model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_sampleattributes", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_subjectconsent"], "model.ftd.eMERGEseq_ftd_accesscontrolledrecord": ["model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_sampleattributes", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_subjectconsent"], "model.ftd.eMERGEseq_ftd_filemetadata": ["model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_sampleattributes", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_subjectconsent"], "model.ftd.eMERGEseq_ftd_file_sample": ["model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_sampleattributes", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_subjectconsent"], "model.ftd.eMERGEseq_ftd_subjectassertion": ["model.eMERGEseq.eMERGEseq_stg_bmi", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_subjectconsent", "seed.base.phecode_seed"], "model.ftd.eMERGEseq_ftd_file_subject": ["model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_sampleattributes", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_subjectconsent"], "model.ftd.eMERGEseq_ftd_study": ["model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_sampleattributes", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_subjectconsent"], "model.ftd.eMERGEseq_ftd_subject_external_id": ["model.eMERGEseq.eMERGEseq_stg_demographics"], "model.ftd.eMERGEseq_ftd_demographics": ["model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_subjectconsent"], "model.ftd.eMERGEseq_ftd_family_external_id": ["model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_sampleattributes", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_subjectconsent"], "model.ftd.eMERGEseq_ftd_family": ["model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_sampleattributes", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_subjectconsent"], "model.ftd.eMERGEseq_ftd_datasource": ["model.eMERGEseq.eMERGEseq_stg_bmi", "model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_pedigree", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_sampleattributes", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_subjectconsent"], "model.ftd.eMERGEseq_ftd_study_principal_investigator": ["model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_sampleattributes", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_subjectconsent"], "model.ftd.eMERGEseq_ftd_file_external_id": ["model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_sampleattributes", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_subjectconsent"], "model.ftd.eMERGEseq_ftd_sample_storage_method": ["model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_sampleattributes", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_subjectconsent"], "model.ftd.eMERGEseq_ftd_subjectassertion_source_data": ["model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_sampleattributes", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_subjectconsent"], "model.ftd.eMERGEseq_ftd_sourcedata": ["model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_sampleattributes", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_subjectconsent"], "model.ftd.eMERGEseq_ftd_accesspolicy_access_policy_code": ["model.eMERGEseq.eMERGEseq_stg_subjectconsent"], "model.ftd.eMERGEseq_ftd_demographics_external_id": ["model.eMERGEseq.eMERGEseq_stg_demographics"], "model.ftd.eMERGEseq_ftd_familymember_external_id": ["model.eMERGEseq.eMERGEseq_stg_pedigree"], "model.ftd.eMERGEseq_ftd_accesspolicy": ["model.eMERGEseq.eMERGEseq_stg_subjectconsent"], "model.ftd.eMERGEseq_ftd_sample_processing": ["model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_sampleattributes", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_subjectconsent"], "model.ftd.eMERGEseq_ftd_familyrelationship": ["model.eMERGEseq.eMERGEseq_stg_pedigree", "model.eMERGEseq.eMERGEseq_stg_subjectconsent"], "model.ftd.eMERGEseq_ftd_study_external_id": ["model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_sampleattributes", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_subjectconsent"], "model.ftd.eMERGEseq_ftd_familyrelationship_external_id": ["model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_sampleattributes", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_subjectconsent"], "model.ftd.eMERGEseq_ftd_sample_external_id": ["model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping"], "model.ftd.eMERGEseq_ftd_family_family_relationships": ["model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_sampleattributes", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_subjectconsent"], "model.ftd.eMERGEseq_ftd_demographics_race": ["model.eMERGEseq.eMERGEseq_stg_demographics"], "model.ftd.eMERGEseq_ftd_familymember": ["model.eMERGEseq.eMERGEseq_stg_pedigree", "model.eMERGEseq.eMERGEseq_stg_subjectconsent"], "model.ftd.eMERGEseq_ftd_biospecimencollection": ["model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_sampleattributes", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_subjectconsent"], "model.ftd.eMERGEseq_ftd_demographics_source_data": ["model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_sampleattributes", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_subjectconsent"], "model.ftd.eMERGEseq_ftd_accesspolicy_data_access_type": ["model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_sampleattributes", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_subjectconsent"], "model.ftd.eMERGEseq_ftd_subject": ["model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_subjectconsent"], "model.ftd.eMERGEseq_ftd_aliquot_external_id": ["model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_sampleattributes", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_subjectconsent"], "model.ftd.eMERGEseq_ftd_sourcedata_external_id": ["model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_sampleattributes", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_subjectconsent"], "model.ftd.eMERGEseq_ftd_filemetadata_external_id": ["model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_sampleattributes", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_subjectconsent"], "model.ftd.eMERGEseq_ftd_accesscontrolledrecord_external_id": ["model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_sampleattributes", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_subjectconsent"], "model.ftd.eMERGEseq_ftd_accesspolicy_external_id": ["model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_sampleattributes", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_subjectconsent"], "model.ftd.eMERGEseq_ftd_thing_external_id": ["model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_sampleattributes", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_subjectconsent"], "model.ftd.eMERGEseq_ftd_datasource_external_id": ["model.eMERGEseq.eMERGEseq_stg_bmi", "model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_pedigree", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_sampleattributes", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_subjectconsent"], "model.ftd.eMERGEseq_ftd_file": ["model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_sampleattributes", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_subjectconsent"], "model.ftd.eMERGEseq_ftd_aliquot": ["model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_sampleattributes", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_subjectconsent"], "model.ftd.eMERGEseq_ftd_sourcedata_query_parameter": ["model.eMERGEseq.eMERGEseq_stg_bmi", "model.eMERGEseq.eMERGEseq_stg_demographics", "model.eMERGEseq.eMERGEseq_stg_pedigree", "model.eMERGEseq.eMERGEseq_stg_phecode", "model.eMERGEseq.eMERGEseq_stg_sampleattributes", "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping", "model.eMERGEseq.eMERGEseq_stg_subjectconsent"], "model.gregor_synthetic.gregor_synthetic_stg_participant": ["source.gregor_synthetic.gregor_synthetic.GREGoR_synthetic_participant_revised07Aug2024"], "model.gregor_synthetic.gregor_synthetic_stg_phenotype": ["source.gregor_synthetic.gregor_synthetic.GREGoR_synthetic_phenotype"], "model.eMERGEseq.eMERGEseq_stg_demographics": ["source.eMERGEseq.eMERGEseq.eMERGEseq_Demographics_DS_20200925"], "model.eMERGEseq.eMERGEseq_stg_sampleattributes": ["source.eMERGEseq.eMERGEseq.eMERGEseq_SampleAttributes_DS_20200925"], "model.eMERGEseq.eMERGEseq_stg_subjectconsent": ["source.eMERGEseq.eMERGEseq.eMERGEseq_SubjectConsent_DS_20201020"], "model.eMERGEseq.eMERGEseq_stg_phecode": ["source.eMERGEseq.eMERGEseq.eMERGEseq_Phecode_DS_20200925"], "model.eMERGEseq.eMERGEseq_stg_bmi": ["source.eMERGEseq.eMERGEseq.eMERGEseq_BMI_DS_20200925"], "model.eMERGEseq.eMERGEseq_stg_pedigree": ["source.eMERGEseq.eMERGEseq.eMERGEseq_Pedigree_DS_20200925"], "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping": ["source.eMERGEseq.eMERGEseq.eMERGEseq_SampleSubjectMapping_DS_20200925"], "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_subjectassertion_id.379ed8a4d1": ["model.ftd.GREGoR_R03_HMB_20250612_ftd_subjectassertion"], "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_subject_subject_type.e917fa8882": ["model.ftd.GREGoR_R03_HMB_20250612_ftd_subject"], "test.ftd.accepted_values_GREGoR_R03_HMB_20250612_ftd_subject_subject_type__participant__non_participant__cell_line__animal_model__group__other.299b107e1c": ["model.ftd.GREGoR_R03_HMB_20250612_ftd_subject"], "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_subject_id.e6565b9e79": ["model.ftd.GREGoR_R03_HMB_20250612_ftd_subject"], "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_familyrelationship_family_member.ccd8099a36": ["model.ftd.GREGoR_R03_HMB_20250612_ftd_familyrelationship"], "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_familyrelationship_other_family_member.fdfbcc65c5": ["model.ftd.GREGoR_R03_HMB_20250612_ftd_familyrelationship"], "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_familyrelationship_relationship_code.77cb743d53": ["model.ftd.GREGoR_R03_HMB_20250612_ftd_familyrelationship"], "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_familyrelationship_id.7973ae91d9": ["model.ftd.GREGoR_R03_HMB_20250612_ftd_familyrelationship"], "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_demographics_sex.00ee4a6dbb": ["model.ftd.GREGoR_R03_HMB_20250612_ftd_demographics"], "test.ftd.accepted_values_GREGoR_R03_HMB_20250612_ftd_demographics_sex__female__male__unknown__intersex.e929424ff9": ["model.ftd.GREGoR_R03_HMB_20250612_ftd_demographics"], "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_demographics_sex_display.58fa9056fb": ["model.ftd.GREGoR_R03_HMB_20250612_ftd_demographics"], "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_demographics_race_display.f403d1ff06": ["model.ftd.GREGoR_R03_HMB_20250612_ftd_demographics"], "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_demographics_ethnicity.f989c1888f": ["model.ftd.GREGoR_R03_HMB_20250612_ftd_demographics"], "test.ftd.accepted_values_GREGoR_R03_HMB_20250612_ftd_demographics_ethnicity__hispanic_or_latino__not_hispanic_or_latino__unknown__asked_but_unknown.697408c165": ["model.ftd.GREGoR_R03_HMB_20250612_ftd_demographics"], "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_demographics_ethnicity_display.b70c72fe87": ["model.ftd.GREGoR_R03_HMB_20250612_ftd_demographics"], "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_demographics_id.5cde4c1112": ["model.ftd.GREGoR_R03_HMB_20250612_ftd_demographics"], "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_accesspolicy_description.c8248b0467": ["model.ftd.GREGoR_R03_HMB_20250612_ftd_accesspolicy"], "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_accesspolicy_id.a681409108": ["model.ftd.GREGoR_R03_HMB_20250612_ftd_accesspolicy"], "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_study_study_title.a9c9843160": ["model.ftd.GREGoR_R03_HMB_20250612_ftd_study"], "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_study_id.ba8b37c0b4": ["model.ftd.GREGoR_R03_HMB_20250612_ftd_study"], "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_familymember_family_member.f24af3f62a": ["model.ftd.GREGoR_R03_HMB_20250612_ftd_familymember"], "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_familymember_id.e4ca78f1f6": ["model.ftd.GREGoR_R03_HMB_20250612_ftd_familymember"], "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_demographics_race_demographics_id.b864e26814": ["model.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_race"], "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_demographics_race_race.8241e83ef3": ["model.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_race"], "test.ftd.accepted_values_GREGoR_R03_HMB_20250612_ftd_demographics_race_race__american_indian_or_alaskan_native__asian__black_or_african_american__native_hawaiian_or_pacific_islander__white__other_race__unknown__asked_but_unknown.fb8d1626ca": ["model.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_race"], "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code_accesspolicy_id.06a4b2baac": ["model.ftd.GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code"], "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code_access_policy_code.8c07a541f9": ["model.ftd.GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code"], "test.ftd.accepted_values_GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code_access_policy_code__gru__hmb__ds__irb__pub__col__npu__mds__gso__gsr.e95af42347": ["model.ftd.GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code"], "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_subjectassertion_id.2c3b517da4": ["model.ftd.GREGoR_R03_GRU_20250612_ftd_subjectassertion"], "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_subject_subject_type.99880e3294": ["model.ftd.GREGoR_R03_GRU_20250612_ftd_subject"], "test.ftd.accepted_values_GREGoR_R03_GRU_20250612_ftd_subject_subject_type__participant__non_participant__cell_line__animal_model__group__other.27b11b5d03": ["model.ftd.GREGoR_R03_GRU_20250612_ftd_subject"], "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_subject_id.46fdb12cae": ["model.ftd.GREGoR_R03_GRU_20250612_ftd_subject"], "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_familyrelationship_family_member.b191d0d329": ["model.ftd.GREGoR_R03_GRU_20250612_ftd_familyrelationship"], "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_familyrelationship_other_family_member.ecc70eeb74": ["model.ftd.GREGoR_R03_GRU_20250612_ftd_familyrelationship"], "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_familyrelationship_relationship_code.84a248eda1": ["model.ftd.GREGoR_R03_GRU_20250612_ftd_familyrelationship"], "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_familyrelationship_id.24f7d5a6e0": ["model.ftd.GREGoR_R03_GRU_20250612_ftd_familyrelationship"], "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_demographics_sex.abf7feab1a": ["model.ftd.GREGoR_R03_GRU_20250612_ftd_demographics"], "test.ftd.accepted_values_GREGoR_R03_GRU_20250612_ftd_demographics_sex__female__male__unknown__intersex.86cbf8c35f": ["model.ftd.GREGoR_R03_GRU_20250612_ftd_demographics"], "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_demographics_sex_display.94dfa50305": ["model.ftd.GREGoR_R03_GRU_20250612_ftd_demographics"], "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_demographics_race_display.5754e0d75a": ["model.ftd.GREGoR_R03_GRU_20250612_ftd_demographics"], "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_demographics_ethnicity.60de0aa865": ["model.ftd.GREGoR_R03_GRU_20250612_ftd_demographics"], "test.ftd.accepted_values_GREGoR_R03_GRU_20250612_ftd_demographics_ethnicity__hispanic_or_latino__not_hispanic_or_latino__unknown__asked_but_unknown.ded60e9819": ["model.ftd.GREGoR_R03_GRU_20250612_ftd_demographics"], "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_demographics_ethnicity_display.4fc23334ce": ["model.ftd.GREGoR_R03_GRU_20250612_ftd_demographics"], "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_demographics_id.9176e5b77a": ["model.ftd.GREGoR_R03_GRU_20250612_ftd_demographics"], "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_accesspolicy_description.884ba1fa9d": ["model.ftd.GREGoR_R03_GRU_20250612_ftd_accesspolicy"], "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_accesspolicy_id.f90ad9a4e4": ["model.ftd.GREGoR_R03_GRU_20250612_ftd_accesspolicy"], "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_study_study_title.89114aac72": ["model.ftd.GREGoR_R03_GRU_20250612_ftd_study"], "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_study_id.d03639ac90": ["model.ftd.GREGoR_R03_GRU_20250612_ftd_study"], "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_familymember_family_member.bec516573c": ["model.ftd.GREGoR_R03_GRU_20250612_ftd_familymember"], "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_familymember_id.31d5e77f00": ["model.ftd.GREGoR_R03_GRU_20250612_ftd_familymember"], "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_demographics_race_demographics_id.4fba37007a": ["model.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_race"], "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_demographics_race_race.f66600d494": ["model.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_race"], "test.ftd.accepted_values_GREGoR_R03_GRU_20250612_ftd_demographics_race_race__american_indian_or_alaskan_native__asian__black_or_african_american__native_hawaiian_or_pacific_islander__white__other_race__unknown__asked_but_unknown.3ff8125da0": ["model.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_race"], "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code_accesspolicy_id.7aacfbdb22": ["model.ftd.GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code"], "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code_access_policy_code.726e37466c": ["model.ftd.GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code"], "test.ftd.accepted_values_GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code_access_policy_code__gru__hmb__ds__irb__pub__col__npu__mds__gso__gsr.5d7d564f71": ["model.ftd.GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code"], "test.ftd.not_null_cmg_bh_ftd_subject_external_id_subject_id.c3f7eeebb8": ["model.ftd.cmg_bh_ftd_subject_external_id"], "test.ftd.not_null_cmg_bh_ftd_file_sample_file_id.ff03de732b": ["model.ftd.cmg_bh_ftd_file_sample"], "test.ftd.not_null_cmg_bh_ftd_file_sample_sample_id.40d3fad81f": ["model.ftd.cmg_bh_ftd_file_sample"], "test.ftd.not_null_cmg_bh_ftd_filemetadata_id.a9d2052230": ["model.ftd.cmg_bh_ftd_filemetadata"], "test.ftd.not_null_cmg_bh_ftd_sample_external_id_sample_id.57a42a1c3d": ["model.ftd.cmg_bh_ftd_sample_external_id"], "test.ftd.not_null_cmg_bh_ftd_file_id.994ce4e741": ["model.ftd.cmg_bh_ftd_file"], "test.ftd.not_null_cmg_bh_ftd_familymember_family_member.25846a93af": ["model.ftd.cmg_bh_ftd_familymember"], "test.ftd.not_null_cmg_bh_ftd_familymember_id.7d17665875": ["model.ftd.cmg_bh_ftd_familymember"], "test.ftd.not_null_cmg_bh_ftd_subjectassertion_source_data_subjectassertion_id.fb88110502": ["model.ftd.cmg_bh_ftd_subjectassertion_source_data"], "test.ftd.not_null_cmg_bh_ftd_subjectassertion_source_data_source_data_id.8d1fc86b22": ["model.ftd.cmg_bh_ftd_subjectassertion_source_data"], "test.ftd.not_null_cmg_bh_ftd_study_external_id_study_id.c38497e719": ["model.ftd.cmg_bh_ftd_study_external_id"], "test.ftd.not_null_cmg_bh_ftd_sourcedata_external_id_sourcedata_id.3b1e11fa21": ["model.ftd.cmg_bh_ftd_sourcedata_external_id"], "test.ftd.not_null_cmg_bh_ftd_sample_storage_method_sample_id.b358a9fe79": ["model.ftd.cmg_bh_ftd_sample_storage_method"], "test.ftd.not_null_cmg_bh_ftd_biospecimencollection_external_id_biospecimencollection_id.355ab64d59": ["model.ftd.cmg_bh_ftd_biospecimencollection_external_id"], "test.ftd.not_null_cmg_bh_ftd_sample_processing_sample_id.0dbcfa96e2": ["model.ftd.cmg_bh_ftd_sample_processing"], "test.ftd.not_null_cmg_bh_ftd_subject_subject_type.2ffb1cf192": ["model.ftd.cmg_bh_ftd_subject"], "test.ftd.accepted_values_cmg_bh_ftd_subject_subject_type__participant__non_participant__cell_line__animal_model__group__other.496ad5f1a3": ["model.ftd.cmg_bh_ftd_subject"], "test.ftd.not_null_cmg_bh_ftd_subject_id.70bf7d76ff": ["model.ftd.cmg_bh_ftd_subject"], "test.ftd.not_null_cmg_bh_ftd_accesspolicy_description.2fcab360bf": ["model.ftd.cmg_bh_ftd_accesspolicy"], "test.ftd.not_null_cmg_bh_ftd_accesspolicy_id.37b43af455": ["model.ftd.cmg_bh_ftd_accesspolicy"], "test.ftd.not_null_cmg_bh_ftd_accesspolicy_data_access_type_accesspolicy_id.f856e1348f": ["model.ftd.cmg_bh_ftd_accesspolicy_data_access_type"], "test.ftd.not_null_cmg_bh_ftd_accesspolicy_data_access_type_data_access_type.daef374444": ["model.ftd.cmg_bh_ftd_accesspolicy_data_access_type"], "test.ftd.accepted_values_cmg_bh_ftd_accesspolicy_data_access_type_data_access_type__open__registered__controlled__gsr_restricted__gsr_allowed.752d3dfe87": ["model.ftd.cmg_bh_ftd_accesspolicy_data_access_type"], "test.ftd.not_null_cmg_bh_ftd_demographics_source_data_demographics_id.4fc19441ed": ["model.ftd.cmg_bh_ftd_demographics_source_data"], "test.ftd.not_null_cmg_bh_ftd_demographics_source_data_source_data_id.8618ec6934": ["model.ftd.cmg_bh_ftd_demographics_source_data"], "test.ftd.not_null_cmg_bh_ftd_sample_sample_type.27593ac975": ["model.ftd.cmg_bh_ftd_sample"], "test.ftd.accepted_values_cmg_bh_ftd_sample_availablity_status__available__unavailable.8de64ff6ae": ["model.ftd.cmg_bh_ftd_sample"], "test.ftd.not_null_cmg_bh_ftd_sample_id.337bf1c937": ["model.ftd.cmg_bh_ftd_sample"], "test.ftd.not_null_cmg_bh_ftd_familyrelationship_family_member.78cb793210": ["model.ftd.cmg_bh_ftd_familyrelationship"], "test.ftd.not_null_cmg_bh_ftd_familyrelationship_other_family_member.1f5245182f": ["model.ftd.cmg_bh_ftd_familyrelationship"], "test.ftd.not_null_cmg_bh_ftd_familyrelationship_relationship_code.f742ad5dc9": ["model.ftd.cmg_bh_ftd_familyrelationship"], "test.ftd.not_null_cmg_bh_ftd_familyrelationship_id.1f2dc9735e": ["model.ftd.cmg_bh_ftd_familyrelationship"], "test.ftd.not_null_cmg_bh_ftd_familymember_external_id_familymember_id.aad9421f88": ["model.ftd.cmg_bh_ftd_familymember_external_id"], "test.ftd.not_null_cmg_bh_ftd_family_family_relationships_family_id.98a4736bce": ["model.ftd.cmg_bh_ftd_family_family_relationships"], "test.ftd.not_null_cmg_bh_ftd_family_family_relationships_family_relationships_id.d0573bbee5": ["model.ftd.cmg_bh_ftd_family_family_relationships"], "test.ftd.not_null_cmg_bh_ftd_study_study_title.6ea8d071db": ["model.ftd.cmg_bh_ftd_study"], "test.ftd.not_null_cmg_bh_ftd_study_id.d0fcd7b4be": ["model.ftd.cmg_bh_ftd_study"], "test.ftd.not_null_cmg_bh_ftd_sourcedata_has_access_policy.fea82dd098": ["model.ftd.cmg_bh_ftd_sourcedata"], "test.ftd.not_null_cmg_bh_ftd_sourcedata_id.71529dd996": ["model.ftd.cmg_bh_ftd_sourcedata"], "test.ftd.not_null_cmg_bh_ftd_file_subject_file_id.9a8798f990": ["model.ftd.cmg_bh_ftd_file_subject"], "test.ftd.not_null_cmg_bh_ftd_file_subject_subject_id.94749261b4": ["model.ftd.cmg_bh_ftd_file_subject"], "test.ftd.not_null_cmg_bh_ftd_accesscontrolledrecord_has_access_policy.0bd719c157": ["model.ftd.cmg_bh_ftd_accesscontrolledrecord"], "test.ftd.not_null_cmg_bh_ftd_accesscontrolledrecord_id.ad62c67815": ["model.ftd.cmg_bh_ftd_accesscontrolledrecord"], "test.ftd.not_null_cmg_bh_ftd_demographics_race_demographics_id.9adec1b35e": ["model.ftd.cmg_bh_ftd_demographics_race"], "test.ftd.not_null_cmg_bh_ftd_demographics_race_race.3b8ae979d3": ["model.ftd.cmg_bh_ftd_demographics_race"], "test.ftd.accepted_values_cmg_bh_ftd_demographics_race_race__american_indian_or_alaskan_native__asian__black_or_african_american__native_hawaiian_or_pacific_islander__white__other_race__unknown__asked_but_unknown.546f884c8b": ["model.ftd.cmg_bh_ftd_demographics_race"], "test.ftd.not_null_cmg_bh_ftd_family_external_id_family_id.ca1501942f": ["model.ftd.cmg_bh_ftd_family_external_id"], "test.ftd.accepted_values_cmg_bh_ftd_demographics_date_of_birth_type__exact__year_only__shifted__decade_only__other.dce0947fe3": ["model.ftd.cmg_bh_ftd_demographics"], "test.ftd.not_null_cmg_bh_ftd_demographics_sex.abab379f38": ["model.ftd.cmg_bh_ftd_demographics"], "test.ftd.accepted_values_cmg_bh_ftd_demographics_sex__female__male__unknown__intersex.711185066b": ["model.ftd.cmg_bh_ftd_demographics"], "test.ftd.not_null_cmg_bh_ftd_demographics_sex_display.8aa7898da0": ["model.ftd.cmg_bh_ftd_demographics"], "test.ftd.not_null_cmg_bh_ftd_demographics_race_display.0547eb77d8": ["model.ftd.cmg_bh_ftd_demographics"], "test.ftd.not_null_cmg_bh_ftd_demographics_ethnicity.088a8c650f": ["model.ftd.cmg_bh_ftd_demographics"], "test.ftd.accepted_values_cmg_bh_ftd_demographics_ethnicity__hispanic_or_latino__not_hispanic_or_latino__unknown__asked_but_unknown.6f74d0b39b": ["model.ftd.cmg_bh_ftd_demographics"], "test.ftd.not_null_cmg_bh_ftd_demographics_ethnicity_display.4d203e924d": ["model.ftd.cmg_bh_ftd_demographics"], "test.ftd.not_null_cmg_bh_ftd_demographics_id.0043257405": ["model.ftd.cmg_bh_ftd_demographics"], "test.ftd.not_null_cmg_bh_ftd_subjectassertion_external_id_subjectassertion_id.f4100852a7": ["model.ftd.cmg_bh_ftd_subjectassertion_external_id"], "test.ftd.not_null_cmg_bh_ftd_study_principal_investigator_study_id.bbd4c7400e": ["model.ftd.cmg_bh_ftd_study_principal_investigator"], "test.ftd.not_null_cmg_bh_ftd_accesspolicy_external_id_accesspolicy_id.77c672ae6e": ["model.ftd.cmg_bh_ftd_accesspolicy_external_id"], "test.ftd.not_null_cmg_bh_ftd_filemetadata_external_id_filemetadata_id.52ac4227c7": ["model.ftd.cmg_bh_ftd_filemetadata_external_id"], "test.ftd.not_null_cmg_bh_ftd_familyrelationship_external_id_familyrelationship_id.ae12bde48f": ["model.ftd.cmg_bh_ftd_familyrelationship_external_id"], "test.ftd.not_null_cmg_bh_ftd_file_external_id_file_id.f1c19d8e1d": ["model.ftd.cmg_bh_ftd_file_external_id"], "test.ftd.not_null_cmg_bh_ftd_accesscontrolledrecord_external_id_accesscontrolledrecord_id.c934007037": ["model.ftd.cmg_bh_ftd_accesscontrolledrecord_external_id"], "test.ftd.not_null_cmg_bh_ftd_accesspolicy_access_policy_code_accesspolicy_id.03e151a874": ["model.ftd.cmg_bh_ftd_accesspolicy_access_policy_code"], "test.ftd.not_null_cmg_bh_ftd_accesspolicy_access_policy_code_access_policy_code.2437b083b0": ["model.ftd.cmg_bh_ftd_accesspolicy_access_policy_code"], "test.ftd.accepted_values_cmg_bh_ftd_accesspolicy_access_policy_code_access_policy_code__gru__hmb__ds__irb__pub__col__npu__mds__gso__gsr.0eae20d9c7": ["model.ftd.cmg_bh_ftd_accesspolicy_access_policy_code"], "test.ftd.not_null_cmg_bh_ftd_demographics_external_id_demographics_id.e258ff214c": ["model.ftd.cmg_bh_ftd_demographics_external_id"], "test.ftd.not_null_cmg_bh_ftd_aliquot_external_id_aliquot_id.99f903d593": ["model.ftd.cmg_bh_ftd_aliquot_external_id"], "test.ftd.accepted_values_cmg_bh_ftd_family_family_type__control_only__duo__proband_only__trio__trio_plus__other.0e3319ecb9": ["model.ftd.cmg_bh_ftd_family"], "test.ftd.accepted_values_cmg_bh_ftd_family_consanguinity__not_suspected__suspected__known_present__unknown.e6ab074c22": ["model.ftd.cmg_bh_ftd_family"], "test.ftd.not_null_cmg_bh_ftd_family_id.171d428fd1": ["model.ftd.cmg_bh_ftd_family"], "test.ftd.not_null_cmg_bh_ftd_study_funding_source_study_id.42d456a2d7": ["model.ftd.cmg_bh_ftd_study_funding_source"], "test.ftd.accepted_values_cmg_bh_ftd_aliquot_availablity_status__available__unavailable.622cd860b5": ["model.ftd.cmg_bh_ftd_aliquot"], "test.ftd.not_null_cmg_bh_ftd_aliquot_id.e2464dd2fe": ["model.ftd.cmg_bh_ftd_aliquot"], "test.ftd.not_null_cmg_bh_ftd_subjectassertion_id.13cdc81eb9": ["model.ftd.cmg_bh_ftd_subjectassertion"], "test.ftd.not_null_GWAS_ftd_sample_sample_type.ba5edecc46": ["model.ftd.GWAS_ftd_sample"], "test.ftd.accepted_values_GWAS_ftd_sample_availablity_status__available__unavailable.60e6fae4ba": ["model.ftd.GWAS_ftd_sample"], "test.ftd.not_null_GWAS_ftd_sample_id.f18de69e62": ["model.ftd.GWAS_ftd_sample"], "test.ftd.not_null_GWAS_ftd_demographics_source_data_demographics_id.0b26adbf81": ["model.ftd.GWAS_ftd_demographics_source_data"], "test.ftd.not_null_GWAS_ftd_demographics_source_data_source_data_id.0967578e69": ["model.ftd.GWAS_ftd_demographics_source_data"], "test.ftd.accepted_values_GWAS_ftd_family_family_type__control_only__duo__proband_only__trio__trio_plus__other.a35b15bf88": ["model.ftd.GWAS_ftd_family"], "test.ftd.accepted_values_GWAS_ftd_family_consanguinity__not_suspected__suspected__known_present__unknown.4b84efae32": ["model.ftd.GWAS_ftd_family"], "test.ftd.not_null_GWAS_ftd_family_id.170844bec6": ["model.ftd.GWAS_ftd_family"], "test.ftd.not_null_GWAS_ftd_accesscontrolledrecord_has_access_policy.2e0130413c": ["model.ftd.GWAS_ftd_accesscontrolledrecord"], "test.ftd.not_null_GWAS_ftd_accesscontrolledrecord_id.e26e3f9985": ["model.ftd.GWAS_ftd_accesscontrolledrecord"], "test.ftd.not_null_GWAS_ftd_biospecimencollection_external_id_biospecimencollection_id.711ee44c3f": ["model.ftd.GWAS_ftd_biospecimencollection_external_id"], "test.ftd.not_null_GWAS_ftd_subjectassertion_id.8d3cee52d4": ["model.ftd.GWAS_ftd_subjectassertion"], "test.ftd.not_null_GWAS_ftd_accesspolicy_description.662fc95fb3": ["model.ftd.GWAS_ftd_accesspolicy"], "test.ftd.not_null_GWAS_ftd_accesspolicy_id.9bb01229e6": ["model.ftd.GWAS_ftd_accesspolicy"], "test.ftd.not_null_GWAS_ftd_filemetadata_id.00cf19eaee": ["model.ftd.GWAS_ftd_filemetadata"], "test.ftd.not_null_GWAS_ftd_file_id.f7cd047ccc": ["model.ftd.GWAS_ftd_file"], "test.ftd.not_null_GWAS_ftd_sample_processing_sample_id.d52e81cf7a": ["model.ftd.GWAS_ftd_sample_processing"], "test.ftd.not_null_GWAS_ftd_file_sample_file_id.8f617f22f9": ["model.ftd.GWAS_ftd_file_sample"], "test.ftd.not_null_GWAS_ftd_file_sample_sample_id.5d2c3e7dea": ["model.ftd.GWAS_ftd_file_sample"], "test.ftd.not_null_GWAS_ftd_filemetadata_external_id_filemetadata_id.e06fd398b3": ["model.ftd.GWAS_ftd_filemetadata_external_id"], "test.ftd.not_null_GWAS_ftd_subject_subject_type.9afb6ee858": ["model.ftd.GWAS_ftd_subject"], "test.ftd.accepted_values_GWAS_ftd_subject_subject_type__participant__non_participant__cell_line__animal_model__group__other.f1e7b6e71f": ["model.ftd.GWAS_ftd_subject"], "test.ftd.not_null_GWAS_ftd_subject_id.9adf5ae8d2": ["model.ftd.GWAS_ftd_subject"], "test.ftd.not_null_GWAS_ftd_sample_storage_method_sample_id.95b7b1f3bd": ["model.ftd.GWAS_ftd_sample_storage_method"], "test.ftd.not_null_GWAS_ftd_sample_external_id_sample_id.83c9e81cf6": ["model.ftd.GWAS_ftd_sample_external_id"], "test.ftd.not_null_GWAS_ftd_familyrelationship_external_id_familyrelationship_id.e420c7d651": ["model.ftd.GWAS_ftd_familyrelationship_external_id"], "test.ftd.not_null_GWAS_ftd_family_family_relationships_family_id.8979eb8427": ["model.ftd.GWAS_ftd_family_family_relationships"], "test.ftd.not_null_GWAS_ftd_family_family_relationships_family_relationships_id.79d5ee7ab6": ["model.ftd.GWAS_ftd_family_family_relationships"], "test.ftd.not_null_GWAS_ftd_demographics_race_demographics_id.b4b0df45f7": ["model.ftd.GWAS_ftd_demographics_race"], "test.ftd.not_null_GWAS_ftd_demographics_race_race.b130263e3f": ["model.ftd.GWAS_ftd_demographics_race"], "test.ftd.accepted_values_GWAS_ftd_demographics_race_race__american_indian_or_alaskan_native__asian__black_or_african_american__native_hawaiian_or_pacific_islander__white__other_race__unknown__asked_but_unknown.0e228bb450": ["model.ftd.GWAS_ftd_demographics_race"], "test.ftd.not_null_GWAS_ftd_study_funding_source_study_id.1e79baded2": ["model.ftd.GWAS_ftd_study_funding_source"], "test.ftd.not_null_GWAS_ftd_family_external_id_family_id.f629bd708e": ["model.ftd.GWAS_ftd_family_external_id"], "test.ftd.not_null_GWAS_ftd_accesspolicy_external_id_accesspolicy_id.66d916c183": ["model.ftd.GWAS_ftd_accesspolicy_external_id"], "test.ftd.accepted_values_GWAS_ftd_aliquot_availablity_status__available__unavailable.240771e83f": ["model.ftd.GWAS_ftd_aliquot"], "test.ftd.not_null_GWAS_ftd_aliquot_id.8a637e633a": ["model.ftd.GWAS_ftd_aliquot"], "test.ftd.accepted_values_GWAS_ftd_demographics_date_of_birth_type__exact__year_only__shifted__decade_only__other.c780486020": ["model.ftd.GWAS_ftd_demographics"], "test.ftd.not_null_GWAS_ftd_demographics_sex.6450872514": ["model.ftd.GWAS_ftd_demographics"], "test.ftd.accepted_values_GWAS_ftd_demographics_sex__female__male__unknown__intersex.97c0c3d4d9": ["model.ftd.GWAS_ftd_demographics"], "test.ftd.not_null_GWAS_ftd_demographics_sex_display.2013c97889": ["model.ftd.GWAS_ftd_demographics"], "test.ftd.not_null_GWAS_ftd_demographics_race_display.6337436a53": ["model.ftd.GWAS_ftd_demographics"], "test.ftd.not_null_GWAS_ftd_demographics_ethnicity.09313b1836": ["model.ftd.GWAS_ftd_demographics"], "test.ftd.accepted_values_GWAS_ftd_demographics_ethnicity__hispanic_or_latino__not_hispanic_or_latino__unknown__asked_but_unknown.12ce6844a3": ["model.ftd.GWAS_ftd_demographics"], "test.ftd.not_null_GWAS_ftd_demographics_ethnicity_display.ed2f6f4c89": ["model.ftd.GWAS_ftd_demographics"], "test.ftd.not_null_GWAS_ftd_demographics_id.71113fb2d0": ["model.ftd.GWAS_ftd_demographics"], "test.ftd.not_null_GWAS_ftd_familymember_external_id_familymember_id.36bf6e25fe": ["model.ftd.GWAS_ftd_familymember_external_id"], "test.ftd.not_null_GWAS_ftd_accesspolicy_access_policy_code_accesspolicy_id.22c45ebd4d": ["model.ftd.GWAS_ftd_accesspolicy_access_policy_code"], "test.ftd.not_null_GWAS_ftd_accesspolicy_access_policy_code_access_policy_code.ff6f3fd972": ["model.ftd.GWAS_ftd_accesspolicy_access_policy_code"], "test.ftd.accepted_values_GWAS_ftd_accesspolicy_access_policy_code_access_policy_code__gru__hmb__ds__irb__pub__col__npu__mds__gso__gsr.3dbd2a1e67": ["model.ftd.GWAS_ftd_accesspolicy_access_policy_code"], "test.ftd.not_null_GWAS_ftd_study_study_title.2122518e64": ["model.ftd.GWAS_ftd_study"], "test.ftd.not_null_GWAS_ftd_study_id.2622162919": ["model.ftd.GWAS_ftd_study"], "test.ftd.not_null_GWAS_ftd_subjectassertion_external_id_subjectassertion_id.c1eeade9b3": ["model.ftd.GWAS_ftd_subjectassertion_external_id"], "test.ftd.not_null_GWAS_ftd_familyrelationship_family_member.35695b16f5": ["model.ftd.GWAS_ftd_familyrelationship"], "test.ftd.not_null_GWAS_ftd_familyrelationship_other_family_member.22fdcbb16d": ["model.ftd.GWAS_ftd_familyrelationship"], "test.ftd.not_null_GWAS_ftd_familyrelationship_relationship_code.1876cbd3ad": ["model.ftd.GWAS_ftd_familyrelationship"], "test.ftd.not_null_GWAS_ftd_familyrelationship_id.7ae427e5ce": ["model.ftd.GWAS_ftd_familyrelationship"], "test.ftd.not_null_GWAS_ftd_aliquot_external_id_aliquot_id.48052f5b7c": ["model.ftd.GWAS_ftd_aliquot_external_id"], "test.ftd.not_null_GWAS_ftd_familymember_family_member.518d9a9a67": ["model.ftd.GWAS_ftd_familymember"], "test.ftd.not_null_GWAS_ftd_familymember_id.8ab5f592ad": ["model.ftd.GWAS_ftd_familymember"], "test.ftd.not_null_GWAS_ftd_subject_external_id_subject_id.13ed703c6a": ["model.ftd.GWAS_ftd_subject_external_id"], "test.ftd.not_null_GWAS_ftd_file_external_id_file_id.1cee360518": ["model.ftd.GWAS_ftd_file_external_id"], "test.ftd.not_null_GWAS_ftd_demographics_external_id_demographics_id.b047347377": ["model.ftd.GWAS_ftd_demographics_external_id"], "test.ftd.not_null_GWAS_ftd_subjectassertion_source_data_subjectassertion_id.4e740389ab": ["model.ftd.GWAS_ftd_subjectassertion_source_data"], "test.ftd.not_null_GWAS_ftd_subjectassertion_source_data_source_data_id.58cc3887bd": ["model.ftd.GWAS_ftd_subjectassertion_source_data"], "test.ftd.not_null_GWAS_ftd_file_subject_file_id.6e2e48dc3c": ["model.ftd.GWAS_ftd_file_subject"], "test.ftd.not_null_GWAS_ftd_file_subject_subject_id.ac2813176b": ["model.ftd.GWAS_ftd_file_subject"], "test.ftd.not_null_GWAS_ftd_accesspolicy_data_access_type_accesspolicy_id.6c099412bd": ["model.ftd.GWAS_ftd_accesspolicy_data_access_type"], "test.ftd.not_null_GWAS_ftd_accesspolicy_data_access_type_data_access_type.290b7db882": ["model.ftd.GWAS_ftd_accesspolicy_data_access_type"], "test.ftd.accepted_values_GWAS_ftd_accesspolicy_data_access_type_data_access_type__open__registered__controlled__gsr_restricted__gsr_allowed.5ea1731895": ["model.ftd.GWAS_ftd_accesspolicy_data_access_type"], "test.ftd.not_null_GWAS_ftd_accesscontrolledrecord_external_id_accesscontrolledrecord_id.87088acdd6": ["model.ftd.GWAS_ftd_accesscontrolledrecord_external_id"], "test.ftd.not_null_GWAS_ftd_sourcedata_has_access_policy.95bf38120e": ["model.ftd.GWAS_ftd_sourcedata"], "test.ftd.not_null_GWAS_ftd_sourcedata_id.37521e6812": ["model.ftd.GWAS_ftd_sourcedata"], "test.ftd.not_null_GWAS_ftd_sourcedata_external_id_sourcedata_id.1af559b571": ["model.ftd.GWAS_ftd_sourcedata_external_id"], "test.ftd.not_null_GWAS_ftd_study_principal_investigator_study_id.1adcffcfec": ["model.ftd.GWAS_ftd_study_principal_investigator"], "test.ftd.not_null_GWAS_ftd_study_external_id_study_id.7335490492": ["model.ftd.GWAS_ftd_study_external_id"], "test.ftd.not_null_gregor_synthetic_ftd_familyrelationship_family_member.3bc97b392a": ["model.ftd.gregor_synthetic_ftd_familyrelationship"], "test.ftd.not_null_gregor_synthetic_ftd_familyrelationship_other_family_member.26151a74f8": ["model.ftd.gregor_synthetic_ftd_familyrelationship"], "test.ftd.not_null_gregor_synthetic_ftd_familyrelationship_relationship_code.0e3f4707af": ["model.ftd.gregor_synthetic_ftd_familyrelationship"], "test.ftd.not_null_gregor_synthetic_ftd_familyrelationship_id.5fb3043b5a": ["model.ftd.gregor_synthetic_ftd_familyrelationship"], "test.ftd.not_null_gregor_synthetic_ftd_subject_subject_type.d3528733f1": ["model.ftd.gregor_synthetic_ftd_subject"], "test.ftd.accepted_values_gregor_synthetic_ftd_subject_subject_type__participant__non_participant__cell_line__animal_model__group__other.d07b3549ca": ["model.ftd.gregor_synthetic_ftd_subject"], "test.ftd.not_null_gregor_synthetic_ftd_subject_id.912db9b8aa": ["model.ftd.gregor_synthetic_ftd_subject"], "test.ftd.not_null_gregor_synthetic_ftd_demographics_race_demographics_id.9557406221": ["model.ftd.gregor_synthetic_ftd_demographics_race"], "test.ftd.not_null_gregor_synthetic_ftd_demographics_race_race.a6dc4eefb1": ["model.ftd.gregor_synthetic_ftd_demographics_race"], "test.ftd.accepted_values_gregor_synthetic_ftd_demographics_race_race__american_indian_or_alaskan_native__asian__black_or_african_american__native_hawaiian_or_pacific_islander__white__other_race__unknown__asked_but_unknown.298b671dbd": ["model.ftd.gregor_synthetic_ftd_demographics_race"], "test.ftd.not_null_gregor_synthetic_ftd_accesspolicy_access_policy_code_accesspolicy_id.e09c1fc820": ["model.ftd.gregor_synthetic_ftd_accesspolicy_access_policy_code"], "test.ftd.not_null_gregor_synthetic_ftd_accesspolicy_access_policy_code_access_policy_code.b33aeb2f05": ["model.ftd.gregor_synthetic_ftd_accesspolicy_access_policy_code"], "test.ftd.accepted_values_gregor_synthetic_ftd_accesspolicy_access_policy_code_access_policy_code__gru__hmb__ds__irb__pub__col__npu__mds__gso__gsr.3264af3d7d": ["model.ftd.gregor_synthetic_ftd_accesspolicy_access_policy_code"], "test.ftd.not_null_gregor_synthetic_ftd_demographics_sex.6a57903a47": ["model.ftd.gregor_synthetic_ftd_demographics"], "test.ftd.accepted_values_gregor_synthetic_ftd_demographics_sex__female__male__unknown__intersex.2ca432fb0a": ["model.ftd.gregor_synthetic_ftd_demographics"], "test.ftd.not_null_gregor_synthetic_ftd_demographics_sex_display.d995333553": ["model.ftd.gregor_synthetic_ftd_demographics"], "test.ftd.not_null_gregor_synthetic_ftd_demographics_race_display.330040d994": ["model.ftd.gregor_synthetic_ftd_demographics"], "test.ftd.not_null_gregor_synthetic_ftd_demographics_ethnicity.de41fba281": ["model.ftd.gregor_synthetic_ftd_demographics"], "test.ftd.accepted_values_gregor_synthetic_ftd_demographics_ethnicity__hispanic_or_latino__not_hispanic_or_latino__unknown__asked_but_unknown.7fb426336d": ["model.ftd.gregor_synthetic_ftd_demographics"], "test.ftd.not_null_gregor_synthetic_ftd_demographics_ethnicity_display.3541da5b62": ["model.ftd.gregor_synthetic_ftd_demographics"], "test.ftd.not_null_gregor_synthetic_ftd_demographics_id.f76247f12d": ["model.ftd.gregor_synthetic_ftd_demographics"], "test.ftd.not_null_gregor_synthetic_ftd_subjectassertion_id.0eb5e4594a": ["model.ftd.gregor_synthetic_ftd_subjectassertion"], "test.ftd.not_null_gregor_synthetic_ftd_accesspolicy_description.d59f1c94d4": ["model.ftd.gregor_synthetic_ftd_accesspolicy"], "test.ftd.not_null_gregor_synthetic_ftd_accesspolicy_id.1bc2aee0e5": ["model.ftd.gregor_synthetic_ftd_accesspolicy"], "test.ftd.not_null_gregor_synthetic_ftd_familymember_family_member.93e3a6234f": ["model.ftd.gregor_synthetic_ftd_familymember"], "test.ftd.not_null_gregor_synthetic_ftd_familymember_id.78a55538e4": ["model.ftd.gregor_synthetic_ftd_familymember"], "test.ftd.not_null_eMERGEseq_ftd_sample_sample_type.9cef01bfcb": ["model.ftd.eMERGEseq_ftd_sample"], "test.ftd.not_null_eMERGEseq_ftd_sample_id.b49a2bea2f": ["model.ftd.eMERGEseq_ftd_sample"], "test.ftd.not_null_eMERGEseq_ftd_subjectassertion_id.1a7afe0878": ["model.ftd.eMERGEseq_ftd_subjectassertion"], "test.ftd.not_null_eMERGEseq_ftd_accesspolicy_description.afa1581812": ["model.ftd.eMERGEseq_ftd_accesspolicy"], "test.ftd.not_null_eMERGEseq_ftd_accesspolicy_id.434dc2d565": ["model.ftd.eMERGEseq_ftd_accesspolicy"], "test.ftd.not_null_eMERGEseq_ftd_subject_subject_type.a7edad184a": ["model.ftd.eMERGEseq_ftd_subject"], "test.ftd.accepted_values_eMERGEseq_ftd_subject_subject_type__participant__non_participant__cell_line__animal_model__group__other.b1b5b5d5bf": ["model.ftd.eMERGEseq_ftd_subject"], "test.ftd.not_null_eMERGEseq_ftd_subject_id.57198c89b1": ["model.ftd.eMERGEseq_ftd_subject"], "test.ftd.not_null_eMERGEseq_ftd_demographics_race_demographics_id.48d1d5797c": ["model.ftd.eMERGEseq_ftd_demographics_race"], "test.ftd.not_null_eMERGEseq_ftd_demographics_race_race.a6f363d7df": ["model.ftd.eMERGEseq_ftd_demographics_race"], "test.ftd.accepted_values_eMERGEseq_ftd_demographics_race_race__american_indian_or_alaskan_native__asian__black_or_african_american__native_hawaiian_or_pacific_islander__white__other_race__unknown__asked_but_unknown.115877dcc2": ["model.ftd.eMERGEseq_ftd_demographics_race"], "test.ftd.not_null_eMERGEseq_ftd_demographics_sex.00a71bdb6f": ["model.ftd.eMERGEseq_ftd_demographics"], "test.ftd.accepted_values_eMERGEseq_ftd_demographics_sex__female__male__unknown__intersex.8404a8d8f7": ["model.ftd.eMERGEseq_ftd_demographics"], "test.ftd.not_null_eMERGEseq_ftd_demographics_sex_display.850a17a02c": ["model.ftd.eMERGEseq_ftd_demographics"], "test.ftd.not_null_eMERGEseq_ftd_demographics_race_display.1eb46b5734": ["model.ftd.eMERGEseq_ftd_demographics"], "test.ftd.not_null_eMERGEseq_ftd_demographics_ethnicity.d54b112b05": ["model.ftd.eMERGEseq_ftd_demographics"], "test.ftd.accepted_values_eMERGEseq_ftd_demographics_ethnicity__hispanic_or_latino__not_hispanic_or_latino__unknown__asked_but_unknown.dd3e975827": ["model.ftd.eMERGEseq_ftd_demographics"], "test.ftd.not_null_eMERGEseq_ftd_demographics_ethnicity_display.9ffec6a3a3": ["model.ftd.eMERGEseq_ftd_demographics"], "test.ftd.not_null_eMERGEseq_ftd_demographics_id.a486d2592b": ["model.ftd.eMERGEseq_ftd_demographics"], "test.ftd.not_null_eMERGEseq_ftd_accesspolicy_access_policy_code_accesspolicy_id.feeb0849ac": ["model.ftd.eMERGEseq_ftd_accesspolicy_access_policy_code"], "test.ftd.not_null_eMERGEseq_ftd_accesspolicy_access_policy_code_access_policy_code.fe962d3ccf": ["model.ftd.eMERGEseq_ftd_accesspolicy_access_policy_code"], "test.ftd.accepted_values_eMERGEseq_ftd_accesspolicy_access_policy_code_access_policy_code__gru__hmb__ds__irb__pub__col__npu__mds__gso__gsr.ea570f7beb": ["model.ftd.eMERGEseq_ftd_accesspolicy_access_policy_code"], "test.ftd.not_null_eMERGEseq_ftd_familyrelationship_family_member.c82a948a1d": ["model.ftd.eMERGEseq_ftd_familyrelationship"], "test.ftd.not_null_eMERGEseq_ftd_familyrelationship_other_family_member.d11c1f9823": ["model.ftd.eMERGEseq_ftd_familyrelationship"], "test.ftd.not_null_eMERGEseq_ftd_familyrelationship_relationship_code.b64265b2b7": ["model.ftd.eMERGEseq_ftd_familyrelationship"], "test.ftd.not_null_eMERGEseq_ftd_familyrelationship_id.76e0c8aa11": ["model.ftd.eMERGEseq_ftd_familyrelationship"], "test.ftd.not_null_eMERGEseq_ftd_familymember_family_member.d920988b9c": ["model.ftd.eMERGEseq_ftd_familymember"], "test.ftd.not_null_eMERGEseq_ftd_familymember_id.f354eac9f2": ["model.ftd.eMERGEseq_ftd_familymember"], "source.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_participant": [], "source.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_phenotype": [], "source.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_experiment": [], "source.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_anvil_project": [], "source.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_participant": [], "source.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_phenotype": [], "source.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_experiment": [], "source.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_anvil_project": [], "source.cmg_bh.cmg_bh.sample": [], "source.cmg_bh.cmg_bh.subject": [], "source.GWAS.GWAS.GWAS_BMI_DS_20201028": [], "source.GWAS.GWAS.GWAS_Demographics_DS_20201109": [], "source.GWAS.GWAS.GWAS_Pedigree_DS_20200512": [], "source.GWAS.GWAS.GWAS_Phecode_DS_20201027": [], "source.GWAS.GWAS.GWAS_SampleAttributes_DS_20201027": [], "source.GWAS.GWAS.GWAS_SampleSubjectMapping_DS_20201027": [], "source.GWAS.GWAS.GWAS_SubjectConsent_DS_20190813": [], "source.gregor_synthetic.gregor_synthetic.GREGoR_synthetic_participant_revised07Aug2024": [], "source.gregor_synthetic.gregor_synthetic.GREGoR_synthetic_phenotype": [], "source.eMERGEseq.eMERGEseq.eMERGEseq_Demographics_DS_20200925": [], "source.eMERGEseq.eMERGEseq.eMERGEseq_Phecode_DS_20200925": [], "source.eMERGEseq.eMERGEseq.eMERGEseq_SampleAttributes_DS_20200925": [], "source.eMERGEseq.eMERGEseq.eMERGEseq_SampleSubjectMapping_DS_20200925": [], "source.eMERGEseq.eMERGEseq.eMERGEseq_SubjectConsent_DS_20201020": [], "source.eMERGEseq.eMERGEseq.eMERGEseq_BMI_DS_20200925": [], "source.eMERGEseq.eMERGEseq.eMERGEseq_Pedigree_DS_20200925": []}, "child_map": {"seed.base.phecode_seed": ["model.ftd.eMERGEseq_ftd_subjectassertion", "model.ftd.eMERGEseq_ftd_subjectassertion_external_id"], "seed.base.consent_codes": [], "seed.base.fm_family_role": [], "seed.base.fr_relationship_code": [], "seed.base.cmg_bh_annotations_code": ["model.ftd.cmg_bh_ftd_subjectassertion", "model.ftd.cmg_bh_ftd_subjectassertion_external_id"], "seed.base.subject_mappings": ["model.ftd.cmg_bh_ftd_subjectassertion", "model.ftd.cmg_bh_ftd_subjectassertion_external_id"], "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_experiment": ["model.ftd.GREGoR_R03_HMB_20250612_ftd_subject"], "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant": ["model.ftd.GREGoR_R03_HMB_20250612_ftd_accesscontrolledrecord", "model.ftd.GREGoR_R03_HMB_20250612_ftd_accesscontrolledrecord_external_id", "model.ftd.GREGoR_R03_HMB_20250612_ftd_accesspolicy", "model.ftd.GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code", "model.ftd.GREGoR_R03_HMB_20250612_ftd_accesspolicy_data_access_type", "model.ftd.GREGoR_R03_HMB_20250612_ftd_accesspolicy_external_id", "model.ftd.GREGoR_R03_HMB_20250612_ftd_aliquot", "model.ftd.GREGoR_R03_HMB_20250612_ftd_aliquot_external_id", "model.ftd.GREGoR_R03_HMB_20250612_ftd_biospecimencollection", "model.ftd.GREGoR_R03_HMB_20250612_ftd_biospecimencollection_external_id", "model.ftd.GREGoR_R03_HMB_20250612_ftd_demographics", "model.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_external_id", "model.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_race", "model.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_source_data", "model.ftd.GREGoR_R03_HMB_20250612_ftd_family", "model.ftd.GREGoR_R03_HMB_20250612_ftd_family_external_id", "model.ftd.GREGoR_R03_HMB_20250612_ftd_family_family_relationships", "model.ftd.GREGoR_R03_HMB_20250612_ftd_familymember", "model.ftd.GREGoR_R03_HMB_20250612_ftd_familymember_external_id", "model.ftd.GREGoR_R03_HMB_20250612_ftd_familyrelationship", "model.ftd.GREGoR_R03_HMB_20250612_ftd_familyrelationship_external_id", "model.ftd.GREGoR_R03_HMB_20250612_ftd_file", "model.ftd.GREGoR_R03_HMB_20250612_ftd_file_external_id", "model.ftd.GREGoR_R03_HMB_20250612_ftd_file_sample", "model.ftd.GREGoR_R03_HMB_20250612_ftd_file_subject", "model.ftd.GREGoR_R03_HMB_20250612_ftd_filemetadata", "model.ftd.GREGoR_R03_HMB_20250612_ftd_filemetadata_external_id", "model.ftd.GREGoR_R03_HMB_20250612_ftd_sample", "model.ftd.GREGoR_R03_HMB_20250612_ftd_sample_external_id", "model.ftd.GREGoR_R03_HMB_20250612_ftd_sample_processing", "model.ftd.GREGoR_R03_HMB_20250612_ftd_sample_storage_method", "model.ftd.GREGoR_R03_HMB_20250612_ftd_sourcedata", "model.ftd.GREGoR_R03_HMB_20250612_ftd_sourcedata_external_id", "model.ftd.GREGoR_R03_HMB_20250612_ftd_study_external_study_id", "model.ftd.GREGoR_R03_HMB_20250612_ftd_study_funding_source", "model.ftd.GREGoR_R03_HMB_20250612_ftd_study_principal_investigator", "model.ftd.GREGoR_R03_HMB_20250612_ftd_subject", "model.ftd.GREGoR_R03_HMB_20250612_ftd_subject_external_id", "model.ftd.GREGoR_R03_HMB_20250612_ftd_subjectassertion", "model.ftd.GREGoR_R03_HMB_20250612_ftd_subjectassertion_external_id", "model.ftd.GREGoR_R03_HMB_20250612_ftd_subjectassertion_source_data", "model.ftd.GREGoR_R03_HMB_20250612_ftd_thing_external_id"], "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype": ["model.ftd.GREGoR_R03_HMB_20250612_ftd_accesscontrolledrecord", "model.ftd.GREGoR_R03_HMB_20250612_ftd_accesscontrolledrecord_external_id", "model.ftd.GREGoR_R03_HMB_20250612_ftd_accesspolicy_data_access_type", "model.ftd.GREGoR_R03_HMB_20250612_ftd_accesspolicy_external_id", "model.ftd.GREGoR_R03_HMB_20250612_ftd_aliquot", "model.ftd.GREGoR_R03_HMB_20250612_ftd_aliquot_external_id", "model.ftd.GREGoR_R03_HMB_20250612_ftd_biospecimencollection", "model.ftd.GREGoR_R03_HMB_20250612_ftd_biospecimencollection_external_id", "model.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_external_id", "model.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_source_data", "model.ftd.GREGoR_R03_HMB_20250612_ftd_family", "model.ftd.GREGoR_R03_HMB_20250612_ftd_family_external_id", "model.ftd.GREGoR_R03_HMB_20250612_ftd_family_family_relationships", "model.ftd.GREGoR_R03_HMB_20250612_ftd_familyrelationship_external_id", "model.ftd.GREGoR_R03_HMB_20250612_ftd_file", "model.ftd.GREGoR_R03_HMB_20250612_ftd_file_external_id", "model.ftd.GREGoR_R03_HMB_20250612_ftd_file_sample", "model.ftd.GREGoR_R03_HMB_20250612_ftd_file_subject", "model.ftd.GREGoR_R03_HMB_20250612_ftd_filemetadata", "model.ftd.GREGoR_R03_HMB_20250612_ftd_filemetadata_external_id", "model.ftd.GREGoR_R03_HMB_20250612_ftd_sample", "model.ftd.GREGoR_R03_HMB_20250612_ftd_sample_external_id", "model.ftd.GREGoR_R03_HMB_20250612_ftd_sample_processing", "model.ftd.GREGoR_R03_HMB_20250612_ftd_sample_storage_method", "model.ftd.GREGoR_R03_HMB_20250612_ftd_sourcedata", "model.ftd.GREGoR_R03_HMB_20250612_ftd_sourcedata_external_id", "model.ftd.GREGoR_R03_HMB_20250612_ftd_study_external_study_id", "model.ftd.GREGoR_R03_HMB_20250612_ftd_study_funding_source", "model.ftd.GREGoR_R03_HMB_20250612_ftd_study_principal_investigator", "model.ftd.GREGoR_R03_HMB_20250612_ftd_subjectassertion", "model.ftd.GREGoR_R03_HMB_20250612_ftd_subjectassertion_external_id", "model.ftd.GREGoR_R03_HMB_20250612_ftd_subjectassertion_source_data", "model.ftd.GREGoR_R03_HMB_20250612_ftd_thing_external_id"], "model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_anvil_project": ["model.ftd.GREGoR_R03_HMB_20250612_ftd_study", "model.ftd.GREGoR_R03_HMB_20250612_ftd_study_external_id"], "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_experiment": ["model.ftd.GREGoR_R03_GRU_20250612_ftd_datasource", "model.ftd.GREGoR_R03_GRU_20250612_ftd_datasource_external_id", "model.ftd.GREGoR_R03_GRU_20250612_ftd_sourcedata_query_parameter", "model.ftd.GREGoR_R03_GRU_20250612_ftd_subject", "model.ftd.gregor_synthetic_ftd_file_subject"], "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant": ["model.ftd.GREGoR_R03_GRU_20250612_ftd_accesscontrolledrecord", "model.ftd.GREGoR_R03_GRU_20250612_ftd_accesscontrolledrecord_external_id", "model.ftd.GREGoR_R03_GRU_20250612_ftd_accesspolicy", "model.ftd.GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code", "model.ftd.GREGoR_R03_GRU_20250612_ftd_accesspolicy_data_access_type", "model.ftd.GREGoR_R03_GRU_20250612_ftd_accesspolicy_external_id", "model.ftd.GREGoR_R03_GRU_20250612_ftd_aliquot", "model.ftd.GREGoR_R03_GRU_20250612_ftd_aliquot_external_id", "model.ftd.GREGoR_R03_GRU_20250612_ftd_biospecimencollection", "model.ftd.GREGoR_R03_GRU_20250612_ftd_biospecimencollection_external_id", "model.ftd.GREGoR_R03_GRU_20250612_ftd_datasource", "model.ftd.GREGoR_R03_GRU_20250612_ftd_datasource_external_id", "model.ftd.GREGoR_R03_GRU_20250612_ftd_demographics", "model.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_external_id", "model.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_race", "model.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_source_data", "model.ftd.GREGoR_R03_GRU_20250612_ftd_family", "model.ftd.GREGoR_R03_GRU_20250612_ftd_family_external_id", "model.ftd.GREGoR_R03_GRU_20250612_ftd_family_family_relationships", "model.ftd.GREGoR_R03_GRU_20250612_ftd_familymember", "model.ftd.GREGoR_R03_GRU_20250612_ftd_familymember_external_id", "model.ftd.GREGoR_R03_GRU_20250612_ftd_familyrelationship", "model.ftd.GREGoR_R03_GRU_20250612_ftd_familyrelationship_external_id", "model.ftd.GREGoR_R03_GRU_20250612_ftd_file", "model.ftd.GREGoR_R03_GRU_20250612_ftd_file_external_id", "model.ftd.GREGoR_R03_GRU_20250612_ftd_file_sample", "model.ftd.GREGoR_R03_GRU_20250612_ftd_file_subject", "model.ftd.GREGoR_R03_GRU_20250612_ftd_filemetadata", "model.ftd.GREGoR_R03_GRU_20250612_ftd_filemetadata_external_id", "model.ftd.GREGoR_R03_GRU_20250612_ftd_sample", "model.ftd.GREGoR_R03_GRU_20250612_ftd_sample_external_id", "model.ftd.GREGoR_R03_GRU_20250612_ftd_sample_processing", "model.ftd.GREGoR_R03_GRU_20250612_ftd_sample_storage_method", "model.ftd.GREGoR_R03_GRU_20250612_ftd_sourcedata", "model.ftd.GREGoR_R03_GRU_20250612_ftd_sourcedata_external_id", "model.ftd.GREGoR_R03_GRU_20250612_ftd_sourcedata_query_parameter", "model.ftd.GREGoR_R03_GRU_20250612_ftd_study_external_study_id", "model.ftd.GREGoR_R03_GRU_20250612_ftd_study_funding_source", "model.ftd.GREGoR_R03_GRU_20250612_ftd_study_principal_investigator", "model.ftd.GREGoR_R03_GRU_20250612_ftd_subject", "model.ftd.GREGoR_R03_GRU_20250612_ftd_subject_external_id", "model.ftd.GREGoR_R03_GRU_20250612_ftd_subjectassertion", "model.ftd.GREGoR_R03_GRU_20250612_ftd_subjectassertion_external_id", "model.ftd.GREGoR_R03_GRU_20250612_ftd_subjectassertion_source_data", "model.ftd.GREGoR_R03_GRU_20250612_ftd_thing_external_id", "model.ftd.gregor_synthetic_ftd_file_subject"], "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype": ["model.ftd.GREGoR_R03_GRU_20250612_ftd_accesscontrolledrecord", "model.ftd.GREGoR_R03_GRU_20250612_ftd_accesscontrolledrecord_external_id", "model.ftd.GREGoR_R03_GRU_20250612_ftd_accesspolicy_data_access_type", "model.ftd.GREGoR_R03_GRU_20250612_ftd_accesspolicy_external_id", "model.ftd.GREGoR_R03_GRU_20250612_ftd_aliquot", "model.ftd.GREGoR_R03_GRU_20250612_ftd_aliquot_external_id", "model.ftd.GREGoR_R03_GRU_20250612_ftd_biospecimencollection", "model.ftd.GREGoR_R03_GRU_20250612_ftd_biospecimencollection_external_id", "model.ftd.GREGoR_R03_GRU_20250612_ftd_datasource", "model.ftd.GREGoR_R03_GRU_20250612_ftd_datasource_external_id", "model.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_external_id", "model.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_source_data", "model.ftd.GREGoR_R03_GRU_20250612_ftd_family", "model.ftd.GREGoR_R03_GRU_20250612_ftd_family_external_id", "model.ftd.GREGoR_R03_GRU_20250612_ftd_family_family_relationships", "model.ftd.GREGoR_R03_GRU_20250612_ftd_familyrelationship_external_id", "model.ftd.GREGoR_R03_GRU_20250612_ftd_file", "model.ftd.GREGoR_R03_GRU_20250612_ftd_file_external_id", "model.ftd.GREGoR_R03_GRU_20250612_ftd_file_sample", "model.ftd.GREGoR_R03_GRU_20250612_ftd_file_subject", "model.ftd.GREGoR_R03_GRU_20250612_ftd_filemetadata", "model.ftd.GREGoR_R03_GRU_20250612_ftd_filemetadata_external_id", "model.ftd.GREGoR_R03_GRU_20250612_ftd_sample", "model.ftd.GREGoR_R03_GRU_20250612_ftd_sample_external_id", "model.ftd.GREGoR_R03_GRU_20250612_ftd_sample_processing", "model.ftd.GREGoR_R03_GRU_20250612_ftd_sample_storage_method", "model.ftd.GREGoR_R03_GRU_20250612_ftd_sourcedata", "model.ftd.GREGoR_R03_GRU_20250612_ftd_sourcedata_external_id", "model.ftd.GREGoR_R03_GRU_20250612_ftd_sourcedata_query_parameter", "model.ftd.GREGoR_R03_GRU_20250612_ftd_study_external_study_id", "model.ftd.GREGoR_R03_GRU_20250612_ftd_study_funding_source", "model.ftd.GREGoR_R03_GRU_20250612_ftd_study_principal_investigator", "model.ftd.GREGoR_R03_GRU_20250612_ftd_subjectassertion", "model.ftd.GREGoR_R03_GRU_20250612_ftd_subjectassertion_external_id", "model.ftd.GREGoR_R03_GRU_20250612_ftd_subjectassertion_source_data", "model.ftd.GREGoR_R03_GRU_20250612_ftd_thing_external_id"], "model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_anvil_project": ["model.ftd.GREGoR_R03_GRU_20250612_ftd_datasource", "model.ftd.GREGoR_R03_GRU_20250612_ftd_datasource_external_id", "model.ftd.GREGoR_R03_GRU_20250612_ftd_sourcedata_query_parameter", "model.ftd.GREGoR_R03_GRU_20250612_ftd_study", "model.ftd.GREGoR_R03_GRU_20250612_ftd_study_external_id"], "model.cmg_bh.cmg_bh_stg_subject": ["model.ftd.cmg_bh_ftd_accesscontrolledrecord", "model.ftd.cmg_bh_ftd_accesscontrolledrecord_external_id", "model.ftd.cmg_bh_ftd_accesspolicy", "model.ftd.cmg_bh_ftd_accesspolicy_access_policy_code", "model.ftd.cmg_bh_ftd_accesspolicy_data_access_type", "model.ftd.cmg_bh_ftd_accesspolicy_external_id", "model.ftd.cmg_bh_ftd_aliquot", "model.ftd.cmg_bh_ftd_aliquot_external_id", "model.ftd.cmg_bh_ftd_biospecimencollection", "model.ftd.cmg_bh_ftd_biospecimencollection_external_id", "model.ftd.cmg_bh_ftd_datasource", "model.ftd.cmg_bh_ftd_datasource_external_id", "model.ftd.cmg_bh_ftd_demographics", "model.ftd.cmg_bh_ftd_demographics_external_id", "model.ftd.cmg_bh_ftd_demographics_race", "model.ftd.cmg_bh_ftd_demographics_source_data", "model.ftd.cmg_bh_ftd_family", "model.ftd.cmg_bh_ftd_family_external_id", "model.ftd.cmg_bh_ftd_family_family_relationships", "model.ftd.cmg_bh_ftd_familymember", "model.ftd.cmg_bh_ftd_familymember_external_id", "model.ftd.cmg_bh_ftd_familyrelationship", "model.ftd.cmg_bh_ftd_familyrelationship_external_id", "model.ftd.cmg_bh_ftd_filemetadata", "model.ftd.cmg_bh_ftd_filemetadata_external_id", "model.ftd.cmg_bh_ftd_sample", "model.ftd.cmg_bh_ftd_sample_external_id", "model.ftd.cmg_bh_ftd_sample_processing", "model.ftd.cmg_bh_ftd_sample_storage_method", "model.ftd.cmg_bh_ftd_sourcedata", "model.ftd.cmg_bh_ftd_sourcedata_external_id", "model.ftd.cmg_bh_ftd_sourcedata_query_parameter", "model.ftd.cmg_bh_ftd_study", "model.ftd.cmg_bh_ftd_study_external_id", "model.ftd.cmg_bh_ftd_study_funding_source", "model.ftd.cmg_bh_ftd_study_principal_investigator", "model.ftd.cmg_bh_ftd_subject", "model.ftd.cmg_bh_ftd_subject_external_id", "model.ftd.cmg_bh_ftd_subjectassertion", "model.ftd.cmg_bh_ftd_subjectassertion_external_id", "model.ftd.cmg_bh_ftd_subjectassertion_source_data"], "model.cmg_bh.cmg_bh_stg_sample": ["model.ftd.cmg_bh_ftd_accesscontrolledrecord", "model.ftd.cmg_bh_ftd_accesscontrolledrecord_external_id", "model.ftd.cmg_bh_ftd_aliquot", "model.ftd.cmg_bh_ftd_aliquot_external_id", "model.ftd.cmg_bh_ftd_biospecimencollection", "model.ftd.cmg_bh_ftd_biospecimencollection_external_id", "model.ftd.cmg_bh_ftd_file", "model.ftd.cmg_bh_ftd_file_external_id", "model.ftd.cmg_bh_ftd_file_sample", "model.ftd.cmg_bh_ftd_file_subject", "model.ftd.cmg_bh_ftd_filemetadata", "model.ftd.cmg_bh_ftd_filemetadata_external_id", "model.ftd.cmg_bh_ftd_sample", "model.ftd.cmg_bh_ftd_sample_external_id", "model.ftd.cmg_bh_ftd_sample_processing", "model.ftd.cmg_bh_ftd_sample_storage_method"], "model.GWAS.GWAS_stg_demographics": ["model.ftd.GWAS_ftd_demographics", "model.ftd.GWAS_ftd_demographics_external_id", "model.ftd.GWAS_ftd_demographics_race", "model.ftd.GWAS_ftd_subject", "model.ftd.GWAS_ftd_subject_external_id"], "model.GWAS.GWAS_stg_sampleattributes": ["model.ftd.GWAS_ftd_sample"], "model.GWAS.GWAS_stg_subjectconsent": ["model.ftd.GWAS_ftd_accesspolicy", "model.ftd.GWAS_ftd_accesspolicy_access_policy_code", "model.ftd.GWAS_ftd_demographics", "model.ftd.GWAS_ftd_familymember", "model.ftd.GWAS_ftd_familyrelationship", "model.ftd.GWAS_ftd_sample", "model.ftd.GWAS_ftd_subject", "model.ftd.GWAS_ftd_subjectassertion"], "model.GWAS.GWAS_stg_phecode": ["model.ftd.GWAS_ftd_subjectassertion"], "model.GWAS.GWAS_stg_bmi": ["model.ftd.GWAS_ftd_subjectassertion"], "model.GWAS.GWAS_stg_pedigree": ["model.ftd.GWAS_ftd_familymember", "model.ftd.GWAS_ftd_familymember_external_id", "model.ftd.GWAS_ftd_familyrelationship"], "model.GWAS.GWAS_stg_samplesubjectmapping": ["model.ftd.GWAS_ftd_sample", "model.ftd.GWAS_ftd_sample_external_id"], "model.ftd.GREGoR_R03_HMB_20250612_ftd_sourcedata": [], "model.ftd.GREGoR_R03_HMB_20250612_ftd_familyrelationship": ["test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_familyrelationship_family_member.ccd8099a36", "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_familyrelationship_id.7973ae91d9", "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_familyrelationship_other_family_member.fdfbcc65c5", "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_familyrelationship_relationship_code.77cb743d53"], "model.ftd.GREGoR_R03_HMB_20250612_ftd_subjectassertion": ["test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_subjectassertion_id.379ed8a4d1"], "model.ftd.GREGoR_R03_HMB_20250612_ftd_subjectassertion_source_data": [], "model.ftd.GREGoR_R03_HMB_20250612_ftd_sample": [], "model.ftd.GREGoR_R03_HMB_20250612_ftd_thing_external_id": [], "model.ftd.GREGoR_R03_HMB_20250612_ftd_accesscontrolledrecord_external_id": [], "model.ftd.GREGoR_R03_HMB_20250612_ftd_aliquot": [], "model.ftd.GREGoR_R03_HMB_20250612_ftd_aliquot_external_id": [], "model.ftd.GREGoR_R03_HMB_20250612_ftd_file_subject": [], "model.ftd.GREGoR_R03_HMB_20250612_ftd_family_family_relationships": [], "model.ftd.GREGoR_R03_HMB_20250612_ftd_familymember_external_id": [], "model.ftd.GREGoR_R03_HMB_20250612_ftd_filemetadata": [], "model.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_source_data": [], "model.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_race": ["test.ftd.accepted_values_GREGoR_R03_HMB_20250612_ftd_demographics_race_race__american_indian_or_alaskan_native__asian__black_or_african_american__native_hawaiian_or_pacific_islander__white__other_race__unknown__asked_but_unknown.fb8d1626ca", "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_demographics_race_demographics_id.b864e26814", "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_demographics_race_race.8241e83ef3"], "model.ftd.GREGoR_R03_HMB_20250612_ftd_sample_storage_method": [], "model.ftd.GREGoR_R03_HMB_20250612_ftd_study_funding_source": [], "model.ftd.GREGoR_R03_HMB_20250612_ftd_sample_external_id": [], "model.ftd.GREGoR_R03_HMB_20250612_ftd_biospecimencollection": [], "model.ftd.GREGoR_R03_HMB_20250612_ftd_biospecimencollection_external_id": [], "model.ftd.GREGoR_R03_HMB_20250612_ftd_accesspolicy_data_access_type": [], "model.ftd.GREGoR_R03_HMB_20250612_ftd_demographics_external_id": [], "model.ftd.GREGoR_R03_HMB_20250612_ftd_subject_external_id": [], "model.ftd.GREGoR_R03_HMB_20250612_ftd_file": [], "model.ftd.GREGoR_R03_HMB_20250612_ftd_family_external_id": [], "model.ftd.GREGoR_R03_HMB_20250612_ftd_accesspolicy": ["test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_accesspolicy_description.c8248b0467", "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_accesspolicy_id.a681409108"], "model.ftd.GREGoR_R03_HMB_20250612_ftd_familymember": ["test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_familymember_family_member.f24af3f62a", "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_familymember_id.e4ca78f1f6"], "model.ftd.GREGoR_R03_HMB_20250612_ftd_file_external_id": [], "model.ftd.GREGoR_R03_HMB_20250612_ftd_subjectassertion_external_id": [], "model.ftd.GREGoR_R03_HMB_20250612_ftd_sourcedata_external_id": [], "model.ftd.GREGoR_R03_HMB_20250612_ftd_study": ["test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_study_id.ba8b37c0b4", "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_study_study_title.a9c9843160"], "model.ftd.GREGoR_R03_HMB_20250612_ftd_filemetadata_external_id": [], "model.ftd.GREGoR_R03_HMB_20250612_ftd_study_principal_investigator": [], "model.ftd.GREGoR_R03_HMB_20250612_ftd_file_sample": [], "model.ftd.GREGoR_R03_HMB_20250612_ftd_accesscontrolledrecord": [], "model.ftd.GREGoR_R03_HMB_20250612_ftd_familyrelationship_external_id": [], "model.ftd.GREGoR_R03_HMB_20250612_ftd_accesspolicy_external_id": [], "model.ftd.GREGoR_R03_HMB_20250612_ftd_study_external_id": [], "model.ftd.GREGoR_R03_HMB_20250612_ftd_subject": ["test.ftd.accepted_values_GREGoR_R03_HMB_20250612_ftd_subject_subject_type__participant__non_participant__cell_line__animal_model__group__other.299b107e1c", "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_subject_id.e6565b9e79", "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_subject_subject_type.e917fa8882"], "model.ftd.GREGoR_R03_HMB_20250612_ftd_family": [], "model.ftd.GREGoR_R03_HMB_20250612_ftd_study_external_study_id": [], "model.ftd.GREGoR_R03_HMB_20250612_ftd_demographics": ["test.ftd.accepted_values_GREGoR_R03_HMB_20250612_ftd_demographics_ethnicity__hispanic_or_latino__not_hispanic_or_latino__unknown__asked_but_unknown.697408c165", "test.ftd.accepted_values_GREGoR_R03_HMB_20250612_ftd_demographics_sex__female__male__unknown__intersex.e929424ff9", "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_demographics_ethnicity.f989c1888f", "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_demographics_ethnicity_display.b70c72fe87", "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_demographics_id.5cde4c1112", "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_demographics_race_display.f403d1ff06", "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_demographics_sex.00ee4a6dbb", "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_demographics_sex_display.58fa9056fb"], "model.ftd.GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code": ["test.ftd.accepted_values_GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code_access_policy_code__gru__hmb__ds__irb__pub__col__npu__mds__gso__gsr.e95af42347", "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code_access_policy_code.8c07a541f9", "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code_accesspolicy_id.06a4b2baac"], "model.ftd.GREGoR_R03_HMB_20250612_ftd_sample_processing": [], "model.ftd.GREGoR_R03_GRU_20250612_ftd_accesspolicy_external_id": [], "model.ftd.GREGoR_R03_GRU_20250612_ftd_file_external_id": [], "model.ftd.GREGoR_R03_GRU_20250612_ftd_family_family_relationships": [], "model.ftd.GREGoR_R03_GRU_20250612_ftd_sample_storage_method": [], "model.ftd.GREGoR_R03_GRU_20250612_ftd_sourcedata_external_id": [], "model.ftd.GREGoR_R03_GRU_20250612_ftd_sample_processing": [], "model.ftd.GREGoR_R03_GRU_20250612_ftd_family_external_id": [], "model.ftd.GREGoR_R03_GRU_20250612_ftd_accesscontrolledrecord": [], "model.ftd.GREGoR_R03_GRU_20250612_ftd_familymember": ["test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_familymember_family_member.bec516573c", "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_familymember_id.31d5e77f00"], "model.ftd.GREGoR_R03_GRU_20250612_ftd_sourcedata_query_parameter": [], "model.ftd.GREGoR_R03_GRU_20250612_ftd_subject": ["test.ftd.accepted_values_GREGoR_R03_GRU_20250612_ftd_subject_subject_type__participant__non_participant__cell_line__animal_model__group__other.27b11b5d03", "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_subject_id.46fdb12cae", "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_subject_subject_type.99880e3294"], "model.ftd.GREGoR_R03_GRU_20250612_ftd_study_external_id": [], "model.ftd.GREGoR_R03_GRU_20250612_ftd_subject_external_id": [], "model.ftd.GREGoR_R03_GRU_20250612_ftd_subjectassertion_external_id": [], "model.ftd.GREGoR_R03_GRU_20250612_ftd_accesspolicy": ["test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_accesspolicy_description.884ba1fa9d", "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_accesspolicy_id.f90ad9a4e4"], "model.ftd.GREGoR_R03_GRU_20250612_ftd_accesscontrolledrecord_external_id": [], "model.ftd.GREGoR_R03_GRU_20250612_ftd_familymember_external_id": [], "model.ftd.GREGoR_R03_GRU_20250612_ftd_filemetadata": [], "model.ftd.GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code": ["test.ftd.accepted_values_GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code_access_policy_code__gru__hmb__ds__irb__pub__col__npu__mds__gso__gsr.5d7d564f71", "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code_access_policy_code.726e37466c", "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code_accesspolicy_id.7aacfbdb22"], "model.ftd.GREGoR_R03_GRU_20250612_ftd_family": [], "model.ftd.GREGoR_R03_GRU_20250612_ftd_aliquot": [], "model.ftd.GREGoR_R03_GRU_20250612_ftd_biospecimencollection_external_id": [], "model.ftd.GREGoR_R03_GRU_20250612_ftd_study_funding_source": [], "model.ftd.GREGoR_R03_GRU_20250612_ftd_sourcedata": [], "model.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_race": ["test.ftd.accepted_values_GREGoR_R03_GRU_20250612_ftd_demographics_race_race__american_indian_or_alaskan_native__asian__black_or_african_american__native_hawaiian_or_pacific_islander__white__other_race__unknown__asked_but_unknown.3ff8125da0", "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_demographics_race_demographics_id.4fba37007a", "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_demographics_race_race.f66600d494"], "model.ftd.GREGoR_R03_GRU_20250612_ftd_study": ["test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_study_id.d03639ac90", "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_study_study_title.89114aac72"], "model.ftd.GREGoR_R03_GRU_20250612_ftd_filemetadata_external_id": [], "model.ftd.GREGoR_R03_GRU_20250612_ftd_file": [], "model.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_source_data": [], "model.ftd.GREGoR_R03_GRU_20250612_ftd_accesspolicy_data_access_type": [], "model.ftd.GREGoR_R03_GRU_20250612_ftd_datasource": [], "model.ftd.GREGoR_R03_GRU_20250612_ftd_sample": [], "model.ftd.GREGoR_R03_GRU_20250612_ftd_thing_external_id": [], "model.ftd.GREGoR_R03_GRU_20250612_ftd_study_external_study_id": [], "model.ftd.GREGoR_R03_GRU_20250612_ftd_file_sample": [], "model.ftd.GREGoR_R03_GRU_20250612_ftd_subjectassertion_source_data": [], "model.ftd.GREGoR_R03_GRU_20250612_ftd_familyrelationship": ["test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_familyrelationship_family_member.b191d0d329", "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_familyrelationship_id.24f7d5a6e0", "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_familyrelationship_other_family_member.ecc70eeb74", "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_familyrelationship_relationship_code.84a248eda1"], "model.ftd.GREGoR_R03_GRU_20250612_ftd_biospecimencollection": [], "model.ftd.GREGoR_R03_GRU_20250612_ftd_aliquot_external_id": [], "model.ftd.GREGoR_R03_GRU_20250612_ftd_sample_external_id": [], "model.ftd.GREGoR_R03_GRU_20250612_ftd_demographics": ["test.ftd.accepted_values_GREGoR_R03_GRU_20250612_ftd_demographics_ethnicity__hispanic_or_latino__not_hispanic_or_latino__unknown__asked_but_unknown.ded60e9819", "test.ftd.accepted_values_GREGoR_R03_GRU_20250612_ftd_demographics_sex__female__male__unknown__intersex.86cbf8c35f", "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_demographics_ethnicity.60de0aa865", "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_demographics_ethnicity_display.4fc23334ce", "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_demographics_id.9176e5b77a", "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_demographics_race_display.5754e0d75a", "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_demographics_sex.abf7feab1a", "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_demographics_sex_display.94dfa50305"], "model.ftd.GREGoR_R03_GRU_20250612_ftd_subjectassertion": ["test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_subjectassertion_id.2c3b517da4"], "model.ftd.GREGoR_R03_GRU_20250612_ftd_datasource_external_id": [], "model.ftd.GREGoR_R03_GRU_20250612_ftd_file_subject": [], "model.ftd.GREGoR_R03_GRU_20250612_ftd_study_principal_investigator": [], "model.ftd.GREGoR_R03_GRU_20250612_ftd_demographics_external_id": [], "model.ftd.GREGoR_R03_GRU_20250612_ftd_familyrelationship_external_id": [], "model.ftd.cmg_bh_ftd_sample": ["test.ftd.accepted_values_cmg_bh_ftd_sample_availablity_status__available__unavailable.8de64ff6ae", "test.ftd.not_null_cmg_bh_ftd_sample_id.337bf1c937", "test.ftd.not_null_cmg_bh_ftd_sample_sample_type.27593ac975"], "model.ftd.cmg_bh_ftd_demographics_source_data": ["test.ftd.not_null_cmg_bh_ftd_demographics_source_data_demographics_id.4fc19441ed", "test.ftd.not_null_cmg_bh_ftd_demographics_source_data_source_data_id.8618ec6934"], "model.ftd.cmg_bh_ftd_sourcedata": ["test.ftd.not_null_cmg_bh_ftd_sourcedata_has_access_policy.fea82dd098", "test.ftd.not_null_cmg_bh_ftd_sourcedata_id.71529dd996"], "model.ftd.cmg_bh_ftd_study_external_id": ["test.ftd.not_null_cmg_bh_ftd_study_external_id_study_id.c38497e719"], "model.ftd.cmg_bh_ftd_file_subject": ["test.ftd.not_null_cmg_bh_ftd_file_subject_file_id.9a8798f990", "test.ftd.not_null_cmg_bh_ftd_file_subject_subject_id.94749261b4"], "model.ftd.cmg_bh_ftd_sample_external_id": ["test.ftd.not_null_cmg_bh_ftd_sample_external_id_sample_id.57a42a1c3d"], "model.ftd.cmg_bh_ftd_demographics": ["test.ftd.accepted_values_cmg_bh_ftd_demographics_date_of_birth_type__exact__year_only__shifted__decade_only__other.dce0947fe3", "test.ftd.accepted_values_cmg_bh_ftd_demographics_ethnicity__hispanic_or_latino__not_hispanic_or_latino__unknown__asked_but_unknown.6f74d0b39b", "test.ftd.accepted_values_cmg_bh_ftd_demographics_sex__female__male__unknown__intersex.711185066b", "test.ftd.not_null_cmg_bh_ftd_demographics_ethnicity.088a8c650f", "test.ftd.not_null_cmg_bh_ftd_demographics_ethnicity_display.4d203e924d", "test.ftd.not_null_cmg_bh_ftd_demographics_id.0043257405", "test.ftd.not_null_cmg_bh_ftd_demographics_race_display.0547eb77d8", "test.ftd.not_null_cmg_bh_ftd_demographics_sex.abab379f38", "test.ftd.not_null_cmg_bh_ftd_demographics_sex_display.8aa7898da0"], "model.ftd.cmg_bh_ftd_file_external_id": ["test.ftd.not_null_cmg_bh_ftd_file_external_id_file_id.f1c19d8e1d"], "model.ftd.cmg_bh_ftd_familymember_external_id": ["test.ftd.not_null_cmg_bh_ftd_familymember_external_id_familymember_id.aad9421f88"], "model.ftd.cmg_bh_ftd_family_external_id": ["test.ftd.not_null_cmg_bh_ftd_family_external_id_family_id.ca1501942f"], "model.ftd.cmg_bh_ftd_accesspolicy_external_id": ["test.ftd.not_null_cmg_bh_ftd_accesspolicy_external_id_accesspolicy_id.77c672ae6e"], "model.ftd.cmg_bh_ftd_family": ["test.ftd.accepted_values_cmg_bh_ftd_family_consanguinity__not_suspected__suspected__known_present__unknown.e6ab074c22", "test.ftd.accepted_values_cmg_bh_ftd_family_family_type__control_only__duo__proband_only__trio__trio_plus__other.0e3319ecb9", "test.ftd.not_null_cmg_bh_ftd_family_id.171d428fd1"], "model.ftd.cmg_bh_ftd_file": ["test.ftd.not_null_cmg_bh_ftd_file_id.994ce4e741"], "model.ftd.cmg_bh_ftd_accesspolicy": ["test.ftd.not_null_cmg_bh_ftd_accesspolicy_description.2fcab360bf", "test.ftd.not_null_cmg_bh_ftd_accesspolicy_id.37b43af455"], "model.ftd.cmg_bh_ftd_file_sample": ["test.ftd.not_null_cmg_bh_ftd_file_sample_file_id.ff03de732b", "test.ftd.not_null_cmg_bh_ftd_file_sample_sample_id.40d3fad81f"], "model.ftd.cmg_bh_ftd_accesspolicy_access_policy_code": ["test.ftd.accepted_values_cmg_bh_ftd_accesspolicy_access_policy_code_access_policy_code__gru__hmb__ds__irb__pub__col__npu__mds__gso__gsr.0eae20d9c7", "test.ftd.not_null_cmg_bh_ftd_accesspolicy_access_policy_code_access_policy_code.2437b083b0", "test.ftd.not_null_cmg_bh_ftd_accesspolicy_access_policy_code_accesspolicy_id.03e151a874"], "model.ftd.cmg_bh_ftd_subjectassertion": ["test.ftd.not_null_cmg_bh_ftd_subjectassertion_id.13cdc81eb9"], "model.ftd.cmg_bh_ftd_family_family_relationships": ["test.ftd.not_null_cmg_bh_ftd_family_family_relationships_family_id.98a4736bce", "test.ftd.not_null_cmg_bh_ftd_family_family_relationships_family_relationships_id.d0573bbee5"], "model.ftd.cmg_bh_ftd_subject_external_id": ["test.ftd.not_null_cmg_bh_ftd_subject_external_id_subject_id.c3f7eeebb8"], "model.ftd.cmg_bh_ftd_familyrelationship": ["test.ftd.not_null_cmg_bh_ftd_familyrelationship_family_member.78cb793210", "test.ftd.not_null_cmg_bh_ftd_familyrelationship_id.1f2dc9735e", "test.ftd.not_null_cmg_bh_ftd_familyrelationship_other_family_member.1f5245182f", "test.ftd.not_null_cmg_bh_ftd_familyrelationship_relationship_code.f742ad5dc9"], "model.ftd.cmg_bh_ftd_accesspolicy_data_access_type": ["test.ftd.accepted_values_cmg_bh_ftd_accesspolicy_data_access_type_data_access_type__open__registered__controlled__gsr_restricted__gsr_allowed.752d3dfe87", "test.ftd.not_null_cmg_bh_ftd_accesspolicy_data_access_type_accesspolicy_id.f856e1348f", "test.ftd.not_null_cmg_bh_ftd_accesspolicy_data_access_type_data_access_type.daef374444"], "model.ftd.cmg_bh_ftd_subjectassertion_source_data": ["test.ftd.not_null_cmg_bh_ftd_subjectassertion_source_data_source_data_id.8d1fc86b22", "test.ftd.not_null_cmg_bh_ftd_subjectassertion_source_data_subjectassertion_id.fb88110502"], "model.ftd.cmg_bh_ftd_familyrelationship_external_id": ["test.ftd.not_null_cmg_bh_ftd_familyrelationship_external_id_familyrelationship_id.ae12bde48f"], "model.ftd.cmg_bh_ftd_datasource": [], "model.ftd.cmg_bh_ftd_subjectassertion_external_id": ["test.ftd.not_null_cmg_bh_ftd_subjectassertion_external_id_subjectassertion_id.f4100852a7"], "model.ftd.cmg_bh_ftd_subject": ["test.ftd.accepted_values_cmg_bh_ftd_subject_subject_type__participant__non_participant__cell_line__animal_model__group__other.496ad5f1a3", "test.ftd.not_null_cmg_bh_ftd_subject_id.70bf7d76ff", "test.ftd.not_null_cmg_bh_ftd_subject_subject_type.2ffb1cf192"], "model.ftd.cmg_bh_ftd_demographics_race": ["test.ftd.accepted_values_cmg_bh_ftd_demographics_race_race__american_indian_or_alaskan_native__asian__black_or_african_american__native_hawaiian_or_pacific_islander__white__other_race__unknown__asked_but_unknown.546f884c8b", "test.ftd.not_null_cmg_bh_ftd_demographics_race_demographics_id.9adec1b35e", "test.ftd.not_null_cmg_bh_ftd_demographics_race_race.3b8ae979d3"], "model.ftd.cmg_bh_ftd_demographics_external_id": ["test.ftd.not_null_cmg_bh_ftd_demographics_external_id_demographics_id.e258ff214c"], "model.ftd.cmg_bh_ftd_sourcedata_external_id": ["test.ftd.not_null_cmg_bh_ftd_sourcedata_external_id_sourcedata_id.3b1e11fa21"], "model.ftd.cmg_bh_ftd_study_principal_investigator": ["test.ftd.not_null_cmg_bh_ftd_study_principal_investigator_study_id.bbd4c7400e"], "model.ftd.cmg_bh_ftd_study_funding_source": ["test.ftd.not_null_cmg_bh_ftd_study_funding_source_study_id.42d456a2d7"], "model.ftd.cmg_bh_ftd_datasource_external_id": [], "model.ftd.cmg_bh_ftd_sourcedata_query_parameter": [], "model.ftd.cmg_bh_ftd_familymember": ["test.ftd.not_null_cmg_bh_ftd_familymember_family_member.25846a93af", "test.ftd.not_null_cmg_bh_ftd_familymember_id.7d17665875"], "model.ftd.cmg_bh_ftd_study": ["test.ftd.not_null_cmg_bh_ftd_study_id.d0fcd7b4be", "test.ftd.not_null_cmg_bh_ftd_study_study_title.6ea8d071db"], "model.ftd.cmg_bh_ftd_sample_processing": ["test.ftd.not_null_cmg_bh_ftd_sample_processing_sample_id.0dbcfa96e2"], "model.ftd.cmg_bh_ftd_biospecimencollection_external_id": ["test.ftd.not_null_cmg_bh_ftd_biospecimencollection_external_id_biospecimencollection_id.355ab64d59"], "model.ftd.cmg_bh_ftd_aliquot_external_id": ["test.ftd.not_null_cmg_bh_ftd_aliquot_external_id_aliquot_id.99f903d593"], "model.ftd.cmg_bh_ftd_sample_storage_method": ["test.ftd.not_null_cmg_bh_ftd_sample_storage_method_sample_id.b358a9fe79"], "model.ftd.cmg_bh_ftd_filemetadata_external_id": ["test.ftd.not_null_cmg_bh_ftd_filemetadata_external_id_filemetadata_id.52ac4227c7"], "model.ftd.cmg_bh_ftd_filemetadata": ["test.ftd.not_null_cmg_bh_ftd_filemetadata_id.a9d2052230"], "model.ftd.cmg_bh_ftd_biospecimencollection": [], "model.ftd.cmg_bh_ftd_aliquot": ["test.ftd.accepted_values_cmg_bh_ftd_aliquot_availablity_status__available__unavailable.622cd860b5", "test.ftd.not_null_cmg_bh_ftd_aliquot_id.e2464dd2fe"], "model.ftd.cmg_bh_ftd_accesscontrolledrecord": ["test.ftd.not_null_cmg_bh_ftd_accesscontrolledrecord_has_access_policy.0bd719c157", "test.ftd.not_null_cmg_bh_ftd_accesscontrolledrecord_id.ad62c67815"], "model.ftd.cmg_bh_ftd_accesscontrolledrecord_external_id": ["test.ftd.not_null_cmg_bh_ftd_accesscontrolledrecord_external_id_accesscontrolledrecord_id.c934007037"], "model.ftd.GWAS_ftd_sample": ["test.ftd.accepted_values_GWAS_ftd_sample_availablity_status__available__unavailable.60e6fae4ba", "test.ftd.not_null_GWAS_ftd_sample_id.f18de69e62", "test.ftd.not_null_GWAS_ftd_sample_sample_type.ba5edecc46"], "model.ftd.GWAS_ftd_subject_external_id": ["test.ftd.not_null_GWAS_ftd_subject_external_id_subject_id.13ed703c6a"], "model.ftd.GWAS_ftd_familymember_external_id": ["test.ftd.not_null_GWAS_ftd_familymember_external_id_familymember_id.36bf6e25fe"], "model.ftd.GWAS_ftd_demographics_race": ["test.ftd.accepted_values_GWAS_ftd_demographics_race_race__american_indian_or_alaskan_native__asian__black_or_african_american__native_hawaiian_or_pacific_islander__white__other_race__unknown__asked_but_unknown.0e228bb450", "test.ftd.not_null_GWAS_ftd_demographics_race_demographics_id.b4b0df45f7", "test.ftd.not_null_GWAS_ftd_demographics_race_race.b130263e3f"], "model.ftd.GWAS_ftd_sample_external_id": ["test.ftd.not_null_GWAS_ftd_sample_external_id_sample_id.83c9e81cf6"], "model.ftd.GWAS_ftd_demographics": ["test.ftd.accepted_values_GWAS_ftd_demographics_date_of_birth_type__exact__year_only__shifted__decade_only__other.c780486020", "test.ftd.accepted_values_GWAS_ftd_demographics_ethnicity__hispanic_or_latino__not_hispanic_or_latino__unknown__asked_but_unknown.12ce6844a3", "test.ftd.accepted_values_GWAS_ftd_demographics_sex__female__male__unknown__intersex.97c0c3d4d9", "test.ftd.not_null_GWAS_ftd_demographics_ethnicity.09313b1836", "test.ftd.not_null_GWAS_ftd_demographics_ethnicity_display.ed2f6f4c89", "test.ftd.not_null_GWAS_ftd_demographics_id.71113fb2d0", "test.ftd.not_null_GWAS_ftd_demographics_race_display.6337436a53", "test.ftd.not_null_GWAS_ftd_demographics_sex.6450872514", "test.ftd.not_null_GWAS_ftd_demographics_sex_display.2013c97889"], "model.ftd.GWAS_ftd_familymember": ["test.ftd.not_null_GWAS_ftd_familymember_family_member.518d9a9a67", "test.ftd.not_null_GWAS_ftd_familymember_id.8ab5f592ad"], "model.ftd.GWAS_ftd_familyrelationship": ["test.ftd.not_null_GWAS_ftd_familyrelationship_family_member.35695b16f5", "test.ftd.not_null_GWAS_ftd_familyrelationship_id.7ae427e5ce", "test.ftd.not_null_GWAS_ftd_familyrelationship_other_family_member.22fdcbb16d", "test.ftd.not_null_GWAS_ftd_familyrelationship_relationship_code.1876cbd3ad"], "model.ftd.GWAS_ftd_accesspolicy_access_policy_code": ["test.ftd.accepted_values_GWAS_ftd_accesspolicy_access_policy_code_access_policy_code__gru__hmb__ds__irb__pub__col__npu__mds__gso__gsr.3dbd2a1e67", "test.ftd.not_null_GWAS_ftd_accesspolicy_access_policy_code_access_policy_code.ff6f3fd972", "test.ftd.not_null_GWAS_ftd_accesspolicy_access_policy_code_accesspolicy_id.22c45ebd4d"], "model.ftd.GWAS_ftd_accesspolicy": ["test.ftd.not_null_GWAS_ftd_accesspolicy_description.662fc95fb3", "test.ftd.not_null_GWAS_ftd_accesspolicy_id.9bb01229e6"], "model.ftd.GWAS_ftd_subjectassertion": ["test.ftd.not_null_GWAS_ftd_subjectassertion_id.8d3cee52d4"], "model.ftd.GWAS_ftd_demographics_external_id": ["test.ftd.not_null_GWAS_ftd_demographics_external_id_demographics_id.b047347377"], "model.ftd.GWAS_ftd_subject": ["test.ftd.accepted_values_GWAS_ftd_subject_subject_type__participant__non_participant__cell_line__animal_model__group__other.f1e7b6e71f", "test.ftd.not_null_GWAS_ftd_subject_id.9adf5ae8d2", "test.ftd.not_null_GWAS_ftd_subject_subject_type.9afb6ee858"], "model.ftd.GWAS_ftd_study_principal_investigator": ["test.ftd.not_null_GWAS_ftd_study_principal_investigator_study_id.1adcffcfec"], "model.ftd.GWAS_ftd_biospecimencollection": [], "model.ftd.GWAS_ftd_accesspolicy_data_access_type": ["test.ftd.accepted_values_GWAS_ftd_accesspolicy_data_access_type_data_access_type__open__registered__controlled__gsr_restricted__gsr_allowed.5ea1731895", "test.ftd.not_null_GWAS_ftd_accesspolicy_data_access_type_accesspolicy_id.6c099412bd", "test.ftd.not_null_GWAS_ftd_accesspolicy_data_access_type_data_access_type.290b7db882"], "model.ftd.GWAS_ftd_file_external_id": ["test.ftd.not_null_GWAS_ftd_file_external_id_file_id.1cee360518"], "model.ftd.GWAS_ftd_study": ["test.ftd.not_null_GWAS_ftd_study_id.2622162919", "test.ftd.not_null_GWAS_ftd_study_study_title.2122518e64"], "model.ftd.GWAS_ftd_familyrelationship_external_id": ["test.ftd.not_null_GWAS_ftd_familyrelationship_external_id_familyrelationship_id.e420c7d651"], "model.ftd.GWAS_ftd_accesspolicy_external_id": ["test.ftd.not_null_GWAS_ftd_accesspolicy_external_id_accesspolicy_id.66d916c183"], "model.ftd.GWAS_ftd_accesscontrolledrecord_external_id": ["test.ftd.not_null_GWAS_ftd_accesscontrolledrecord_external_id_accesscontrolledrecord_id.87088acdd6"], "model.ftd.GWAS_ftd_file_subject": ["test.ftd.not_null_GWAS_ftd_file_subject_file_id.6e2e48dc3c", "test.ftd.not_null_GWAS_ftd_file_subject_subject_id.ac2813176b"], "model.ftd.GWAS_ftd_family_external_id": ["test.ftd.not_null_GWAS_ftd_family_external_id_family_id.f629bd708e"], "model.ftd.GWAS_ftd_family": ["test.ftd.accepted_values_GWAS_ftd_family_consanguinity__not_suspected__suspected__known_present__unknown.4b84efae32", "test.ftd.accepted_values_GWAS_ftd_family_family_type__control_only__duo__proband_only__trio__trio_plus__other.a35b15bf88", "test.ftd.not_null_GWAS_ftd_family_id.170844bec6"], "model.ftd.GWAS_ftd_demographics_source_data": ["test.ftd.not_null_GWAS_ftd_demographics_source_data_demographics_id.0b26adbf81", "test.ftd.not_null_GWAS_ftd_demographics_source_data_source_data_id.0967578e69"], "model.ftd.GWAS_ftd_accesscontrolledrecord": ["test.ftd.not_null_GWAS_ftd_accesscontrolledrecord_has_access_policy.2e0130413c", "test.ftd.not_null_GWAS_ftd_accesscontrolledrecord_id.e26e3f9985"], "model.ftd.GWAS_ftd_filemetadata": ["test.ftd.not_null_GWAS_ftd_filemetadata_id.00cf19eaee"], "model.ftd.GWAS_ftd_aliquot_external_id": ["test.ftd.not_null_GWAS_ftd_aliquot_external_id_aliquot_id.48052f5b7c"], "model.ftd.GWAS_ftd_file": ["test.ftd.not_null_GWAS_ftd_file_id.f7cd047ccc"], "model.ftd.GWAS_ftd_sourcedata_query_parameter": [], "model.ftd.GWAS_ftd_subjectassertion_external_id": ["test.ftd.not_null_GWAS_ftd_subjectassertion_external_id_subjectassertion_id.c1eeade9b3"], "model.ftd.GWAS_ftd_sourcedata_external_id": ["test.ftd.not_null_GWAS_ftd_sourcedata_external_id_sourcedata_id.1af559b571"], "model.ftd.GWAS_ftd_family_family_relationships": ["test.ftd.not_null_GWAS_ftd_family_family_relationships_family_id.8979eb8427", "test.ftd.not_null_GWAS_ftd_family_family_relationships_family_relationships_id.79d5ee7ab6"], "model.ftd.GWAS_ftd_aliquot": ["test.ftd.accepted_values_GWAS_ftd_aliquot_availablity_status__available__unavailable.240771e83f", "test.ftd.not_null_GWAS_ftd_aliquot_id.8a637e633a"], "model.ftd.GWAS_ftd_biospecimencollection_external_id": ["test.ftd.not_null_GWAS_ftd_biospecimencollection_external_id_biospecimencollection_id.711ee44c3f"], "model.ftd.GWAS_ftd_datasource": [], "model.ftd.GWAS_ftd_sample_storage_method": ["test.ftd.not_null_GWAS_ftd_sample_storage_method_sample_id.95b7b1f3bd"], "model.ftd.GWAS_ftd_study_external_id": ["test.ftd.not_null_GWAS_ftd_study_external_id_study_id.7335490492"], "model.ftd.GWAS_ftd_sample_processing": ["test.ftd.not_null_GWAS_ftd_sample_processing_sample_id.d52e81cf7a"], "model.ftd.GWAS_ftd_sourcedata": ["test.ftd.not_null_GWAS_ftd_sourcedata_has_access_policy.95bf38120e", "test.ftd.not_null_GWAS_ftd_sourcedata_id.37521e6812"], "model.ftd.GWAS_ftd_datasource_external_id": [], "model.ftd.GWAS_ftd_filemetadata_external_id": ["test.ftd.not_null_GWAS_ftd_filemetadata_external_id_filemetadata_id.e06fd398b3"], "model.ftd.GWAS_ftd_file_sample": ["test.ftd.not_null_GWAS_ftd_file_sample_file_id.8f617f22f9", "test.ftd.not_null_GWAS_ftd_file_sample_sample_id.5d2c3e7dea"], "model.ftd.GWAS_ftd_subjectassertion_source_data": ["test.ftd.not_null_GWAS_ftd_subjectassertion_source_data_source_data_id.58cc3887bd", "test.ftd.not_null_GWAS_ftd_subjectassertion_source_data_subjectassertion_id.4e740389ab"], "model.ftd.GWAS_ftd_study_funding_source": ["test.ftd.not_null_GWAS_ftd_study_funding_source_study_id.1e79baded2"], "model.ftd.gregor_synthetic_ftd_thing_external_id": [], "model.ftd.gregor_synthetic_ftd_study_external_id": [], "model.ftd.gregor_synthetic_ftd_familymember_external_id": [], "model.ftd.gregor_synthetic_ftd_biospecimencollection_external_id": [], "model.ftd.gregor_synthetic_ftd_accesscontrolledrecord": [], "model.ftd.gregor_synthetic_ftd_demographics_source_data": [], "model.ftd.gregor_synthetic_ftd_sourcedata": [], "model.ftd.gregor_synthetic_ftd_demographics": ["test.ftd.accepted_values_gregor_synthetic_ftd_demographics_ethnicity__hispanic_or_latino__not_hispanic_or_latino__unknown__asked_but_unknown.7fb426336d", "test.ftd.accepted_values_gregor_synthetic_ftd_demographics_sex__female__male__unknown__intersex.2ca432fb0a", "test.ftd.not_null_gregor_synthetic_ftd_demographics_ethnicity.de41fba281", "test.ftd.not_null_gregor_synthetic_ftd_demographics_ethnicity_display.3541da5b62", "test.ftd.not_null_gregor_synthetic_ftd_demographics_id.f76247f12d", "test.ftd.not_null_gregor_synthetic_ftd_demographics_race_display.330040d994", "test.ftd.not_null_gregor_synthetic_ftd_demographics_sex.6a57903a47", "test.ftd.not_null_gregor_synthetic_ftd_demographics_sex_display.d995333553"], "model.ftd.gregor_synthetic_ftd_study": [], "model.ftd.gregor_synthetic_ftd_sample": [], "model.ftd.gregor_synthetic_ftd_filemetadata": [], "model.ftd.gregor_synthetic_ftd_accesspolicy_data_access_type": [], "model.ftd.gregor_synthetic_ftd_accesspolicy": ["model.ftd.gregor_synthetic_ftd_subjectassertion", "test.ftd.not_null_gregor_synthetic_ftd_accesspolicy_description.d59f1c94d4", "test.ftd.not_null_gregor_synthetic_ftd_accesspolicy_id.1bc2aee0e5"], "model.ftd.gregor_synthetic_ftd_subjectassertion_external_id": [], "model.ftd.gregor_synthetic_ftd_sample_storage_method": [], "model.ftd.gregor_synthetic_ftd_study_external_study_id": [], "model.ftd.gregor_synthetic_ftd_aliquot": [], "model.ftd.gregor_synthetic_ftd_biospecimencollection": [], "model.ftd.gregor_synthetic_ftd_sample_processing": [], "model.ftd.gregor_synthetic_ftd_sample_external_id": [], "model.ftd.gregor_synthetic_ftd_accesscontrolledrecord_external_id": [], "model.ftd.gregor_synthetic_ftd_family_external_id": [], "model.ftd.gregor_synthetic_ftd_accesspolicy_access_policy_code": ["test.ftd.accepted_values_gregor_synthetic_ftd_accesspolicy_access_policy_code_access_policy_code__gru__hmb__ds__irb__pub__col__npu__mds__gso__gsr.3264af3d7d", "test.ftd.not_null_gregor_synthetic_ftd_accesspolicy_access_policy_code_access_policy_code.b33aeb2f05", "test.ftd.not_null_gregor_synthetic_ftd_accesspolicy_access_policy_code_accesspolicy_id.e09c1fc820"], "model.ftd.gregor_synthetic_ftd_subjectassertion_source_data": [], "model.ftd.gregor_synthetic_ftd_family_family_relationships": [], "model.ftd.gregor_synthetic_ftd_accesspolicy_external_id": [], "model.ftd.gregor_synthetic_ftd_familyrelationship": ["test.ftd.not_null_gregor_synthetic_ftd_familyrelationship_family_member.3bc97b392a", "test.ftd.not_null_gregor_synthetic_ftd_familyrelationship_id.5fb3043b5a", "test.ftd.not_null_gregor_synthetic_ftd_familyrelationship_other_family_member.26151a74f8", "test.ftd.not_null_gregor_synthetic_ftd_familyrelationship_relationship_code.0e3f4707af"], "model.ftd.gregor_synthetic_ftd_familymember": ["test.ftd.not_null_gregor_synthetic_ftd_familymember_family_member.93e3a6234f", "test.ftd.not_null_gregor_synthetic_ftd_familymember_id.78a55538e4"], "model.ftd.gregor_synthetic_ftd_subject": ["test.ftd.accepted_values_gregor_synthetic_ftd_subject_subject_type__participant__non_participant__cell_line__animal_model__group__other.d07b3549ca", "test.ftd.not_null_gregor_synthetic_ftd_subject_id.912db9b8aa", "test.ftd.not_null_gregor_synthetic_ftd_subject_subject_type.d3528733f1"], "model.ftd.gregor_synthetic_ftd_family": [], "model.ftd.gregor_synthetic_ftd_file": [], "model.ftd.gregor_synthetic_ftd_file_sample": [], "model.ftd.gregor_synthetic_ftd_subjectassertion": ["test.ftd.not_null_gregor_synthetic_ftd_subjectassertion_id.0eb5e4594a"], "model.ftd.gregor_synthetic_ftd_familyrelationship_external_id": [], "model.ftd.gregor_synthetic_ftd_aliquot_external_id": [], "model.ftd.gregor_synthetic_ftd_filemetadata_external_id": [], "model.ftd.gregor_synthetic_ftd_demographics_external_id": [], "model.ftd.gregor_synthetic_ftd_study_principal_investigator": [], "model.ftd.gregor_synthetic_ftd_file_external_id": [], "model.ftd.gregor_synthetic_ftd_sourcedata_external_id": [], "model.ftd.gregor_synthetic_ftd_demographics_race": ["test.ftd.accepted_values_gregor_synthetic_ftd_demographics_race_race__american_indian_or_alaskan_native__asian__black_or_african_american__native_hawaiian_or_pacific_islander__white__other_race__unknown__asked_but_unknown.298b671dbd", "test.ftd.not_null_gregor_synthetic_ftd_demographics_race_demographics_id.9557406221", "test.ftd.not_null_gregor_synthetic_ftd_demographics_race_race.a6dc4eefb1"], "model.ftd.gregor_synthetic_ftd_study_funding_source": [], "model.ftd.gregor_synthetic_ftd_file_subject": [], "model.ftd.gregor_synthetic_ftd_subject_external_id": [], "model.ftd.eMERGEseq_ftd_biospecimencollection_external_id": [], "model.ftd.eMERGEseq_ftd_study_funding_source": [], "model.ftd.eMERGEseq_ftd_subjectassertion_external_id": [], "model.ftd.eMERGEseq_ftd_sample": ["test.ftd.not_null_eMERGEseq_ftd_sample_id.b49a2bea2f", "test.ftd.not_null_eMERGEseq_ftd_sample_sample_type.9cef01bfcb"], "model.ftd.eMERGEseq_ftd_study_external_study_id": [], "model.ftd.eMERGEseq_ftd_accesscontrolledrecord": [], "model.ftd.eMERGEseq_ftd_filemetadata": [], "model.ftd.eMERGEseq_ftd_file_sample": [], "model.ftd.eMERGEseq_ftd_subjectassertion": ["test.ftd.not_null_eMERGEseq_ftd_subjectassertion_id.1a7afe0878"], "model.ftd.eMERGEseq_ftd_file_subject": [], "model.ftd.eMERGEseq_ftd_study": [], "model.ftd.eMERGEseq_ftd_subject_external_id": [], "model.ftd.eMERGEseq_ftd_demographics": ["test.ftd.accepted_values_eMERGEseq_ftd_demographics_ethnicity__hispanic_or_latino__not_hispanic_or_latino__unknown__asked_but_unknown.dd3e975827", "test.ftd.accepted_values_eMERGEseq_ftd_demographics_sex__female__male__unknown__intersex.8404a8d8f7", "test.ftd.not_null_eMERGEseq_ftd_demographics_ethnicity.d54b112b05", "test.ftd.not_null_eMERGEseq_ftd_demographics_ethnicity_display.9ffec6a3a3", "test.ftd.not_null_eMERGEseq_ftd_demographics_id.a486d2592b", "test.ftd.not_null_eMERGEseq_ftd_demographics_race_display.1eb46b5734", "test.ftd.not_null_eMERGEseq_ftd_demographics_sex.00a71bdb6f", "test.ftd.not_null_eMERGEseq_ftd_demographics_sex_display.850a17a02c"], "model.ftd.eMERGEseq_ftd_family_external_id": [], "model.ftd.eMERGEseq_ftd_family": [], "model.ftd.eMERGEseq_ftd_datasource": [], "model.ftd.eMERGEseq_ftd_study_principal_investigator": [], "model.ftd.eMERGEseq_ftd_file_external_id": [], "model.ftd.eMERGEseq_ftd_sample_storage_method": [], "model.ftd.eMERGEseq_ftd_subjectassertion_source_data": [], "model.ftd.eMERGEseq_ftd_sourcedata": [], "model.ftd.eMERGEseq_ftd_accesspolicy_access_policy_code": ["test.ftd.accepted_values_eMERGEseq_ftd_accesspolicy_access_policy_code_access_policy_code__gru__hmb__ds__irb__pub__col__npu__mds__gso__gsr.ea570f7beb", "test.ftd.not_null_eMERGEseq_ftd_accesspolicy_access_policy_code_access_policy_code.fe962d3ccf", "test.ftd.not_null_eMERGEseq_ftd_accesspolicy_access_policy_code_accesspolicy_id.feeb0849ac"], "model.ftd.eMERGEseq_ftd_demographics_external_id": [], "model.ftd.eMERGEseq_ftd_familymember_external_id": [], "model.ftd.eMERGEseq_ftd_accesspolicy": ["test.ftd.not_null_eMERGEseq_ftd_accesspolicy_description.afa1581812", "test.ftd.not_null_eMERGEseq_ftd_accesspolicy_id.434dc2d565"], "model.ftd.eMERGEseq_ftd_sample_processing": [], "model.ftd.eMERGEseq_ftd_familyrelationship": ["test.ftd.not_null_eMERGEseq_ftd_familyrelationship_family_member.c82a948a1d", "test.ftd.not_null_eMERGEseq_ftd_familyrelationship_id.76e0c8aa11", "test.ftd.not_null_eMERGEseq_ftd_familyrelationship_other_family_member.d11c1f9823", "test.ftd.not_null_eMERGEseq_ftd_familyrelationship_relationship_code.b64265b2b7"], "model.ftd.eMERGEseq_ftd_study_external_id": [], "model.ftd.eMERGEseq_ftd_familyrelationship_external_id": [], "model.ftd.eMERGEseq_ftd_sample_external_id": [], "model.ftd.eMERGEseq_ftd_family_family_relationships": [], "model.ftd.eMERGEseq_ftd_demographics_race": ["test.ftd.accepted_values_eMERGEseq_ftd_demographics_race_race__american_indian_or_alaskan_native__asian__black_or_african_american__native_hawaiian_or_pacific_islander__white__other_race__unknown__asked_but_unknown.115877dcc2", "test.ftd.not_null_eMERGEseq_ftd_demographics_race_demographics_id.48d1d5797c", "test.ftd.not_null_eMERGEseq_ftd_demographics_race_race.a6f363d7df"], "model.ftd.eMERGEseq_ftd_familymember": ["test.ftd.not_null_eMERGEseq_ftd_familymember_family_member.d920988b9c", "test.ftd.not_null_eMERGEseq_ftd_familymember_id.f354eac9f2"], "model.ftd.eMERGEseq_ftd_biospecimencollection": [], "model.ftd.eMERGEseq_ftd_demographics_source_data": [], "model.ftd.eMERGEseq_ftd_accesspolicy_data_access_type": [], "model.ftd.eMERGEseq_ftd_subject": ["test.ftd.accepted_values_eMERGEseq_ftd_subject_subject_type__participant__non_participant__cell_line__animal_model__group__other.b1b5b5d5bf", "test.ftd.not_null_eMERGEseq_ftd_subject_id.57198c89b1", "test.ftd.not_null_eMERGEseq_ftd_subject_subject_type.a7edad184a"], "model.ftd.eMERGEseq_ftd_aliquot_external_id": [], "model.ftd.eMERGEseq_ftd_sourcedata_external_id": [], "model.ftd.eMERGEseq_ftd_filemetadata_external_id": [], "model.ftd.eMERGEseq_ftd_accesscontrolledrecord_external_id": [], "model.ftd.eMERGEseq_ftd_accesspolicy_external_id": [], "model.ftd.eMERGEseq_ftd_thing_external_id": [], "model.ftd.eMERGEseq_ftd_datasource_external_id": [], "model.ftd.eMERGEseq_ftd_file": [], "model.ftd.eMERGEseq_ftd_aliquot": [], "model.ftd.eMERGEseq_ftd_sourcedata_query_parameter": [], "model.gregor_synthetic.gregor_synthetic_stg_participant": ["model.ftd.gregor_synthetic_ftd_accesscontrolledrecord", "model.ftd.gregor_synthetic_ftd_accesscontrolledrecord_external_id", "model.ftd.gregor_synthetic_ftd_accesspolicy", "model.ftd.gregor_synthetic_ftd_accesspolicy_access_policy_code", "model.ftd.gregor_synthetic_ftd_accesspolicy_data_access_type", "model.ftd.gregor_synthetic_ftd_accesspolicy_external_id", "model.ftd.gregor_synthetic_ftd_aliquot", "model.ftd.gregor_synthetic_ftd_aliquot_external_id", "model.ftd.gregor_synthetic_ftd_biospecimencollection", "model.ftd.gregor_synthetic_ftd_biospecimencollection_external_id", "model.ftd.gregor_synthetic_ftd_demographics", "model.ftd.gregor_synthetic_ftd_demographics_external_id", "model.ftd.gregor_synthetic_ftd_demographics_race", "model.ftd.gregor_synthetic_ftd_demographics_source_data", "model.ftd.gregor_synthetic_ftd_family", "model.ftd.gregor_synthetic_ftd_family_external_id", "model.ftd.gregor_synthetic_ftd_family_family_relationships", "model.ftd.gregor_synthetic_ftd_familymember", "model.ftd.gregor_synthetic_ftd_familymember_external_id", "model.ftd.gregor_synthetic_ftd_familyrelationship", "model.ftd.gregor_synthetic_ftd_familyrelationship_external_id", "model.ftd.gregor_synthetic_ftd_file", "model.ftd.gregor_synthetic_ftd_file_external_id", "model.ftd.gregor_synthetic_ftd_file_sample", "model.ftd.gregor_synthetic_ftd_filemetadata", "model.ftd.gregor_synthetic_ftd_filemetadata_external_id", "model.ftd.gregor_synthetic_ftd_sample", "model.ftd.gregor_synthetic_ftd_sample_external_id", "model.ftd.gregor_synthetic_ftd_sample_processing", "model.ftd.gregor_synthetic_ftd_sample_storage_method", "model.ftd.gregor_synthetic_ftd_sourcedata", "model.ftd.gregor_synthetic_ftd_sourcedata_external_id", "model.ftd.gregor_synthetic_ftd_study", "model.ftd.gregor_synthetic_ftd_study_external_id", "model.ftd.gregor_synthetic_ftd_study_external_study_id", "model.ftd.gregor_synthetic_ftd_study_funding_source", "model.ftd.gregor_synthetic_ftd_study_principal_investigator", "model.ftd.gregor_synthetic_ftd_subject", "model.ftd.gregor_synthetic_ftd_subject_external_id", "model.ftd.gregor_synthetic_ftd_subjectassertion", "model.ftd.gregor_synthetic_ftd_subjectassertion_external_id", "model.ftd.gregor_synthetic_ftd_subjectassertion_source_data", "model.ftd.gregor_synthetic_ftd_thing_external_id"], "model.gregor_synthetic.gregor_synthetic_stg_phenotype": ["model.ftd.gregor_synthetic_ftd_accesscontrolledrecord", "model.ftd.gregor_synthetic_ftd_accesscontrolledrecord_external_id", "model.ftd.gregor_synthetic_ftd_accesspolicy", "model.ftd.gregor_synthetic_ftd_accesspolicy_access_policy_code", "model.ftd.gregor_synthetic_ftd_accesspolicy_data_access_type", "model.ftd.gregor_synthetic_ftd_accesspolicy_external_id", "model.ftd.gregor_synthetic_ftd_aliquot", "model.ftd.gregor_synthetic_ftd_aliquot_external_id", "model.ftd.gregor_synthetic_ftd_biospecimencollection", "model.ftd.gregor_synthetic_ftd_biospecimencollection_external_id", "model.ftd.gregor_synthetic_ftd_demographics", "model.ftd.gregor_synthetic_ftd_demographics_external_id", "model.ftd.gregor_synthetic_ftd_demographics_race", "model.ftd.gregor_synthetic_ftd_demographics_source_data", "model.ftd.gregor_synthetic_ftd_family", "model.ftd.gregor_synthetic_ftd_family_external_id", "model.ftd.gregor_synthetic_ftd_family_family_relationships", "model.ftd.gregor_synthetic_ftd_familymember", "model.ftd.gregor_synthetic_ftd_familymember_external_id", "model.ftd.gregor_synthetic_ftd_familyrelationship_external_id", "model.ftd.gregor_synthetic_ftd_file", "model.ftd.gregor_synthetic_ftd_file_external_id", "model.ftd.gregor_synthetic_ftd_file_sample", "model.ftd.gregor_synthetic_ftd_filemetadata", "model.ftd.gregor_synthetic_ftd_filemetadata_external_id", "model.ftd.gregor_synthetic_ftd_sample", "model.ftd.gregor_synthetic_ftd_sample_external_id", "model.ftd.gregor_synthetic_ftd_sample_processing", "model.ftd.gregor_synthetic_ftd_sample_storage_method", "model.ftd.gregor_synthetic_ftd_sourcedata", "model.ftd.gregor_synthetic_ftd_sourcedata_external_id", "model.ftd.gregor_synthetic_ftd_study", "model.ftd.gregor_synthetic_ftd_study_external_id", "model.ftd.gregor_synthetic_ftd_study_external_study_id", "model.ftd.gregor_synthetic_ftd_study_funding_source", "model.ftd.gregor_synthetic_ftd_study_principal_investigator", "model.ftd.gregor_synthetic_ftd_subject_external_id", "model.ftd.gregor_synthetic_ftd_subjectassertion", "model.ftd.gregor_synthetic_ftd_subjectassertion_external_id", "model.ftd.gregor_synthetic_ftd_subjectassertion_source_data", "model.ftd.gregor_synthetic_ftd_thing_external_id"], "model.eMERGEseq.eMERGEseq_stg_demographics": ["model.ftd.eMERGEseq_ftd_accesscontrolledrecord", "model.ftd.eMERGEseq_ftd_accesscontrolledrecord_external_id", "model.ftd.eMERGEseq_ftd_accesspolicy_data_access_type", "model.ftd.eMERGEseq_ftd_accesspolicy_external_id", "model.ftd.eMERGEseq_ftd_aliquot", "model.ftd.eMERGEseq_ftd_aliquot_external_id", "model.ftd.eMERGEseq_ftd_biospecimencollection", "model.ftd.eMERGEseq_ftd_biospecimencollection_external_id", "model.ftd.eMERGEseq_ftd_datasource", "model.ftd.eMERGEseq_ftd_datasource_external_id", "model.ftd.eMERGEseq_ftd_demographics", "model.ftd.eMERGEseq_ftd_demographics_external_id", "model.ftd.eMERGEseq_ftd_demographics_race", "model.ftd.eMERGEseq_ftd_demographics_source_data", "model.ftd.eMERGEseq_ftd_family", "model.ftd.eMERGEseq_ftd_family_external_id", "model.ftd.eMERGEseq_ftd_family_family_relationships", "model.ftd.eMERGEseq_ftd_familyrelationship_external_id", "model.ftd.eMERGEseq_ftd_file", "model.ftd.eMERGEseq_ftd_file_external_id", "model.ftd.eMERGEseq_ftd_file_sample", "model.ftd.eMERGEseq_ftd_file_subject", "model.ftd.eMERGEseq_ftd_filemetadata", "model.ftd.eMERGEseq_ftd_filemetadata_external_id", "model.ftd.eMERGEseq_ftd_sample_processing", "model.ftd.eMERGEseq_ftd_sample_storage_method", "model.ftd.eMERGEseq_ftd_sourcedata", "model.ftd.eMERGEseq_ftd_sourcedata_external_id", "model.ftd.eMERGEseq_ftd_sourcedata_query_parameter", "model.ftd.eMERGEseq_ftd_study", "model.ftd.eMERGEseq_ftd_study_external_id", "model.ftd.eMERGEseq_ftd_study_external_study_id", "model.ftd.eMERGEseq_ftd_study_funding_source", "model.ftd.eMERGEseq_ftd_study_principal_investigator", "model.ftd.eMERGEseq_ftd_subject", "model.ftd.eMERGEseq_ftd_subject_external_id", "model.ftd.eMERGEseq_ftd_subjectassertion_source_data", "model.ftd.eMERGEseq_ftd_thing_external_id"], "model.eMERGEseq.eMERGEseq_stg_sampleattributes": ["model.ftd.eMERGEseq_ftd_accesscontrolledrecord", "model.ftd.eMERGEseq_ftd_accesscontrolledrecord_external_id", "model.ftd.eMERGEseq_ftd_accesspolicy_data_access_type", "model.ftd.eMERGEseq_ftd_accesspolicy_external_id", "model.ftd.eMERGEseq_ftd_aliquot", "model.ftd.eMERGEseq_ftd_aliquot_external_id", "model.ftd.eMERGEseq_ftd_biospecimencollection", "model.ftd.eMERGEseq_ftd_biospecimencollection_external_id", "model.ftd.eMERGEseq_ftd_datasource", "model.ftd.eMERGEseq_ftd_datasource_external_id", "model.ftd.eMERGEseq_ftd_demographics_source_data", "model.ftd.eMERGEseq_ftd_family", "model.ftd.eMERGEseq_ftd_family_external_id", "model.ftd.eMERGEseq_ftd_family_family_relationships", "model.ftd.eMERGEseq_ftd_familyrelationship_external_id", "model.ftd.eMERGEseq_ftd_file", "model.ftd.eMERGEseq_ftd_file_external_id", "model.ftd.eMERGEseq_ftd_file_sample", "model.ftd.eMERGEseq_ftd_file_subject", "model.ftd.eMERGEseq_ftd_filemetadata", "model.ftd.eMERGEseq_ftd_filemetadata_external_id", "model.ftd.eMERGEseq_ftd_sample", "model.ftd.eMERGEseq_ftd_sample_processing", "model.ftd.eMERGEseq_ftd_sample_storage_method", "model.ftd.eMERGEseq_ftd_sourcedata", "model.ftd.eMERGEseq_ftd_sourcedata_external_id", "model.ftd.eMERGEseq_ftd_sourcedata_query_parameter", "model.ftd.eMERGEseq_ftd_study", "model.ftd.eMERGEseq_ftd_study_external_id", "model.ftd.eMERGEseq_ftd_study_external_study_id", "model.ftd.eMERGEseq_ftd_study_funding_source", "model.ftd.eMERGEseq_ftd_study_principal_investigator", "model.ftd.eMERGEseq_ftd_subjectassertion_source_data", "model.ftd.eMERGEseq_ftd_thing_external_id"], "model.eMERGEseq.eMERGEseq_stg_subjectconsent": ["model.ftd.eMERGEseq_ftd_accesscontrolledrecord", "model.ftd.eMERGEseq_ftd_accesscontrolledrecord_external_id", "model.ftd.eMERGEseq_ftd_accesspolicy", "model.ftd.eMERGEseq_ftd_accesspolicy_access_policy_code", "model.ftd.eMERGEseq_ftd_accesspolicy_data_access_type", "model.ftd.eMERGEseq_ftd_accesspolicy_external_id", "model.ftd.eMERGEseq_ftd_aliquot", "model.ftd.eMERGEseq_ftd_aliquot_external_id", "model.ftd.eMERGEseq_ftd_biospecimencollection", "model.ftd.eMERGEseq_ftd_biospecimencollection_external_id", "model.ftd.eMERGEseq_ftd_datasource", "model.ftd.eMERGEseq_ftd_datasource_external_id", "model.ftd.eMERGEseq_ftd_demographics", "model.ftd.eMERGEseq_ftd_demographics_source_data", "model.ftd.eMERGEseq_ftd_family", "model.ftd.eMERGEseq_ftd_family_external_id", "model.ftd.eMERGEseq_ftd_family_family_relationships", "model.ftd.eMERGEseq_ftd_familymember", "model.ftd.eMERGEseq_ftd_familyrelationship", "model.ftd.eMERGEseq_ftd_familyrelationship_external_id", "model.ftd.eMERGEseq_ftd_file", "model.ftd.eMERGEseq_ftd_file_external_id", "model.ftd.eMERGEseq_ftd_file_sample", "model.ftd.eMERGEseq_ftd_file_subject", "model.ftd.eMERGEseq_ftd_filemetadata", "model.ftd.eMERGEseq_ftd_filemetadata_external_id", "model.ftd.eMERGEseq_ftd_sample", "model.ftd.eMERGEseq_ftd_sample_processing", "model.ftd.eMERGEseq_ftd_sample_storage_method", "model.ftd.eMERGEseq_ftd_sourcedata", "model.ftd.eMERGEseq_ftd_sourcedata_external_id", "model.ftd.eMERGEseq_ftd_sourcedata_query_parameter", "model.ftd.eMERGEseq_ftd_study", "model.ftd.eMERGEseq_ftd_study_external_id", "model.ftd.eMERGEseq_ftd_study_external_study_id", "model.ftd.eMERGEseq_ftd_study_funding_source", "model.ftd.eMERGEseq_ftd_study_principal_investigator", "model.ftd.eMERGEseq_ftd_subject", "model.ftd.eMERGEseq_ftd_subjectassertion", "model.ftd.eMERGEseq_ftd_subjectassertion_source_data", "model.ftd.eMERGEseq_ftd_thing_external_id"], "model.eMERGEseq.eMERGEseq_stg_phecode": ["model.ftd.eMERGEseq_ftd_accesscontrolledrecord", "model.ftd.eMERGEseq_ftd_accesscontrolledrecord_external_id", "model.ftd.eMERGEseq_ftd_accesspolicy_data_access_type", "model.ftd.eMERGEseq_ftd_accesspolicy_external_id", "model.ftd.eMERGEseq_ftd_aliquot", "model.ftd.eMERGEseq_ftd_aliquot_external_id", "model.ftd.eMERGEseq_ftd_biospecimencollection", "model.ftd.eMERGEseq_ftd_biospecimencollection_external_id", "model.ftd.eMERGEseq_ftd_datasource", "model.ftd.eMERGEseq_ftd_datasource_external_id", "model.ftd.eMERGEseq_ftd_demographics_source_data", "model.ftd.eMERGEseq_ftd_family", "model.ftd.eMERGEseq_ftd_family_external_id", "model.ftd.eMERGEseq_ftd_family_family_relationships", "model.ftd.eMERGEseq_ftd_familyrelationship_external_id", "model.ftd.eMERGEseq_ftd_file", "model.ftd.eMERGEseq_ftd_file_external_id", "model.ftd.eMERGEseq_ftd_file_sample", "model.ftd.eMERGEseq_ftd_file_subject", "model.ftd.eMERGEseq_ftd_filemetadata", "model.ftd.eMERGEseq_ftd_filemetadata_external_id", "model.ftd.eMERGEseq_ftd_sample_processing", "model.ftd.eMERGEseq_ftd_sample_storage_method", "model.ftd.eMERGEseq_ftd_sourcedata", "model.ftd.eMERGEseq_ftd_sourcedata_external_id", "model.ftd.eMERGEseq_ftd_sourcedata_query_parameter", "model.ftd.eMERGEseq_ftd_study", "model.ftd.eMERGEseq_ftd_study_external_id", "model.ftd.eMERGEseq_ftd_study_external_study_id", "model.ftd.eMERGEseq_ftd_study_funding_source", "model.ftd.eMERGEseq_ftd_study_principal_investigator", "model.ftd.eMERGEseq_ftd_subjectassertion", "model.ftd.eMERGEseq_ftd_subjectassertion_external_id", "model.ftd.eMERGEseq_ftd_subjectassertion_source_data", "model.ftd.eMERGEseq_ftd_thing_external_id"], "model.eMERGEseq.eMERGEseq_stg_bmi": ["model.ftd.eMERGEseq_ftd_datasource", "model.ftd.eMERGEseq_ftd_datasource_external_id", "model.ftd.eMERGEseq_ftd_sourcedata_query_parameter", "model.ftd.eMERGEseq_ftd_subjectassertion", "model.ftd.eMERGEseq_ftd_subjectassertion_external_id"], "model.eMERGEseq.eMERGEseq_stg_pedigree": ["model.ftd.eMERGEseq_ftd_datasource", "model.ftd.eMERGEseq_ftd_datasource_external_id", "model.ftd.eMERGEseq_ftd_familymember", "model.ftd.eMERGEseq_ftd_familymember_external_id", "model.ftd.eMERGEseq_ftd_familyrelationship", "model.ftd.eMERGEseq_ftd_sourcedata_query_parameter"], "model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping": ["model.ftd.eMERGEseq_ftd_accesscontrolledrecord", "model.ftd.eMERGEseq_ftd_accesscontrolledrecord_external_id", "model.ftd.eMERGEseq_ftd_accesspolicy_data_access_type", "model.ftd.eMERGEseq_ftd_accesspolicy_external_id", "model.ftd.eMERGEseq_ftd_aliquot", "model.ftd.eMERGEseq_ftd_aliquot_external_id", "model.ftd.eMERGEseq_ftd_biospecimencollection", "model.ftd.eMERGEseq_ftd_biospecimencollection_external_id", "model.ftd.eMERGEseq_ftd_datasource", "model.ftd.eMERGEseq_ftd_datasource_external_id", "model.ftd.eMERGEseq_ftd_demographics_source_data", "model.ftd.eMERGEseq_ftd_family", "model.ftd.eMERGEseq_ftd_family_external_id", "model.ftd.eMERGEseq_ftd_family_family_relationships", "model.ftd.eMERGEseq_ftd_familyrelationship_external_id", "model.ftd.eMERGEseq_ftd_file", "model.ftd.eMERGEseq_ftd_file_external_id", "model.ftd.eMERGEseq_ftd_file_sample", "model.ftd.eMERGEseq_ftd_file_subject", "model.ftd.eMERGEseq_ftd_filemetadata", "model.ftd.eMERGEseq_ftd_filemetadata_external_id", "model.ftd.eMERGEseq_ftd_sample", "model.ftd.eMERGEseq_ftd_sample_external_id", "model.ftd.eMERGEseq_ftd_sample_processing", "model.ftd.eMERGEseq_ftd_sample_storage_method", "model.ftd.eMERGEseq_ftd_sourcedata", "model.ftd.eMERGEseq_ftd_sourcedata_external_id", "model.ftd.eMERGEseq_ftd_sourcedata_query_parameter", "model.ftd.eMERGEseq_ftd_study", "model.ftd.eMERGEseq_ftd_study_external_id", "model.ftd.eMERGEseq_ftd_study_external_study_id", "model.ftd.eMERGEseq_ftd_study_funding_source", "model.ftd.eMERGEseq_ftd_study_principal_investigator", "model.ftd.eMERGEseq_ftd_subjectassertion_source_data", "model.ftd.eMERGEseq_ftd_thing_external_id"], "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_subjectassertion_id.379ed8a4d1": [], "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_subject_subject_type.e917fa8882": [], "test.ftd.accepted_values_GREGoR_R03_HMB_20250612_ftd_subject_subject_type__participant__non_participant__cell_line__animal_model__group__other.299b107e1c": [], "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_subject_id.e6565b9e79": [], "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_familyrelationship_family_member.ccd8099a36": [], "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_familyrelationship_other_family_member.fdfbcc65c5": [], "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_familyrelationship_relationship_code.77cb743d53": [], "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_familyrelationship_id.7973ae91d9": [], "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_demographics_sex.00ee4a6dbb": [], "test.ftd.accepted_values_GREGoR_R03_HMB_20250612_ftd_demographics_sex__female__male__unknown__intersex.e929424ff9": [], "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_demographics_sex_display.58fa9056fb": [], "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_demographics_race_display.f403d1ff06": [], "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_demographics_ethnicity.f989c1888f": [], "test.ftd.accepted_values_GREGoR_R03_HMB_20250612_ftd_demographics_ethnicity__hispanic_or_latino__not_hispanic_or_latino__unknown__asked_but_unknown.697408c165": [], "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_demographics_ethnicity_display.b70c72fe87": [], "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_demographics_id.5cde4c1112": [], "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_accesspolicy_description.c8248b0467": [], "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_accesspolicy_id.a681409108": [], "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_study_study_title.a9c9843160": [], "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_study_id.ba8b37c0b4": [], "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_familymember_family_member.f24af3f62a": [], "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_familymember_id.e4ca78f1f6": [], "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_demographics_race_demographics_id.b864e26814": [], "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_demographics_race_race.8241e83ef3": [], "test.ftd.accepted_values_GREGoR_R03_HMB_20250612_ftd_demographics_race_race__american_indian_or_alaskan_native__asian__black_or_african_american__native_hawaiian_or_pacific_islander__white__other_race__unknown__asked_but_unknown.fb8d1626ca": [], "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code_accesspolicy_id.06a4b2baac": [], "test.ftd.not_null_GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code_access_policy_code.8c07a541f9": [], "test.ftd.accepted_values_GREGoR_R03_HMB_20250612_ftd_accesspolicy_access_policy_code_access_policy_code__gru__hmb__ds__irb__pub__col__npu__mds__gso__gsr.e95af42347": [], "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_subjectassertion_id.2c3b517da4": [], "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_subject_subject_type.99880e3294": [], "test.ftd.accepted_values_GREGoR_R03_GRU_20250612_ftd_subject_subject_type__participant__non_participant__cell_line__animal_model__group__other.27b11b5d03": [], "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_subject_id.46fdb12cae": [], "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_familyrelationship_family_member.b191d0d329": [], "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_familyrelationship_other_family_member.ecc70eeb74": [], "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_familyrelationship_relationship_code.84a248eda1": [], "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_familyrelationship_id.24f7d5a6e0": [], "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_demographics_sex.abf7feab1a": [], "test.ftd.accepted_values_GREGoR_R03_GRU_20250612_ftd_demographics_sex__female__male__unknown__intersex.86cbf8c35f": [], "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_demographics_sex_display.94dfa50305": [], "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_demographics_race_display.5754e0d75a": [], "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_demographics_ethnicity.60de0aa865": [], "test.ftd.accepted_values_GREGoR_R03_GRU_20250612_ftd_demographics_ethnicity__hispanic_or_latino__not_hispanic_or_latino__unknown__asked_but_unknown.ded60e9819": [], "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_demographics_ethnicity_display.4fc23334ce": [], "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_demographics_id.9176e5b77a": [], "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_accesspolicy_description.884ba1fa9d": [], "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_accesspolicy_id.f90ad9a4e4": [], "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_study_study_title.89114aac72": [], "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_study_id.d03639ac90": [], "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_familymember_family_member.bec516573c": [], "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_familymember_id.31d5e77f00": [], "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_demographics_race_demographics_id.4fba37007a": [], "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_demographics_race_race.f66600d494": [], "test.ftd.accepted_values_GREGoR_R03_GRU_20250612_ftd_demographics_race_race__american_indian_or_alaskan_native__asian__black_or_african_american__native_hawaiian_or_pacific_islander__white__other_race__unknown__asked_but_unknown.3ff8125da0": [], "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code_accesspolicy_id.7aacfbdb22": [], "test.ftd.not_null_GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code_access_policy_code.726e37466c": [], "test.ftd.accepted_values_GREGoR_R03_GRU_20250612_ftd_accesspolicy_access_policy_code_access_policy_code__gru__hmb__ds__irb__pub__col__npu__mds__gso__gsr.5d7d564f71": [], "test.ftd.not_null_cmg_bh_ftd_subject_external_id_subject_id.c3f7eeebb8": [], "test.ftd.not_null_cmg_bh_ftd_file_sample_file_id.ff03de732b": [], "test.ftd.not_null_cmg_bh_ftd_file_sample_sample_id.40d3fad81f": [], "test.ftd.not_null_cmg_bh_ftd_filemetadata_id.a9d2052230": [], "test.ftd.not_null_cmg_bh_ftd_sample_external_id_sample_id.57a42a1c3d": [], "test.ftd.not_null_cmg_bh_ftd_file_id.994ce4e741": [], "test.ftd.not_null_cmg_bh_ftd_familymember_family_member.25846a93af": [], "test.ftd.not_null_cmg_bh_ftd_familymember_id.7d17665875": [], "test.ftd.not_null_cmg_bh_ftd_subjectassertion_source_data_subjectassertion_id.fb88110502": [], "test.ftd.not_null_cmg_bh_ftd_subjectassertion_source_data_source_data_id.8d1fc86b22": [], "test.ftd.not_null_cmg_bh_ftd_study_external_id_study_id.c38497e719": [], "test.ftd.not_null_cmg_bh_ftd_sourcedata_external_id_sourcedata_id.3b1e11fa21": [], "test.ftd.not_null_cmg_bh_ftd_sample_storage_method_sample_id.b358a9fe79": [], "test.ftd.not_null_cmg_bh_ftd_biospecimencollection_external_id_biospecimencollection_id.355ab64d59": [], "test.ftd.not_null_cmg_bh_ftd_sample_processing_sample_id.0dbcfa96e2": [], "test.ftd.not_null_cmg_bh_ftd_subject_subject_type.2ffb1cf192": [], "test.ftd.accepted_values_cmg_bh_ftd_subject_subject_type__participant__non_participant__cell_line__animal_model__group__other.496ad5f1a3": [], "test.ftd.not_null_cmg_bh_ftd_subject_id.70bf7d76ff": [], "test.ftd.not_null_cmg_bh_ftd_accesspolicy_description.2fcab360bf": [], "test.ftd.not_null_cmg_bh_ftd_accesspolicy_id.37b43af455": [], "test.ftd.not_null_cmg_bh_ftd_accesspolicy_data_access_type_accesspolicy_id.f856e1348f": [], "test.ftd.not_null_cmg_bh_ftd_accesspolicy_data_access_type_data_access_type.daef374444": [], "test.ftd.accepted_values_cmg_bh_ftd_accesspolicy_data_access_type_data_access_type__open__registered__controlled__gsr_restricted__gsr_allowed.752d3dfe87": [], "test.ftd.not_null_cmg_bh_ftd_demographics_source_data_demographics_id.4fc19441ed": [], "test.ftd.not_null_cmg_bh_ftd_demographics_source_data_source_data_id.8618ec6934": [], "test.ftd.not_null_cmg_bh_ftd_sample_sample_type.27593ac975": [], "test.ftd.accepted_values_cmg_bh_ftd_sample_availablity_status__available__unavailable.8de64ff6ae": [], "test.ftd.not_null_cmg_bh_ftd_sample_id.337bf1c937": [], "test.ftd.not_null_cmg_bh_ftd_familyrelationship_family_member.78cb793210": [], "test.ftd.not_null_cmg_bh_ftd_familyrelationship_other_family_member.1f5245182f": [], "test.ftd.not_null_cmg_bh_ftd_familyrelationship_relationship_code.f742ad5dc9": [], "test.ftd.not_null_cmg_bh_ftd_familyrelationship_id.1f2dc9735e": [], "test.ftd.not_null_cmg_bh_ftd_familymember_external_id_familymember_id.aad9421f88": [], "test.ftd.not_null_cmg_bh_ftd_family_family_relationships_family_id.98a4736bce": [], "test.ftd.not_null_cmg_bh_ftd_family_family_relationships_family_relationships_id.d0573bbee5": [], "test.ftd.not_null_cmg_bh_ftd_study_study_title.6ea8d071db": [], "test.ftd.not_null_cmg_bh_ftd_study_id.d0fcd7b4be": [], "test.ftd.not_null_cmg_bh_ftd_sourcedata_has_access_policy.fea82dd098": [], "test.ftd.not_null_cmg_bh_ftd_sourcedata_id.71529dd996": [], "test.ftd.not_null_cmg_bh_ftd_file_subject_file_id.9a8798f990": [], "test.ftd.not_null_cmg_bh_ftd_file_subject_subject_id.94749261b4": [], "test.ftd.not_null_cmg_bh_ftd_accesscontrolledrecord_has_access_policy.0bd719c157": [], "test.ftd.not_null_cmg_bh_ftd_accesscontrolledrecord_id.ad62c67815": [], "test.ftd.not_null_cmg_bh_ftd_demographics_race_demographics_id.9adec1b35e": [], "test.ftd.not_null_cmg_bh_ftd_demographics_race_race.3b8ae979d3": [], "test.ftd.accepted_values_cmg_bh_ftd_demographics_race_race__american_indian_or_alaskan_native__asian__black_or_african_american__native_hawaiian_or_pacific_islander__white__other_race__unknown__asked_but_unknown.546f884c8b": [], "test.ftd.not_null_cmg_bh_ftd_family_external_id_family_id.ca1501942f": [], "test.ftd.accepted_values_cmg_bh_ftd_demographics_date_of_birth_type__exact__year_only__shifted__decade_only__other.dce0947fe3": [], "test.ftd.not_null_cmg_bh_ftd_demographics_sex.abab379f38": [], "test.ftd.accepted_values_cmg_bh_ftd_demographics_sex__female__male__unknown__intersex.711185066b": [], "test.ftd.not_null_cmg_bh_ftd_demographics_sex_display.8aa7898da0": [], "test.ftd.not_null_cmg_bh_ftd_demographics_race_display.0547eb77d8": [], "test.ftd.not_null_cmg_bh_ftd_demographics_ethnicity.088a8c650f": [], "test.ftd.accepted_values_cmg_bh_ftd_demographics_ethnicity__hispanic_or_latino__not_hispanic_or_latino__unknown__asked_but_unknown.6f74d0b39b": [], "test.ftd.not_null_cmg_bh_ftd_demographics_ethnicity_display.4d203e924d": [], "test.ftd.not_null_cmg_bh_ftd_demographics_id.0043257405": [], "test.ftd.not_null_cmg_bh_ftd_subjectassertion_external_id_subjectassertion_id.f4100852a7": [], "test.ftd.not_null_cmg_bh_ftd_study_principal_investigator_study_id.bbd4c7400e": [], "test.ftd.not_null_cmg_bh_ftd_accesspolicy_external_id_accesspolicy_id.77c672ae6e": [], "test.ftd.not_null_cmg_bh_ftd_filemetadata_external_id_filemetadata_id.52ac4227c7": [], "test.ftd.not_null_cmg_bh_ftd_familyrelationship_external_id_familyrelationship_id.ae12bde48f": [], "test.ftd.not_null_cmg_bh_ftd_file_external_id_file_id.f1c19d8e1d": [], "test.ftd.not_null_cmg_bh_ftd_accesscontrolledrecord_external_id_accesscontrolledrecord_id.c934007037": [], "test.ftd.not_null_cmg_bh_ftd_accesspolicy_access_policy_code_accesspolicy_id.03e151a874": [], "test.ftd.not_null_cmg_bh_ftd_accesspolicy_access_policy_code_access_policy_code.2437b083b0": [], "test.ftd.accepted_values_cmg_bh_ftd_accesspolicy_access_policy_code_access_policy_code__gru__hmb__ds__irb__pub__col__npu__mds__gso__gsr.0eae20d9c7": [], "test.ftd.not_null_cmg_bh_ftd_demographics_external_id_demographics_id.e258ff214c": [], "test.ftd.not_null_cmg_bh_ftd_aliquot_external_id_aliquot_id.99f903d593": [], "test.ftd.accepted_values_cmg_bh_ftd_family_family_type__control_only__duo__proband_only__trio__trio_plus__other.0e3319ecb9": [], "test.ftd.accepted_values_cmg_bh_ftd_family_consanguinity__not_suspected__suspected__known_present__unknown.e6ab074c22": [], "test.ftd.not_null_cmg_bh_ftd_family_id.171d428fd1": [], "test.ftd.not_null_cmg_bh_ftd_study_funding_source_study_id.42d456a2d7": [], "test.ftd.accepted_values_cmg_bh_ftd_aliquot_availablity_status__available__unavailable.622cd860b5": [], "test.ftd.not_null_cmg_bh_ftd_aliquot_id.e2464dd2fe": [], "test.ftd.not_null_cmg_bh_ftd_subjectassertion_id.13cdc81eb9": [], "test.ftd.not_null_GWAS_ftd_sample_sample_type.ba5edecc46": [], "test.ftd.accepted_values_GWAS_ftd_sample_availablity_status__available__unavailable.60e6fae4ba": [], "test.ftd.not_null_GWAS_ftd_sample_id.f18de69e62": [], "test.ftd.not_null_GWAS_ftd_demographics_source_data_demographics_id.0b26adbf81": [], "test.ftd.not_null_GWAS_ftd_demographics_source_data_source_data_id.0967578e69": [], "test.ftd.accepted_values_GWAS_ftd_family_family_type__control_only__duo__proband_only__trio__trio_plus__other.a35b15bf88": [], "test.ftd.accepted_values_GWAS_ftd_family_consanguinity__not_suspected__suspected__known_present__unknown.4b84efae32": [], "test.ftd.not_null_GWAS_ftd_family_id.170844bec6": [], "test.ftd.not_null_GWAS_ftd_accesscontrolledrecord_has_access_policy.2e0130413c": [], "test.ftd.not_null_GWAS_ftd_accesscontrolledrecord_id.e26e3f9985": [], "test.ftd.not_null_GWAS_ftd_biospecimencollection_external_id_biospecimencollection_id.711ee44c3f": [], "test.ftd.not_null_GWAS_ftd_subjectassertion_id.8d3cee52d4": [], "test.ftd.not_null_GWAS_ftd_accesspolicy_description.662fc95fb3": [], "test.ftd.not_null_GWAS_ftd_accesspolicy_id.9bb01229e6": [], "test.ftd.not_null_GWAS_ftd_filemetadata_id.00cf19eaee": [], "test.ftd.not_null_GWAS_ftd_file_id.f7cd047ccc": [], "test.ftd.not_null_GWAS_ftd_sample_processing_sample_id.d52e81cf7a": [], "test.ftd.not_null_GWAS_ftd_file_sample_file_id.8f617f22f9": [], "test.ftd.not_null_GWAS_ftd_file_sample_sample_id.5d2c3e7dea": [], "test.ftd.not_null_GWAS_ftd_filemetadata_external_id_filemetadata_id.e06fd398b3": [], "test.ftd.not_null_GWAS_ftd_subject_subject_type.9afb6ee858": [], "test.ftd.accepted_values_GWAS_ftd_subject_subject_type__participant__non_participant__cell_line__animal_model__group__other.f1e7b6e71f": [], "test.ftd.not_null_GWAS_ftd_subject_id.9adf5ae8d2": [], "test.ftd.not_null_GWAS_ftd_sample_storage_method_sample_id.95b7b1f3bd": [], "test.ftd.not_null_GWAS_ftd_sample_external_id_sample_id.83c9e81cf6": [], "test.ftd.not_null_GWAS_ftd_familyrelationship_external_id_familyrelationship_id.e420c7d651": [], "test.ftd.not_null_GWAS_ftd_family_family_relationships_family_id.8979eb8427": [], "test.ftd.not_null_GWAS_ftd_family_family_relationships_family_relationships_id.79d5ee7ab6": [], "test.ftd.not_null_GWAS_ftd_demographics_race_demographics_id.b4b0df45f7": [], "test.ftd.not_null_GWAS_ftd_demographics_race_race.b130263e3f": [], "test.ftd.accepted_values_GWAS_ftd_demographics_race_race__american_indian_or_alaskan_native__asian__black_or_african_american__native_hawaiian_or_pacific_islander__white__other_race__unknown__asked_but_unknown.0e228bb450": [], "test.ftd.not_null_GWAS_ftd_study_funding_source_study_id.1e79baded2": [], "test.ftd.not_null_GWAS_ftd_family_external_id_family_id.f629bd708e": [], "test.ftd.not_null_GWAS_ftd_accesspolicy_external_id_accesspolicy_id.66d916c183": [], "test.ftd.accepted_values_GWAS_ftd_aliquot_availablity_status__available__unavailable.240771e83f": [], "test.ftd.not_null_GWAS_ftd_aliquot_id.8a637e633a": [], "test.ftd.accepted_values_GWAS_ftd_demographics_date_of_birth_type__exact__year_only__shifted__decade_only__other.c780486020": [], "test.ftd.not_null_GWAS_ftd_demographics_sex.6450872514": [], "test.ftd.accepted_values_GWAS_ftd_demographics_sex__female__male__unknown__intersex.97c0c3d4d9": [], "test.ftd.not_null_GWAS_ftd_demographics_sex_display.2013c97889": [], "test.ftd.not_null_GWAS_ftd_demographics_race_display.6337436a53": [], "test.ftd.not_null_GWAS_ftd_demographics_ethnicity.09313b1836": [], "test.ftd.accepted_values_GWAS_ftd_demographics_ethnicity__hispanic_or_latino__not_hispanic_or_latino__unknown__asked_but_unknown.12ce6844a3": [], "test.ftd.not_null_GWAS_ftd_demographics_ethnicity_display.ed2f6f4c89": [], "test.ftd.not_null_GWAS_ftd_demographics_id.71113fb2d0": [], "test.ftd.not_null_GWAS_ftd_familymember_external_id_familymember_id.36bf6e25fe": [], "test.ftd.not_null_GWAS_ftd_accesspolicy_access_policy_code_accesspolicy_id.22c45ebd4d": [], "test.ftd.not_null_GWAS_ftd_accesspolicy_access_policy_code_access_policy_code.ff6f3fd972": [], "test.ftd.accepted_values_GWAS_ftd_accesspolicy_access_policy_code_access_policy_code__gru__hmb__ds__irb__pub__col__npu__mds__gso__gsr.3dbd2a1e67": [], "test.ftd.not_null_GWAS_ftd_study_study_title.2122518e64": [], "test.ftd.not_null_GWAS_ftd_study_id.2622162919": [], "test.ftd.not_null_GWAS_ftd_subjectassertion_external_id_subjectassertion_id.c1eeade9b3": [], "test.ftd.not_null_GWAS_ftd_familyrelationship_family_member.35695b16f5": [], "test.ftd.not_null_GWAS_ftd_familyrelationship_other_family_member.22fdcbb16d": [], "test.ftd.not_null_GWAS_ftd_familyrelationship_relationship_code.1876cbd3ad": [], "test.ftd.not_null_GWAS_ftd_familyrelationship_id.7ae427e5ce": [], "test.ftd.not_null_GWAS_ftd_aliquot_external_id_aliquot_id.48052f5b7c": [], "test.ftd.not_null_GWAS_ftd_familymember_family_member.518d9a9a67": [], "test.ftd.not_null_GWAS_ftd_familymember_id.8ab5f592ad": [], "test.ftd.not_null_GWAS_ftd_subject_external_id_subject_id.13ed703c6a": [], "test.ftd.not_null_GWAS_ftd_file_external_id_file_id.1cee360518": [], "test.ftd.not_null_GWAS_ftd_demographics_external_id_demographics_id.b047347377": [], "test.ftd.not_null_GWAS_ftd_subjectassertion_source_data_subjectassertion_id.4e740389ab": [], "test.ftd.not_null_GWAS_ftd_subjectassertion_source_data_source_data_id.58cc3887bd": [], "test.ftd.not_null_GWAS_ftd_file_subject_file_id.6e2e48dc3c": [], "test.ftd.not_null_GWAS_ftd_file_subject_subject_id.ac2813176b": [], "test.ftd.not_null_GWAS_ftd_accesspolicy_data_access_type_accesspolicy_id.6c099412bd": [], "test.ftd.not_null_GWAS_ftd_accesspolicy_data_access_type_data_access_type.290b7db882": [], "test.ftd.accepted_values_GWAS_ftd_accesspolicy_data_access_type_data_access_type__open__registered__controlled__gsr_restricted__gsr_allowed.5ea1731895": [], "test.ftd.not_null_GWAS_ftd_accesscontrolledrecord_external_id_accesscontrolledrecord_id.87088acdd6": [], "test.ftd.not_null_GWAS_ftd_sourcedata_has_access_policy.95bf38120e": [], "test.ftd.not_null_GWAS_ftd_sourcedata_id.37521e6812": [], "test.ftd.not_null_GWAS_ftd_sourcedata_external_id_sourcedata_id.1af559b571": [], "test.ftd.not_null_GWAS_ftd_study_principal_investigator_study_id.1adcffcfec": [], "test.ftd.not_null_GWAS_ftd_study_external_id_study_id.7335490492": [], "test.ftd.not_null_gregor_synthetic_ftd_familyrelationship_family_member.3bc97b392a": [], "test.ftd.not_null_gregor_synthetic_ftd_familyrelationship_other_family_member.26151a74f8": [], "test.ftd.not_null_gregor_synthetic_ftd_familyrelationship_relationship_code.0e3f4707af": [], "test.ftd.not_null_gregor_synthetic_ftd_familyrelationship_id.5fb3043b5a": [], "test.ftd.not_null_gregor_synthetic_ftd_subject_subject_type.d3528733f1": [], "test.ftd.accepted_values_gregor_synthetic_ftd_subject_subject_type__participant__non_participant__cell_line__animal_model__group__other.d07b3549ca": [], "test.ftd.not_null_gregor_synthetic_ftd_subject_id.912db9b8aa": [], "test.ftd.not_null_gregor_synthetic_ftd_demographics_race_demographics_id.9557406221": [], "test.ftd.not_null_gregor_synthetic_ftd_demographics_race_race.a6dc4eefb1": [], "test.ftd.accepted_values_gregor_synthetic_ftd_demographics_race_race__american_indian_or_alaskan_native__asian__black_or_african_american__native_hawaiian_or_pacific_islander__white__other_race__unknown__asked_but_unknown.298b671dbd": [], "test.ftd.not_null_gregor_synthetic_ftd_accesspolicy_access_policy_code_accesspolicy_id.e09c1fc820": [], "test.ftd.not_null_gregor_synthetic_ftd_accesspolicy_access_policy_code_access_policy_code.b33aeb2f05": [], "test.ftd.accepted_values_gregor_synthetic_ftd_accesspolicy_access_policy_code_access_policy_code__gru__hmb__ds__irb__pub__col__npu__mds__gso__gsr.3264af3d7d": [], "test.ftd.not_null_gregor_synthetic_ftd_demographics_sex.6a57903a47": [], "test.ftd.accepted_values_gregor_synthetic_ftd_demographics_sex__female__male__unknown__intersex.2ca432fb0a": [], "test.ftd.not_null_gregor_synthetic_ftd_demographics_sex_display.d995333553": [], "test.ftd.not_null_gregor_synthetic_ftd_demographics_race_display.330040d994": [], "test.ftd.not_null_gregor_synthetic_ftd_demographics_ethnicity.de41fba281": [], "test.ftd.accepted_values_gregor_synthetic_ftd_demographics_ethnicity__hispanic_or_latino__not_hispanic_or_latino__unknown__asked_but_unknown.7fb426336d": [], "test.ftd.not_null_gregor_synthetic_ftd_demographics_ethnicity_display.3541da5b62": [], "test.ftd.not_null_gregor_synthetic_ftd_demographics_id.f76247f12d": [], "test.ftd.not_null_gregor_synthetic_ftd_subjectassertion_id.0eb5e4594a": [], "test.ftd.not_null_gregor_synthetic_ftd_accesspolicy_description.d59f1c94d4": [], "test.ftd.not_null_gregor_synthetic_ftd_accesspolicy_id.1bc2aee0e5": [], "test.ftd.not_null_gregor_synthetic_ftd_familymember_family_member.93e3a6234f": [], "test.ftd.not_null_gregor_synthetic_ftd_familymember_id.78a55538e4": [], "test.ftd.not_null_eMERGEseq_ftd_sample_sample_type.9cef01bfcb": [], "test.ftd.not_null_eMERGEseq_ftd_sample_id.b49a2bea2f": [], "test.ftd.not_null_eMERGEseq_ftd_subjectassertion_id.1a7afe0878": [], "test.ftd.not_null_eMERGEseq_ftd_accesspolicy_description.afa1581812": [], "test.ftd.not_null_eMERGEseq_ftd_accesspolicy_id.434dc2d565": [], "test.ftd.not_null_eMERGEseq_ftd_subject_subject_type.a7edad184a": [], "test.ftd.accepted_values_eMERGEseq_ftd_subject_subject_type__participant__non_participant__cell_line__animal_model__group__other.b1b5b5d5bf": [], "test.ftd.not_null_eMERGEseq_ftd_subject_id.57198c89b1": [], "test.ftd.not_null_eMERGEseq_ftd_demographics_race_demographics_id.48d1d5797c": [], "test.ftd.not_null_eMERGEseq_ftd_demographics_race_race.a6f363d7df": [], "test.ftd.accepted_values_eMERGEseq_ftd_demographics_race_race__american_indian_or_alaskan_native__asian__black_or_african_american__native_hawaiian_or_pacific_islander__white__other_race__unknown__asked_but_unknown.115877dcc2": [], "test.ftd.not_null_eMERGEseq_ftd_demographics_sex.00a71bdb6f": [], "test.ftd.accepted_values_eMERGEseq_ftd_demographics_sex__female__male__unknown__intersex.8404a8d8f7": [], "test.ftd.not_null_eMERGEseq_ftd_demographics_sex_display.850a17a02c": [], "test.ftd.not_null_eMERGEseq_ftd_demographics_race_display.1eb46b5734": [], "test.ftd.not_null_eMERGEseq_ftd_demographics_ethnicity.d54b112b05": [], "test.ftd.accepted_values_eMERGEseq_ftd_demographics_ethnicity__hispanic_or_latino__not_hispanic_or_latino__unknown__asked_but_unknown.dd3e975827": [], "test.ftd.not_null_eMERGEseq_ftd_demographics_ethnicity_display.9ffec6a3a3": [], "test.ftd.not_null_eMERGEseq_ftd_demographics_id.a486d2592b": [], "test.ftd.not_null_eMERGEseq_ftd_accesspolicy_access_policy_code_accesspolicy_id.feeb0849ac": [], "test.ftd.not_null_eMERGEseq_ftd_accesspolicy_access_policy_code_access_policy_code.fe962d3ccf": [], "test.ftd.accepted_values_eMERGEseq_ftd_accesspolicy_access_policy_code_access_policy_code__gru__hmb__ds__irb__pub__col__npu__mds__gso__gsr.ea570f7beb": [], "test.ftd.not_null_eMERGEseq_ftd_familyrelationship_family_member.c82a948a1d": [], "test.ftd.not_null_eMERGEseq_ftd_familyrelationship_other_family_member.d11c1f9823": [], "test.ftd.not_null_eMERGEseq_ftd_familyrelationship_relationship_code.b64265b2b7": [], "test.ftd.not_null_eMERGEseq_ftd_familyrelationship_id.76e0c8aa11": [], "test.ftd.not_null_eMERGEseq_ftd_familymember_family_member.d920988b9c": [], "test.ftd.not_null_eMERGEseq_ftd_familymember_id.f354eac9f2": [], "source.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_participant": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_participant"], "source.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_phenotype": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_phenotype"], "source.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_experiment": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_experiment"], "source.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_anvil_project": ["model.GREGoR_R03_HMB_20250612.GREGoR_R03_HMB_20250612_stg_anvil_project"], "source.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_participant": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_participant"], "source.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_phenotype": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_phenotype"], "source.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_experiment": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_experiment"], "source.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_anvil_project": ["model.GREGoR_R03_GRU_20250612.GREGoR_R03_GRU_20250612_stg_anvil_project"], "source.cmg_bh.cmg_bh.sample": ["model.cmg_bh.cmg_bh_stg_sample"], "source.cmg_bh.cmg_bh.subject": ["model.cmg_bh.cmg_bh_stg_subject"], "source.GWAS.GWAS.GWAS_BMI_DS_20201028": ["model.GWAS.GWAS_stg_bmi"], "source.GWAS.GWAS.GWAS_Demographics_DS_20201109": ["model.GWAS.GWAS_stg_demographics"], "source.GWAS.GWAS.GWAS_Pedigree_DS_20200512": ["model.GWAS.GWAS_stg_pedigree"], "source.GWAS.GWAS.GWAS_Phecode_DS_20201027": ["model.GWAS.GWAS_stg_phecode"], "source.GWAS.GWAS.GWAS_SampleAttributes_DS_20201027": ["model.GWAS.GWAS_stg_sampleattributes"], "source.GWAS.GWAS.GWAS_SampleSubjectMapping_DS_20201027": ["model.GWAS.GWAS_stg_samplesubjectmapping"], "source.GWAS.GWAS.GWAS_SubjectConsent_DS_20190813": ["model.GWAS.GWAS_stg_subjectconsent"], "source.gregor_synthetic.gregor_synthetic.GREGoR_synthetic_participant_revised07Aug2024": ["model.gregor_synthetic.gregor_synthetic_stg_participant"], "source.gregor_synthetic.gregor_synthetic.GREGoR_synthetic_phenotype": ["model.gregor_synthetic.gregor_synthetic_stg_phenotype"], "source.eMERGEseq.eMERGEseq.eMERGEseq_Demographics_DS_20200925": ["model.eMERGEseq.eMERGEseq_stg_demographics"], "source.eMERGEseq.eMERGEseq.eMERGEseq_Phecode_DS_20200925": ["model.eMERGEseq.eMERGEseq_stg_phecode"], "source.eMERGEseq.eMERGEseq.eMERGEseq_SampleAttributes_DS_20200925": ["model.eMERGEseq.eMERGEseq_stg_sampleattributes"], "source.eMERGEseq.eMERGEseq.eMERGEseq_SampleSubjectMapping_DS_20200925": ["model.eMERGEseq.eMERGEseq_stg_samplesubjectmapping"], "source.eMERGEseq.eMERGEseq.eMERGEseq_SubjectConsent_DS_20201020": ["model.eMERGEseq.eMERGEseq_stg_subjectconsent"], "source.eMERGEseq.eMERGEseq.eMERGEseq_BMI_DS_20200925": ["model.eMERGEseq.eMERGEseq_stg_bmi"], "source.eMERGEseq.eMERGEseq.eMERGEseq_Pedigree_DS_20200925": ["model.eMERGEseq.eMERGEseq_stg_pedigree"]}, "group_map": {}, "saved_queries": {}, "semantic_models": {}, "unit_tests": {}}